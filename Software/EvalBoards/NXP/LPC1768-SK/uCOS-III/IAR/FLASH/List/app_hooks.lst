###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       11/Oct/2017  18:40:16
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\app_hooks.c
#    Command line =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\app_hooks.c
#        -lCN
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List
#        --diag_suppress Pa050 -o
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\csnr_package_deal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\tax\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\app_hooks.lst
#    Object file  =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\app_hooks.o
#
###############################################################################

F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\app_hooks.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/OS-II
      4          *                                          The Real-Time Kernel
      5          *                                      Application-Defined Task Hooks
      6          *
      7          *                                 (c) Copyright 2007; Micrium; Weston, FL
      8          *                                           All Rights Reserved
      9          *
     10          * File    : APP_HOOKS.C
     11          * By      : Fabiano Kovalski
     12          *         : Eric Shufro
     13          *********************************************************************************************************
     14          */
     15          
     16          #include  <includes.h>
     17          
     18          /*
     19          *********************************************************************************************************
     20          *                                          App_TaskCreateHook()
     21          *
     22          * Description: This function is called when a task is created.
     23          *
     24          * Arguments  : ptcb   is a pointer to the task control block of the task being created.
     25          *
     26          * Note(s)    : 1) Interrupts are disabled during this call.
     27          *********************************************************************************************************
     28          */
     29          
     30          #if (OS_APP_HOOKS_EN > 0)
     31          void  App_TaskCreateHook (OS_TCB *ptcb)
     32          {
     33          #if (uC_PROBE_OS_PLUGIN > 0) && (OS_PROBE_HOOKS_EN > 0)
     34              OSProbe_TaskCreateHook(ptcb);
     35          #else
     36              (void)ptcb;
     37          #endif
     38          }
     39          
     40          /*
     41          *********************************************************************************************************
     42          *                                           App_TaskDelHook()
     43          *
     44          * Description: This function is called when a task is deleted.
     45          *
     46          * Arguments  : ptcb   is a pointer to the task control block of the task being deleted.
     47          *
     48          * Note(s)    : 1) Interrupts are disabled during this call.
     49          *********************************************************************************************************
     50          */
     51          
     52          void  App_TaskDelHook (OS_TCB *ptcb)
     53          {
     54              (void)ptcb;
     55          }
     56          
     57          /*
     58          *********************************************************************************************************
     59          *                                             App_TaskIdleHook()
     60          *
     61          * Description: This function is called by the idle task.  This hook has been added to allow you to do
     62          *              such things as STOP the CPU to conserve power.
     63          *
     64          * Arguments  : none
     65          *
     66          * Note(s)    : 1) Interrupts are enabled during this call.
     67          *********************************************************************************************************
     68          */
     69          
     70          #if OS_VERSION >= 251
     71          void  App_TaskIdleHook (void)
     72          {
     73          
     74          }
     75          #endif
     76          
     77          /*
     78          *********************************************************************************************************
     79          *                                   App_TaskStatHook()
     80          *
     81          * Description: This function is called every second by uC/OS-II's statistics task.  This allows your
     82          *              application to add functionality to the statistics task.
     83          *
     84          * Returns    : none
     85          *********************************************************************************************************
     86          */
     87          
     88          void  App_TaskStatHook (void)
     89          {
     90          }
     91          
     92          /*
     93          *********************************************************************************************************
     94          *                                           App_TaskSwHook()
     95          *
     96          * Description: This function is called when a task switch is performed.  This allows you to perform other
     97          *              operations during a context switch.
     98          *
     99          * Arguments  : none
    100          *
    101          * Note(s)    : 1) Interrupts are disabled during this call.
    102          *              2) It is assumed that the global pointer 'OSTCBHighRdy' points to the TCB of the task that
    103          *                 will be 'switched in' (i.e. the highest priority task) and, 'OSTCBCur' points to the
    104          *                 task being switched out (i.e. the preempted task).
    105          *********************************************************************************************************
    106          */
    107          
    108          #if OS_TASK_SW_HOOK_EN > 0
    109          void  App_TaskSwHook (void)
    110          {
    111          #if (uC_PROBE_OS_PLUGIN > 0) && (OS_PROBE_HOOKS_EN > 0)
    112              OSProbe_TaskSwHook();
    113          #endif
    114          }
    115          #endif
    116          
    117          /*
    118          *********************************************************************************************************
    119          *                                           App_TCBInitHook()
    120          *
    121          * Description: This function is called by OS_TCBInit() after setting up most of the TCB.
    122          *
    123          * Arguments  : ptcb    is a pointer to the TCB of the task being created.
    124          *
    125          * Note(s)    : 1) Interrupts may or may not be ENABLED during this call.
    126          *********************************************************************************************************
    127          */
    128          
    129          #if OS_VERSION >= 204
    130          void  App_TCBInitHook (OS_TCB *ptcb)
    131          {
    132              (void)ptcb;
    133          }
    134          #endif
    135          
    136          /*
    137          *********************************************************************************************************
    138          *                                               App_TimeTickHook()
    139          *
    140          * Description: This function is called every tick.
    141          *
    142          * Arguments  : none
    143          *
    144          * Note(s)    : 1) Interrupts may or may not be ENABLED during this call.
    145          *********************************************************************************************************
    146          */
    147          
    148          #if OS_TIME_TICK_HOOK_EN > 0
    149          void  App_TimeTickHook (void)
    150          {
    151          #if (uC_PROBE_OS_PLUGIN > 0) && (OS_PROBE_HOOKS_EN > 0)
    152              OSProbe_TickHook();
    153          #endif
    154          }
    155          #endif
    156          
    157          
    158          /*$PAGE*/
    159          /*
    160          ************************************************************************************************************************
    161          *                                             APPLICATION TASK RETURN HOOK
    162          *
    163          * Description: This function is called if a task accidentally returns.  In other words, a task should either be an
    164          *              infinite loop or delete itself when done.
    165          *
    166          * Arguments  : p_tcb     is a pointer to the OS_TCB of the task that is returning.
    167          *
    168          * Note(s)    : none
    169          ************************************************************************************************************************
    170          */
    171          
    172          void  App_TaskReturnHook (OS_TCB  *p_tcb)
    173          {
    174             (void)&p_tcb;
    175          }
    176          
    177          
    178          #endif                                                                  /* End of OS_APP_HOOKS_EN                                   */


 

 


Errors: none
Warnings: none
