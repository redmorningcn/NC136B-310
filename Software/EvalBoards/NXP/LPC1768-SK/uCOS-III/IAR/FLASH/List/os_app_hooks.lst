###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       10/Aug/2017  10:56:49
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\os_app_hooks.c
#    Command line =  
#        "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\os_app_hooks.c"
#        -lCN "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List"
#        --diag_suppress Pa050 -o "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\" -I
#        "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\"
#        -I "F:\iar\NC136B-310 统计模块\Application\Library\csnr_package_deal\"
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\os_app_hooks.lst
#    Object file  =  
#        F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\os_app_hooks.o
#
###############################################################################

F:\iar\NC136B-310 统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\os_app_hooks.c
      1          /*
      2          ************************************************************************************************************************
      3          *                                                     uC/OS-III
      4          *                                                The Real-Time Kernel
      5          *
      6          *                                  (c) Copyright 2009-2012; Micrium, Inc.; Weston, FL
      7          *                          All rights reserved.  Protected by international copyright laws.
      8          *
      9          *                                                  APPLICATION HOOKS
     10          *
     11          * File    : OS_APP_HOOKS.C
     12          * By      : JJL
     13          * Version : V3.01.2
     14          *
     15          * LICENSING TERMS:
     16          * ---------------
     17          *               uC/OS-III is provided in source form to registered licensees ONLY.  It is
     18          *               illegal to distribute this source code to any third party unless you receive
     19          *               written permission by an authorized Micrium representative.  Knowledge of
     20          *               the source code may NOT be used to develop a similar product.
     21          *
     22          *               Please help us continue to provide the Embedded community with the finest
     23          *               software available.  Your honesty is greatly appreciated.
     24          *
     25          *               You can contact us at www.micrium.com.
     26          ************************************************************************************************************************
     27          */
     28          
     29          #include <os.h>
     30          #include <os_app_hooks.h>
     31          #include <osal.h>
     32          
     33          /*$PAGE*/
     34          /*
     35          ************************************************************************************************************************
     36          *                                              SET ALL APPLICATION HOOKS
     37          *
     38          * Description: Set ALL application hooks.
     39          *
     40          * Arguments  : none.
     41          *
     42          * Note(s)    : none
     43          ************************************************************************************************************************
     44          */
     45          

   \                                 In section .text, align 2, keep-with-next
     46          void  App_OS_SetAllHooks (void)
     47          {
   \                     App_OS_SetAllHooks: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     48          #if OS_CFG_APP_HOOKS_EN > 0u
     49              CPU_SR_ALLOC();
   \   00000002   0x2400             MOVS     R4,#+0
     50          
     51          
     52              CPU_CRITICAL_ENTER();
   \   00000004   0x.... 0x....      BL       CPU_SR_Save
   \   00000008   0x0004             MOVS     R4,R0
   \   0000000A   0x.... 0x....      BL       CPU_IntDisMeasStart
     53              OS_AppTaskCreateHookPtr = App_OS_TaskCreateHook;
   \   0000000E   0x.... 0x....      ADR.W    R0,App_OS_TaskCreateHook
   \   00000012   0x....             LDR.N    R1,??DataTable1
   \   00000014   0x6008             STR      R0,[R1, #+0]
     54              OS_AppTaskDelHookPtr    = App_OS_TaskDelHook;
   \   00000016   0x.... 0x....      ADR.W    R0,App_OS_TaskDelHook
   \   0000001A   0x....             LDR.N    R1,??DataTable1_1
   \   0000001C   0x6008             STR      R0,[R1, #+0]
     55              OS_AppTaskReturnHookPtr = App_OS_TaskReturnHook;
   \   0000001E   0x.... 0x....      ADR.W    R0,App_OS_TaskReturnHook
   \   00000022   0x....             LDR.N    R1,??DataTable1_2
   \   00000024   0x6008             STR      R0,[R1, #+0]
     56          
     57              OS_AppIdleTaskHookPtr   = App_OS_IdleTaskHook;
   \   00000026   0x.... 0x....      ADR.W    R0,App_OS_IdleTaskHook
   \   0000002A   0x....             LDR.N    R1,??DataTable1_3
   \   0000002C   0x6008             STR      R0,[R1, #+0]
     58              OS_AppStatTaskHookPtr   = App_OS_StatTaskHook;
   \   0000002E   0x.... 0x....      ADR.W    R0,App_OS_StatTaskHook
   \   00000032   0x....             LDR.N    R1,??DataTable1_4
   \   00000034   0x6008             STR      R0,[R1, #+0]
     59              OS_AppTaskSwHookPtr     = App_OS_TaskSwHook;
   \   00000036   0x.... 0x....      ADR.W    R0,App_OS_TaskSwHook
   \   0000003A   0x....             LDR.N    R1,??DataTable1_5
   \   0000003C   0x6008             STR      R0,[R1, #+0]
     60              OS_AppTimeTickHookPtr   = App_OS_TimeTickHook;
   \   0000003E   0x.... 0x....      ADR.W    R0,App_OS_TimeTickHook
   \   00000042   0x....             LDR.N    R1,??DataTable1_6
   \   00000044   0x6008             STR      R0,[R1, #+0]
     61              CPU_CRITICAL_EXIT();
   \   00000046   0x.... 0x....      BL       CPU_IntDisMeasStop
   \   0000004A   0x0020             MOVS     R0,R4
   \   0000004C   0x.... 0x....      BL       CPU_SR_Restore
     62          #endif
     63          }
   \   00000050   0xBD10             POP      {R4,PC}          ;; return
     64          
     65          /*$PAGE*/
     66          /*
     67          ************************************************************************************************************************
     68          *                                             CLEAR ALL APPLICATION HOOKS
     69          *
     70          * Description: Clear ALL application hooks.
     71          *
     72          * Arguments  : none.
     73          *
     74          * Note(s)    : none
     75          ************************************************************************************************************************
     76          */
     77          

   \                                 In section .text, align 2, keep-with-next
     78          void  App_OS_ClrAllHooks (void)
     79          {
   \                     App_OS_ClrAllHooks: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     80          #if OS_CFG_APP_HOOKS_EN > 0u
     81              CPU_SR_ALLOC();
   \   00000002   0x2400             MOVS     R4,#+0
     82          
     83          
     84              CPU_CRITICAL_ENTER();
   \   00000004   0x.... 0x....      BL       CPU_SR_Save
   \   00000008   0x0004             MOVS     R4,R0
   \   0000000A   0x.... 0x....      BL       CPU_IntDisMeasStart
     85              OS_AppTaskCreateHookPtr = (OS_APP_HOOK_TCB)0;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x....             LDR.N    R1,??DataTable1
   \   00000012   0x6008             STR      R0,[R1, #+0]
     86              OS_AppTaskDelHookPtr    = (OS_APP_HOOK_TCB)0;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x....             LDR.N    R1,??DataTable1_1
   \   00000018   0x6008             STR      R0,[R1, #+0]
     87              OS_AppTaskReturnHookPtr = (OS_APP_HOOK_TCB)0;
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x....             LDR.N    R1,??DataTable1_2
   \   0000001E   0x6008             STR      R0,[R1, #+0]
     88          
     89              OS_AppIdleTaskHookPtr   = (OS_APP_HOOK_VOID)0;
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x....             LDR.N    R1,??DataTable1_3
   \   00000024   0x6008             STR      R0,[R1, #+0]
     90              OS_AppStatTaskHookPtr   = (OS_APP_HOOK_VOID)0;
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0x....             LDR.N    R1,??DataTable1_4
   \   0000002A   0x6008             STR      R0,[R1, #+0]
     91              OS_AppTaskSwHookPtr     = (OS_APP_HOOK_VOID)0;
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x....             LDR.N    R1,??DataTable1_5
   \   00000030   0x6008             STR      R0,[R1, #+0]
     92              OS_AppTimeTickHookPtr   = (OS_APP_HOOK_VOID)0;
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x....             LDR.N    R1,??DataTable1_6
   \   00000036   0x6008             STR      R0,[R1, #+0]
     93              CPU_CRITICAL_EXIT();
   \   00000038   0x.... 0x....      BL       CPU_IntDisMeasStop
   \   0000003C   0x0020             MOVS     R0,R4
   \   0000003E   0x.... 0x....      BL       CPU_SR_Restore
     94          #endif
     95          }
   \   00000042   0xBD10             POP      {R4,PC}          ;; return
     96          
     97          /*$PAGE*/
     98          /*
     99          ************************************************************************************************************************
    100          *                                            APPLICATION TASK CREATION HOOK
    101          *
    102          * Description: This function is called when a task is created.
    103          *
    104          * Arguments  : p_tcb   is a pointer to the task control block of the task being created.
    105          *
    106          * Note(s)    : none
    107          ************************************************************************************************************************
    108          */
    109          

   \                                 In section .text, align 4, keep-with-next
    110          void  App_OS_TaskCreateHook (OS_TCB  *p_tcb)
    111          {
   \                     App_OS_TaskCreateHook: (+1)
   \   00000000   0xB401             PUSH     {R0}
    112              (void)&p_tcb;
   \   00000002   0x4668             MOV      R0,SP
    113          }
   \   00000004   0xB001             ADD      SP,SP,#+4
   \   00000006   0x4770             BX       LR               ;; return
    114          
    115          /*$PAGE*/
    116          /*
    117          ************************************************************************************************************************
    118          *                                            APPLICATION TASK DELETION HOOK
    119          *
    120          * Description: This function is called when a task is deleted.
    121          *
    122          * Arguments  : p_tcb   is a pointer to the task control block of the task being deleted.
    123          *
    124          * Note(s)    : none
    125          ************************************************************************************************************************
    126          */
    127          

   \                                 In section .text, align 4, keep-with-next
    128          void  App_OS_TaskDelHook (OS_TCB  *p_tcb)
    129          {
   \                     App_OS_TaskDelHook: (+1)
   \   00000000   0xB401             PUSH     {R0}
    130              (void)&p_tcb;
   \   00000002   0x4668             MOV      R0,SP
    131          }
   \   00000004   0xB001             ADD      SP,SP,#+4
   \   00000006   0x4770             BX       LR               ;; return
    132          
    133          /*$PAGE*/
    134          /*
    135          ************************************************************************************************************************
    136          *                                             APPLICATION TASK RETURN HOOK
    137          *
    138          * Description: This function is called if a task accidentally returns.  In other words, a task should either be an
    139          *              infinite loop or delete itself when done.
    140          *
    141          * Arguments  : p_tcb     is a pointer to the OS_TCB of the task that is returning.
    142          *
    143          * Note(s)    : none
    144          ************************************************************************************************************************
    145          */
    146          

   \                                 In section .text, align 4, keep-with-next
    147          void  App_OS_TaskReturnHook (OS_TCB  *p_tcb)
    148          {
   \                     App_OS_TaskReturnHook: (+1)
   \   00000000   0xB401             PUSH     {R0}
    149              (void)&p_tcb;
   \   00000002   0x4668             MOV      R0,SP
    150          }
   \   00000004   0xB001             ADD      SP,SP,#+4
   \   00000006   0x4770             BX       LR               ;; return
    151          
    152          /*$PAGE*/
    153          /*
    154          ************************************************************************************************************************
    155          *                                              APPLICATION IDLE TASK HOOK
    156          *
    157          * Description: This function is called by the idle task.  This hook has been added to allow you to do such things as
    158          *              STOP the CPU to conserve power.
    159          *
    160          * Arguments  : none
    161          *
    162          * Note(s)    : none
    163          ************************************************************************************************************************
    164          */
    165          

   \                                 In section .text, align 4, keep-with-next
    166          void  App_OS_IdleTaskHook (void)
    167          {
    168          
    169          }
   \                     App_OS_IdleTaskHook: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    170          
    171          /*$PAGE*/
    172          /*
    173          ************************************************************************************************************************
    174          *                                          APPLICATION OS INITIALIZATION HOOK
    175          *
    176          * Description: This function is called by OSInit() at the beginning of OSInit().
    177          *
    178          * Arguments  : none
    179          *
    180          * Note(s)    : none
    181          ************************************************************************************************************************
    182          */
    183          

   \                                 In section .text, align 2, keep-with-next
    184          void  App_OS_InitHook (void)
    185          {
    186          
    187          }
   \                     App_OS_InitHook: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    188          
    189          /*$PAGE*/
    190          /*
    191          ************************************************************************************************************************
    192          *                                           APPLICATION STATISTIC TASK HOOK
    193          *
    194          * Description: This function is called every second by uC/OS-III's statistics task.  This allows your application to add
    195          *              functionality to the statistics task.
    196          *
    197          * Arguments  : none
    198          *
    199          * Note(s)    : none
    200          ************************************************************************************************************************
    201          */
    202          

   \                                 In section .text, align 4, keep-with-next
    203          void  App_OS_StatTaskHook (void)
    204          {
    205          
    206          }
   \                     App_OS_StatTaskHook: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    207          
    208          /*$PAGE*/
    209          /*
    210          ************************************************************************************************************************
    211          *                                             APPLICATION TASK SWITCH HOOK
    212          *
    213          * Description: This function is called when a task switch is performed.  This allows you to perform other operations
    214          *              during a context switch.
    215          *
    216          * Arguments  : none
    217          *
    218          * Note(s)    : 1) Interrupts are disabled during this call.
    219          *              2) It is assumed that the global pointer 'OSTCBHighRdyPtr' points to the TCB of the task that will be
    220          *                 'switched in' (i.e. the highest priority task) and, 'OSTCBCurPtr' points to the task being switched out
    221          *                 (i.e. the preempted task).
    222          ************************************************************************************************************************
    223          */
    224          

   \                                 In section .text, align 4, keep-with-next
    225          void  App_OS_TaskSwHook (void)
    226          {
    227          
    228          }
   \                     App_OS_TaskSwHook: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    229          
    230          /*$PAGE*/
    231          /*
    232          ************************************************************************************************************************
    233          *                                                APPLICATION TICK HOOK
    234          *
    235          * Description: This function is called every tick.
    236          *
    237          * Arguments  : none
    238          *
    239          * Note(s)    : 1) This function is assumed to be called from the Tick ISR.
    240          ************************************************************************************************************************
    241          */
    242          

   \                                 In section .text, align 4, keep-with-next
    243          void  App_OS_TimeTickHook (void)
    244          {
   \                     App_OS_TimeTickHook: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    245              /***********************************************
    246              * 描述： 添加OSAL支持
    247              */
    248          extern void osalTimerUpdate(void);
    249          #if ( OSAL_EN == DEF_ENABLED )
    250              osalTimerUpdate();                              // OSAL定时器更新
   \   00000002   0x.... 0x....      BL       osalTimerUpdate
    251          #else
    252          #endif
    253          
    254          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     OS_AppTaskCreateHookPtr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     OS_AppTaskDelHookPtr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     OS_AppTaskReturnHookPtr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     OS_AppIdleTaskHookPtr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     OS_AppStatTaskHookPtr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     OS_AppTaskSwHookPtr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     OS_AppTimeTickHookPtr

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   App_OS_ClrAllHooks
         8   -> CPU_IntDisMeasStart
         8   -> CPU_IntDisMeasStop
         8   -> CPU_SR_Restore
         8   -> CPU_SR_Save
       0   App_OS_IdleTaskHook
       0   App_OS_InitHook
       8   App_OS_SetAllHooks
         8   -> CPU_IntDisMeasStart
         8   -> CPU_IntDisMeasStop
         8   -> CPU_SR_Restore
         8   -> CPU_SR_Save
       0   App_OS_StatTaskHook
       4   App_OS_TaskCreateHook
       4   App_OS_TaskDelHook
       4   App_OS_TaskReturnHook
       0   App_OS_TaskSwHook
       8   App_OS_TimeTickHook
         8   -> osalTimerUpdate


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
      68  App_OS_ClrAllHooks
       2  App_OS_IdleTaskHook
       2  App_OS_InitHook
      82  App_OS_SetAllHooks
       2  App_OS_StatTaskHook
       8  App_OS_TaskCreateHook
       8  App_OS_TaskDelHook
       8  App_OS_TaskReturnHook
       2  App_OS_TaskSwHook
       8  App_OS_TimeTickHook

 
 218 bytes in section .text
 
 218 bytes of CODE memory

Errors: none
Warnings: none
