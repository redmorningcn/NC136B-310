###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       07/Sep/2017  21:03:00
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC136B-310统计模块\Software\CSB\source\lpc17xx_systick.c
#    Command line =  
#        F:\iar\NC136B-310统计模块\Software\CSB\source\lpc17xx_systick.c -lCN
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List
#        --diag_suppress Pa050 -o
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\csnr_package_deal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\tax\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\lpc17xx_systick.lst
#    Object file  =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\lpc17xx_systick.o
#
###############################################################################

F:\iar\NC136B-310统计模块\Software\CSB\source\lpc17xx_systick.c
      1          /**********************************************************************
      2          * $Id$		lpc17xx_systick.c				2010-05-21
      3          *//**
      4          * @file		lpc17xx_systick.c
      5          * @brief	Contains all functions support for SYSTICK firmware library
      6          * 			on LPC17xx
      7          * @version	2.0
      8          * @date		21. May. 2010
      9          * @author	NXP MCU SW Application Team
     10          *
     11          * Copyright(C) 2010, NXP Semiconductor
     12          * All rights reserved.
     13          *
     14          ***********************************************************************
     15          * Software that is described herein is for illustrative purposes only
     16          * which provides customers with programming information regarding the
     17          * products. This software is supplied "AS IS" without any warranties.
     18          * NXP Semiconductors assumes no responsibility or liability for the
     19          * use of the software, conveys no license or title under any patent,
     20          * copyright, or mask work right to the product. NXP Semiconductors
     21          * reserves the right to make changes in the software without
     22          * notification. NXP Semiconductors also make no representation or
     23          * warranty that such application will be suitable for the specified
     24          * use without further testing or modification.
     25          * Permission to use, copy, modify, and distribute this software and its
     26          * documentation is hereby granted, under NXP Semiconductors'
     27          * relevant copyright in the software, without fee, provided that it
     28          * is used in conjunction with NXP Semiconductors microcontrollers.  This
     29          * copyright, permission, and disclaimer notice must appear in all copies of
     30          * this code.
     31          **********************************************************************/
     32          
     33          /* Peripheral group ----------------------------------------------------------- */
     34          /** @addtogroup SYSTICK
     35           * @{
     36           */
     37          
     38          /* Includes ------------------------------------------------------------------- */
     39          #include "lpc17xx_systick.h"
     40          #include "lpc17xx_clkpwr.h"
     41          
     42          /* If this source file built with example, the LPC17xx FW library configuration
     43           * file in each example directory ("lpc17xx_libcfg.h") must be included,
     44           * otherwise the default FW library configuration file must be included instead
     45           */
     46          #ifdef __BUILD_WITH_EXAMPLE__
     47          #include "lpc17xx_libcfg.h"
     48          #else
     49          #include "lpc17xx_libcfg_default.h"
     50          #endif /* __BUILD_WITH_EXAMPLE__ */
     51          
     52          
     53          #ifdef _SYSTICK
     54          
     55          /* Public Functions ----------------------------------------------------------- */
     56          /** @addtogroup SYSTICK_Public_Functions
     57           * @{
     58           */
     59          /*********************************************************************//**
     60           * @brief 		Initial System Tick with using internal CPU clock source
     61           * @param[in]	time	time interval(ms)
     62           * @return 		None
     63           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
     64          void SYSTICK_InternalInit(uint32_t time)
     65          {
   \                     SYSTICK_InternalInit: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
     66          	uint32_t cclk;
     67          	float maxtime;
     68          
     69          	cclk = SystemCoreClock;
   \   00000004   0x....             LDR.N    R0,??DataTable5
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x0005             MOVS     R5,R0
     70          	/* With internal CPU clock frequency for LPC17xx is 'SystemCoreClock'
     71          	 * And limit 24 bit for RELOAD value
     72          	 * So the maximum time can be set:
     73          	 * 1/SystemCoreClock * (2^24) * 1000 (ms)
     74          	 */
     75          	//check time value is available or not
     76          	maxtime = (1<<24)/(SystemCoreClock / 1000) ;
   \   0000000A   0x....             LDR.N    R0,??DataTable5
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0xF44F 0x717A      MOV      R1,#+1000
   \   00000012   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000016   0xF05F 0x7180      MOVS     R1,#+16777216
   \   0000001A   0xFBB1 0xF0F0      UDIV     R0,R1,R0
   \   0000001E   0x.... 0x....      BL       __aeabi_ui2f
   \   00000022   0x0006             MOVS     R6,R0
     77          	if(time > maxtime)
   \   00000024   0x0020             MOVS     R0,R4
   \   00000026   0x.... 0x....      BL       __aeabi_ui2f
   \   0000002A   0x0001             MOVS     R1,R0
   \   0000002C   0x0030             MOVS     R0,R6
   \   0000002E   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000032   0xD200             BCS.N    ??SYSTICK_InternalInit_0
     78          		//Error loop
     79          		while(1);
   \                     ??SYSTICK_InternalInit_1: (+1)
   \   00000034   0xE7FE             B.N      ??SYSTICK_InternalInit_1
     80          	else
     81          	{
     82          		//Select CPU clock is System Tick clock source
     83          		SysTick->CTRL |= ST_CTRL_CLKSOURCE;
   \                     ??SYSTICK_InternalInit_0: (+1)
   \   00000036   0x....             LDR.N    R0,??DataTable5_1  ;; 0xe000e010
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   0000003E   0x....             LDR.N    R1,??DataTable5_1  ;; 0xe000e010
   \   00000040   0x6008             STR      R0,[R1, #+0]
     84          		/* Set RELOAD value
     85          		 * RELOAD = (SystemCoreClock/1000) * time - 1
     86          		 * with time base is millisecond
     87          		 */
     88          		SysTick->LOAD = (cclk/1000)*time - 1;
   \   00000042   0xF44F 0x707A      MOV      R0,#+1000
   \   00000046   0xFBB5 0xF0F0      UDIV     R0,R5,R0
   \   0000004A   0x4360             MULS     R0,R4,R0
   \   0000004C   0x1E40             SUBS     R0,R0,#+1
   \   0000004E   0x....             LDR.N    R1,??DataTable5_2  ;; 0xe000e014
   \   00000050   0x6008             STR      R0,[R1, #+0]
     89          	}
     90          }
   \   00000052   0xBD70             POP      {R4-R6,PC}       ;; return
     91          
     92          /*********************************************************************//**
     93           * @brief 		Initial System Tick with using external clock source
     94           * @param[in]	freq	external clock frequency(Hz)
     95           * @param[in]	time	time interval(ms)
     96           * @return 		None
     97           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
     98          void SYSTICK_ExternalInit(uint32_t freq, uint32_t time)
     99          {
   \                     SYSTICK_ExternalInit: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    100          	float maxtime;
    101          
    102          	/* With external clock frequency for LPC17xx is 'freq'
    103          	 * And limit 24 bit for RELOAD value
    104          	 * So the maximum time can be set:
    105          	 * 1/freq * (2^24) * 1000 (ms)
    106          	 */
    107          	//check time value is available or not
    108          	maxtime = (1<<24)/(freq / 1000) ;
   \   00000006   0xF44F 0x707A      MOV      R0,#+1000
   \   0000000A   0xFBB4 0xF0F0      UDIV     R0,R4,R0
   \   0000000E   0xF05F 0x7180      MOVS     R1,#+16777216
   \   00000012   0xFBB1 0xF0F0      UDIV     R0,R1,R0
   \   00000016   0x.... 0x....      BL       __aeabi_ui2f
   \   0000001A   0x0006             MOVS     R6,R0
    109          	if (time>maxtime)
   \   0000001C   0x0028             MOVS     R0,R5
   \   0000001E   0x.... 0x....      BL       __aeabi_ui2f
   \   00000022   0x0001             MOVS     R1,R0
   \   00000024   0x0030             MOVS     R0,R6
   \   00000026   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000002A   0xD200             BCS.N    ??SYSTICK_ExternalInit_0
    110          		//Error Loop
    111          		while(1);
   \                     ??SYSTICK_ExternalInit_1: (+1)
   \   0000002C   0xE7FE             B.N      ??SYSTICK_ExternalInit_1
    112          	else
    113          	{
    114          		//Select external clock is System Tick clock source
    115          		SysTick->CTRL &= ~ ST_CTRL_CLKSOURCE;
   \                     ??SYSTICK_ExternalInit_0: (+1)
   \   0000002E   0x....             LDR.N    R0,??DataTable5_1  ;; 0xe000e010
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0xF030 0x0004      BICS     R0,R0,#0x4
   \   00000036   0x....             LDR.N    R1,??DataTable5_1  ;; 0xe000e010
   \   00000038   0x6008             STR      R0,[R1, #+0]
    116          		/* Set RELOAD value
    117          		 * RELOAD = (freq/1000) * time - 1
    118          		 * with time base is millisecond
    119          		 */
    120          		maxtime = (freq/1000)*time - 1;
   \   0000003A   0xF44F 0x707A      MOV      R0,#+1000
   \   0000003E   0xFBB4 0xF0F0      UDIV     R0,R4,R0
   \   00000042   0x4368             MULS     R0,R5,R0
   \   00000044   0x1E40             SUBS     R0,R0,#+1
   \   00000046   0x.... 0x....      BL       __aeabi_ui2f
   \   0000004A   0x0006             MOVS     R6,R0
    121          		SysTick->LOAD = (freq/1000)*time - 1;
   \   0000004C   0xF44F 0x707A      MOV      R0,#+1000
   \   00000050   0xFBB4 0xF0F0      UDIV     R0,R4,R0
   \   00000054   0x4368             MULS     R0,R5,R0
   \   00000056   0x1E40             SUBS     R0,R0,#+1
   \   00000058   0x....             LDR.N    R1,??DataTable5_2  ;; 0xe000e014
   \   0000005A   0x6008             STR      R0,[R1, #+0]
    122          	}
    123          }
   \   0000005C   0xBD70             POP      {R4-R6,PC}       ;; return
    124          
    125          /*********************************************************************//**
    126           * @brief 		Enable/disable System Tick counter
    127           * @param[in]	NewState	System Tick counter status, should be:
    128           * 					- ENABLE
    129           * 					- DISABLE
    130           * @return 		None
    131           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    132          void SYSTICK_Cmd(FunctionalState NewState)
    133          {
   \                     SYSTICK_Cmd: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    134          	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
   \   00000004   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000006   0x2C00             CMP      R4,#+0
   \   00000008   0xD006             BEQ.N    ??SYSTICK_Cmd_0
   \   0000000A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000C   0x2C01             CMP      R4,#+1
   \   0000000E   0xD003             BEQ.N    ??SYSTICK_Cmd_0
   \   00000010   0x2186             MOVS     R1,#+134
   \   00000012   0x....             LDR.N    R0,??DataTable5_3
   \   00000014   0x.... 0x....      BL       check_failed
    135          
    136          	if(NewState == ENABLE)
   \                     ??SYSTICK_Cmd_0: (+1)
   \   00000018   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001A   0x2C01             CMP      R4,#+1
   \   0000001C   0xD106             BNE.N    ??SYSTICK_Cmd_1
    137          		//Enable System Tick counter
    138          		SysTick->CTRL |= ST_CTRL_ENABLE;
   \   0000001E   0x....             LDR.N    R0,??DataTable5_1  ;; 0xe000e010
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000026   0x....             LDR.N    R1,??DataTable5_1  ;; 0xe000e010
   \   00000028   0x6008             STR      R0,[R1, #+0]
   \   0000002A   0xE005             B.N      ??SYSTICK_Cmd_2
    139          	else
    140          		//Disable System Tick counter
    141          		SysTick->CTRL &= ~ST_CTRL_ENABLE;
   \                     ??SYSTICK_Cmd_1: (+1)
   \   0000002C   0x....             LDR.N    R0,??DataTable5_1  ;; 0xe000e010
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0x0840             LSRS     R0,R0,#+1
   \   00000032   0x0040             LSLS     R0,R0,#+1
   \   00000034   0x....             LDR.N    R1,??DataTable5_1  ;; 0xe000e010
   \   00000036   0x6008             STR      R0,[R1, #+0]
    142          }
   \                     ??SYSTICK_Cmd_2: (+1)
   \   00000038   0xBD10             POP      {R4,PC}          ;; return
    143          
    144          /*********************************************************************//**
    145           * @brief 		Enable/disable System Tick interrupt
    146           * @param[in]	NewState	System Tick interrupt status, should be:
    147           * 					- ENABLE
    148           * 					- DISABLE
    149           * @return 		None
    150           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    151          void SYSTICK_IntCmd(FunctionalState NewState)
    152          {
   \                     SYSTICK_IntCmd: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    153          	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
   \   00000004   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000006   0x2C00             CMP      R4,#+0
   \   00000008   0xD006             BEQ.N    ??SYSTICK_IntCmd_0
   \   0000000A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000C   0x2C01             CMP      R4,#+1
   \   0000000E   0xD003             BEQ.N    ??SYSTICK_IntCmd_0
   \   00000010   0x2199             MOVS     R1,#+153
   \   00000012   0x....             LDR.N    R0,??DataTable5_3
   \   00000014   0x.... 0x....      BL       check_failed
    154          
    155          	if(NewState == ENABLE)
   \                     ??SYSTICK_IntCmd_0: (+1)
   \   00000018   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001A   0x2C01             CMP      R4,#+1
   \   0000001C   0xD106             BNE.N    ??SYSTICK_IntCmd_1
    156          		//Enable System Tick counter
    157          		SysTick->CTRL |= ST_CTRL_TICKINT;
   \   0000001E   0x....             LDR.N    R0,??DataTable5_1  ;; 0xe000e010
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   00000026   0x....             LDR.N    R1,??DataTable5_1  ;; 0xe000e010
   \   00000028   0x6008             STR      R0,[R1, #+0]
   \   0000002A   0xE005             B.N      ??SYSTICK_IntCmd_2
    158          	else
    159          		//Disable System Tick counter
    160          		SysTick->CTRL &= ~ST_CTRL_TICKINT;
   \                     ??SYSTICK_IntCmd_1: (+1)
   \   0000002C   0x....             LDR.N    R0,??DataTable5_1  ;; 0xe000e010
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0xF030 0x0002      BICS     R0,R0,#0x2
   \   00000034   0x....             LDR.N    R1,??DataTable5_1  ;; 0xe000e010
   \   00000036   0x6008             STR      R0,[R1, #+0]
    161          }
   \                     ??SYSTICK_IntCmd_2: (+1)
   \   00000038   0xBD10             POP      {R4,PC}          ;; return
    162          
    163          /*********************************************************************//**
    164           * @brief 		Get current value of System Tick counter
    165           * @param[in]	None
    166           * @return 		current value of System Tick counter
    167           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    168          uint32_t SYSTICK_GetCurrentValue(void)
    169          {
    170          	return (SysTick->VAL);
   \                     SYSTICK_GetCurrentValue: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable5_4  ;; 0xe000e018
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
    171          }
    172          
    173          /*********************************************************************//**
    174           * @brief 		Clear Counter flag
    175           * @param[in]	None
    176           * @return 		None
    177           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    178          void SYSTICK_ClearCounterFlag(void)
    179          {
    180          	SysTick->CTRL &= ~ST_CTRL_COUNTFLAG;
   \                     SYSTICK_ClearCounterFlag: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable5_1  ;; 0xe000e010
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF430 0x3080      BICS     R0,R0,#0x10000
   \   00000008   0x....             LDR.N    R1,??DataTable5_1  ;; 0xe000e010
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    181          }
   \   0000000C   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x........         DC32     SystemCoreClock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0xE000E010         DC32     0xe000e010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0xE000E014         DC32     0xe000e014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0xE000E018         DC32     0xe000e018

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x46 0x3A          DC8 46H, 3AH, 5CH, 69H, 61H, 72H, 5CH, 4EH
   \              0x5C 0x69    
   \              0x61 0x72    
   \              0x5C 0x4E    
   \   00000008   0x43 0x31          DC8 43H, 31H, 33H, 36H, 42H, 2DH, 33H, 31H
   \              0x33 0x36    
   \              0x42 0x2D    
   \              0x33 0x31    
   \   00000010   0x30 0xCD          DC8 30H, 0CDH, 0B3H, 0BCH, 0C6H, 0C4H, 0A3H, 0BFH
   \              0xB3 0xBC    
   \              0xC6 0xC4    
   \              0xA3 0xBF    
   \   00000018   0xE9 0x5C          DC8 0E9H, 5CH, 53H, 6FH, 66H, 74H, 77H, 61H
   \              0x53 0x6F    
   \              0x66 0x74    
   \              0x77 0x61    
   \   00000020   0x72 0x65          DC8 72H, 65H, 5CH, 43H, 53H, 42H, 5CH, 73H
   \              0x5C 0x43    
   \              0x53 0x42    
   \              0x5C 0x73    
   \   00000028   0x6F 0x75          DC8 6FH, 75H, 72H, 63H, 65H, 5CH, 6CH, 70H
   \              0x72 0x63    
   \              0x65 0x5C    
   \              0x6C 0x70    
   \   00000030   0x63 0x31          DC8 63H, 31H, 37H, 78H, 78H, 5FH, 73H, 79H
   \              0x37 0x78    
   \              0x78 0x5F    
   \              0x73 0x79    
   \   00000038   0x73 0x74          DC8 73H, 74H, 69H, 63H, 6BH, 2EH, 63H, 0
   \              0x69 0x63    
   \              0x6B 0x2E    
   \              0x63 0x00    
    182          /**
    183           * @}
    184           */
    185          
    186          #endif /* _SYSTICK */
    187          
    188          /**
    189           * @}
    190           */
    191          
    192          /* --------------------------------- End Of File ------------------------------ */
    193          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   SYSTICK_ClearCounterFlag
       8   SYSTICK_Cmd
         8   -> check_failed
      16   SYSTICK_ExternalInit
        16   -> __aeabi_ui2f
        16 __aeabi_cfcmple
       0   SYSTICK_GetCurrentValue
       8   SYSTICK_IntCmd
         8   -> check_failed
      16   SYSTICK_InternalInit
        16   -> __aeabi_ui2f
        16 __aeabi_cfcmple


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
      64  ?_0
      14  SYSTICK_ClearCounterFlag
      58  SYSTICK_Cmd
      94  SYSTICK_ExternalInit
       6  SYSTICK_GetCurrentValue
      58  SYSTICK_IntCmd
      84  SYSTICK_InternalInit

 
  64 bytes in section .rodata
 334 bytes in section .text
 
 334 bytes of CODE  memory
  64 bytes of CONST memory

Errors: none
Warnings: none
