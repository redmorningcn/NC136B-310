###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       11/Oct/2017  18:40:20
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC136B-310统计模块\Application\Library\CardOperations\OperateCard.c
#    Command line =  
#        F:\iar\NC136B-310统计模块\Application\Library\CardOperations\OperateCard.c
#        -lCN
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List
#        --diag_suppress Pa050 -o
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\csnr_package_deal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\tax\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\OperateCard.lst
#    Object file  =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\OperateCard.o
#
###############################################################################

F:\iar\NC136B-310统计模块\Application\Library\CardOperations\OperateCard.c
      1          ////#include 	"config.h"
      2          ////#include 	"String.h"
      3          ////#include	"Globe.h"
      4          ////#include	"HardDrive.h"
      5          ////#include	"CpuDrive.h"
      6          ////#include	"OperateCard.h"
      7          ////#include	"Tax2.h"
      8          ////#include	"FramStore.h"
      9          //
     10          #include    "includes.h"  
     11          #include	"Card.h"
     12          #include	"OperateCard.h"
     13          #include	"FRAM.h"
     14          //

   \                                 In section .bss, align 2
     15          uint16	l_CardType;
   \                     l_CardType:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
     16          uint8	l_FlgZoneErrEvent	= NO_OCCUR;
   \                     l_FlgZoneErrEvent:
   \   00000000                      DS8 1
     17          ////-------------------------------------------------------------------------------------------------
     18          ////函数名称:             ReadCardFlg()
     19          ////函数功能:             读分区卡标识页,进行求要分区号
     20          ////入口参数:             无
     21          ////出口参数:             IC卡首页读取
     22          ////说明:                 
     23          ////--------------------------------------------------------------------------------------------------
     24          //uint8	ReadCardFlg(stcCardFlg * sCardFlg)
     25          //{	
     26          //	////printfcom0("\r\n ReadCardFlg(stcCardFlg * sCardFlg)");
     27          //	
     28          //	ReadCard(CARD_FLG_ADDR,(uint8 *)sCardFlg,sizeof(stcCardFlg));		
     29          //	
     30          //	////printfcom0("\r\n ReadCard(CARD_FLG_ADDR,(uint8 *)sCardFlg,sizeof(stcCardFlg));");
     31          //
     32          //	////printfcom0("\r\n sCardFlg->sCardType.CrcCheck %d, CrcCheck %d",sCardFlg->sCardType.CrcCheck,GetCrc16Check((uint8 *)&sCardFlg->sCardType,sizeof(sCardFlg->sCardType) -2));
     33          //
     34          //	if(     (sCardFlg->sCardType.CardType[0] == sCardFlg->sCardType.CardType[1]) 
     35          //		&& 	(sCardFlg->sCardType.CardType[1] == sCardFlg->sCardType.CardType[2])
     36          //		&&	(sCardFlg->sCardType.CrcCheck == 
     37          //		    GetCrc16Check((uint8 *)&sCardFlg->sCardType,sizeof(sCardFlg->sCardType) -2))
     38          //	   )
     39          //	{
     40          //		l_CardType 		= sCardFlg->sCardType.CardType[0];			//IC卡 类型
     41          //		
     42          //		l_FlgZoneErrEvent = NO_OCCUR;								//IC卡 标识页错误事件
     43          //		
     44          //		//PrintfDebug("\r\n l_CardType %d",l_CardType);
     45          //		
     46          //		return 	1;
     47          //	}
     48          //	else
     49          //	{
     50          //		l_FlgZoneErrEvent = OCCUR;
     51          //		l_CardType = 0x0000;
     52          //		
     53          //		return	0;
     54          //	}
     55          //}
     56          

   \                                 In section .text, align 2, keep-with-next
     57          uint8	ReadCardFlg(void)
     58          {	
   \                     ReadCardFlg: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
     59          	////printfcom0("\r\n ReadCardFlg(stcCardFlg * sCardFlg)");
     60          	stcCardType		sCardType;
     61          
     62          	ReadCard(CARD_FLG_ADDR+sizeof(stcCardID),(uint8 *)&sCardType,sizeof(stcCardType));		
   \   00000004   0x2208             MOVS     R2,#+8
   \   00000006   0x4669             MOV      R1,SP
   \   00000008   0x2020             MOVS     R0,#+32
   \   0000000A   0x.... 0x....      BL       ReadCard
     63          	
     64          	////printfcom0("\r\n ReadCard(CARD_FLG_ADDR,(uint8 *)sCardFlg,sizeof(stcCardFlg));");
     65          
     66          	////printfcom0("\r\n sCardFlg->sCardType.CrcCheck %d, CrcCheck %d",sCardFlg->sCardType.CrcCheck,GetCrc16Check((uint8 *)&sCardFlg->sCardType,sizeof(sCardFlg->sCardType) -2));
     67          
     68          	if(     (sCardType.CardType[0] == sCardType.CardType[1]) 
     69          		&& 	(sCardType.CardType[1] == sCardType.CardType[2])
     70          		&&	(sCardType.CrcCheck == 
     71          		    GetCrc16Check((uint8 *)&sCardType,sizeof(sCardType) -2))
     72          	   )
   \   0000000E   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000012   0xF8BD 0x1002      LDRH     R1,[SP, #+2]
   \   00000016   0x4288             CMP      R0,R1
   \   00000018   0xD119             BNE.N    ??ReadCardFlg_0
   \   0000001A   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   0000001E   0xF8BD 0x1004      LDRH     R1,[SP, #+4]
   \   00000022   0x4288             CMP      R0,R1
   \   00000024   0xD113             BNE.N    ??ReadCardFlg_0
   \   00000026   0x2106             MOVS     R1,#+6
   \   00000028   0x4668             MOV      R0,SP
   \   0000002A   0x.... 0x....      BL       GetCrc16Check
   \   0000002E   0xF8BD 0x1006      LDRH     R1,[SP, #+6]
   \   00000032   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000034   0x4281             CMP      R1,R0
   \   00000036   0xD10A             BNE.N    ??ReadCardFlg_0
     73          	{
     74          		l_CardType 		= sCardType.CardType[0];			//IC卡 类型
   \   00000038   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable4
   \   00000040   0x8008             STRH     R0,[R1, #+0]
     75          		
     76          		l_FlgZoneErrEvent = NO_OCCUR;								//IC卡 标识页错误事件
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable4_1
   \   00000048   0x7008             STRB     R0,[R1, #+0]
     77          		
     78          		//PrintfDebug("\r\n l_CardType %d",l_CardType);
     79          		
     80          		return 	1;
   \   0000004A   0x2001             MOVS     R0,#+1
   \   0000004C   0xE008             B.N      ??ReadCardFlg_1
     81          	}
     82          	else
     83          	{
     84          		l_FlgZoneErrEvent = OCCUR;
   \                     ??ReadCardFlg_0: (+1)
   \   0000004E   0x2001             MOVS     R0,#+1
   \   00000050   0x.... 0x....      LDR.W    R1,??DataTable4_1
   \   00000054   0x7008             STRB     R0,[R1, #+0]
     85          		l_CardType = 0x0000;
   \   00000056   0x2000             MOVS     R0,#+0
   \   00000058   0x.... 0x....      LDR.W    R1,??DataTable4
   \   0000005C   0x8008             STRH     R0,[R1, #+0]
     86          		
     87          		return	0;
   \   0000005E   0x2000             MOVS     R0,#+0
   \                     ??ReadCardFlg_1: (+1)
   \   00000060   0xBD0E             POP      {R1-R3,PC}       ;; return
     88          	}
     89          }
     90          
     91          //
     92          ////-------------------------------------------------------------------------------------------------
     93          ////函数名称:             ReadCOM0CardFlg()
     94          ////函数功能:             读分区卡标识页,进行求要分区号
     95          ////入口参数:             无
     96          ////出口参数:             IC卡首页读取
     97          ////说明:                 
     98          ////--------------------------------------------------------------------------------------------------
     99          //uint8	ReadCOM0CardFlg(stcCardFlg * sCardFlg)
    100          //{	
    101          //	//PrintfDebug("\r\n ReadCardFlg(stcCardFlg * sCardFlg)");
    102          //	
    103          //	//ReadCard(CARD_FLG_ADDR,(uint8 *)sCardFlg,sizeof(stcCardFlg));		
    104          //	
    105          //	//PrintfDebug("\r\n ReadCard(CARD_FLG_ADDR,(uint8 *)sCardFlg,sizeof(stcCardFlg));");
    106          //
    107          //	if(     (sCardFlg->sCardType.CardType[0] == sCardFlg->sCardType.CardType[1]) 
    108          //		&& 	(sCardFlg->sCardType.CardType[1] == sCardFlg->sCardType.CardType[2])
    109          //		&&	(sCardFlg->sCardType.CrcCheck == 
    110          //		    GetCrc16Check((uint8 *)&sCardFlg->sCardType,sizeof(sCardFlg->sCardType) -2))
    111          //	   )
    112          //	{
    113          //		l_CardType 		= sCardFlg->sCardType.CardType[0];			//IC卡 类型
    114          //		
    115          //		l_FlgZoneErrEvent = NO_OCCUR;								//IC卡 标识页错误事件
    116          //		
    117          //		//PrintfDebug("\r\n l_CardType %d",l_CardType);
    118          //		
    119          //		return 	1;
    120          //	}
    121          //	else
    122          //	{
    123          //		l_FlgZoneErrEvent = OCCUR;
    124          //		l_CardType = 0x0000;
    125          //		
    126          //		return	0;
    127          //	}
    128          //}
    129          //
    130          ////--------------------------------------------------------------------------------------------
    131          ////函数名称:             WriteNormCard(void)   
    132          ////函数功能:             StartCardRecNum:开始流水号,EndCardRecNum:结束流水号
    133          ////入口参数:             流水号
    134          ////出口参数:             无
    135          ////说明:                 
    136          ////---------------------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    137          void    WriteCardFlg(stcCardFlg*	sCardFlg)  
    138          {
    139          ////	uint16	CrcTmp;
    140          //	
    141          ////	CrcTmp = GetCrc16Check((uint8 *)sCardFlg,sizeof(stcCardFlg)-2);
    142          //	
    143          ////	sCardFlg->CrcCheck = CrcTmp;
    144          //	
    145          //    WriteCard(CARD_FLG_ADDR,(uint8 *)sCardFlg,sizeof(stcCardFlg));
    146          }
   \                     WriteCardFlg: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    147          
    148          //extern	stcCardFlg	l_sCardFlg;
    149          //
    150          ////--------------------------------------------------------------------------------------------
    151          ////函数名称:             uint8    CheckWriteCardFlgCrc(uint16 Crc16)    
    152          ////函数功能:             读标志页校验
    153          ////入口参数:             无
    154          ////出口参数:             标志页校验,正确返回1，否则为零
    155          ////说明:                 
    156          ////---------------------------------------------------------------------------------------------
    157          //uint8    CheckWriteCardFlgCrc(uint16 Crc16 )  
    158          //{
    159          ////	uint16	CrcTmp;
    160          ////	
    161          ////	ReadCardFlg((stcCardFlg *)&l_sCardFlg);
    162          ////    
    163          ////    ReadCard(CARD_FLG_ADDR + sizeof(stcCardFlg)-2,(uint8 *)&CrcTmp,sizeof(CrcTmp));
    164          ////    
    165          ////    CrcTmp = GetCrc16Check((uint8 *)&l_sCardFlg,sizeof(stcCardFlg) -2);
    166          ////
    167          ////    ////printfcom0("\r\n CrcTmp %d,Crc16 ,%d",CrcTmp,Crc16);
    168          ////    
    169          ////    if(Crc16 == CrcTmp)
    170          ////    {
    171          ////    	return	NO_ERROR;
    172          ////    }
    173          ////    else
    174          ////    {
    175          ////    	return	ERROR;
    176          ////    }
    177          //}
    178          //
    179          
    180          //-------------------------------------------------------------------------------------------------
    181          //函数名称:             void	void	IndicateWriteCardFinsh(void)	   
    182          //函数功能:             普通卡处理
    183          //入口参数:             无
    184          //出口参数:             无
    185          //--------------------------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    186          void	IndicatePullOutCard(void)
    187          {
   \                     IndicatePullOutCard: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    188          	OffLed(WRITE_CARD_LED);
   \   00000002   0x2004             MOVS     R0,#+4
   \   00000004   0x.... 0x....      BL       OffLed
    189          	OffLed(CARD_FULL_LED);	
   \   00000008   0x2005             MOVS     R0,#+5
   \   0000000A   0x.... 0x....      BL       OffLed
    190          	OffLed(CARD_LED);	
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x.... 0x....      BL       OffLed
    191          }
   \   00000014   0xBD01             POP      {R0,PC}          ;; return
    192          //-------------------------------------------------------------------------------------------------
    193          //函数名称:             void	void	IndicateWriteCardFinsh(void)	   
    194          //函数功能:             普通卡处理
    195          //入口参数:             无
    196          //出口参数:             无
    197          //--------------------------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    198          void	IndicateCardTypErr(void)
    199          {
   \                     IndicateCardTypErr: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    200          	ClaerDisplaySetWithoutStore();
   \   00000002   0x.... 0x....      BL       ClaerDisplaySetWithoutStore
    201          	DisplaySet(60,0xffff,"NCTP");									//IC卡类型错误		
   \   00000006   0x.... 0x....      LDR.W    R2,??DataTable4_2
   \   0000000A   0xF64F 0x71FF      MOVW     R1,#+65535
   \   0000000E   0x203C             MOVS     R0,#+60
   \   00000010   0x.... 0x....      BL       DisplaySet
    202          	DisplaySet(60,0xffff,"    ");									//IC卡类型错误		
   \   00000014   0x.... 0x....      LDR.W    R2,??DataTable4_3
   \   00000018   0xF64F 0x71FF      MOVW     R1,#+65535
   \   0000001C   0x203C             MOVS     R0,#+60
   \   0000001E   0x.... 0x....      BL       DisplaySet
    203          	OnLed(CARD_LED,1,50000,0);		
   \   00000022   0x2300             MOVS     R3,#+0
   \   00000024   0xF24C 0x3250      MOVW     R2,#+50000
   \   00000028   0x2101             MOVS     R1,#+1
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x.... 0x....      BL       OnLed
    204          }
   \   00000030   0xBD01             POP      {R0,PC}          ;; return
    205          
    206          //-------------------------------------------------------------------------------------------------
    207          //函数名称:             void	void	IndicateWriteCardFinsh(void)	   
    208          //函数功能:             普通卡处理
    209          //入口参数:             无
    210          //出口参数:             无
    211          //--------------------------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    212          void	IndicateCardNoSet(void)
    213          {
   \                     IndicateCardNoSet: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    214          	ClaerDisplaySetWithoutStore();
   \   00000002   0x.... 0x....      BL       ClaerDisplaySetWithoutStore
    215          	DisplaySet(60,0xffff,"NSET");									//IC卡类型错误		
   \   00000006   0x.... 0x....      LDR.W    R2,??DataTable4_4
   \   0000000A   0xF64F 0x71FF      MOVW     R1,#+65535
   \   0000000E   0x203C             MOVS     R0,#+60
   \   00000010   0x.... 0x....      BL       DisplaySet
    216          	DisplaySet(60,0xffff,"    ");									//IC卡类型错误		
   \   00000014   0x.... 0x....      LDR.W    R2,??DataTable4_3
   \   00000018   0xF64F 0x71FF      MOVW     R1,#+65535
   \   0000001C   0x203C             MOVS     R0,#+60
   \   0000001E   0x.... 0x....      BL       DisplaySet
    217          	OnLed(CARD_LED,1,50000,0);		
   \   00000022   0x2300             MOVS     R3,#+0
   \   00000024   0xF24C 0x3250      MOVW     R2,#+50000
   \   00000028   0x2101             MOVS     R1,#+1
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x.... 0x....      BL       OnLed
    218          }
   \   00000030   0xBD01             POP      {R0,PC}          ;; return
    219          
    220          //-------------------------------------------------------------------------------------------------
    221          //函数名称:             void	void	IndicateWriteCardFinsh(void)	   
    222          //函数功能:             普通卡处理
    223          //入口参数:             无
    224          //出口参数:             无
    225          //--------------------------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    226          void	IndicateCardNoDef(void)
    227          {
   \                     IndicateCardNoDef: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    228          	ClaerDisplaySetWithoutStore();
   \   00000002   0x.... 0x....      BL       ClaerDisplaySetWithoutStore
    229          	DisplaySet(60,0xffff,"NDEF");									//IC卡类型错误		
   \   00000006   0x.... 0x....      LDR.W    R2,??DataTable4_5
   \   0000000A   0xF64F 0x71FF      MOVW     R1,#+65535
   \   0000000E   0x203C             MOVS     R0,#+60
   \   00000010   0x.... 0x....      BL       DisplaySet
    230          	DisplaySet(60,0xffff,"    ");									//IC卡类型错误	
   \   00000014   0x.... 0x....      LDR.W    R2,??DataTable4_3
   \   00000018   0xF64F 0x71FF      MOVW     R1,#+65535
   \   0000001C   0x203C             MOVS     R0,#+60
   \   0000001E   0x.... 0x....      BL       DisplaySet
    231          	OnLed(CARD_LED,1,50000,0);		
   \   00000022   0x2300             MOVS     R3,#+0
   \   00000024   0xF24C 0x3250      MOVW     R2,#+50000
   \   00000028   0x2101             MOVS     R1,#+1
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x.... 0x....      BL       OnLed
    232          }
   \   00000030   0xBD01             POP      {R0,PC}          ;; return
    233          
    234          extern	uint8	l_CardErrorFlg;
    235          //
    236          ////static stcCardFlg	l_sCardFlg;
    237          ////static	stcCardFlg	l_sCardFlg = {0};
    238          //stcCardFlg	l_sCardFlg = {0};
    239          //
    240          //
    241          //extern	void    KeySetDensity(void);
    242          ////extern	void	ClosePluseInput(void);
    243          ////extern	void	ReStartPluse(void);
    244          //extern	void	ReCalPara(uint8 Flg)	;
    245          //extern	uint8	ComModCard(stcCardFlg	* sCardFlg);
    246          //extern	uint8	ExpandCard(stcCardFlg	* sCardFlg);
    247          //extern	uint8   WriteExpandAddTest(void);
    248          //extern	uint8	l_WriteFlgErrCardEvtFlg;
    249          //extern	uint8	DenDataCard(stcCardFlg *	sCardFlg);
    250          //
    251          ////-------------------------------------------------------------------------------------------------
    252          ////函数名称:             OperationCard(void)    
    253          ////函数功能:             操作IC卡
    254          ////入口参数:             无
    255          ////出口参数:             无
    256          ////--------------------------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    257          void    OperationCard(void)  
    258          {
   \                     OperationCard: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    259          	uint8	ResetFlg;
    260          	static	uint32	PlugTime = 0;
    261          	static	uint32	SysTime = 0;
    262          	static	uint8	PlugErrFlg = 0;
    263          	static	uint8	PlugCardLongTime = 0;
    264          	
    265          	ResetFlg = FALSE ;
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x0004             MOVS     R4,R0
    266          		
    267          	if(GetPlugFlg() == PLUG_IN_CARD)
   \   00000006   0x.... 0x....      BL       GetPlugFlg
   \   0000000A   0x2801             CMP      R0,#+1
   \   0000000C   0xF040 0x8192      BNE.W    ??OperationCard_0
    268          	{
    269          		if(PlugCardLongTime == 1)
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable4_6
   \   00000014   0x7800             LDRB     R0,[R0, #+0]
   \   00000016   0x2801             CMP      R0,#+1
   \   00000018   0xD114             BNE.N    ??OperationCard_1
    270          		{
    271          			if(PlugErrFlg == 1)
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable4_7
   \   0000001E   0x7800             LDRB     R0,[R0, #+0]
   \   00000020   0x2801             CMP      R0,#+1
   \   00000022   0xD10E             BNE.N    ??OperationCard_2
    272          			{
    273          				DisplaySet(100,1,"NCTP");									//IC卡类型错误		
   \   00000024   0x.... 0x....      LDR.W    R2,??DataTable4_2
   \   00000028   0x2101             MOVS     R1,#+1
   \   0000002A   0x2064             MOVS     R0,#+100
   \   0000002C   0x.... 0x....      BL       DisplaySet
    274          				DisplaySet(100,1,"    ");									//IC卡类型错误		
   \   00000030   0x.... 0x....      LDR.W    R2,??DataTable4_3
   \   00000034   0x2101             MOVS     R1,#+1
   \   00000036   0x2064             MOVS     R0,#+100
   \   00000038   0x.... 0x....      BL       DisplaySet
    275          				DelayX10ms(250);
   \   0000003C   0x20FA             MOVS     R0,#+250
   \   0000003E   0x.... 0x....      BL       DelayX10ms
    276          			}
    277          
    278          			return;
   \                     ??OperationCard_2: (+1)
   \   00000042   0xE189             B.N      ??OperationCard_3
    279          		}
    280          
    281          		ClaerDisplaySet();													//清显示缓冲区
   \                     ??OperationCard_1: (+1)
   \   00000044   0x.... 0x....      BL       ClaerDisplaySet
    282          		OffAllLed();														//关所有发光二极管
   \   00000048   0x.... 0x....      BL       OffAllLed
    283          		OnLed(RUN_LED,30000,5,5);											//清显示缓冲区		
   \   0000004C   0x2305             MOVS     R3,#+5
   \   0000004E   0x2205             MOVS     R2,#+5
   \   00000050   0xF247 0x5130      MOVW     R1,#+30000
   \   00000054   0x2007             MOVS     R0,#+7
   \   00000056   0x.... 0x....      BL       OnLed
    284          		DisplaySet(50,1,"    ");										
   \   0000005A   0x....             LDR.N    R2,??DataTable4_3
   \   0000005C   0x2101             MOVS     R1,#+1
   \   0000005E   0x2032             MOVS     R0,#+50
   \   00000060   0x.... 0x....      BL       DisplaySet
    285          
    286          		//CloseTax2();
    287          
    288          		if(PlugICCard() == TRUE)										//有卡插入，再进行相关操作
   \   00000064   0x.... 0x....      BL       PlugICCard
   \   00000068   0x2801             CMP      R0,#+1
   \   0000006A   0xF040 0x8107      BNE.W    ??OperationCard_4
    289          		{	
    290          			if(ReadCardFlg())					//读IC卡标志页
   \   0000006E   0x.... 0x....      BL       ReadCardFlg
   \   00000072   0x2800             CMP      R0,#+0
   \   00000074   0xF000 0x80F9      BEQ.W    ??OperationCard_5
    291          			{
    292          				switch( l_CardType )
   \   00000078   0x....             LDR.N    R0,??DataTable4
   \   0000007A   0x8800             LDRH     R0,[R0, #+0]
   \   0000007C   0x2801             CMP      R0,#+1
   \   0000007E   0xD02C             BEQ.N    ??OperationCard_6
   \   00000080   0x2820             CMP      R0,#+32
   \   00000082   0xD033             BEQ.N    ??OperationCard_7
   \   00000084   0x2821             CMP      R0,#+33
   \   00000086   0xF000 0x808A      BEQ.W    ??OperationCard_8
   \   0000008A   0x2840             CMP      R0,#+64
   \   0000008C   0xD03A             BEQ.N    ??OperationCard_9
   \   0000008E   0x2880             CMP      R0,#+128
   \   00000090   0xD044             BEQ.N    ??OperationCard_10
   \   00000092   0xF5B0 0x7F00      CMP      R0,#+512
   \   00000096   0xD04D             BEQ.N    ??OperationCard_11
   \   00000098   0xF240 0x2121      MOVW     R1,#+545
   \   0000009C   0x4288             CMP      R0,R1
   \   0000009E   0xF000 0x8085      BEQ.W    ??OperationCard_12
   \   000000A2   0xF5B0 0x6F80      CMP      R0,#+1024
   \   000000A6   0xD051             BEQ.N    ??OperationCard_13
   \   000000A8   0xF5B0 0x5F80      CMP      R0,#+4096
   \   000000AC   0xD057             BEQ.N    ??OperationCard_14
   \   000000AE   0xF5B0 0x5F00      CMP      R0,#+8192
   \   000000B2   0xD060             BEQ.N    ??OperationCard_15
   \   000000B4   0xF242 0x0160      MOVW     R1,#+8288
   \   000000B8   0x4288             CMP      R0,R1
   \   000000BA   0xF000 0x8081      BEQ.W    ??OperationCard_16
   \   000000BE   0xF242 0x2120      MOVW     R1,#+8736
   \   000000C2   0x4288             CMP      R0,R1
   \   000000C4   0xF000 0x80B2      BEQ.W    ??OperationCard_17
   \   000000C8   0xF242 0x2160      MOVW     R1,#+8800
   \   000000CC   0x4288             CMP      R0,R1
   \   000000CE   0xF000 0x808F      BEQ.W    ??OperationCard_18
   \   000000D2   0xF5B0 0x4F00      CMP      R0,#+32768
   \   000000D6   0xD05A             BEQ.N    ??OperationCard_19
   \   000000D8   0xE0C4             B.N      ??OperationCard_20
    293          				{
    294          					case DATA_CARD:	DisplaySet(100,1,"DATA");
   \                     ??OperationCard_6: (+1)
   \   000000DA   0x....             LDR.N    R2,??DataTable4_8
   \   000000DC   0x2101             MOVS     R1,#+1
   \   000000DE   0x2064             MOVS     R0,#+100
   \   000000E0   0x.... 0x....      BL       DisplaySet
    295          									DataCard(0);	
   \   000000E4   0x2000             MOVS     R0,#+0
   \   000000E6   0x.... 0x....      BL       DataCard
    296          									break;									
   \   000000EA   0xE0C3             B.N      ??OperationCard_21
    297          					case DENSITY_CARD:									//密度卡
    298          									DisplaySet(100,1,"DENS");						
   \                     ??OperationCard_7: (+1)
   \   000000EC   0x....             LDR.N    R2,??DataTable4_9
   \   000000EE   0x2101             MOVS     R1,#+1
   \   000000F0   0x2064             MOVS     R0,#+100
   \   000000F2   0x.... 0x....      BL       DisplaySet
    299          									if(DensityCard())
   \   000000F6   0x.... 0x....      BL       DensityCard
   \   000000FA   0x2800             CMP      R0,#+0
   \   000000FC   0xD001             BEQ.N    ??OperationCard_22
    300          									{
    301          										ResetFlg = TRUE;
   \   000000FE   0x2001             MOVS     R0,#+1
   \   00000100   0x0004             MOVS     R4,R0
    302          									}		
    303          									break;
   \                     ??OperationCard_22: (+1)
   \   00000102   0xE0B7             B.N      ??OperationCard_21
    304          					case MODEL_CARD:									//模型卡
    305          									DisplaySet(100,1,"MODE");						
   \                     ??OperationCard_9: (+1)
   \   00000104   0x....             LDR.N    R2,??DataTable4_10
   \   00000106   0x2101             MOVS     R1,#+1
   \   00000108   0x2064             MOVS     R0,#+100
   \   0000010A   0x.... 0x....      BL       DisplaySet
    306          									if(ModCard())
   \   0000010E   0x.... 0x....      BL       ModCard
   \   00000112   0x2800             CMP      R0,#+0
   \   00000114   0xD001             BEQ.N    ??OperationCard_23
    307          									{
    308          										ResetFlg = TRUE;
   \   00000116   0x2001             MOVS     R0,#+1
   \   00000118   0x0004             MOVS     R4,R0
    309          									}	
    310          										
    311          									break;				
   \                     ??OperationCard_23: (+1)
   \   0000011A   0xE0AB             B.N      ??OperationCard_21
    312          //					case COM_MODEL_CARD:								//时间卡
    313          //									DisplaySet(100,1,"SETC");						
    314          //									if(ComModCard())
    315          //									{
    316          //										ResetFlg = TRUE;
    317          //									}	
    318          //									break;	
    319          					case SET_DATA_CARD:									//置数卡	
    320          									DisplaySet(100,1,"SETD");						
   \                     ??OperationCard_10: (+1)
   \   0000011C   0x....             LDR.N    R2,??DataTable4_11
   \   0000011E   0x2101             MOVS     R1,#+1
   \   00000120   0x2064             MOVS     R0,#+100
   \   00000122   0x.... 0x....      BL       DisplaySet
    321          									if(SetDataCard())
   \   00000126   0x.... 0x....      BL       SetDataCard
   \   0000012A   0x2800             CMP      R0,#+0
   \   0000012C   0xD001             BEQ.N    ??OperationCard_24
    322          									{
    323          										ResetFlg = TRUE;
   \   0000012E   0x2001             MOVS     R0,#+1
   \   00000130   0x0004             MOVS     R4,R0
    324          									}
    325          									break;		
   \                     ??OperationCard_24: (+1)
   \   00000132   0xE09F             B.N      ??OperationCard_21
    326          					case HIGHT_CARD:									//高度调整卡
    327          									DisplaySet(100,1,"HIGT");						
   \                     ??OperationCard_11: (+1)
   \   00000134   0x....             LDR.N    R2,??DataTable4_12
   \   00000136   0x2101             MOVS     R1,#+1
   \   00000138   0x2064             MOVS     R0,#+100
   \   0000013A   0x.... 0x....      BL       DisplaySet
    328          									if(HightCard())
   \   0000013E   0x.... 0x....      BL       HightCard
   \   00000142   0x2800             CMP      R0,#+0
   \   00000144   0xD001             BEQ.N    ??OperationCard_25
    329          									{
    330          										ResetFlg = TRUE;
   \   00000146   0x2001             MOVS     R0,#+1
   \   00000148   0x0004             MOVS     R4,R0
    331          									}
    332          									break;															
   \                     ??OperationCard_25: (+1)
   \   0000014A   0xE093             B.N      ??OperationCard_21
    333          					case COPY_CARD:										//数据拷贝卡//还未写入内容
    334          									DisplaySet(100,1,"COPY");						
   \                     ??OperationCard_13: (+1)
   \   0000014C   0x....             LDR.N    R2,??DataTable4_13
   \   0000014E   0x2101             MOVS     R1,#+1
   \   00000150   0x2064             MOVS     R0,#+100
   \   00000152   0x.... 0x....      BL       DisplaySet
    335          									DataCard(1);
   \   00000156   0x2001             MOVS     R0,#+1
   \   00000158   0x.... 0x....      BL       DataCard
    336          									break;
   \   0000015C   0xE08A             B.N      ??OperationCard_21
    337          					case MODEL_SELECT_CARD:								//模型选择卡
    338          									DisplaySet(100,1,"SELE");						
   \                     ??OperationCard_14: (+1)
   \   0000015E   0x....             LDR.N    R2,??DataTable4_14
   \   00000160   0x2101             MOVS     R1,#+1
   \   00000162   0x2064             MOVS     R0,#+100
   \   00000164   0x.... 0x....      BL       DisplaySet
    339           									if(ModelSelectCard())
   \   00000168   0x.... 0x....      BL       ModelSelectCard
   \   0000016C   0x2800             CMP      R0,#+0
   \   0000016E   0xD001             BEQ.N    ??OperationCard_26
    340          									{
    341          										ResetFlg = TRUE;
   \   00000170   0x2001             MOVS     R0,#+1
   \   00000172   0x0004             MOVS     R4,R0
    342          									} 									
    343           									break;	
   \                     ??OperationCard_26: (+1)
   \   00000174   0xE07E             B.N      ??OperationCard_21
    344          //					case DEBUG_CARD:									//调试卡
    345          //									DisplaySet(100,1,"DEBU");						
    346          //									DebugCard((stcCardFlg *)&l_sCardFlg);									
    347          //									break;
    348          					case FIX_CARD:										//装车卡
    349          									DisplaySet(100,1,"FIXC");						
   \                     ??OperationCard_15: (+1)
   \   00000176   0x....             LDR.N    R2,??DataTable4_15
   \   00000178   0x2101             MOVS     R1,#+1
   \   0000017A   0x2064             MOVS     R0,#+100
   \   0000017C   0x.... 0x....      BL       DisplaySet
    350          									if(FixCard())
   \   00000180   0x.... 0x....      BL       FixCard
   \   00000184   0x2800             CMP      R0,#+0
   \   00000186   0xD001             BEQ.N    ??OperationCard_27
    351          									{
    352          										ResetFlg = TRUE;
   \   00000188   0x2001             MOVS     R0,#+1
   \   0000018A   0x0004             MOVS     R4,R0
    353          									}									
    354          									break;					
   \                     ??OperationCard_27: (+1)
   \   0000018C   0xE072             B.N      ??OperationCard_21
    355          //					case COPY_FRAM_CARD:								//铁电复制卡
    356          //									DisplaySet(100,1,"FRAC");						
    357          //									CopyFramCard((stcCardFlg *)&l_sCardFlg);									
    358          //									break;		
    359          					case EXPAND_CARD:									//扩展卡 //20120409
    360          									DisplaySet(100,1,"EXPD");						
   \                     ??OperationCard_19: (+1)
   \   0000018E   0x....             LDR.N    R2,??DataTable4_16
   \   00000190   0x2101             MOVS     R1,#+1
   \   00000192   0x2064             MOVS     R0,#+100
   \   00000194   0x.... 0x....      BL       DisplaySet
    361          									ExpandCard();									
   \   00000198   0x.... 0x....      BL       ExpandCard
    362          									break;		
   \   0000019C   0xE06A             B.N      ??OperationCard_21
    363          					case DATA_CARD + DENSITY_CARD:						//密度卡+数据卡 (不马上刷新数据)  密度结构增加DenChageTimes，
    364          									DisplaySet(100,1,"DDEN");						
   \                     ??OperationCard_8: (+1)
   \   0000019E   0x....             LDR.N    R2,??DataTable4_17
   \   000001A0   0x2101             MOVS     R1,#+1
   \   000001A2   0x2064             MOVS     R0,#+100
   \   000001A4   0x.... 0x....      BL       DisplaySet
    365          									DenDataCard();
   \   000001A8   0x.... 0x....      BL       DenDataCard
    366          //		
    367          //									break;
    368          					case DATA_CARD + DENSITY_CARD+HIGHT_CARD:						//密度卡+数据卡（马上刷新数据）
    369          									DisplaySet(100,1,"DDHN");						
   \                     ??OperationCard_12: (+1)
   \   000001AC   0x....             LDR.N    R2,??DataTable4_18
   \   000001AE   0x2101             MOVS     R1,#+1
   \   000001B0   0x2064             MOVS     R0,#+100
   \   000001B2   0x.... 0x....      BL       DisplaySet
    370          									DenDataCard();
   \   000001B6   0x.... 0x....      BL       DenDataCard
    371          									ResetFlg = TRUE;
   \   000001BA   0x2001             MOVS     R0,#+1
   \   000001BC   0x0004             MOVS     R4,R0
    372          									break;			
   \   000001BE   0xE059             B.N      ??OperationCard_21
    373          //														
    374          //					case DENSITY_CARD + MODEL_CARD:						//密度卡+模型卡
    375          //									DisplaySet(100,1,"DEMO");						
    376          //									
    377          //									if(DensityCard((stcCardFlg *)&l_sCardFlg))
    378          //									{
    379          //										ResetFlg = TRUE;
    380          //									}									
    381          //									
    382          //									if(ModCard())
    383          //									{
    384          //										ResetFlg = TRUE;
    385          //									}									
    386          //									break;
    387          					case DENSITY_CARD + FIX_CARD + MODEL_CARD:			//密度卡+装车卡+模型卡
    388          									DisplaySet(100,1,"DFMC");						
   \                     ??OperationCard_16: (+1)
   \   000001C0   0x....             LDR.N    R2,??DataTable4_19
   \   000001C2   0x2101             MOVS     R1,#+1
   \   000001C4   0x2064             MOVS     R0,#+100
   \   000001C6   0x.... 0x....      BL       DisplaySet
    389          									if(DensityCard())
   \   000001CA   0x.... 0x....      BL       DensityCard
   \   000001CE   0x2800             CMP      R0,#+0
   \   000001D0   0xD001             BEQ.N    ??OperationCard_28
    390          									{
    391          										ResetFlg = TRUE;
   \   000001D2   0x2001             MOVS     R0,#+1
   \   000001D4   0x0004             MOVS     R4,R0
    392          									}
    393          																		
    394          									if(ModCard())
   \                     ??OperationCard_28: (+1)
   \   000001D6   0x.... 0x....      BL       ModCard
   \   000001DA   0x2800             CMP      R0,#+0
   \   000001DC   0xD001             BEQ.N    ??OperationCard_29
    395          									{
    396          										ResetFlg = TRUE;
   \   000001DE   0x2001             MOVS     R0,#+1
   \   000001E0   0x0004             MOVS     R4,R0
    397          									}									
    398          									
    399          									if(FixCard())
   \                     ??OperationCard_29: (+1)
   \   000001E2   0x.... 0x....      BL       FixCard
   \   000001E6   0x2800             CMP      R0,#+0
   \   000001E8   0xD001             BEQ.N    ??OperationCard_30
    400          									{
    401          										ResetFlg = TRUE;
   \   000001EA   0x2001             MOVS     R0,#+1
   \   000001EC   0x0004             MOVS     R4,R0
    402          									}
    403          									break;
   \                     ??OperationCard_30: (+1)
   \   000001EE   0xE041             B.N      ??OperationCard_21
    404          									
    405          					case DENSITY_CARD + FIX_CARD + MODEL_CARD + HIGHT_CARD:	//密度卡+装车卡+模型卡+高度卡
    406          									DisplaySet(100,1,"DFMH");						
   \                     ??OperationCard_18: (+1)
   \   000001F0   0x....             LDR.N    R2,??DataTable4_20
   \   000001F2   0x2101             MOVS     R1,#+1
   \   000001F4   0x2064             MOVS     R0,#+100
   \   000001F6   0x.... 0x....      BL       DisplaySet
    407          									if(DensityCard())
   \   000001FA   0x.... 0x....      BL       DensityCard
   \   000001FE   0x2800             CMP      R0,#+0
   \   00000200   0xD001             BEQ.N    ??OperationCard_31
    408          									{
    409          										ResetFlg = TRUE;
   \   00000202   0x2001             MOVS     R0,#+1
   \   00000204   0x0004             MOVS     R4,R0
    410          									}
    411          																		
    412          									if(ModCard())
   \                     ??OperationCard_31: (+1)
   \   00000206   0x.... 0x....      BL       ModCard
   \   0000020A   0x2800             CMP      R0,#+0
   \   0000020C   0xD001             BEQ.N    ??OperationCard_32
    413          									{
    414          										ResetFlg = TRUE;
   \   0000020E   0x2001             MOVS     R0,#+1
   \   00000210   0x0004             MOVS     R4,R0
    415          									}
    416          																		
    417          									if(FixCard())
   \                     ??OperationCard_32: (+1)
   \   00000212   0x.... 0x....      BL       FixCard
   \   00000216   0x2800             CMP      R0,#+0
   \   00000218   0xD001             BEQ.N    ??OperationCard_33
    418          									{
    419          										ResetFlg = TRUE;
   \   0000021A   0x2001             MOVS     R0,#+1
   \   0000021C   0x0004             MOVS     R4,R0
    420          									}
    421          																		
    422          									if(HightCard())
   \                     ??OperationCard_33: (+1)
   \   0000021E   0x.... 0x....      BL       HightCard
   \   00000222   0x2800             CMP      R0,#+0
   \   00000224   0xD001             BEQ.N    ??OperationCard_34
    423          									{
    424          										ResetFlg = TRUE;
   \   00000226   0x2001             MOVS     R0,#+1
   \   00000228   0x0004             MOVS     R4,R0
    425          									}
    426          																		
    427          									break;
   \                     ??OperationCard_34: (+1)
   \   0000022A   0xE023             B.N      ??OperationCard_21
    428          					case DENSITY_CARD + FIX_CARD + HIGHT_CARD:				//密度卡+装车卡+高度卡
    429          									if(DisplaySet(100,1,"DFHC"))
   \                     ??OperationCard_17: (+1)
   \   0000022C   0x....             LDR.N    R2,??DataTable4_21
   \   0000022E   0x2101             MOVS     R1,#+1
   \   00000230   0x2064             MOVS     R0,#+100
   \   00000232   0x.... 0x....      BL       DisplaySet
   \   00000236   0x2800             CMP      R0,#+0
   \   00000238   0xD001             BEQ.N    ??OperationCard_35
    430          									{
    431          										ResetFlg = TRUE;
   \   0000023A   0x2001             MOVS     R0,#+1
   \   0000023C   0x0004             MOVS     R4,R0
    432          									}
    433          																		
    434          									if(DensityCard())
   \                     ??OperationCard_35: (+1)
   \   0000023E   0x.... 0x....      BL       DensityCard
   \   00000242   0x2800             CMP      R0,#+0
   \   00000244   0xD001             BEQ.N    ??OperationCard_36
    435          									{
    436          										ResetFlg = TRUE;
   \   00000246   0x2001             MOVS     R0,#+1
   \   00000248   0x0004             MOVS     R4,R0
    437          									}
    438          																		
    439          									if(FixCard())
   \                     ??OperationCard_36: (+1)
   \   0000024A   0x.... 0x....      BL       FixCard
   \   0000024E   0x2800             CMP      R0,#+0
   \   00000250   0xD001             BEQ.N    ??OperationCard_37
    440          									{
    441          										ResetFlg = TRUE;
   \   00000252   0x2001             MOVS     R0,#+1
   \   00000254   0x0004             MOVS     R4,R0
    442          									}
    443          																		
    444          									if(HightCard())
   \                     ??OperationCard_37: (+1)
   \   00000256   0x.... 0x....      BL       HightCard
   \   0000025A   0x2800             CMP      R0,#+0
   \   0000025C   0xD001             BEQ.N    ??OperationCard_38
    445          									{
    446          										ResetFlg = TRUE;
   \   0000025E   0x2001             MOVS     R0,#+1
   \   00000260   0x0004             MOVS     R4,R0
    447          									}									
    448          									break;									
   \                     ??OperationCard_38: (+1)
   \   00000262   0xE007             B.N      ??OperationCard_21
    449          					default:	
    450          									IndicateCardNoDef();	
   \                     ??OperationCard_20: (+1)
   \   00000264   0x.... 0x....      BL       IndicateCardNoDef
   \   00000268   0xE004             B.N      ??OperationCard_21
    451          				}
    452          			}	
    453          			else
    454          			{
    455          				DelayX10ms(10);
   \                     ??OperationCard_5: (+1)
   \   0000026A   0x200A             MOVS     R0,#+10
   \   0000026C   0x.... 0x....      BL       DelayX10ms
    456          				IndicateCardNoSet();
   \   00000270   0x.... 0x....      BL       IndicateCardNoSet
    457          			}	
    458          			
    459          			PlugErrFlg = 0;		
   \                     ??OperationCard_21: (+1)
   \   00000274   0x2000             MOVS     R0,#+0
   \   00000276   0x....             LDR.N    R1,??DataTable4_7
   \   00000278   0x7008             STRB     R0,[R1, #+0]
   \   0000027A   0xE004             B.N      ??OperationCard_39
    460          		}
    461          		else 
    462          		{
    463          			PlugErrFlg = 1;
   \                     ??OperationCard_4: (+1)
   \   0000027C   0x2001             MOVS     R0,#+1
   \   0000027E   0x....             LDR.N    R1,??DataTable4_7
   \   00000280   0x7008             STRB     R0,[R1, #+0]
    464          			
    465          			IndicateCardTypErr();
   \   00000282   0x.... 0x....      BL       IndicateCardTypErr
    466          		}		
    467          
    468          		while(GetPlugFlg() == PLUG_IN_CARD)								//等IC卡退出		
   \                     ??OperationCard_39: (+1)
   \   00000286   0x.... 0x....      BL       GetPlugFlg
   \   0000028A   0x2801             CMP      R0,#+1
   \   0000028C   0xD129             BNE.N    ??OperationCard_40
    469          		{
    470          			PlugTime++;													//插入IC卡，记时
   \   0000028E   0x....             LDR.N    R0,??DataTable4_22
   \   00000290   0x6800             LDR      R0,[R0, #+0]
   \   00000292   0x1C40             ADDS     R0,R0,#+1
   \   00000294   0x....             LDR.N    R1,??DataTable4_22
   \   00000296   0x6008             STR      R0,[R1, #+0]
    471          							
    472          			SysTime = GetSysTime();		
   \   00000298   0x.... 0x....      BL       GetSysTime
   \   0000029C   0x....             LDR.N    R1,??DataTable4_23
   \   0000029E   0x6008             STR      R0,[R1, #+0]
    473          			while(GetSysTime() - SysTime < 100)							//1S
   \                     ??OperationCard_41: (+1)
   \   000002A0   0x.... 0x....      BL       GetSysTime
   \   000002A4   0x....             LDR.N    R1,??DataTable4_23
   \   000002A6   0x6809             LDR      R1,[R1, #+0]
   \   000002A8   0x1A40             SUBS     R0,R0,R1
   \   000002AA   0x2864             CMP      R0,#+100
   \   000002AC   0xD202             BCS.N    ??OperationCard_42
    474          			{
    475          				NOP();
   \   000002AE   0x.... 0x....      BL       `NOP`
   \   000002B2   0xE7F5             B.N      ??OperationCard_41
    476          			}
    477          				
    478          			if(PlugErrFlg == 1)											//卡错误，等10秒则退出
   \                     ??OperationCard_42: (+1)
   \   000002B4   0x....             LDR.N    R0,??DataTable4_7
   \   000002B6   0x7800             LDRB     R0,[R0, #+0]
   \   000002B8   0x2801             CMP      R0,#+1
   \   000002BA   0xD107             BNE.N    ??OperationCard_43
    479          			{
    480          				if(PlugTime	> 20)
   \   000002BC   0x....             LDR.N    R0,??DataTable4_22
   \   000002BE   0x6800             LDR      R0,[R0, #+0]
   \   000002C0   0x2815             CMP      R0,#+21
   \   000002C2   0xD30B             BCC.N    ??OperationCard_44
    481          				{
    482          					PlugCardLongTime = 1;
   \   000002C4   0x2001             MOVS     R0,#+1
   \   000002C6   0x....             LDR.N    R1,??DataTable4_6
   \   000002C8   0x7008             STRB     R0,[R1, #+0]
    483          					break;
   \   000002CA   0xE00A             B.N      ??OperationCard_40
    484          				}			
    485          			}
    486          			else														////卡，等5分钟则退出
    487          			{
    488          				if(PlugTime	> 90)
   \                     ??OperationCard_43: (+1)
   \   000002CC   0x....             LDR.N    R0,??DataTable4_22
   \   000002CE   0x6800             LDR      R0,[R0, #+0]
   \   000002D0   0x285B             CMP      R0,#+91
   \   000002D2   0xD303             BCC.N    ??OperationCard_44
    489          				{
    490          					PlugCardLongTime = 1;
   \   000002D4   0x2001             MOVS     R0,#+1
   \   000002D6   0x....             LDR.N    R1,??DataTable4_6
   \   000002D8   0x7008             STRB     R0,[R1, #+0]
    491          					break;
   \   000002DA   0xE002             B.N      ??OperationCard_40
    492          				}			
    493          			}
    494          
    495          			NOP();
   \                     ??OperationCard_44: (+1)
   \   000002DC   0x.... 0x....      BL       `NOP`
   \   000002E0   0xE7D1             B.N      ??OperationCard_39
    496          		}
    497          		DelayX10ms(150);												//拔卡推出事等待
   \                     ??OperationCard_40: (+1)
   \   000002E2   0x2096             MOVS     R0,#+150
   \   000002E4   0x.... 0x....      BL       DelayX10ms
    498          
    499          		
    500          		if(PlugErrFlg == 1 && PlugTime > 500)							//插卡错误，退出操作
   \   000002E8   0x....             LDR.N    R0,??DataTable4_7
   \   000002EA   0x7800             LDRB     R0,[R0, #+0]
   \   000002EC   0x2801             CMP      R0,#+1
   \   000002EE   0xD107             BNE.N    ??OperationCard_45
   \   000002F0   0x....             LDR.N    R0,??DataTable4_22
   \   000002F2   0x6800             LDR      R0,[R0, #+0]
   \   000002F4   0xF5B0 0x7FFA      CMP      R0,#+500
   \   000002F8   0xD902             BLS.N    ??OperationCard_45
    501          		{
    502          			DelayX10ms(50);
   \   000002FA   0x2032             MOVS     R0,#+50
   \   000002FC   0x.... 0x....      BL       DelayX10ms
    503          		}
    504          		
    505          		if(ResetFlg == TRUE)											//参数设好后，重起
   \                     ??OperationCard_45: (+1)
   \   00000300   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000302   0x2C01             CMP      R4,#+1
   \   00000304   0xD105             BNE.N    ??OperationCard_46
    506          		{
    507          			ReCalPara(1);												//油尺参数重新计算
   \   00000306   0x2001             MOVS     R0,#+1
   \   00000308   0x.... 0x....      BL       ReCalPara
    508          
    509          			DelayX10ms(20);
   \   0000030C   0x2014             MOVS     R0,#+20
   \   0000030E   0x.... 0x....      BL       DelayX10ms
    510          			
    511          //			ResetSys();													//
    512          		}		
    513          											//清显示缓冲区
    514          		ResumeDisplaySet();												//恢复显示缓冲区
   \                     ??OperationCard_46: (+1)
   \   00000312   0x.... 0x....      BL       ResumeDisplaySet
    515          		
    516          		if(PlugCardLongTime == 1 && PlugErrFlg == 0)
   \   00000316   0x....             LDR.N    R0,??DataTable4_6
   \   00000318   0x7800             LDRB     R0,[R0, #+0]
   \   0000031A   0x2801             CMP      R0,#+1
   \   0000031C   0xD103             BNE.N    ??OperationCard_47
   \   0000031E   0x....             LDR.N    R0,??DataTable4_7
   \   00000320   0x7800             LDRB     R0,[R0, #+0]
   \   00000322   0x2800             CMP      R0,#+0
   \   00000324   0xD001             BEQ.N    ??OperationCard_48
    517          		{
    518          			//OffLed(WRITE_CARD_LED);
    519          			//OffLed(CARD_FULL_LED);	
    520          			//OffLed(CARD_LED);	
    521          		}
    522          		else
    523          		{
    524          			IndicatePullOutCard();
   \                     ??OperationCard_47: (+1)
   \   00000326   0x.... 0x....      BL       IndicatePullOutCard
    525          		}
    526          		
    527          		g_PullCardTime = GetSysTime();
   \                     ??OperationCard_48: (+1)
   \   0000032A   0x.... 0x....      BL       GetSysTime
   \   0000032E   0x....             LDR.N    R1,??DataTable4_24
   \   00000330   0x6008             STR      R0,[R1, #+0]
   \   00000332   0xE011             B.N      ??OperationCard_49
    528          	}
    529          	else
    530          	{
    531          		PlugTime = 0;													//插入次数清零
   \                     ??OperationCard_0: (+1)
   \   00000334   0x2000             MOVS     R0,#+0
   \   00000336   0x....             LDR.N    R1,??DataTable4_22
   \   00000338   0x6008             STR      R0,[R1, #+0]
    532          		PlugErrFlg = 0;
   \   0000033A   0x2000             MOVS     R0,#+0
   \   0000033C   0x....             LDR.N    R1,??DataTable4_7
   \   0000033E   0x7008             STRB     R0,[R1, #+0]
    533          			
    534          		l_CardErrorFlg = NO_ERROR;
   \   00000340   0x2001             MOVS     R0,#+1
   \   00000342   0x....             LDR.N    R1,??DataTable4_25
   \   00000344   0x7008             STRB     R0,[R1, #+0]
    535          		
    536          		PlugCardLongTime = 0;
   \   00000346   0x2000             MOVS     R0,#+0
   \   00000348   0x....             LDR.N    R1,??DataTable4_6
   \   0000034A   0x7008             STRB     R0,[R1, #+0]
    537          		
    538          		OffLed(WRITE_CARD_LED);
   \   0000034C   0x2004             MOVS     R0,#+4
   \   0000034E   0x.... 0x....      BL       OffLed
    539          		OffLed(CARD_FULL_LED);	
   \   00000352   0x2005             MOVS     R0,#+5
   \   00000354   0x.... 0x....      BL       OffLed
    540          	}
    541          }
   \                     ??OperationCard_49: (+1)
   \                     ??OperationCard_3: (+1)
   \   00000358   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .bss, align 4
   \                     ??PlugTime:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??SysTime:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
   \                     ??PlugErrFlg:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     ??PlugCardLongTime:
   \   00000000                      DS8 1
    542          //
    543          ///*
    544          //uint8	SetKeyPressed(void)
    545          //{
    546          //	//return 1;
    547          //	return	(KeyPressed());
    548          //}
    549          //*/
    550          //
    551          //#define		MAX_SET_TIME  20
    552          //extern	float		l_Density;							//密度值
    553          //extern	uint16	GetDensityVal(void);
    554          ////20111024
    555          ////-------------------------------------------------------------------------------------------------
    556          ////函数名称:             void    KeySetDensity(void)     
    557          ////函数功能:             操作IC卡
    558          ////入口参数:             无
    559          ////出口参数:             无
    560          ////--------------------------------------------------------------------------------------------------
    561          //void    KeySetDensity(void)  
    562          //{
    563          ////	uint8	ResetFlg;
    564          //	
    565          ////	ResetFlg = FALSE ;
    566          //
    567          ////  
    568          //	static	stcDensity sDensity;
    569          //
    570          //	uint32	DisplayVal;
    571          //	uint32	KeyDownTime = 0;
    572          //	uint32	SysTime;
    573          //	uint16	Density;
    574          //	uint32	CalDensity;
    575          //	uint16  CrcCheck;
    576          //	
    577          //	DisplayVal = g_DipVal;													//正在显示的油量
    578          //	
    579          //	while(GetPlugFlg() == PLUG_IN_CARD)										//
    580          //	{ 
    581          //		SysTime = GetSysTime();												
    582          //		
    583          //		//SysHoldTast();
    584          //		//while(1)
    585          //		{
    586          //			if(SetKeyPressed())												//按下设置键
    587          //			{
    588          //				if(KeyDownTime == 0)										// 第一次按下设置键
    589          //				{
    590          //					ClaerDisplaySet();										//清显示缓冲区
    591          //					
    592          //					DisplayVal = g_DipVal;
    593          //					
    594          //					DisplaySet(100,1,"%u",DisplayVal);
    595          //				}
    596          //				else
    597          //				{
    598          //					if(KeyDownTime < (MAX_SET_TIME/2))
    599          //					{
    600          //						DisplayVal = g_DipVal + KeyDownTime*10;
    601          //					}
    602          //					else
    603          //					{
    604          //						if(g_DipVal > MAX_SET_TIME*10)						//向负方向循环
    605          //						{
    606          //							DisplayVal = g_DipVal + KeyDownTime*10 - MAX_SET_TIME*10;
    607          //						}		
    608          //						else
    609          //						{
    610          //							DisplayVal = 10*MAX_SET_TIME /2 + KeyDownTime*10 - MAX_SET_TIME*10;
    611          //						}		
    612          //					}
    613          //					
    614          //					ClaerDisplaySet();										//清显示缓冲区
    615          //					DisplaySet(60,1,"%u",DisplayVal);
    616          //				}
    617          //				
    618          //				KeyDownTime = (KeyDownTime+1)%MAX_SET_TIME;					//按键次数加
    619          //				while(SetKeyPressed()){};										//等待按键松开
    620          //				DelayX10ms(20);												//等待一段时间退出	
    621          //				
    622          //				SysTime = GetSysTime();	
    623          //			}
    624          //			else															//未按下或松开按键
    625          //			{
    626          //				//DelayX10ms(10);											//等待一段时间退出	
    627          //			}
    628          //		}
    629          //		
    630          //		if(GetSysTime() - SysTime > 1000)
    631          //		{
    632          //			break;
    633          //		}
    634          //	}
    635          //	
    636          //	
    637          //	if(KeyDownTime != 0)													//准备计算密度
    638          //	{
    639          //		Density = GetDensityVal();											//取密度值
    640          //		
    641          //		//printfcom0("\n \rDisplayVal %u,g_DipVal %u",DisplayVal,g_DipVal);
    642          //
    643          //		if(g_DipVal > 3400)
    644          //		{
    645          //			if(DisplayVal > g_DipVal)
    646          //			{
    647          //				CalDensity = Density -  ((uint32)Density *(DisplayVal - g_DipVal) / (g_DipVal - 3400));
    648          //			}
    649          //			else
    650          //			{
    651          //				CalDensity = Density + ((uint32)Density *(g_DipVal - DisplayVal) / (g_DipVal - 3400));
    652          //			}
    653          //	  	}
    654          //	  	else
    655          //	  	{
    656          //			if(DisplayVal > g_DipVal)
    657          //			{
    658          //				CalDensity = Density -  ((uint32)Density *(DisplayVal - g_DipVal) / (g_DipVal));
    659          //			}
    660          //			else
    661          //			{
    662          //				CalDensity = Density +  ((uint32)Density *(g_DipVal - DisplayVal) / (g_DipVal));
    663          //			}
    664          //	  	}
    665          //	  	
    666          //	  	//printfcom0("\n \rCalDensity %u,Density %u",CalDensity,Density);
    667          //	  	
    668          //	  	if(CalDensity > 770 && CalDensity < 900)							//限值
    669          //	  	{
    670          //	  		sDensity.Density = CalDensity;
    671          //	  	}
    672          //	  	
    673          //		CrcCheck = GetCrc16Check((uint8 *)&sDensity,sizeof(sDensity) - 2);
    674          //		//GetCrc16Check((uint8 *)&sDensity,sizeof(sDensity) - 2);
    675          //		sDensity.CrcCheck = CrcCheck;
    676          //		
    677          //		//if(CrcCheck == sDensity.CrcCheck)									//校验和相等,存密度		
    678          //		//{			
    679          //		//PrintfDebug("\r\n sDensity.Density %d",sDensity.Density );
    680          //		
    681          //		if(StoreDensity((stcDensity *)&sDensity))
    682          //		{
    683          //			//SetSucceedIndicate();	
    684          //		}
    685          //		else
    686          //		{
    687          //			//StoreErrIndicate();	
    688          //		}
    689          //		//}
    690          //		
    691          //		//printfcom0("\r\n l_Density %f",l_Density);
    692          //		
    693          //		l_Density = (float)CalDensity / 1000;
    694          //		
    695          //		//printfcom0("\r\n l_Density %f",l_Density);	
    696          //	}
    697          //	/*	*/
    698          //	ClaerDisplaySet();										//清显示缓冲区
    699          //
    700          //}
    701          ////-------------------------------------------------------------------------------------------------
    702          ////函数名称:             OperationCOM0ModelCard(void)    
    703          ////函数功能:             操作从串口0接受到的数据
    704          ////入口参数:             无
    705          ////出口参数:             无
    706          ////--------------------------------------------------------------------------------------------------
    707          //void    OperationCOM0ModelCard(void)  
    708          //{
    709          ///*
    710          //	uint16	ResetFlg;
    711          //	
    712          //	ClaerDisplaySet();											//清显示缓冲区
    713          //	OffAllLed();												//关所有发光二极管
    714          //	OnLed(RUN_LED,30000,5,5);									//清显示缓冲区		
    715          //	CloseTax2();
    716          //		
    717          //	PrintfDebug("\r\n OperationCard");
    718          //
    719          //	if(ReadCOM0CardFlg((stcCardFlg	*)&l_sCardFlg))					//读IC卡标志页
    720          //	{
    721          //		switch( l_CardType )
    722          //		{
    723          //			case DATA_CARD:	DisplaySet(100,1,"DATA");
    724          //							DataCard((stcCardFlg *)&l_sCardFlg);	
    725          //							break;									
    726          //				
    727          //			case DENSITY_CARD:									//密度卡
    728          //							DisplaySet(150,1,"DENS");						
    729          //							
    730          //							if(DensityCard((stcCardFlg *)&l_sCardFlg))
    731          //							{
    732          //								ResetFlg = TRUE;
    733          //							}		
    734          //							break;				
    735          //			case MODEL_CARD:									//模型卡
    736          //							DisplaySet(150,1,"MODE");						
    737          //							if(COM0ModData())
    738          //							{
    739          //								ResetFlg = TRUE;
    740          //							}		
    741          //							break;				
    742          //			case COM_FIX_CARD:										//时间卡
    743          //							//DisplaySet(100,1,"SETT");						
    744          //							//TimeCard((stcCardFlg *)&l_sCardFlg);		
    745          //							break;	
    746          //			case SET_DATA_CARD:									//置数卡	//还未写入内容
    747          //							DisplaySet(100,1,"SETD");						
    748          //							if(SetDataCard((stcCardFlg *)&l_sCardFlg))
    749          //							{
    750          //								ResetFlg = TRUE;
    751          //							}
    752          //							break;		
    753          //			case HIGHT_CARD:									//高度调整卡
    754          //							DisplaySet(150,1,"HIGT");						
    755          //							if(HightCard((stcCardFlg *)&l_sCardFlg))
    756          //							{
    757          //								ResetFlg = TRUE;
    758          //							}
    759          //							break;															
    760          //			case COPY_CARD:										//数据拷贝卡//还未写入内容
    761          //							DisplaySet(100,1,"COPY");						
    762          //							DataCopyCard((stcCardFlg *)&l_sCardFlg);
    763          //							break;
    764          //			case MODEL_SELECT_CARD:								//模型选择卡
    765          //							DisplaySet(100,1,"SELE");						
    766          //							if(ModelSelectCard((stcCardFlg *)&l_sCardFlg))
    767          //							{
    768          //								ResetFlg = TRUE;
    769          //							} 									
    770          //							break;	
    771          //			case DEBUG_CARD:									//调试卡
    772          //							DisplaySet(100,1,"DEBU");						
    773          //							DebugCard((stcCardFlg *)&l_sCardFlg);									
    774          //							break;
    775          //			case FIX_CARD:										//装车卡
    776          //							DisplaySet(100,1,"FIXC");						
    777          //							if(FixCard((stcCardFlg *)&l_sCardFlg))
    778          //							{
    779          //								ResetFlg = TRUE;
    780          //							}									
    781          //							break;					
    782          //			case COPY_FRAM_CARD:								//铁电复制卡
    783          //							DisplaySet(100,1,"FRAC");						
    784          //							CopyFramCard((stcCardFlg *)&l_sCardFlg);									
    785          //							break;						
    786          //			case DENSITY_CARD + MODEL_CARD:						//密度卡+模型卡
    787          //							DisplaySet(100,1,"DEMO");						
    788          //							
    789          //							if(DensityCard((stcCardFlg *)&l_sCardFlg))
    790          //							{
    791          //								ResetFlg = TRUE;
    792          //							}									
    793          //							
    794          //							if(COM0ModData())
    795          //							{
    796          //								ResetFlg = TRUE;
    797          //							}									
    798          //							break;
    799          //			case DENSITY_CARD + FIX_CARD + MODEL_CARD:			//密度卡+装车卡+模型卡
    800          //							DisplaySet(100,1,"DFMC");						
    801          //							if(DensityCard((stcCardFlg *)&l_sCardFlg))
    802          //							{
    803          //								ResetFlg = TRUE;
    804          //							}
    805          //																
    806          //							if(COM0ModData())
    807          //							{
    808          //								ResetFlg = TRUE;
    809          //							}									
    810          //							
    811          //							if(FixCard((stcCardFlg *)&l_sCardFlg))
    812          //							{
    813          //								ResetFlg = TRUE;
    814          //							}
    815          //							break;
    816          //							
    817          //			case DENSITY_CARD + FIX_CARD + MODEL_CARD + HIGHT_CARD:	//密度卡+装车卡+模型卡+高度卡
    818          //							DisplaySet(100,1,"DFMH");						
    819          //							if(DensityCard((stcCardFlg *)&l_sCardFlg))
    820          //							{
    821          //								ResetFlg = TRUE;
    822          //							}
    823          //																
    824          //							if(COM0ModData())
    825          //							{
    826          //								ResetFlg = TRUE;
    827          //							}
    828          //																
    829          //							if(FixCard((stcCardFlg *)&l_sCardFlg))
    830          //							{
    831          //								ResetFlg = TRUE;
    832          //							}
    833          //																
    834          //							if(HightCard((stcCardFlg *)&l_sCardFlg))
    835          //							{
    836          //								ResetFlg = TRUE;
    837          //							}
    838          //																
    839          //							break;
    840          //			case DENSITY_CARD + FIX_CARD + HIGHT_CARD:				//密度卡+装车卡+高度卡
    841          //							if(DisplaySet(100,1,"DFHC"))
    842          //							{
    843          //								ResetFlg = TRUE;
    844          //							}
    845          //																
    846          //							if(DensityCard((stcCardFlg *)&l_sCardFlg))
    847          //							{
    848          //								ResetFlg = TRUE;
    849          //							}
    850          //																
    851          //							if(FixCard((stcCardFlg *)&l_sCardFlg))
    852          //							{
    853          //								ResetFlg = TRUE;
    854          //							}
    855          //																
    856          //							if(HightCard((stcCardFlg *)&l_sCardFlg))
    857          //							{
    858          //								ResetFlg = TRUE;
    859          //							}									
    860          //							break;									
    861          //			default:	
    862          //							IndicateCardNoDef();	
    863          //		}
    864          //	}	
    865          //	else
    866          //	{
    867          //		DelayX10ms(10);
    868          //		IndicateCardNoSet();
    869          //	}	
    870          //*/		
    871          //}
    872          //
    873          ////-------------------------------------------------------------------------------------------------
    874          ////函数名称:             CardTask(void)    
    875          ////函数功能:             操作IC卡任务
    876          ////入口参数:             无
    877          ////出口参数:             无
    878          ////--------------------------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    879          void    CardTask(void)  
    880          {
   \                     CardTask: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    881          	OperationCard();
   \   00000002   0x.... 0x....      BL       OperationCard
    882          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
    883          //
    884          #define		PLUG_CARD_EVT			61
    885          #define		NU_FINISH_CARD_EVT		62
    886          #define		SET_PARA_EVT			63
    887          #define		READ_DATA_EVT			64
    888          #define		WRITE_FLGA_EVT			65
    889          #define		PLUG_USB_EVT			66
    890          #define		USB_READ_EVT			67
    891          #define		USB_SET_EVT				68
    892          
    893          //
    894          //extern	uint8	GetSetParaFlg(void);
    895          //extern	uint8	GetReadDataFlg(void);
    896          //extern	void	SetReadDataFlgTrue(void);
    897          //extern	uint8	SetParaFlgTrue(void);
    898          //extern	void	ResetPlugFlgEvt(void);
    899          //extern	void	ResetUnFihCardEvtFlg(void);
    900          //extern	uint8	GetWriteFlgErrCardEvtFlg(void);
    901          ////extern	uint8	GetPlugUsbFlg(void);
    902          ////extern	void	SetPlugUsbFlgTrue(void);
    903          ////extern	void	SetUsbSetFlgTrue(void);
    904          //extern	void	SetUsbReadDataFlgTrue(void);
    905          ////extern	uint8	GetUsbSetFlg(void);
    906          //extern	uint8	GetUsbReadDataFlg(void);
    907          //
    908          ////-------------------------------------------------------------------------------
    909          ////函数名称:        	uint8	JudgeCardEvt(void)
    910          ////函数功能:       	判断Flsh事件
    911          ////入口参数:        	无
    912          ////出口参数:      	无
    913          ////-------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    914          uint8	JudgeCardEvt(void)
    915          {
   \                     JudgeCardEvt: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    916          	uint8	EvtType = RIGHT_DATA;
   \   00000002   0x24FF             MOVS     R4,#+255
    917          
    918          	if(GetPlugFlg() == PLUG_IN_CARD)
   \   00000004   0x.... 0x....      BL       GetPlugFlg
   \   00000008   0x2801             CMP      R0,#+1
   \   0000000A   0xD104             BNE.N    ??JudgeCardEvt_0
    919          	{
    920          		EvtType = PLUG_CARD_EVT;
   \   0000000C   0x203D             MOVS     R0,#+61
   \   0000000E   0x0004             MOVS     R4,R0
    921          		ResetPlugFlgEvt();
   \   00000010   0x.... 0x....      BL       ResetPlugFlgEvt
   \   00000014   0xE019             B.N      ??JudgeCardEvt_1
    922          	}
    923          	else if(GetUnFihCardEvtFlg() == ERROR)
   \                     ??JudgeCardEvt_0: (+1)
   \   00000016   0x.... 0x....      BL       GetUnFihCardEvtFlg
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD104             BNE.N    ??JudgeCardEvt_2
    924          	{
    925          		EvtType = NU_FINISH_CARD_EVT;
   \   0000001E   0x203E             MOVS     R0,#+62
   \   00000020   0x0004             MOVS     R4,R0
    926          		ResetUnFihCardEvtFlg();
   \   00000022   0x.... 0x....      BL       ResetUnFihCardEvtFlg
   \   00000026   0xE010             B.N      ??JudgeCardEvt_1
    927          	}
    928          	else if(GetSetParaFlg() == ERROR)   
   \                     ??JudgeCardEvt_2: (+1)
   \   00000028   0x.... 0x....      BL       GetSetParaFlg
   \   0000002C   0x2800             CMP      R0,#+0
   \   0000002E   0xD104             BNE.N    ??JudgeCardEvt_3
    929          	{
    930          		EvtType = SET_PARA_EVT;
   \   00000030   0x203F             MOVS     R0,#+63
   \   00000032   0x0004             MOVS     R4,R0
    931          		SetParaFlgTrue();
   \   00000034   0x.... 0x....      BL       SetParaFlgTrue
   \   00000038   0xE007             B.N      ??JudgeCardEvt_1
    932          	}	
    933          	else if(GetReadDataFlg() == ERROR)
   \                     ??JudgeCardEvt_3: (+1)
   \   0000003A   0x.... 0x....      BL       GetReadDataFlg
   \   0000003E   0x2800             CMP      R0,#+0
   \   00000040   0xD103             BNE.N    ??JudgeCardEvt_1
    934          	{
    935          		EvtType = READ_DATA_EVT;
   \   00000042   0x2040             MOVS     R0,#+64
   \   00000044   0x0004             MOVS     R4,R0
    936          		SetReadDataFlgTrue();
   \   00000046   0x.... 0x....      BL       SetReadDataFlgTrue
    937          	}		
    938          //	else if(GetWriteFlgErrCardEvtFlg() == ERROR)
    939          //	{
    940          //		EvtType = WRITE_FLGA_EVT;
    941          //		SetReadDataFlgTrue();
    942          //	}
    943          ////	else if(GetPlugUsbFlg() == ERROR)
    944          ////	{
    945          ////		EvtType = PLUG_USB_EVT;
    946          ////		SetPlugUsbFlgTrue();
    947          ////	}
    948          ////	else if(GetUsbSetFlg() == ERROR)
    949          ////	{
    950          ////		EvtType = USB_SET_EVT;
    951          ////		SetUsbSetFlgTrue();
    952          ////	}
    953          ////	else if(GetUsbReadDataFlg() == ERROR)
    954          ////	{
    955          ////		EvtType = USB_READ_EVT;
    956          ////		SetUsbReadDataFlgTrue();
    957          ////	}
    958          //	
    959          	return	EvtType;
   \                     ??JudgeCardEvt_1: (+1)
   \   0000004A   0x0020             MOVS     R0,R4
   \   0000004C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004E   0xBD10             POP      {R4,PC}          ;; return
    960          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     l_CardType

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     l_FlgZoneErrEvent

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x........         DC32     ??PlugCardLongTime

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x........         DC32     ??PlugErrFlg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x........         DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \   00000000   0x........         DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_12:
   \   00000000   0x........         DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_13:
   \   00000000   0x........         DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_14:
   \   00000000   0x........         DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_15:
   \   00000000   0x........         DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_16:
   \   00000000   0x........         DC32     ?_12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_17:
   \   00000000   0x........         DC32     ?_13

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_18:
   \   00000000   0x........         DC32     ?_14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_19:
   \   00000000   0x........         DC32     ?_15

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_20:
   \   00000000   0x........         DC32     ?_16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_21:
   \   00000000   0x........         DC32     ?_17

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_22:
   \   00000000   0x........         DC32     ??PlugTime

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_23:
   \   00000000   0x........         DC32     ??SysTime

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_24:
   \   00000000   0x........         DC32     g_PullCardTime

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_25:
   \   00000000   0x........         DC32     l_CardErrorFlg

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x4E 0x43          DC8 "NCTP"
   \              0x54 0x50    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x20 0x20          DC8 "    "
   \              0x20 0x20    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x4E 0x53          DC8 "NSET"
   \              0x45 0x54    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x4E 0x44          DC8 "NDEF"
   \              0x45 0x46    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x44 0x41          DC8 "DATA"
   \              0x54 0x41    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x44 0x45          DC8 "DENS"
   \              0x4E 0x53    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x4D 0x4F          DC8 "MODE"
   \              0x44 0x45    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_7:
   \   00000000   0x53 0x45          DC8 "SETD"
   \              0x54 0x44    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_8:
   \   00000000   0x48 0x49          DC8 "HIGT"
   \              0x47 0x54    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_9:
   \   00000000   0x43 0x4F          DC8 "COPY"
   \              0x50 0x59    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_10:
   \   00000000   0x53 0x45          DC8 "SELE"
   \              0x4C 0x45    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_11:
   \   00000000   0x46 0x49          DC8 "FIXC"
   \              0x58 0x43    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_12:
   \   00000000   0x45 0x58          DC8 "EXPD"
   \              0x50 0x44    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_13:
   \   00000000   0x44 0x44          DC8 "DDEN"
   \              0x45 0x4E    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_14:
   \   00000000   0x44 0x44          DC8 "DDHN"
   \              0x48 0x4E    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_15:
   \   00000000   0x44 0x46          DC8 "DFMC"
   \              0x4D 0x43    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_16:
   \   00000000   0x44 0x46          DC8 "DFMH"
   \              0x4D 0x48    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_17:
   \   00000000   0x44 0x46          DC8 "DFHC"
   \              0x48 0x43    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    961          ////

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   CardTask
         8   -> OperationCard
       8   IndicateCardNoDef
         8   -> ClaerDisplaySetWithoutStore
         8   -> DisplaySet
         8   -> OnLed
       8   IndicateCardNoSet
         8   -> ClaerDisplaySetWithoutStore
         8   -> DisplaySet
         8   -> OnLed
       8   IndicateCardTypErr
         8   -> ClaerDisplaySetWithoutStore
         8   -> DisplaySet
         8   -> OnLed
       8   IndicatePullOutCard
         8   -> OffLed
       8   JudgeCardEvt
         8   -> GetPlugFlg
         8   -> GetReadDataFlg
         8   -> GetSetParaFlg
         8   -> GetUnFihCardEvtFlg
         8   -> ResetPlugFlgEvt
         8   -> ResetUnFihCardEvtFlg
         8   -> SetParaFlgTrue
         8   -> SetReadDataFlgTrue
       8   OperationCard
         8   -> ClaerDisplaySet
         8   -> DataCard
         8   -> DelayX10ms
         8   -> DenDataCard
         8   -> DensityCard
         8   -> DisplaySet
         8   -> ExpandCard
         8   -> FixCard
         8   -> GetPlugFlg
         8   -> GetSysTime
         8   -> HightCard
         8   -> IndicateCardNoDef
         8   -> IndicateCardNoSet
         8   -> IndicateCardTypErr
         8   -> IndicatePullOutCard
         8   -> ModCard
         8   -> ModelSelectCard
         8   -> NOP
         8   -> OffAllLed
         8   -> OffLed
         8   -> OnLed
         8   -> PlugICCard
         8   -> ReCalPara
         8   -> ReadCardFlg
         8   -> ResumeDisplaySet
         8   -> SetDataCard
      16   ReadCardFlg
        16   -> GetCrc16Check
        16   -> ReadCard
       0   WriteCardFlg


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_12
       4  ??DataTable4_13
       4  ??DataTable4_14
       4  ??DataTable4_15
       4  ??DataTable4_16
       4  ??DataTable4_17
       4  ??DataTable4_18
       4  ??DataTable4_19
       4  ??DataTable4_2
       4  ??DataTable4_20
       4  ??DataTable4_21
       4  ??DataTable4_22
       4  ??DataTable4_23
       4  ??DataTable4_24
       4  ??DataTable4_25
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
       8  ?_0
       8  ?_1
       8  ?_10
       8  ?_11
       8  ?_12
       8  ?_13
       8  ?_14
       8  ?_15
       8  ?_16
       8  ?_17
       8  ?_2
       8  ?_3
       8  ?_4
       8  ?_5
       8  ?_6
       8  ?_7
       8  ?_8
       8  ?_9
       8  CardTask
      50  IndicateCardNoDef
      50  IndicateCardNoSet
      50  IndicateCardTypErr
      22  IndicatePullOutCard
      80  JudgeCardEvt
     858  OperationCard
       1  PlugCardLongTime
       1  PlugErrFlg
       4  PlugTime
      98  ReadCardFlg
       4  SysTime
       2  WriteCardFlg
       2  l_CardType
       1  l_FlgZoneErrEvent

 
    13 bytes in section .bss
   144 bytes in section .rodata
 1 322 bytes in section .text
 
 1 322 bytes of CODE  memory
   144 bytes of CONST memory
    13 bytes of DATA  memory

Errors: none
Warnings: 11
