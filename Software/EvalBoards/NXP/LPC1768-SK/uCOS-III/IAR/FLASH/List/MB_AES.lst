###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       10/Aug/2017  10:56:48
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  F:\iar\NC136B-310 统计模块\Software\uC-MB\Source\MB_AES.C
#    Command line =  
#        "F:\iar\NC136B-310 统计模块\Software\uC-MB\Source\MB_AES.C" -lCN
#        "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List"
#        --diag_suppress Pa050 -o "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\" -I
#        "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\"
#        -I "F:\iar\NC136B-310 统计模块\Application\Library\csnr_package_deal\"
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\MB_AES.lst
#    Object file  =  
#        F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\MB_AES.o
#
###############################################################################

F:\iar\NC136B-310 统计模块\Software\uC-MB\Source\MB_AES.C
      1          #include <includes.h>
      2          #include <global.h>
      3          #include <aes.h>
      4          
      5          #if MB_AES_EN == DEF_ENABLED
      6          static INT8U       mbszIvec[] = {0X12, 0x34, 0x56, 0x78,0X87, 0x65, 0x56, 0x78,
      7                                           0x87, 0x65, 0x43, 0x21,0x12, 0x34, 0x43, 0x21};
      8          static AES_KEY     mbaesKey;
      9          static INT8U       mbuserIvec[16];
     10          #endif
     11          /*******************************************************************************
     12           * 名    称： MB_AESCbcDecrypt()
     13           * 功    能： 接收数据加密码
     14           * 入口参数： buf 输入接收缓冲区,len 输入要加密的缓冲区长度
     15           * 出口参数： 解密后的长度
     16           * 作　 　者： 无名沈
     17           * 创建日期： 2014-03-28
     18           * 修    改：
     19           * 修改日期：
     20           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     21          INT16U MB_AESCbcDecrypt(INT8U *buf, INT16U len)
     22          {
   \                     MB_AESCbcDecrypt: (+1)
   \   00000000   0x0002             MOVS     R2,R0
   \   00000002   0x0008             MOVS     R0,R1
     23          #if MB_AES_EN == DEF_ENABLED    
     24              memset(mbaesKey.rd_key, 0, sizeof(mbaesKey.rd_key));// 清零扩展密钥
     25              AES_SetDecryptKey(  "scw->ll->zs->scw",         // 密钥
     26                                  128, 		                // 128位方式，还有192和256位方式
     27                                 &mbaesKey);			        // 扩展密钥
     28              /***********************************************
     29              * 描述： 设置密钥向量
     30              */
     31              memcpy((INT8U*)mbuserIvec,(INT8U*)&mbszIvec[0], 16);// 向量
     32              /***********************************************
     33              * 描述： 更改密钥向量（为增加安全性，可使向量自动与发送端进行同步）
     34              *
     35              if (++mbszIvec[6] > 10)
     36                mbszIvec[6]  = 0;
     37              *//***********************************************
     38              * 描述： 检查数据长度是否为16的整数倍
     39              */
     40              if ( (len & 0x0f) != 0  )
     41                return (DEF_FALSE);
     42              
     43              AES_CbcEnOrDecrypt((INT8U*)buf,                 // 待解密缓冲区
     44                                 (INT8U*)buf,                 // 解密后的缓冲区
     45                                  len,				        // 缓冲区长度
     46                                 (AES_KEY*)&mbaesKey, 		// 扩展密钥
     47                                 (INT8U*)mbuserIvec, 		    // 向量
     48                                  AES_DECRYPT);		        // 加密
     49              /***********************************************
     50              * 描述： 检查最后一个字节是否为1，为1则表示填充位字节数为1
     51              */
     52              if ( buf[len-1] == 1) {                         // 如果最后字节为1
     53                len--;                                        // 有效数据数-1
     54              /***********************************************
     55              * 描述： 检查>1的填充字节数
     56              */
     57              } else if ( buf[len-1] < 16 && buf[len-1] > 1) {
     58                INT8U i   = buf[len-1];                       // 获取填充值
     59                INT8U *p  = &buf[len-i];                      // 指向开始填充的字节地址
     60                for (i-=1;i > 0;i--,p++) {
     61                  if ( *p != *(p+1) )                         // 如果相邻两个字节的值不相等
     62                    break;                                    // 说明不是填充值，直接跳出
     63                }
     64                if (i==0)                                     // 如果较完成，说明是填充字节
     65                  len -= buf[len-1];                          // 获取有效数据帧字节数
     66              }
     67          #endif
     68              return      len;                                // 重新赋值给接收计数器
   \   00000004   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000006   0x4770             BX       LR               ;; return
     69          }
     70          /*******************************************************************************
     71           * 名    称： MB_AESCbcEncrypt()
     72           * 功    能： 发送数据加密码
     73           * 入口参数： buf 输入发送缓冲区,len 输入要加密的缓冲区长度
     74           * 出口参数： 加密后的长度
     75           * 作　 　者： 无名沈
     76           * 创建日期： 2014-03-28
     77           * 修    改：
     78           * 修改日期：
     79           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     80          INT16U MB_AESCbcEncrypt(INT8U *buf, INT16U len)
     81          {
   \                     MB_AESCbcEncrypt: (+1)
   \   00000000   0x0002             MOVS     R2,R0
   \   00000002   0x0008             MOVS     R0,R1
     82          #if MB_AES_EN == DEF_ENABLED
     83              INT8U       temp;
     84              
     85              memset(mbaesKey.rd_key, 0, sizeof(mbaesKey.rd_key));// 清零扩展密钥
     86              AES_SetEncryptKey(  "scw->ll->zs->scw",         // 密钥
     87                                  128, 		                // 128位方式，还有192和256位方式
     88                                 &mbaesKey);			        // 扩展密钥
     89              /***********************************************
     90              * 描述： 设置密钥向量
     91              */
     92              memcpy((INT8U*)mbuserIvec,(INT8U*)&mbszIvec[0], 16);// 向量
     93              temp    = len & 0x0f;
     94              if ( temp != 0) {
     95                temp    = 16 - temp;
     96                memset((INT8U*)&buf[len],temp,temp);
     97                len = len + temp;
     98              }
     99              AES_CbcEnOrDecrypt((INT8U*)&buf[0],             // 待解密缓冲区
    100                                 (INT8U*)&buf[0],             // 解密后的缓冲区
    101                                  len,	                    // 缓冲区长度
    102                                 (AES_KEY*)&mbaesKey, 		// 扩展密钥
    103                                 (INT8U*)mbuserIvec, 		    // 向量
    104                                  AES_ENCRYPT);		        // 加密
    105          #endif
    106              return len;
   \   00000004   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000006   0x4770             BX       LR               ;; return
    107          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   MB_AESCbcDecrypt
       0   MB_AESCbcEncrypt


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       8  MB_AESCbcDecrypt
       8  MB_AESCbcEncrypt

 
 16 bytes in section .text
 
 16 bytes of CODE memory

Errors: none
Warnings: none
