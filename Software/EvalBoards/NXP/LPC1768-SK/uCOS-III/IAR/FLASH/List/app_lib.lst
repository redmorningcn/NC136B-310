###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       09/Oct/2017  10:56:41
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  F:\iar\NC136B-310统计模块\Software\APP\User\app_lib.c
#    Command line =  
#        F:\iar\NC136B-310统计模块\Software\APP\User\app_lib.c -lCN
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List
#        --diag_suppress Pa050 -o
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\csnr_package_deal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\tax\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\app_lib.lst
#    Object file  =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\app_lib.o
#
###############################################################################

F:\iar\NC136B-310统计模块\Software\APP\User\app_lib.c
      1          /*******************************************************************************
      2           *   Filename:       app_lib.c
      3           *   Revised:        All copyrights reserved to Wuming Shen.
      4           *   Date:           2014-07-05
      5           *   Revision:       v1.0
      6           *   Writer:	     Wuming Shen.
      7           *
      8           *   Description:    双击选中 wdt 按 Ctrl + H, 钩选 Match the case, Replace with
      9           *                   输入您要的名字，点击 Replace All
     10           *                   双击选中 Wdt 按 Ctrl + H, 钩选 Match the case, Replace with
     11           *                   输入您要的名字，点击 Replace All
     12           *                   双击选中 WDT 按 Ctrl + H, 钩选 Match the case, Replace with
     13           *                   输入您要的名字，点击 Replace All
     14           *                   在 app_cfg.h 中指定任务的优先级 和 任务堆栈大小
     15           *
     16           *   Notes:
     17           *					QQ:276193028
     18           *     				E-mail:shenchangwei945@163.com
     19           *
     20           *******************************************************************************/
     21          
     22          /*******************************************************************************
     23           * INCLUDES
     24           */
     25          #define  SNL_APP_SOURCE
     26          #include <app.h>
     27          #include <app_lib.h>
     28          #include <app_ctrl.h>
     29          #include <os_cfg.h>
     30          
     31          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     32          const  CPU_CHAR  *app_lib__c = "$Id: $";
     33          #endif
     34          
     35          #define APP_TEMP_EN     DEF_ENABLED
     36          #if APP_TEMP_EN == DEF_ENABLED
     37          /*******************************************************************************
     38           * CONSTANTS
     39           */
     40          #define CYCLE_TIME_TICKS            (OS_TICKS_PER_SEC * 1)
     41          
     42          /*******************************************************************************
     43           * MACROS
     44           */
     45          
     46          /*******************************************************************************
     47           * TYPEDEFS
     48           */
     49               
     50          /*******************************************************************************
     51           * LOCAL VARIABLES
     52           */
     53          /***********************************************
     54          * 描述： NTC线性表
     55          */
     56          
     57          /*******************************************************************************
     58           * GLOBAL VARIABLES
     59           */
     60          //extern StrCtrlDCB              Ctrl;
     61          //UnionCtrlPara   EepWrBuf,EepRdBuf;
     62          
     63          /*******************************************************************************
     64           * LOCAL FUNCTIONS
     65           */
     66          
     67          /*******************************************************************************
     68           * GLOBAL FUNCTIONS
     69           */
     70          
     71          /*******************************************************************************
     72           * EXTERN VARIABLES
     73           */
     74          
     75           /*******************************************************************************
     76           * EXTERN FUNCTIONS
     77           */
     78          
     79          
     80          /*******************************************************************************
     81           * 				                    延时函数                                   *
     82           *******************************************************************************/
     83          /*******************************************************************************
     84          * 名    称： Delay_Nus()
     85          * 功    能： 延时大概1us
     86          * 入口参数： dly		延时参数，值越大，延时越久
     87          * 出口参数： 无
     88          * 作　 　者： 无名沈
     89          * 创建日期： 2009-01-03
     90          * 修    改：
     91          * 修改日期：
     92          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     93          OPTIMIZE_NONE void  Delay_Nus( INT32U  dly )
     94          {
     95              /***********************************************
     96              * 描述：定时器初始化
     97              *       72000000次循环  = 6.9999999583333333333333333333333秒
     98              *       一次循环 = 6.9999999583333333333333333333333 / 72000000
     99              *       = 97.222221643518518518518518518519 ns
    100              *       ~= 0.1 us
    101              *       延时1us  dly  = 9
    102              *       dly = 0时，循环一次
    103              *
    104              while(dly--);
    105              *//***********************************************
    106              * 描述：定时器初始化
    107              *       1000000次循环  = 1027.7778611111111111111111111111ms
    108              *       平均一次循环 = 1.02777786111111111111111111111us
    109              *       dly = 1时，= 1.1111111111111111111111111111111us
    110              *       dly = 2时  = 2.1388888888888888888888888888889us
    111              *       dly 每增加1 增加-1.0277777777777777777777777777778us
    112              */
    113              INT32U  i;
    114          
    115              while(dly--) {
   \                     Delay_Nus: (+1)
   \                     ??Delay_Nus_0: (+1)
   \   00000000   0x0002             MOVS     R2,R0
   \   00000002   0x1E50             SUBS     R0,R2,#+1
   \   00000004   0x2A00             CMP      R2,#+0
   \   00000006   0xD005             BEQ.N    ??Delay_Nus_1
    116                  for(i=0; i<10; i++);             // clk = 72000000 1027.7778611111111111111111111111
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0x0011             MOVS     R1,R2
   \                     ??Delay_Nus_2: (+1)
   \   0000000C   0x290A             CMP      R1,#+10
   \   0000000E   0xD2F7             BCS.N    ??Delay_Nus_0
   \   00000010   0x1C49             ADDS     R1,R1,#+1
   \   00000012   0xE7FB             B.N      ??Delay_Nus_2
    117              }
    118          }
   \                     ??Delay_Nus_1: (+1)
   \   00000014   0x4770             BX       LR               ;; return
    119          
    120          /*******************************************************************************
    121          * 名    称： Delay_Nms()
    122          * 功    能： 延时大概1ms
    123          * 入口参数： dly		延时参数，值越大，延时越久
    124          * 出口参数： 无
    125          * 作　 　者： 无名沈
    126          * 创建日期： 2009-01-03
    127          * 修    改：
    128          * 修改日期：
    129          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    130          OPTIMIZE_NONE void  Delay_Nms( INT32U  dly )
    131          {
   \                     Delay_Nms: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
    132          #if UCOS_II_EN > 0
    133              OSTimeDly(dly);
    134          #else
    135              CPU_INT32U  hclk_freq;
    136              CPU_INT32U  cnts;
    137              INT32U      i;
    138          
    139              
    140              //BSP_OS_TimeDlyMs(dly);
    141              //return;
    142              hclk_freq   = CSP_PM_CPU_ClkFreqGet();            // hclk_freq = 72000000时dly 1000 接近1秒
   \   00000004   0x.... 0x....      BL       CSP_PM_CPU_ClkFreqGet
   \   00000008   0x0005             MOVS     R5,R0
    143              cnts        = hclk_freq / 9000;
   \   0000000A   0xF242 0x3028      MOVW     R0,#+9000
   \   0000000E   0xFBB5 0xF0F0      UDIV     R0,R5,R0
   \   00000012   0x0006             MOVS     R6,R0
    144              //WdtReset();
    145          
    146              for( ; dly > 0; dly-- ) {
   \                     ??Delay_Nms_0: (+1)
   \   00000014   0x2C00             CMP      R4,#+0
   \   00000016   0xD007             BEQ.N    ??Delay_Nms_1
    147                  for(i=0; i<cnts; i++);
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x0007             MOVS     R7,R0
   \                     ??Delay_Nms_2: (+1)
   \   0000001C   0x42B7             CMP      R7,R6
   \   0000001E   0xD201             BCS.N    ??Delay_Nms_3
   \   00000020   0x1C7F             ADDS     R7,R7,#+1
   \   00000022   0xE7FB             B.N      ??Delay_Nms_2
    148              }
   \                     ??Delay_Nms_3: (+1)
   \   00000024   0x1E64             SUBS     R4,R4,#+1
   \   00000026   0xE7F5             B.N      ??Delay_Nms_0
    149          #endif
    150          }
   \                     ??Delay_Nms_1: (+1)
   \   00000028   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    151          
    152          /*******************************************************************************
    153          * 名    称：Delay_Ns()
    154          * 功    能：延时大概1s
    155          * 入口参数：dly		延时参数，值越大，延时越久
    156          * 出口参数：无
    157          * 作　 　者：无名沈
    158          * 创建日期：2009-01-03
    159          * 修    改：
    160          * 修改日期：
    161          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    162          OPTIMIZE_NONE void  Delay_Ns( INT32U  dly )
    163          {
   \                     Delay_Ns: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    164          #if UCOS_II_EN > 0
    165              OSTimeDlyHMSM(dly/3600,dly/60%60,dly%3600,0);
    166          #else
    167              for( ; dly > 0; dly--) {
   \                     ??Delay_Ns_0: (+1)
   \   00000004   0x2C00             CMP      R4,#+0
   \   00000006   0xD005             BEQ.N    ??Delay_Ns_1
    168                  //WdtReset();
    169                  Delay_Nms( 950 );
   \   00000008   0xF240 0x30B6      MOVW     R0,#+950
   \   0000000C   0x.... 0x....      BL       Delay_Nms
    170              }
   \   00000010   0x1E64             SUBS     R4,R4,#+1
   \   00000012   0xE7F7             B.N      ??Delay_Ns_0
    171          #endif
    172          }
   \                     ??Delay_Ns_1: (+1)
   \   00000014   0xBD10             POP      {R4,PC}          ;; return
    173          
    174          /*******************************************************************************
    175           * 				                    end of file                                *
    176           *******************************************************************************/
    177          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   Delay_Nms
        24   -> CSP_PM_CPU_ClkFreqGet
       8   Delay_Ns
         8   -> Delay_Nms
       0   Delay_Nus


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      42  Delay_Nms
      22  Delay_Ns
      22  Delay_Nus

 
 86 bytes in section .text
 
 86 bytes of CODE memory

Errors: none
Warnings: none
