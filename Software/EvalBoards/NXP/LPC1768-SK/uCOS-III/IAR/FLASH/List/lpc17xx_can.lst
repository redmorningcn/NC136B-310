###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       10/Aug/2017  10:56:47
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC136B-310 统计模块\Software\CSB\source\lpc17xx_can.c
#    Command line =  
#        "F:\iar\NC136B-310 统计模块\Software\CSB\source\lpc17xx_can.c" -lCN
#        "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List"
#        --diag_suppress Pa050 -o "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\" -I
#        "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\"
#        -I "F:\iar\NC136B-310 统计模块\Application\Library\csnr_package_deal\"
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\lpc17xx_can.lst
#    Object file  =  
#        F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\lpc17xx_can.o
#
###############################################################################

F:\iar\NC136B-310 统计模块\Software\CSB\source\lpc17xx_can.c
      1          /**********************************************************************
      2          * $Id$		lpc17xx_can.c				2011-03-09
      3          *//**
      4          * @file		lpc17xx_can.c
      5          * @brief	Contains all functions support for CAN firmware library on LPC17xx
      6          * @version	3.3
      7          * @date		09. March. 2011
      8          * @author	NXP MCU SW Application Team
      9          *
     10          * Copyright(C) 2011, NXP Semiconductor
     11          * All rights reserved.
     12          *
     13          ***********************************************************************
     14          * Software that is described herein is for illustrative purposes only
     15          * which provides customers with programming information regarding the
     16          * products. This software is supplied "AS IS" without any warranties.
     17          * NXP Semiconductors assumes no responsibility or liability for the
     18          * use of the software, conveys no license or title under any patent,
     19          * copyright, or mask work right to the product. NXP Semiconductors
     20          * reserves the right to make changes in the software without
     21          * notification. NXP Semiconductors also make no representation or
     22          * warranty that such application will be suitable for the specified
     23          * use without further testing or modification.
     24          * Permission to use, copy, modify, and distribute this software and its
     25          * documentation is hereby granted, under NXP Semiconductors'
     26          * relevant copyright in the software, without fee, provided that it
     27          * is used in conjunction with NXP Semiconductors microcontrollers.  This
     28          * copyright, permission, and disclaimer notice must appear in all copies of
     29          * this code.
     30          **********************************************************************/
     31          
     32          /* Peripheral group ----------------------------------------------------------- */
     33          /** @addtogroup CAN
     34           * @{
     35           */
     36          
     37          /* Includes ------------------------------------------------------------------- */
     38          #include "lpc17xx_can.h"
     39          #include "lpc17xx_clkpwr.h"
     40          
     41          /* If this source file built with example, the LPC17xx FW library configuration
     42           * file in each example directory ("lpc17xx_libcfg.h") must be included,
     43           * otherwise the default FW library configuration file must be included instead
     44           */
     45          #ifdef __BUILD_WITH_EXAMPLE__
     46          #include "lpc17xx_libcfg.h"
     47          #else
     48          #include "lpc17xx_libcfg_default.h"
     49          #endif /* __BUILD_WITH_EXAMPLE__ */
     50          
     51          
     52          #ifdef _CAN
     53          
     54          /* Private Variables ---------------------------------------------------------- */
     55          /** @defgroup CAN_Private_Variables CAN Private Variables
     56           * @{
     57           */
     58          

   \                                 In section .bss, align 1
     59          FunctionalState FULLCAN_ENABLE;
   \                     FULLCAN_ENABLE:
   \   00000000                      DS8 1
     60          
     61          
     62          /* Counts number of filters (CAN message objects) used */

   \                                 In section .bss, align 2
     63          uint16_t CANAF_FullCAN_cnt = 0;
   \                     CANAF_FullCAN_cnt:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     64          uint16_t CANAF_std_cnt = 0;
   \                     CANAF_std_cnt:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     65          uint16_t CANAF_gstd_cnt = 0;
   \                     CANAF_gstd_cnt:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     66          uint16_t CANAF_ext_cnt = 0;
   \                     CANAF_ext_cnt:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     67          uint16_t CANAF_gext_cnt = 0;
   \                     CANAF_gext_cnt:
   \   00000000                      DS8 2
     68          
     69          /* End of Private Variables ----------------------------------------------------*/
     70          /**
     71           * @}
     72           */
     73          
     74          /* Private Variables ---------------------------------------------------------- */
     75          static void can_SetBaudrate (LPC_CAN_TypeDef *CANx, uint32_t baudrate);
     76          
     77          /*********************************************************************//**
     78           * @brief 		Setting CAN baud rate (bps)
     79           * @param[in] 	CANx point to LPC_CAN_TypeDef object, should be:
     80           * 				- LPC_CAN1: CAN1 peripheral
     81           * 				- LPC_CAN2: CAN2 peripheral
     82           * @param[in]	baudrate: is the baud rate value will be set
     83           * @return 		None
     84           ***********************************************************************/

   \                                 In section .text, align 2, keep-with-next
     85          static void can_SetBaudrate (LPC_CAN_TypeDef *CANx, uint32_t baudrate)
     86          {
   \                     can_SetBaudrate: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
     87          	uint32_t result = 0;
   \   00000008   0x2600             MOVS     R6,#+0
     88          	uint8_t NT, TSEG1, TSEG2, BRFail;
     89          	uint32_t CANPclk = 0;
   \   0000000A   0xF05F 0x0900      MOVS     R9,#+0
     90          	uint32_t BRP;
     91          	CHECK_PARAM(PARAM_CANx(CANx));
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x40044000
   \   00000012   0x4284             CMP      R4,R0
   \   00000014   0xD008             BEQ.N    ??can_SetBaudrate_0
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable3_1  ;; 0x40048000
   \   0000001A   0x4284             CMP      R4,R0
   \   0000001C   0xD004             BEQ.N    ??can_SetBaudrate_0
   \   0000001E   0x215B             MOVS     R1,#+91
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   00000024   0x.... 0x....      BL       check_failed
     92          
     93          	if (CANx == LPC_CAN1)
   \                     ??can_SetBaudrate_0: (+1)
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x40044000
   \   0000002C   0x4284             CMP      R4,R0
   \   0000002E   0xD104             BNE.N    ??can_SetBaudrate_1
     94          	{
     95          		CANPclk = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_CAN1);
   \   00000030   0x201A             MOVS     R0,#+26
   \   00000032   0x.... 0x....      BL       CLKPWR_GetPCLK
   \   00000036   0x4681             MOV      R9,R0
   \   00000038   0xE003             B.N      ??can_SetBaudrate_2
     96          	}
     97          	else
     98          	{
     99          		CANPclk = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_CAN2);
   \                     ??can_SetBaudrate_1: (+1)
   \   0000003A   0x201C             MOVS     R0,#+28
   \   0000003C   0x.... 0x....      BL       CLKPWR_GetPCLK
   \   00000040   0x4681             MOV      R9,R0
    100          	}
    101          	result = CANPclk / baudrate;
   \                     ??can_SetBaudrate_2: (+1)
   \   00000042   0xFBB9 0xF0F5      UDIV     R0,R9,R5
   \   00000046   0x0006             MOVS     R6,R0
    102          	/* Calculate suitable nominal time value
    103          	 * NT (nominal time) = (TSEG1 + TSEG2 + 3)
    104          	 * NT <= 24
    105          	 * TSEG1 >= 2*TSEG2
    106          	 */
    107          	BRFail = 1;
   \   00000048   0x2001             MOVS     R0,#+1
   \   0000004A   0x4680             MOV      R8,R0
    108          	for(NT=24;NT>0;NT=NT-2)
   \   0000004C   0x2018             MOVS     R0,#+24
   \   0000004E   0x4683             MOV      R11,R0
   \                     ??can_SetBaudrate_3: (+1)
   \   00000050   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   00000054   0xF1BB 0x0F00      CMP      R11,#+0
   \   00000058   0xD026             BEQ.N    ??can_SetBaudrate_4
    109          	{
    110          		if ((result%NT)==0)
   \   0000005A   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   0000005E   0xFBB6 0xF0FB      UDIV     R0,R6,R11
   \   00000062   0xFB0B 0x6010      MLS      R0,R11,R0,R6
   \   00000066   0x2800             CMP      R0,#+0
   \   00000068   0xD11B             BNE.N    ??can_SetBaudrate_5
    111          		{
    112          			BRP = result / NT - 1;
   \   0000006A   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   0000006E   0xFBB6 0xF0FB      UDIV     R0,R6,R11
   \   00000072   0x1E40             SUBS     R0,R0,#+1
   \   00000074   0x4682             MOV      R10,R0
    113          			NT--;
   \   00000076   0xF1BB 0x0B01      SUBS     R11,R11,#+1
    114          			TSEG2 = (NT/3) - 1;
   \   0000007A   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   0000007E   0x2003             MOVS     R0,#+3
   \   00000080   0xFB9B 0xF0F0      SDIV     R0,R11,R0
   \   00000084   0x1E40             SUBS     R0,R0,#+1
   \   00000086   0x0007             MOVS     R7,R0
    115          			TSEG1 = NT -(NT/3) - 1;
   \   00000088   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   0000008C   0x2003             MOVS     R0,#+3
   \   0000008E   0xFB9B 0xF0F0      SDIV     R0,R11,R0
   \   00000092   0xEBBB 0x0000      SUBS     R0,R11,R0
   \   00000096   0x1E40             SUBS     R0,R0,#+1
   \   00000098   0xF88D 0x0000      STRB     R0,[SP, #+0]
    116          			BRFail = 0;
   \   0000009C   0x2000             MOVS     R0,#+0
   \   0000009E   0x4680             MOV      R8,R0
    117          			break;
   \   000000A0   0xE002             B.N      ??can_SetBaudrate_4
    118          		}
    119          	}
   \                     ??can_SetBaudrate_5: (+1)
   \   000000A2   0xF1BB 0x0B02      SUBS     R11,R11,#+2
   \   000000A6   0xE7D3             B.N      ??can_SetBaudrate_3
    120          	if(BRFail)
   \                     ??can_SetBaudrate_4: (+1)
   \   000000A8   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000000AC   0xF1B8 0x0F00      CMP      R8,#+0
   \   000000B0   0xD000             BEQ.N    ??can_SetBaudrate_6
    121          		while(1); // Failed to calculate exact CAN baud rate
   \                     ??can_SetBaudrate_7: (+1)
   \   000000B2   0xE7FE             B.N      ??can_SetBaudrate_7
    122          	/* Enter reset mode */
    123          	CANx->MOD = 0x01;
   \                     ??can_SetBaudrate_6: (+1)
   \   000000B4   0x2001             MOVS     R0,#+1
   \   000000B6   0x6020             STR      R0,[R4, #+0]
    124          	/* Set bit timing
    125          	 * Default: SAM = 0x00;
    126          	 *          SJW = 0x03;
    127          	 */
    128          	CANx->BTR  = (TSEG2<<20)|(TSEG1<<16)|(3<<14)|BRP;
   \   000000B8   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000BA   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   000000BE   0x0400             LSLS     R0,R0,#+16
   \   000000C0   0xEA50 0x5007      ORRS     R0,R0,R7, LSL #+20
   \   000000C4   0xF450 0x4040      ORRS     R0,R0,#0xC000
   \   000000C8   0xEA5A 0x0000      ORRS     R0,R10,R0
   \   000000CC   0x6160             STR      R0,[R4, #+20]
    129          	/* Return to normal operating */
    130          	CANx->MOD = 0;
   \   000000CE   0x2000             MOVS     R0,#+0
   \   000000D0   0x6020             STR      R0,[R4, #+0]
    131          }
   \   000000D2   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return
    132          /* End of Private Functions ----------------------------------------------------*/
    133          
    134          
    135          /* Public Functions ----------------------------------------------------------- */
    136          /** @addtogroup CAN_Public_Functions
    137           * @{
    138           */
    139          
    140          /********************************************************************//**
    141           * @brief		Initialize CAN peripheral with given baudrate
    142           * @param[in]	CANx pointer to LPC_CAN_TypeDef, should be:
    143           * 				- LPC_CAN1: CAN1 peripheral
    144           * 				- LPC_CAN2: CAN2 peripheral
    145           * @param[in]	baudrate: the value of CAN baudrate will be set (bps)
    146           * @return 		None
    147           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    148          void CAN_Init(LPC_CAN_TypeDef *CANx, uint32_t baudrate)
    149          {
   \                     CAN_Init: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    150          	uint16_t i;
    151          	CHECK_PARAM(PARAM_CANx(CANx));
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x40044000
   \   0000000A   0x4284             CMP      R4,R0
   \   0000000C   0xD008             BEQ.N    ??CAN_Init_0
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable3_1  ;; 0x40048000
   \   00000012   0x4284             CMP      R4,R0
   \   00000014   0xD004             BEQ.N    ??CAN_Init_0
   \   00000016   0x2197             MOVS     R1,#+151
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   0000001C   0x.... 0x....      BL       check_failed
    152          
    153          	if(CANx == LPC_CAN1)
   \                     ??CAN_Init_0: (+1)
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x40044000
   \   00000024   0x4284             CMP      R4,R0
   \   00000026   0xD105             BNE.N    ??CAN_Init_1
    154          	{
    155          		/* Turn on power and clock for CAN1 */
    156          		CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCAN1, ENABLE);
   \   00000028   0x2101             MOVS     R1,#+1
   \   0000002A   0xF44F 0x5000      MOV      R0,#+8192
   \   0000002E   0x.... 0x....      BL       CLKPWR_ConfigPPWR
   \   00000032   0xE004             B.N      ??CAN_Init_2
    157          		/* Set clock divide for CAN1 */
    158          	}
    159          	else
    160          	{
    161          		/* Turn on power and clock for CAN1 */
    162          		CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCAN2, ENABLE);
   \                     ??CAN_Init_1: (+1)
   \   00000034   0x2101             MOVS     R1,#+1
   \   00000036   0xF44F 0x4080      MOV      R0,#+16384
   \   0000003A   0x.... 0x....      BL       CLKPWR_ConfigPPWR
    163          		/* Set clock divide for CAN2 */
    164          	}
    165          	CLKPWR_SetPCLKDiv (CLKPWR_PCLKSEL_CAN1, CLKPWR_PCLKSEL_CCLK_DIV_2);
   \                     ??CAN_Init_2: (+1)
   \   0000003E   0x2102             MOVS     R1,#+2
   \   00000040   0x201A             MOVS     R0,#+26
   \   00000042   0x.... 0x....      BL       CLKPWR_SetPCLKDiv
    166          	CLKPWR_SetPCLKDiv (CLKPWR_PCLKSEL_CAN2, CLKPWR_PCLKSEL_CCLK_DIV_2);
   \   00000046   0x2102             MOVS     R1,#+2
   \   00000048   0x201C             MOVS     R0,#+28
   \   0000004A   0x.... 0x....      BL       CLKPWR_SetPCLKDiv
    167          	CLKPWR_SetPCLKDiv (CLKPWR_PCLKSEL_ACF, CLKPWR_PCLKSEL_CCLK_DIV_2);
   \   0000004E   0x2102             MOVS     R1,#+2
   \   00000050   0x201E             MOVS     R0,#+30
   \   00000052   0x.... 0x....      BL       CLKPWR_SetPCLKDiv
    168          
    169          	CANx->MOD = 1; // Enter Reset Mode
   \   00000056   0x2001             MOVS     R0,#+1
   \   00000058   0x6020             STR      R0,[R4, #+0]
    170          	CANx->IER = 0; // Disable All CAN Interrupts
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0x6120             STR      R0,[R4, #+16]
    171          	CANx->GSR = 0;
   \   0000005E   0x2000             MOVS     R0,#+0
   \   00000060   0x60A0             STR      R0,[R4, #+8]
    172          	/* Request command to release Rx, Tx buffer and clear data overrun */
    173          	//CANx->CMR = CAN_CMR_AT | CAN_CMR_RRB | CAN_CMR_CDO;
    174          	CANx->CMR = (1<<1)|(1<<2)|(1<<3);
   \   00000062   0x200E             MOVS     R0,#+14
   \   00000064   0x6060             STR      R0,[R4, #+4]
    175          	/* Read to clear interrupt pending in interrupt capture register */
    176          	i = CANx->ICR;
   \   00000066   0x68E0             LDR      R0,[R4, #+12]
   \   00000068   0x0006             MOVS     R6,R0
    177          	CANx->MOD = 0;// Return Normal operating
   \   0000006A   0x2000             MOVS     R0,#+0
   \   0000006C   0x6020             STR      R0,[R4, #+0]
    178          
    179          	//Reset CANAF value
    180          	LPC_CANAF->AFMR = 0x01;
   \   0000006E   0x2001             MOVS     R0,#+1
   \   00000070   0x.... 0x....      LDR.W    R1,??DataTable4  ;; 0x4003c000
   \   00000074   0x6008             STR      R0,[R1, #+0]
    181          
    182          	//clear ALUT RAM
    183          	for (i = 0; i < 512; i++) {
   \   00000076   0x2000             MOVS     R0,#+0
   \   00000078   0x0006             MOVS     R6,R0
   \                     ??CAN_Init_3: (+1)
   \   0000007A   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000007C   0xF5B6 0x7F00      CMP      R6,#+512
   \   00000080   0xDA07             BGE.N    ??CAN_Init_4
    184          		LPC_CANAF_RAM->mask[i] = 0x00;
   \   00000082   0x2000             MOVS     R0,#+0
   \   00000084   0x.... 0x....      LDR.W    R1,??DataTable3_3  ;; 0x40038000
   \   00000088   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000008A   0xF841 0x0026      STR      R0,[R1, R6, LSL #+2]
    185          	}
   \   0000008E   0x1C76             ADDS     R6,R6,#+1
   \   00000090   0xE7F3             B.N      ??CAN_Init_3
    186          
    187          	LPC_CANAF->SFF_sa = 0x00;
   \                     ??CAN_Init_4: (+1)
   \   00000092   0x2000             MOVS     R0,#+0
   \   00000094   0x.... 0x....      LDR.W    R1,??DataTable3_4  ;; 0x4003c004
   \   00000098   0x6008             STR      R0,[R1, #+0]
    188          	LPC_CANAF->SFF_GRP_sa = 0x00;
   \   0000009A   0x2000             MOVS     R0,#+0
   \   0000009C   0x.... 0x....      LDR.W    R1,??DataTable3_5  ;; 0x4003c008
   \   000000A0   0x6008             STR      R0,[R1, #+0]
    189          	LPC_CANAF->EFF_sa = 0x00;
   \   000000A2   0x2000             MOVS     R0,#+0
   \   000000A4   0x.... 0x....      LDR.W    R1,??DataTable3_6  ;; 0x4003c00c
   \   000000A8   0x6008             STR      R0,[R1, #+0]
    190          	LPC_CANAF->EFF_GRP_sa = 0x00;
   \   000000AA   0x2000             MOVS     R0,#+0
   \   000000AC   0x.... 0x....      LDR.W    R1,??DataTable3_7  ;; 0x4003c010
   \   000000B0   0x6008             STR      R0,[R1, #+0]
    191          	LPC_CANAF->ENDofTable = 0x00;
   \   000000B2   0x2000             MOVS     R0,#+0
   \   000000B4   0x.... 0x....      LDR.W    R1,??DataTable3_8  ;; 0x4003c014
   \   000000B8   0x6008             STR      R0,[R1, #+0]
    192          
    193          	LPC_CANAF->AFMR = 0x00;
   \   000000BA   0x2000             MOVS     R0,#+0
   \   000000BC   0x.... 0x....      LDR.W    R1,??DataTable4  ;; 0x4003c000
   \   000000C0   0x6008             STR      R0,[R1, #+0]
    194          	/* Set baudrate */
    195          	can_SetBaudrate (CANx, baudrate);
   \   000000C2   0x0029             MOVS     R1,R5
   \   000000C4   0x0020             MOVS     R0,R4
   \   000000C6   0x.... 0x....      BL       can_SetBaudrate
    196          }
   \   000000CA   0xBD70             POP      {R4-R6,PC}       ;; return
    197          
    198          /********************************************************************//**
    199           * @brief		CAN deInit
    200           * @param[in]	CANx pointer to LPC_CAN_TypeDef, should be:
    201           * 				- LPC_CAN1: CAN1 peripheral
    202           * 				- LPC_CAN2: CAN2 peripheral
    203           * @return 		None
    204           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    205          void CAN_DeInit(LPC_CAN_TypeDef *CANx)
    206          {
   \                     CAN_DeInit: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    207          	CHECK_PARAM(PARAM_CANx(CANx));
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x40044000
   \   00000008   0x4284             CMP      R4,R0
   \   0000000A   0xD008             BEQ.N    ??CAN_DeInit_0
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable3_1  ;; 0x40048000
   \   00000010   0x4284             CMP      R4,R0
   \   00000012   0xD004             BEQ.N    ??CAN_DeInit_0
   \   00000014   0x21CF             MOVS     R1,#+207
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   0000001A   0x.... 0x....      BL       check_failed
    208          
    209          	if(CANx == LPC_CAN1)
   \                     ??CAN_DeInit_0: (+1)
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x40044000
   \   00000022   0x4284             CMP      R4,R0
   \   00000024   0xD105             BNE.N    ??CAN_DeInit_1
    210          	{
    211          		/* Turn on power and clock for CAN1 */
    212          		CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCAN1, DISABLE);
   \   00000026   0x2100             MOVS     R1,#+0
   \   00000028   0xF44F 0x5000      MOV      R0,#+8192
   \   0000002C   0x.... 0x....      BL       CLKPWR_ConfigPPWR
   \   00000030   0xE004             B.N      ??CAN_DeInit_2
    213          	}
    214          	else
    215          	{
    216          		/* Turn on power and clock for CAN1 */
    217          		CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCAN2, DISABLE);
   \                     ??CAN_DeInit_1: (+1)
   \   00000032   0x2100             MOVS     R1,#+0
   \   00000034   0xF44F 0x4080      MOV      R0,#+16384
   \   00000038   0x.... 0x....      BL       CLKPWR_ConfigPPWR
    218          	}
    219          }
   \                     ??CAN_DeInit_2: (+1)
   \   0000003C   0xBD10             POP      {R4,PC}          ;; return
    220          
    221          /********************************************************************//**
    222           * @brief		Setup Acceptance Filter Look-Up Table
    223           * @param[in]	CANAFx	pointer to LPC_CANAF_TypeDef
    224           * 				Should be: LPC_CANAF
    225           * @param[in]	AFSection	the pointer to AF_SectionDef structure
    226           * 				It contain information about 5 sections will be install in AFLUT
    227           * @return 		CAN Error	could be:
    228           * 				- CAN_OBJECTS_FULL_ERROR: No more rx or tx objects available
    229           * 				- CAN_AF_ENTRY_ERROR: table error-violation of ascending numerical order
    230           * 				- CAN_OK: ID is added into table successfully
    231           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    232          CAN_ERROR CAN_SetupAFLUT(LPC_CANAF_TypeDef* CANAFx, AF_SectionDef* AFSection)
    233          {
   \                     CAN_SetupAFLUT: (+1)
   \   00000000   0xE92D 0x4FF1      PUSH     {R0,R4-R11,LR}
   \   00000004   0xB086             SUB      SP,SP,#+24
   \   00000006   0x000C             MOVS     R4,R1
    234          	uint8_t ctrl1,ctrl2;
    235          	uint8_t dis1, dis2;
    236          	uint16_t SID, ID_temp,i, count = 0;
   \   00000008   0xF05F 0x0A00      MOVS     R10,#+0
    237          	uint32_t EID, entry, buf;
    238          	uint16_t lowerSID, upperSID;
    239          	uint32_t lowerEID, upperEID;
    240          
    241          	CHECK_PARAM(PARAM_CANAFx(CANAFx));
   \   0000000C   0x9806             LDR      R0,[SP, #+24]
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable4  ;; 0x4003c000
   \   00000012   0x4288             CMP      R0,R1
   \   00000014   0xD004             BEQ.N    ??CAN_SetupAFLUT_0
   \   00000016   0x21F1             MOVS     R1,#+241
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   0000001C   0x.... 0x....      BL       check_failed
    242          	CANAFx->AFMR = 0x01;
   \                     ??CAN_SetupAFLUT_0: (+1)
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0x9906             LDR      R1,[SP, #+24]
   \   00000024   0x6008             STR      R0,[R1, #+0]
    243          
    244          /***** setup FullCAN Table *****/
    245          	if(AFSection->FullCAN_Sec == NULL)
   \   00000026   0x6820             LDR      R0,[R4, #+0]
   \   00000028   0x2800             CMP      R0,#+0
   \   0000002A   0xD104             BNE.N    ??CAN_SetupAFLUT_1
    246          	{
    247          		FULLCAN_ENABLE = DISABLE;
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable3_9
   \   00000032   0x7008             STRB     R0,[R1, #+0]
   \   00000034   0xE102             B.N      ??CAN_SetupAFLUT_2
    248          	}
    249          	else
    250          	{
    251          		FULLCAN_ENABLE = ENABLE;
   \                     ??CAN_SetupAFLUT_1: (+1)
   \   00000036   0x2001             MOVS     R0,#+1
   \   00000038   0x.... 0x....      LDR.W    R1,??DataTable3_9
   \   0000003C   0x7008             STRB     R0,[R1, #+0]
    252          		for(i=0;i<(AFSection->FC_NumEntry);i++)
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0x4683             MOV      R11,R0
   \                     ??CAN_SetupAFLUT_3: (+1)
   \   00000042   0x7920             LDRB     R0,[R4, #+4]
   \   00000044   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   00000048   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000004A   0x4583             CMP      R11,R0
   \   0000004C   0xF080 0x80F6      BCS.W    ??CAN_SetupAFLUT_2
    253          		{
    254          			if(count + 1 > 64)
   \   00000050   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000054   0xF11A 0x0001      ADDS     R0,R10,#+1
   \   00000058   0x2841             CMP      R0,#+65
   \   0000005A   0xDB02             BLT.N    ??CAN_SetupAFLUT_4
    255          			{
    256          				return CAN_OBJECTS_FULL_ERROR;
   \   0000005C   0x2002             MOVS     R0,#+2
   \   0000005E   0xF000 0xBC37      B.W      ??CAN_SetupAFLUT_5
    257          			}
    258          			ctrl1 = AFSection->FullCAN_Sec->controller;
   \                     ??CAN_SetupAFLUT_4: (+1)
   \   00000062   0x6820             LDR      R0,[R4, #+0]
   \   00000064   0x7800             LDRB     R0,[R0, #+0]
   \   00000066   0x0005             MOVS     R5,R0
    259          			SID = AFSection->FullCAN_Sec->id_11;
   \   00000068   0x6820             LDR      R0,[R4, #+0]
   \   0000006A   0x8840             LDRH     R0,[R0, #+2]
   \   0000006C   0x0007             MOVS     R7,R0
    260          			dis1 = AFSection->FullCAN_Sec->disable;
   \   0000006E   0x6820             LDR      R0,[R4, #+0]
   \   00000070   0x7840             LDRB     R0,[R0, #+1]
   \   00000072   0x0006             MOVS     R6,R0
    261          
    262          			CHECK_PARAM(PARAM_CTRL(ctrl1));
   \   00000074   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000076   0x2D00             CMP      R5,#+0
   \   00000078   0xD101             BNE.N    ??CAN_SetupAFLUT_6
   \   0000007A   0x2001             MOVS     R0,#+1
   \   0000007C   0xE000             B.N      ??CAN_SetupAFLUT_7
   \                     ??CAN_SetupAFLUT_6: (+1)
   \   0000007E   0x2000             MOVS     R0,#+0
   \                     ??CAN_SetupAFLUT_7: (+1)
   \   00000080   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000082   0x2D01             CMP      R5,#+1
   \   00000084   0xD101             BNE.N    ??CAN_SetupAFLUT_8
   \   00000086   0x2101             MOVS     R1,#+1
   \   00000088   0xE000             B.N      ??CAN_SetupAFLUT_9
   \                     ??CAN_SetupAFLUT_8: (+1)
   \   0000008A   0x2100             MOVS     R1,#+0
   \                     ??CAN_SetupAFLUT_9: (+1)
   \   0000008C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000008E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000090   0x4308             ORRS     R0,R1,R0
   \   00000092   0x2800             CMP      R0,#+0
   \   00000094   0xD105             BNE.N    ??CAN_SetupAFLUT_10
   \   00000096   0xF44F 0x7183      MOV      R1,#+262
   \   0000009A   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   0000009E   0x.... 0x....      BL       check_failed
    263          			CHECK_PARAM(PARAM_ID_11(SID));
   \                     ??CAN_SetupAFLUT_10: (+1)
   \   000000A2   0x0038             MOVS     R0,R7
   \   000000A4   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000A6   0x0AC0             LSRS     R0,R0,#+11
   \   000000A8   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000AA   0x2800             CMP      R0,#+0
   \   000000AC   0xD005             BEQ.N    ??CAN_SetupAFLUT_11
   \   000000AE   0xF240 0x1107      MOVW     R1,#+263
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   000000B6   0x.... 0x....      BL       check_failed
    264          			CHECK_PARAM(PARAM_MSG_DISABLE(dis1));
   \                     ??CAN_SetupAFLUT_11: (+1)
   \   000000BA   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000BC   0x2E00             CMP      R6,#+0
   \   000000BE   0xD101             BNE.N    ??CAN_SetupAFLUT_12
   \   000000C0   0x2001             MOVS     R0,#+1
   \   000000C2   0xE000             B.N      ??CAN_SetupAFLUT_13
   \                     ??CAN_SetupAFLUT_12: (+1)
   \   000000C4   0x2000             MOVS     R0,#+0
   \                     ??CAN_SetupAFLUT_13: (+1)
   \   000000C6   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000C8   0x2E01             CMP      R6,#+1
   \   000000CA   0xD101             BNE.N    ??CAN_SetupAFLUT_14
   \   000000CC   0x2101             MOVS     R1,#+1
   \   000000CE   0xE000             B.N      ??CAN_SetupAFLUT_15
   \                     ??CAN_SetupAFLUT_14: (+1)
   \   000000D0   0x2100             MOVS     R1,#+0
   \                     ??CAN_SetupAFLUT_15: (+1)
   \   000000D2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000D4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000D6   0x4308             ORRS     R0,R1,R0
   \   000000D8   0x2800             CMP      R0,#+0
   \   000000DA   0xD105             BNE.N    ??CAN_SetupAFLUT_16
   \   000000DC   0xF44F 0x7184      MOV      R1,#+264
   \   000000E0   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   000000E4   0x.... 0x....      BL       check_failed
    265          			entry = 0x00; //reset entry value
   \                     ??CAN_SetupAFLUT_16: (+1)
   \   000000E8   0x2000             MOVS     R0,#+0
   \   000000EA   0x4680             MOV      R8,R0
    266          			if((CANAF_FullCAN_cnt & 0x00000001)==0)
   \   000000EC   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   000000F0   0x7800             LDRB     R0,[R0, #+0]
   \   000000F2   0x07C0             LSLS     R0,R0,#+31
   \   000000F4   0xD456             BMI.N    ??CAN_SetupAFLUT_17
    267          			{
    268          				if(count!=0x00)
   \   000000F6   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000000FA   0xF1BA 0x0F00      CMP      R10,#+0
   \   000000FE   0xD01A             BEQ.N    ??CAN_SetupAFLUT_18
    269          				{
    270          					buf = LPC_CANAF_RAM->mask[count-1];
   \   00000100   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000104   0xEA5F 0x008A      LSLS     R0,R10,#+2
   \   00000108   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   0000010C   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   00000110   0xF850 0x0C04      LDR      R0,[R0, #-4]
   \   00000114   0x4681             MOV      R9,R0
    271          					ID_temp = (buf & 0xE7FF); //mask controller & identifier bits
   \   00000116   0xF24E 0x70FF      MOVW     R0,#+59391
   \   0000011A   0xEA10 0x0009      ANDS     R0,R0,R9
   \   0000011E   0xF8AD 0x0002      STRH     R0,[SP, #+2]
    272          					if(ID_temp > ((ctrl1<<13)|SID))
   \   00000122   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000124   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000126   0xEA57 0x3045      ORRS     R0,R7,R5, LSL #+13
   \   0000012A   0xF8BD 0x1002      LDRH     R1,[SP, #+2]
   \   0000012E   0x4288             CMP      R0,R1
   \   00000130   0xDA01             BGE.N    ??CAN_SetupAFLUT_18
    273          					{
    274          						return CAN_AF_ENTRY_ERROR;
   \   00000132   0x2005             MOVS     R0,#+5
   \   00000134   0xE3CC             B.N      ??CAN_SetupAFLUT_5
    275          					}
    276          				}
    277          				entry = (ctrl1<<29)|(dis1<<28)|(SID<<16)|(1<<27);
   \                     ??CAN_SetupAFLUT_18: (+1)
   \   00000136   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000138   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000013A   0x0730             LSLS     R0,R6,#+28
   \   0000013C   0xEA50 0x7045      ORRS     R0,R0,R5, LSL #+29
   \   00000140   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000142   0xEA50 0x4007      ORRS     R0,R0,R7, LSL #+16
   \   00000146   0xF050 0x6000      ORRS     R0,R0,#0x8000000
   \   0000014A   0x4680             MOV      R8,R0
    278          				LPC_CANAF_RAM->mask[count] &= 0x0000FFFF;
   \   0000014C   0x.... 0x....      LDR.W    R0,??DataTable3_3  ;; 0x40038000
   \   00000150   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000154   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   00000158   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000015A   0x.... 0x....      LDR.W    R1,??DataTable3_3  ;; 0x40038000
   \   0000015E   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000162   0xF841 0x002A      STR      R0,[R1, R10, LSL #+2]
    279          				LPC_CANAF_RAM->mask[count] |= entry;
   \   00000166   0x.... 0x....      LDR.W    R0,??DataTable3_3  ;; 0x40038000
   \   0000016A   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   0000016E   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   00000172   0xEA58 0x0000      ORRS     R0,R8,R0
   \   00000176   0x.... 0x....      LDR.W    R1,??DataTable3_3  ;; 0x40038000
   \   0000017A   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   0000017E   0xF841 0x002A      STR      R0,[R1, R10, LSL #+2]
    280          				CANAF_FullCAN_cnt++;
   \   00000182   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000186   0x8800             LDRH     R0,[R0, #+0]
   \   00000188   0x1C40             ADDS     R0,R0,#+1
   \   0000018A   0x.... 0x....      LDR.W    R1,??DataTable4_1
   \   0000018E   0x8008             STRH     R0,[R1, #+0]
    281          				if(CANAF_FullCAN_cnt == AFSection->FC_NumEntry) //this is the lastest FullCAN entry
   \   00000190   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000194   0x8800             LDRH     R0,[R0, #+0]
   \   00000196   0x7921             LDRB     R1,[R4, #+4]
   \   00000198   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000019A   0x4288             CMP      R0,R1
   \   0000019C   0xD148             BNE.N    ??CAN_SetupAFLUT_19
    282          					count++;
   \   0000019E   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \   000001A2   0xE045             B.N      ??CAN_SetupAFLUT_19
    283          			}
    284          			else
    285          			{
    286          				buf = LPC_CANAF_RAM->mask[count];
   \                     ??CAN_SetupAFLUT_17: (+1)
   \   000001A4   0x.... 0x....      LDR.W    R0,??DataTable3_3  ;; 0x40038000
   \   000001A8   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000001AC   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   000001B0   0x4681             MOV      R9,R0
    287          				ID_temp = (buf >>16) & 0xE7FF;
   \   000001B2   0xF24E 0x70FF      MOVW     R0,#+59391
   \   000001B6   0xEA10 0x4019      ANDS     R0,R0,R9, LSR #+16
   \   000001BA   0xF8AD 0x0002      STRH     R0,[SP, #+2]
    288          				if(ID_temp > ((ctrl1<<13)|SID))
   \   000001BE   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000001C0   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000001C2   0xEA57 0x3045      ORRS     R0,R7,R5, LSL #+13
   \   000001C6   0xF8BD 0x1002      LDRH     R1,[SP, #+2]
   \   000001CA   0x4288             CMP      R0,R1
   \   000001CC   0xDA01             BGE.N    ??CAN_SetupAFLUT_20
    289          				{
    290          					return CAN_AF_ENTRY_ERROR;
   \   000001CE   0x2005             MOVS     R0,#+5
   \   000001D0   0xE37E             B.N      ??CAN_SetupAFLUT_5
    291          				}
    292          				entry = (ctrl1<<13)|(dis1<<12)|(SID<<0)|(1<<11);
   \                     ??CAN_SetupAFLUT_20: (+1)
   \   000001D2   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000001D4   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000001D6   0x0330             LSLS     R0,R6,#+12
   \   000001D8   0xEA50 0x3045      ORRS     R0,R0,R5, LSL #+13
   \   000001DC   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000001DE   0x4338             ORRS     R0,R7,R0
   \   000001E0   0xF450 0x6000      ORRS     R0,R0,#0x800
   \   000001E4   0x4680             MOV      R8,R0
    293          				LPC_CANAF_RAM->mask[count] &= 0xFFFF0000;
   \   000001E6   0x.... 0x....      LDR.W    R0,??DataTable3_3  ;; 0x40038000
   \   000001EA   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000001EE   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   000001F2   0x0C00             LSRS     R0,R0,#+16
   \   000001F4   0x0400             LSLS     R0,R0,#+16
   \   000001F6   0x.... 0x....      LDR.W    R1,??DataTable3_3  ;; 0x40038000
   \   000001FA   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000001FE   0xF841 0x002A      STR      R0,[R1, R10, LSL #+2]
    294          				LPC_CANAF_RAM->mask[count]|= entry;
   \   00000202   0x.... 0x....      LDR.W    R0,??DataTable3_3  ;; 0x40038000
   \   00000206   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   0000020A   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   0000020E   0xEA58 0x0000      ORRS     R0,R8,R0
   \   00000212   0x.... 0x....      LDR.W    R1,??DataTable3_3  ;; 0x40038000
   \   00000216   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   0000021A   0xF841 0x002A      STR      R0,[R1, R10, LSL #+2]
    295          				count++;
   \   0000021E   0xF11A 0x0A01      ADDS     R10,R10,#+1
    296          				CANAF_FullCAN_cnt++;
   \   00000222   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000226   0x8800             LDRH     R0,[R0, #+0]
   \   00000228   0x1C40             ADDS     R0,R0,#+1
   \   0000022A   0x.... 0x....      LDR.W    R1,??DataTable4_1
   \   0000022E   0x8008             STRH     R0,[R1, #+0]
    297          			}
    298          			AFSection->FullCAN_Sec = (FullCAN_Entry *)((uint32_t)(AFSection->FullCAN_Sec)+ sizeof(FullCAN_Entry));
   \                     ??CAN_SetupAFLUT_19: (+1)
   \   00000230   0x6820             LDR      R0,[R4, #+0]
   \   00000232   0x1D00             ADDS     R0,R0,#+4
   \   00000234   0x6020             STR      R0,[R4, #+0]
    299          		}
   \   00000236   0xF11B 0x0B01      ADDS     R11,R11,#+1
   \   0000023A   0xE702             B.N      ??CAN_SetupAFLUT_3
    300          	}
    301          
    302          /***** Setup Explicit Standard Frame Format Section *****/
    303          	if(AFSection->SFF_Sec != NULL)
   \                     ??CAN_SetupAFLUT_2: (+1)
   \   0000023C   0x68A0             LDR      R0,[R4, #+8]
   \   0000023E   0x2800             CMP      R0,#+0
   \   00000240   0xF000 0x80FB      BEQ.W    ??CAN_SetupAFLUT_21
    304          	{
    305          		for(i=0;i<(AFSection->SFF_NumEntry);i++)
   \   00000244   0x2000             MOVS     R0,#+0
   \   00000246   0x4683             MOV      R11,R0
   \                     ??CAN_SetupAFLUT_22: (+1)
   \   00000248   0x7B20             LDRB     R0,[R4, #+12]
   \   0000024A   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   0000024E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000250   0x4583             CMP      R11,R0
   \   00000252   0xF080 0x80F2      BCS.W    ??CAN_SetupAFLUT_21
    306          		{
    307          			if(count + 1 > 512)
   \   00000256   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   0000025A   0xF11A 0x0001      ADDS     R0,R10,#+1
   \   0000025E   0xF5B0 0x7F00      CMP      R0,#+512
   \   00000262   0xDD01             BLE.N    ??CAN_SetupAFLUT_23
    308          			{
    309          				return CAN_OBJECTS_FULL_ERROR;
   \   00000264   0x2002             MOVS     R0,#+2
   \   00000266   0xE333             B.N      ??CAN_SetupAFLUT_5
    310          			}
    311          			ctrl1 = AFSection->SFF_Sec->controller;
   \                     ??CAN_SetupAFLUT_23: (+1)
   \   00000268   0x68A0             LDR      R0,[R4, #+8]
   \   0000026A   0x7800             LDRB     R0,[R0, #+0]
   \   0000026C   0x0005             MOVS     R5,R0
    312          			SID = AFSection->SFF_Sec->id_11;
   \   0000026E   0x68A0             LDR      R0,[R4, #+8]
   \   00000270   0x8840             LDRH     R0,[R0, #+2]
   \   00000272   0x0007             MOVS     R7,R0
    313          			dis1 = AFSection->SFF_Sec->disable;
   \   00000274   0x68A0             LDR      R0,[R4, #+8]
   \   00000276   0x7840             LDRB     R0,[R0, #+1]
   \   00000278   0x0006             MOVS     R6,R0
    314          
    315          			//check parameter
    316          			CHECK_PARAM(PARAM_CTRL(ctrl1));
   \   0000027A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000027C   0x2D00             CMP      R5,#+0
   \   0000027E   0xD101             BNE.N    ??CAN_SetupAFLUT_24
   \   00000280   0x2001             MOVS     R0,#+1
   \   00000282   0xE000             B.N      ??CAN_SetupAFLUT_25
   \                     ??CAN_SetupAFLUT_24: (+1)
   \   00000284   0x2000             MOVS     R0,#+0
   \                     ??CAN_SetupAFLUT_25: (+1)
   \   00000286   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000288   0x2D01             CMP      R5,#+1
   \   0000028A   0xD101             BNE.N    ??CAN_SetupAFLUT_26
   \   0000028C   0x2101             MOVS     R1,#+1
   \   0000028E   0xE000             B.N      ??CAN_SetupAFLUT_27
   \                     ??CAN_SetupAFLUT_26: (+1)
   \   00000290   0x2100             MOVS     R1,#+0
   \                     ??CAN_SetupAFLUT_27: (+1)
   \   00000292   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000294   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000296   0x4308             ORRS     R0,R1,R0
   \   00000298   0x2800             CMP      R0,#+0
   \   0000029A   0xD105             BNE.N    ??CAN_SetupAFLUT_28
   \   0000029C   0xF44F 0x719E      MOV      R1,#+316
   \   000002A0   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   000002A4   0x.... 0x....      BL       check_failed
    317          			CHECK_PARAM(PARAM_ID_11(SID));
   \                     ??CAN_SetupAFLUT_28: (+1)
   \   000002A8   0x0038             MOVS     R0,R7
   \   000002AA   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000002AC   0x0AC0             LSRS     R0,R0,#+11
   \   000002AE   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000002B0   0x2800             CMP      R0,#+0
   \   000002B2   0xD005             BEQ.N    ??CAN_SetupAFLUT_29
   \   000002B4   0xF240 0x113D      MOVW     R1,#+317
   \   000002B8   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   000002BC   0x.... 0x....      BL       check_failed
    318          			CHECK_PARAM(PARAM_MSG_DISABLE(dis1));
   \                     ??CAN_SetupAFLUT_29: (+1)
   \   000002C0   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000002C2   0x2E00             CMP      R6,#+0
   \   000002C4   0xD101             BNE.N    ??CAN_SetupAFLUT_30
   \   000002C6   0x2001             MOVS     R0,#+1
   \   000002C8   0xE000             B.N      ??CAN_SetupAFLUT_31
   \                     ??CAN_SetupAFLUT_30: (+1)
   \   000002CA   0x2000             MOVS     R0,#+0
   \                     ??CAN_SetupAFLUT_31: (+1)
   \   000002CC   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000002CE   0x2E01             CMP      R6,#+1
   \   000002D0   0xD101             BNE.N    ??CAN_SetupAFLUT_32
   \   000002D2   0x2101             MOVS     R1,#+1
   \   000002D4   0xE000             B.N      ??CAN_SetupAFLUT_33
   \                     ??CAN_SetupAFLUT_32: (+1)
   \   000002D6   0x2100             MOVS     R1,#+0
   \                     ??CAN_SetupAFLUT_33: (+1)
   \   000002D8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002DA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002DC   0x4308             ORRS     R0,R1,R0
   \   000002DE   0x2800             CMP      R0,#+0
   \   000002E0   0xD105             BNE.N    ??CAN_SetupAFLUT_34
   \   000002E2   0xF44F 0x719F      MOV      R1,#+318
   \   000002E6   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   000002EA   0x.... 0x....      BL       check_failed
    319          
    320          			entry = 0x00; //reset entry value
   \                     ??CAN_SetupAFLUT_34: (+1)
   \   000002EE   0x2000             MOVS     R0,#+0
   \   000002F0   0x4680             MOV      R8,R0
    321          			if((CANAF_std_cnt & 0x00000001)==0)
   \   000002F2   0x.... 0x....      LDR.W    R0,??DataTable4_2
   \   000002F6   0x7800             LDRB     R0,[R0, #+0]
   \   000002F8   0x07C0             LSLS     R0,R0,#+31
   \   000002FA   0xD454             BMI.N    ??CAN_SetupAFLUT_35
    322          			{
    323          				if(CANAF_std_cnt !=0 )
   \   000002FC   0x.... 0x....      LDR.W    R0,??DataTable4_2
   \   00000300   0x8800             LDRH     R0,[R0, #+0]
   \   00000302   0x2800             CMP      R0,#+0
   \   00000304   0xD01A             BEQ.N    ??CAN_SetupAFLUT_36
    324          				{
    325          					buf = LPC_CANAF_RAM->mask[count-1];
   \   00000306   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   0000030A   0xEA5F 0x008A      LSLS     R0,R10,#+2
   \   0000030E   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   00000312   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   00000316   0xF850 0x0C04      LDR      R0,[R0, #-4]
   \   0000031A   0x4681             MOV      R9,R0
    326          					ID_temp = (buf & 0xE7FF); //mask controller & identifier bits
   \   0000031C   0xF24E 0x70FF      MOVW     R0,#+59391
   \   00000320   0xEA10 0x0009      ANDS     R0,R0,R9
   \   00000324   0xF8AD 0x0002      STRH     R0,[SP, #+2]
    327          					if(ID_temp > ((ctrl1<<13)|SID))
   \   00000328   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000032A   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000032C   0xEA57 0x3045      ORRS     R0,R7,R5, LSL #+13
   \   00000330   0xF8BD 0x1002      LDRH     R1,[SP, #+2]
   \   00000334   0x4288             CMP      R0,R1
   \   00000336   0xDA01             BGE.N    ??CAN_SetupAFLUT_36
    328          					{
    329          						return CAN_AF_ENTRY_ERROR;
   \   00000338   0x2005             MOVS     R0,#+5
   \   0000033A   0xE2C9             B.N      ??CAN_SetupAFLUT_5
    330          					}
    331          				}
    332          				entry = (ctrl1<<29)|(dis1<<28)|(SID<<16);
   \                     ??CAN_SetupAFLUT_36: (+1)
   \   0000033C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000033E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000340   0x0730             LSLS     R0,R6,#+28
   \   00000342   0xEA50 0x7045      ORRS     R0,R0,R5, LSL #+29
   \   00000346   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000348   0xEA50 0x4007      ORRS     R0,R0,R7, LSL #+16
   \   0000034C   0x4680             MOV      R8,R0
    333          				LPC_CANAF_RAM->mask[count] &= 0x0000FFFF;
   \   0000034E   0x.... 0x....      LDR.W    R0,??DataTable3_3  ;; 0x40038000
   \   00000352   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000356   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   0000035A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000035C   0x.... 0x....      LDR.W    R1,??DataTable3_3  ;; 0x40038000
   \   00000360   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000364   0xF841 0x002A      STR      R0,[R1, R10, LSL #+2]
    334          				LPC_CANAF_RAM->mask[count] |= entry;
   \   00000368   0x.... 0x....      LDR.W    R0,??DataTable3_3  ;; 0x40038000
   \   0000036C   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000370   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   00000374   0xEA58 0x0000      ORRS     R0,R8,R0
   \   00000378   0x.... 0x....      LDR.W    R1,??DataTable3_3  ;; 0x40038000
   \   0000037C   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000380   0xF841 0x002A      STR      R0,[R1, R10, LSL #+2]
    335          				CANAF_std_cnt++;
   \   00000384   0x.... 0x....      LDR.W    R0,??DataTable4_2
   \   00000388   0x8800             LDRH     R0,[R0, #+0]
   \   0000038A   0x1C40             ADDS     R0,R0,#+1
   \   0000038C   0x.... 0x....      LDR.W    R1,??DataTable4_2
   \   00000390   0x8008             STRH     R0,[R1, #+0]
    336          				if(CANAF_std_cnt == AFSection->SFF_NumEntry)//if this is the last SFF entry
   \   00000392   0x.... 0x....      LDR.W    R0,??DataTable4_2
   \   00000396   0x8800             LDRH     R0,[R0, #+0]
   \   00000398   0x7B21             LDRB     R1,[R4, #+12]
   \   0000039A   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000039C   0x4288             CMP      R0,R1
   \   0000039E   0xD146             BNE.N    ??CAN_SetupAFLUT_37
    337          					count++;
   \   000003A0   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \   000003A4   0xE043             B.N      ??CAN_SetupAFLUT_37
    338          			}
    339          			else
    340          			{
    341          				buf = LPC_CANAF_RAM->mask[count];
   \                     ??CAN_SetupAFLUT_35: (+1)
   \   000003A6   0x.... 0x....      LDR.W    R0,??DataTable3_3  ;; 0x40038000
   \   000003AA   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000003AE   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   000003B2   0x4681             MOV      R9,R0
    342          				ID_temp = (buf >>16) & 0xE7FF;
   \   000003B4   0xF24E 0x70FF      MOVW     R0,#+59391
   \   000003B8   0xEA10 0x4019      ANDS     R0,R0,R9, LSR #+16
   \   000003BC   0xF8AD 0x0002      STRH     R0,[SP, #+2]
    343          				if(ID_temp > ((ctrl1<<13)|SID))
   \   000003C0   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000003C2   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000003C4   0xEA57 0x3045      ORRS     R0,R7,R5, LSL #+13
   \   000003C8   0xF8BD 0x1002      LDRH     R1,[SP, #+2]
   \   000003CC   0x4288             CMP      R0,R1
   \   000003CE   0xDA01             BGE.N    ??CAN_SetupAFLUT_38
    344          				{
    345          					return CAN_AF_ENTRY_ERROR;
   \   000003D0   0x2005             MOVS     R0,#+5
   \   000003D2   0xE27D             B.N      ??CAN_SetupAFLUT_5
    346          				}
    347          				entry = (ctrl1<<13)|(dis1<<12)|(SID<<0);
   \                     ??CAN_SetupAFLUT_38: (+1)
   \   000003D4   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000003D6   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000003D8   0x0330             LSLS     R0,R6,#+12
   \   000003DA   0xEA50 0x3045      ORRS     R0,R0,R5, LSL #+13
   \   000003DE   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000003E0   0x4338             ORRS     R0,R7,R0
   \   000003E2   0x4680             MOV      R8,R0
    348          				LPC_CANAF_RAM->mask[count] &= 0xFFFF0000;
   \   000003E4   0x.... 0x....      LDR.W    R0,??DataTable3_3  ;; 0x40038000
   \   000003E8   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000003EC   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   000003F0   0x0C00             LSRS     R0,R0,#+16
   \   000003F2   0x0400             LSLS     R0,R0,#+16
   \   000003F4   0x.... 0x....      LDR.W    R1,??DataTable3_3  ;; 0x40038000
   \   000003F8   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000003FC   0xF841 0x002A      STR      R0,[R1, R10, LSL #+2]
    349          				LPC_CANAF_RAM->mask[count] |= entry;
   \   00000400   0x.... 0x....      LDR.W    R0,??DataTable3_3  ;; 0x40038000
   \   00000404   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000408   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   0000040C   0xEA58 0x0000      ORRS     R0,R8,R0
   \   00000410   0x.... 0x....      LDR.W    R1,??DataTable3_3  ;; 0x40038000
   \   00000414   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000418   0xF841 0x002A      STR      R0,[R1, R10, LSL #+2]
    350          				count++;
   \   0000041C   0xF11A 0x0A01      ADDS     R10,R10,#+1
    351          				CANAF_std_cnt++;
   \   00000420   0x.... 0x....      LDR.W    R0,??DataTable4_2
   \   00000424   0x8800             LDRH     R0,[R0, #+0]
   \   00000426   0x1C40             ADDS     R0,R0,#+1
   \   00000428   0x.... 0x....      LDR.W    R1,??DataTable4_2
   \   0000042C   0x8008             STRH     R0,[R1, #+0]
    352          			}
    353          			AFSection->SFF_Sec = (SFF_Entry *)((uint32_t)(AFSection->SFF_Sec)+ sizeof(SFF_Entry));
   \                     ??CAN_SetupAFLUT_37: (+1)
   \   0000042E   0x68A0             LDR      R0,[R4, #+8]
   \   00000430   0x1D00             ADDS     R0,R0,#+4
   \   00000432   0x60A0             STR      R0,[R4, #+8]
    354          		}
   \   00000434   0xF11B 0x0B01      ADDS     R11,R11,#+1
   \   00000438   0xE706             B.N      ??CAN_SetupAFLUT_22
    355          	}
    356          
    357          /***** Setup Group of Standard Frame Format Identifier Section *****/
    358          	if(AFSection->SFF_GPR_Sec != NULL)
   \                     ??CAN_SetupAFLUT_21: (+1)
   \   0000043A   0x6920             LDR      R0,[R4, #+16]
   \   0000043C   0x2800             CMP      R0,#+0
   \   0000043E   0xF000 0x80F8      BEQ.W    ??CAN_SetupAFLUT_39
    359          	{
    360          		for(i=0;i<(AFSection->SFF_GPR_NumEntry);i++)
   \   00000442   0x2000             MOVS     R0,#+0
   \   00000444   0x4683             MOV      R11,R0
   \                     ??CAN_SetupAFLUT_40: (+1)
   \   00000446   0x7D20             LDRB     R0,[R4, #+20]
   \   00000448   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   0000044C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000044E   0x4583             CMP      R11,R0
   \   00000450   0xF080 0x80EF      BCS.W    ??CAN_SetupAFLUT_39
    361          		{
    362          			if(count + 1 > 512)
   \   00000454   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000458   0xF11A 0x0001      ADDS     R0,R10,#+1
   \   0000045C   0xF5B0 0x7F00      CMP      R0,#+512
   \   00000460   0xDD01             BLE.N    ??CAN_SetupAFLUT_41
    363          			{
    364          				return CAN_OBJECTS_FULL_ERROR;
   \   00000462   0x2002             MOVS     R0,#+2
   \   00000464   0xE234             B.N      ??CAN_SetupAFLUT_5
    365          			}
    366          			ctrl1 = AFSection->SFF_GPR_Sec->controller1;
   \                     ??CAN_SetupAFLUT_41: (+1)
   \   00000466   0x6920             LDR      R0,[R4, #+16]
   \   00000468   0x7800             LDRB     R0,[R0, #+0]
   \   0000046A   0x0005             MOVS     R5,R0
    367          			ctrl2 = AFSection->SFF_GPR_Sec->controller2;
   \   0000046C   0x6920             LDR      R0,[R4, #+16]
   \   0000046E   0x7900             LDRB     R0,[R0, #+4]
   \   00000470   0xF88D 0x0000      STRB     R0,[SP, #+0]
    368          			dis1 = AFSection->SFF_GPR_Sec->disable1;
   \   00000474   0x6920             LDR      R0,[R4, #+16]
   \   00000476   0x7840             LDRB     R0,[R0, #+1]
   \   00000478   0x0006             MOVS     R6,R0
    369          			dis2 = AFSection->SFF_GPR_Sec->disable2;
   \   0000047A   0x6920             LDR      R0,[R4, #+16]
   \   0000047C   0x7940             LDRB     R0,[R0, #+5]
   \   0000047E   0xF88D 0x0001      STRB     R0,[SP, #+1]
    370          			lowerSID = AFSection->SFF_GPR_Sec->lowerID;
   \   00000482   0x6920             LDR      R0,[R4, #+16]
   \   00000484   0x8840             LDRH     R0,[R0, #+2]
   \   00000486   0xF8AD 0x0004      STRH     R0,[SP, #+4]
    371          			upperSID = AFSection->SFF_GPR_Sec->upperID;
   \   0000048A   0x6920             LDR      R0,[R4, #+16]
   \   0000048C   0x88C0             LDRH     R0,[R0, #+6]
   \   0000048E   0xF8AD 0x0006      STRH     R0,[SP, #+6]
    372          
    373          			/* check parameter */
    374          			CHECK_PARAM(PARAM_CTRL(ctrl1));
   \   00000492   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000494   0x2D00             CMP      R5,#+0
   \   00000496   0xD101             BNE.N    ??CAN_SetupAFLUT_42
   \   00000498   0x2001             MOVS     R0,#+1
   \   0000049A   0xE000             B.N      ??CAN_SetupAFLUT_43
   \                     ??CAN_SetupAFLUT_42: (+1)
   \   0000049C   0x2000             MOVS     R0,#+0
   \                     ??CAN_SetupAFLUT_43: (+1)
   \   0000049E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000004A0   0x2D01             CMP      R5,#+1
   \   000004A2   0xD101             BNE.N    ??CAN_SetupAFLUT_44
   \   000004A4   0x2101             MOVS     R1,#+1
   \   000004A6   0xE000             B.N      ??CAN_SetupAFLUT_45
   \                     ??CAN_SetupAFLUT_44: (+1)
   \   000004A8   0x2100             MOVS     R1,#+0
   \                     ??CAN_SetupAFLUT_45: (+1)
   \   000004AA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000004AC   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000004AE   0x4308             ORRS     R0,R1,R0
   \   000004B0   0x2800             CMP      R0,#+0
   \   000004B2   0xD105             BNE.N    ??CAN_SetupAFLUT_46
   \   000004B4   0xF44F 0x71BB      MOV      R1,#+374
   \   000004B8   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   000004BC   0x.... 0x....      BL       check_failed
    375          			CHECK_PARAM(PARAM_CTRL(ctrl2));
   \                     ??CAN_SetupAFLUT_46: (+1)
   \   000004C0   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   000004C4   0x2800             CMP      R0,#+0
   \   000004C6   0xD101             BNE.N    ??CAN_SetupAFLUT_47
   \   000004C8   0x2001             MOVS     R0,#+1
   \   000004CA   0xE000             B.N      ??CAN_SetupAFLUT_48
   \                     ??CAN_SetupAFLUT_47: (+1)
   \   000004CC   0x2000             MOVS     R0,#+0
   \                     ??CAN_SetupAFLUT_48: (+1)
   \   000004CE   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \   000004D2   0x2901             CMP      R1,#+1
   \   000004D4   0xD101             BNE.N    ??CAN_SetupAFLUT_49
   \   000004D6   0x2101             MOVS     R1,#+1
   \   000004D8   0xE000             B.N      ??CAN_SetupAFLUT_50
   \                     ??CAN_SetupAFLUT_49: (+1)
   \   000004DA   0x2100             MOVS     R1,#+0
   \                     ??CAN_SetupAFLUT_50: (+1)
   \   000004DC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000004DE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000004E0   0x4308             ORRS     R0,R1,R0
   \   000004E2   0x2800             CMP      R0,#+0
   \   000004E4   0xD105             BNE.N    ??CAN_SetupAFLUT_51
   \   000004E6   0xF240 0x1177      MOVW     R1,#+375
   \   000004EA   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   000004EE   0x.... 0x....      BL       check_failed
    376          			CHECK_PARAM(PARAM_MSG_DISABLE(dis1));
   \                     ??CAN_SetupAFLUT_51: (+1)
   \   000004F2   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000004F4   0x2E00             CMP      R6,#+0
   \   000004F6   0xD101             BNE.N    ??CAN_SetupAFLUT_52
   \   000004F8   0x2001             MOVS     R0,#+1
   \   000004FA   0xE000             B.N      ??CAN_SetupAFLUT_53
   \                     ??CAN_SetupAFLUT_52: (+1)
   \   000004FC   0x2000             MOVS     R0,#+0
   \                     ??CAN_SetupAFLUT_53: (+1)
   \   000004FE   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000500   0x2E01             CMP      R6,#+1
   \   00000502   0xD101             BNE.N    ??CAN_SetupAFLUT_54
   \   00000504   0x2101             MOVS     R1,#+1
   \   00000506   0xE000             B.N      ??CAN_SetupAFLUT_55
   \                     ??CAN_SetupAFLUT_54: (+1)
   \   00000508   0x2100             MOVS     R1,#+0
   \                     ??CAN_SetupAFLUT_55: (+1)
   \   0000050A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000050C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000050E   0x4308             ORRS     R0,R1,R0
   \   00000510   0x2800             CMP      R0,#+0
   \   00000512   0xD105             BNE.N    ??CAN_SetupAFLUT_56
   \   00000514   0xF44F 0x71BC      MOV      R1,#+376
   \   00000518   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   0000051C   0x.... 0x....      BL       check_failed
    377          			CHECK_PARAM(PARAM_MSG_DISABLE(dis2));
   \                     ??CAN_SetupAFLUT_56: (+1)
   \   00000520   0xF89D 0x0001      LDRB     R0,[SP, #+1]
   \   00000524   0x2800             CMP      R0,#+0
   \   00000526   0xD101             BNE.N    ??CAN_SetupAFLUT_57
   \   00000528   0x2001             MOVS     R0,#+1
   \   0000052A   0xE000             B.N      ??CAN_SetupAFLUT_58
   \                     ??CAN_SetupAFLUT_57: (+1)
   \   0000052C   0x2000             MOVS     R0,#+0
   \                     ??CAN_SetupAFLUT_58: (+1)
   \   0000052E   0xF89D 0x1001      LDRB     R1,[SP, #+1]
   \   00000532   0x2901             CMP      R1,#+1
   \   00000534   0xD101             BNE.N    ??CAN_SetupAFLUT_59
   \   00000536   0x2101             MOVS     R1,#+1
   \   00000538   0xE000             B.N      ??CAN_SetupAFLUT_60
   \                     ??CAN_SetupAFLUT_59: (+1)
   \   0000053A   0x2100             MOVS     R1,#+0
   \                     ??CAN_SetupAFLUT_60: (+1)
   \   0000053C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000053E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000540   0x4308             ORRS     R0,R1,R0
   \   00000542   0x2800             CMP      R0,#+0
   \   00000544   0xD105             BNE.N    ??CAN_SetupAFLUT_61
   \   00000546   0xF240 0x1179      MOVW     R1,#+377
   \   0000054A   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   0000054E   0x.... 0x....      BL       check_failed
    378          			CHECK_PARAM(PARAM_ID_11(lowerSID));
   \                     ??CAN_SetupAFLUT_61: (+1)
   \   00000552   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   00000556   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000558   0x0AC0             LSRS     R0,R0,#+11
   \   0000055A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000055C   0x2800             CMP      R0,#+0
   \   0000055E   0xD005             BEQ.N    ??CAN_SetupAFLUT_62
   \   00000560   0xF44F 0x71BD      MOV      R1,#+378
   \   00000564   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   00000568   0x.... 0x....      BL       check_failed
    379          			CHECK_PARAM(PARAM_ID_11(upperSID));
   \                     ??CAN_SetupAFLUT_62: (+1)
   \   0000056C   0xF8BD 0x0006      LDRH     R0,[SP, #+6]
   \   00000570   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000572   0x0AC0             LSRS     R0,R0,#+11
   \   00000574   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000576   0x2800             CMP      R0,#+0
   \   00000578   0xD004             BEQ.N    ??CAN_SetupAFLUT_63
   \   0000057A   0xF240 0x117B      MOVW     R1,#+379
   \   0000057E   0x....             LDR.N    R0,??DataTable3_2
   \   00000580   0x.... 0x....      BL       check_failed
    380          
    381          			entry = 0x00;
   \                     ??CAN_SetupAFLUT_63: (+1)
   \   00000584   0x2000             MOVS     R0,#+0
   \   00000586   0x4680             MOV      R8,R0
    382          			if(CANAF_gstd_cnt!=0)
   \   00000588   0x.... 0x....      LDR.W    R0,??DataTable5
   \   0000058C   0x8800             LDRH     R0,[R0, #+0]
   \   0000058E   0x2800             CMP      R0,#+0
   \   00000590   0xD026             BEQ.N    ??CAN_SetupAFLUT_64
    383          			{
    384          				buf = LPC_CANAF_RAM->mask[count-1];
   \   00000592   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000596   0xEA5F 0x008A      LSLS     R0,R10,#+2
   \   0000059A   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   0000059E   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   000005A2   0xF850 0x0C04      LDR      R0,[R0, #-4]
   \   000005A6   0x4681             MOV      R9,R0
    385          				ID_temp = buf & 0xE7FF;
   \   000005A8   0xF24E 0x70FF      MOVW     R0,#+59391
   \   000005AC   0xEA10 0x0009      ANDS     R0,R0,R9
   \   000005B0   0xF8AD 0x0002      STRH     R0,[SP, #+2]
    386          				if((ctrl1 != ctrl2)||(lowerSID > upperSID)||(ID_temp > ((ctrl1<<13)|lowerSID)))
   \   000005B4   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   000005B8   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000005BA   0x4285             CMP      R5,R0
   \   000005BC   0xD10E             BNE.N    ??CAN_SetupAFLUT_65
   \   000005BE   0xF8BD 0x0006      LDRH     R0,[SP, #+6]
   \   000005C2   0xF8BD 0x1004      LDRH     R1,[SP, #+4]
   \   000005C6   0x4288             CMP      R0,R1
   \   000005C8   0xD308             BCC.N    ??CAN_SetupAFLUT_65
   \   000005CA   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000005CC   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   000005D0   0xEA50 0x3045      ORRS     R0,R0,R5, LSL #+13
   \   000005D4   0xF8BD 0x1002      LDRH     R1,[SP, #+2]
   \   000005D8   0x4288             CMP      R0,R1
   \   000005DA   0xDA01             BGE.N    ??CAN_SetupAFLUT_64
    387          				{
    388          					return CAN_AF_ENTRY_ERROR;
   \                     ??CAN_SetupAFLUT_65: (+1)
   \   000005DC   0x2005             MOVS     R0,#+5
   \   000005DE   0xE177             B.N      ??CAN_SetupAFLUT_5
    389          				}
    390          			}
    391          			entry = (ctrl1 << 29)|(dis1 << 28)|(lowerSID << 16)|  \
    392          					(ctrl2 << 13)|(dis2 << 12)|(upperSID << 0);
   \                     ??CAN_SetupAFLUT_64: (+1)
   \   000005E0   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000005E2   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000005E4   0x0730             LSLS     R0,R6,#+28
   \   000005E6   0xEA50 0x7045      ORRS     R0,R0,R5, LSL #+29
   \   000005EA   0xF8BD 0x1004      LDRH     R1,[SP, #+4]
   \   000005EE   0xEA50 0x4001      ORRS     R0,R0,R1, LSL #+16
   \   000005F2   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \   000005F6   0xEA50 0x3041      ORRS     R0,R0,R1, LSL #+13
   \   000005FA   0xF89D 0x1001      LDRB     R1,[SP, #+1]
   \   000005FE   0xEA50 0x3001      ORRS     R0,R0,R1, LSL #+12
   \   00000602   0xF8BD 0x1006      LDRH     R1,[SP, #+6]
   \   00000606   0x4308             ORRS     R0,R1,R0
   \   00000608   0x4680             MOV      R8,R0
    393          			LPC_CANAF_RAM->mask[count] = entry;
   \   0000060A   0x....             LDR.N    R0,??DataTable3_3  ;; 0x40038000
   \   0000060C   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000610   0xF840 0x802A      STR      R8,[R0, R10, LSL #+2]
    394          			CANAF_gstd_cnt++;
   \   00000614   0x.... 0x....      LDR.W    R0,??DataTable5
   \   00000618   0x8800             LDRH     R0,[R0, #+0]
   \   0000061A   0x1C40             ADDS     R0,R0,#+1
   \   0000061C   0x.... 0x....      LDR.W    R1,??DataTable5
   \   00000620   0x8008             STRH     R0,[R1, #+0]
    395          			count++;
   \   00000622   0xF11A 0x0A01      ADDS     R10,R10,#+1
    396          			AFSection->SFF_GPR_Sec = (SFF_GPR_Entry *)((uint32_t)(AFSection->SFF_GPR_Sec)+ sizeof(SFF_GPR_Entry));
   \   00000626   0x6920             LDR      R0,[R4, #+16]
   \   00000628   0x3008             ADDS     R0,R0,#+8
   \   0000062A   0x6120             STR      R0,[R4, #+16]
    397          		}
   \   0000062C   0xF11B 0x0B01      ADDS     R11,R11,#+1
   \   00000630   0xE709             B.N      ??CAN_SetupAFLUT_40
    398          	}
    399          
    400          /***** Setup Explicit Extend Frame Format Identifier Section *****/
    401          	if(AFSection->EFF_Sec != NULL)
   \                     ??CAN_SetupAFLUT_39: (+1)
   \   00000632   0x69A0             LDR      R0,[R4, #+24]
   \   00000634   0x2800             CMP      R0,#+0
   \   00000636   0xD062             BEQ.N    ??CAN_SetupAFLUT_66
    402          	{
    403          		for(i=0;i<(AFSection->EFF_NumEntry);i++)
   \   00000638   0x2000             MOVS     R0,#+0
   \   0000063A   0x4683             MOV      R11,R0
   \                     ??CAN_SetupAFLUT_67: (+1)
   \   0000063C   0x7F20             LDRB     R0,[R4, #+28]
   \   0000063E   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   00000642   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000644   0x4583             CMP      R11,R0
   \   00000646   0xD25A             BCS.N    ??CAN_SetupAFLUT_66
    404          		{
    405          			if(count + 1 > 512)
   \   00000648   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   0000064C   0xF11A 0x0001      ADDS     R0,R10,#+1
   \   00000650   0xF5B0 0x7F00      CMP      R0,#+512
   \   00000654   0xDD01             BLE.N    ??CAN_SetupAFLUT_68
    406          			{
    407          				return CAN_OBJECTS_FULL_ERROR;
   \   00000656   0x2002             MOVS     R0,#+2
   \   00000658   0xE13A             B.N      ??CAN_SetupAFLUT_5
    408          			}
    409          			EID = AFSection->EFF_Sec->ID_29;
   \                     ??CAN_SetupAFLUT_68: (+1)
   \   0000065A   0x69A0             LDR      R0,[R4, #+24]
   \   0000065C   0x6840             LDR      R0,[R0, #+4]
   \   0000065E   0x9004             STR      R0,[SP, #+16]
    410          			ctrl1 = AFSection->EFF_Sec->controller;
   \   00000660   0x69A0             LDR      R0,[R4, #+24]
   \   00000662   0x7800             LDRB     R0,[R0, #+0]
   \   00000664   0x0005             MOVS     R5,R0
    411          
    412          			// check parameter
    413          			CHECK_PARAM(PARAM_ID_29(EID));
   \   00000666   0x9804             LDR      R0,[SP, #+16]
   \   00000668   0x0F40             LSRS     R0,R0,#+29
   \   0000066A   0x2800             CMP      R0,#+0
   \   0000066C   0xD004             BEQ.N    ??CAN_SetupAFLUT_69
   \   0000066E   0xF240 0x119D      MOVW     R1,#+413
   \   00000672   0x....             LDR.N    R0,??DataTable3_2
   \   00000674   0x.... 0x....      BL       check_failed
    414          			CHECK_PARAM(PARAM_CTRL(ctrl1));
   \                     ??CAN_SetupAFLUT_69: (+1)
   \   00000678   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000067A   0x2D00             CMP      R5,#+0
   \   0000067C   0xD101             BNE.N    ??CAN_SetupAFLUT_70
   \   0000067E   0x2001             MOVS     R0,#+1
   \   00000680   0xE000             B.N      ??CAN_SetupAFLUT_71
   \                     ??CAN_SetupAFLUT_70: (+1)
   \   00000682   0x2000             MOVS     R0,#+0
   \                     ??CAN_SetupAFLUT_71: (+1)
   \   00000684   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000686   0x2D01             CMP      R5,#+1
   \   00000688   0xD101             BNE.N    ??CAN_SetupAFLUT_72
   \   0000068A   0x2101             MOVS     R1,#+1
   \   0000068C   0xE000             B.N      ??CAN_SetupAFLUT_73
   \                     ??CAN_SetupAFLUT_72: (+1)
   \   0000068E   0x2100             MOVS     R1,#+0
   \                     ??CAN_SetupAFLUT_73: (+1)
   \   00000690   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000692   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000694   0x4308             ORRS     R0,R1,R0
   \   00000696   0x2800             CMP      R0,#+0
   \   00000698   0xD104             BNE.N    ??CAN_SetupAFLUT_74
   \   0000069A   0xF44F 0x71CF      MOV      R1,#+414
   \   0000069E   0x....             LDR.N    R0,??DataTable3_2
   \   000006A0   0x.... 0x....      BL       check_failed
    415          
    416          			entry = (ctrl1 << 29)|(EID << 0);
   \                     ??CAN_SetupAFLUT_74: (+1)
   \   000006A4   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000006A6   0x9804             LDR      R0,[SP, #+16]
   \   000006A8   0xEA50 0x7045      ORRS     R0,R0,R5, LSL #+29
   \   000006AC   0x4680             MOV      R8,R0
    417          			if(CANAF_ext_cnt != 0)
   \   000006AE   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   000006B2   0x8800             LDRH     R0,[R0, #+0]
   \   000006B4   0x2800             CMP      R0,#+0
   \   000006B6   0xD00E             BEQ.N    ??CAN_SetupAFLUT_75
    418          			{
    419          				buf = LPC_CANAF_RAM->mask[count-1];
   \   000006B8   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000006BC   0xEA5F 0x008A      LSLS     R0,R10,#+2
   \   000006C0   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   000006C4   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   000006C8   0xF850 0x0C04      LDR      R0,[R0, #-4]
   \   000006CC   0x4681             MOV      R9,R0
    420          //				EID_temp = buf & 0x0FFFFFFF;
    421          				if(buf > entry)
   \   000006CE   0x45C8             CMP      R8,R9
   \   000006D0   0xD201             BCS.N    ??CAN_SetupAFLUT_75
    422          				{
    423          					return CAN_AF_ENTRY_ERROR;
   \   000006D2   0x2005             MOVS     R0,#+5
   \   000006D4   0xE0FC             B.N      ??CAN_SetupAFLUT_5
    424          				}
    425          			}
    426          			LPC_CANAF_RAM->mask[count] = entry;
   \                     ??CAN_SetupAFLUT_75: (+1)
   \   000006D6   0x....             LDR.N    R0,??DataTable3_3  ;; 0x40038000
   \   000006D8   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000006DC   0xF840 0x802A      STR      R8,[R0, R10, LSL #+2]
    427          			CANAF_ext_cnt ++;
   \   000006E0   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   000006E4   0x8800             LDRH     R0,[R0, #+0]
   \   000006E6   0x1C40             ADDS     R0,R0,#+1
   \   000006E8   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   000006EC   0x8008             STRH     R0,[R1, #+0]
    428          			count++;
   \   000006EE   0xF11A 0x0A01      ADDS     R10,R10,#+1
    429          			AFSection->EFF_Sec = (EFF_Entry *)((uint32_t)(AFSection->EFF_Sec)+ sizeof(EFF_Entry));
   \   000006F2   0x69A0             LDR      R0,[R4, #+24]
   \   000006F4   0x3008             ADDS     R0,R0,#+8
   \   000006F6   0x61A0             STR      R0,[R4, #+24]
    430          		}
   \   000006F8   0xF11B 0x0B01      ADDS     R11,R11,#+1
   \   000006FC   0xE79E             B.N      ??CAN_SetupAFLUT_67
    431          	}
    432          
    433          /***** Setup Group of Extended Frame Format Identifier Section *****/
    434          	if(AFSection->EFF_GPR_Sec != NULL)
   \                     ??CAN_SetupAFLUT_66: (+1)
   \   000006FE   0x6A20             LDR      R0,[R4, #+32]
   \   00000700   0x2800             CMP      R0,#+0
   \   00000702   0xF000 0x80A9      BEQ.W    ??CAN_SetupAFLUT_76
    435          	{
    436          		for(i=0;i<(AFSection->EFF_GPR_NumEntry);i++)
   \   00000706   0x2000             MOVS     R0,#+0
   \   00000708   0x4683             MOV      R11,R0
   \                     ??CAN_SetupAFLUT_77: (+1)
   \   0000070A   0xF894 0x0024      LDRB     R0,[R4, #+36]
   \   0000070E   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   00000712   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000714   0x4583             CMP      R11,R0
   \   00000716   0xF080 0x809F      BCS.W    ??CAN_SetupAFLUT_76
    437          		{
    438          			if(count + 2 > 512)
   \   0000071A   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   0000071E   0xF11A 0x0002      ADDS     R0,R10,#+2
   \   00000722   0xF5B0 0x7F00      CMP      R0,#+512
   \   00000726   0xDD01             BLE.N    ??CAN_SetupAFLUT_78
    439          			{
    440          				return CAN_OBJECTS_FULL_ERROR;
   \   00000728   0x2002             MOVS     R0,#+2
   \   0000072A   0xE0D1             B.N      ??CAN_SetupAFLUT_5
    441          			}
    442          			ctrl1 = AFSection->EFF_GPR_Sec->controller1;
   \                     ??CAN_SetupAFLUT_78: (+1)
   \   0000072C   0x6A20             LDR      R0,[R4, #+32]
   \   0000072E   0x7800             LDRB     R0,[R0, #+0]
   \   00000730   0x0005             MOVS     R5,R0
    443          			ctrl2 = AFSection->EFF_GPR_Sec->controller2;
   \   00000732   0x6A20             LDR      R0,[R4, #+32]
   \   00000734   0x7840             LDRB     R0,[R0, #+1]
   \   00000736   0xF88D 0x0000      STRB     R0,[SP, #+0]
    444          			lowerEID = AFSection->EFF_GPR_Sec->lowerEID;
   \   0000073A   0x6A20             LDR      R0,[R4, #+32]
   \   0000073C   0x6840             LDR      R0,[R0, #+4]
   \   0000073E   0x9002             STR      R0,[SP, #+8]
    445          			upperEID = AFSection->EFF_GPR_Sec->upperEID;
   \   00000740   0x6A20             LDR      R0,[R4, #+32]
   \   00000742   0x6880             LDR      R0,[R0, #+8]
   \   00000744   0x9003             STR      R0,[SP, #+12]
    446          
    447          			//check parameter
    448          			CHECK_PARAM(PARAM_CTRL(ctrl1));
   \   00000746   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000748   0x2D00             CMP      R5,#+0
   \   0000074A   0xD101             BNE.N    ??CAN_SetupAFLUT_79
   \   0000074C   0x2001             MOVS     R0,#+1
   \   0000074E   0xE000             B.N      ??CAN_SetupAFLUT_80
   \                     ??CAN_SetupAFLUT_79: (+1)
   \   00000750   0x2000             MOVS     R0,#+0
   \                     ??CAN_SetupAFLUT_80: (+1)
   \   00000752   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000754   0x2D01             CMP      R5,#+1
   \   00000756   0xD101             BNE.N    ??CAN_SetupAFLUT_81
   \   00000758   0x2101             MOVS     R1,#+1
   \   0000075A   0xE000             B.N      ??CAN_SetupAFLUT_82
   \                     ??CAN_SetupAFLUT_81: (+1)
   \   0000075C   0x2100             MOVS     R1,#+0
   \                     ??CAN_SetupAFLUT_82: (+1)
   \   0000075E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000760   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000762   0x4308             ORRS     R0,R1,R0
   \   00000764   0x2800             CMP      R0,#+0
   \   00000766   0xD104             BNE.N    ??CAN_SetupAFLUT_83
   \   00000768   0xF44F 0x71E0      MOV      R1,#+448
   \   0000076C   0x....             LDR.N    R0,??DataTable3_2
   \   0000076E   0x.... 0x....      BL       check_failed
    449          			CHECK_PARAM(PARAM_CTRL(ctrl2));
   \                     ??CAN_SetupAFLUT_83: (+1)
   \   00000772   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000776   0x2800             CMP      R0,#+0
   \   00000778   0xD101             BNE.N    ??CAN_SetupAFLUT_84
   \   0000077A   0x2001             MOVS     R0,#+1
   \   0000077C   0xE000             B.N      ??CAN_SetupAFLUT_85
   \                     ??CAN_SetupAFLUT_84: (+1)
   \   0000077E   0x2000             MOVS     R0,#+0
   \                     ??CAN_SetupAFLUT_85: (+1)
   \   00000780   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \   00000784   0x2901             CMP      R1,#+1
   \   00000786   0xD101             BNE.N    ??CAN_SetupAFLUT_86
   \   00000788   0x2101             MOVS     R1,#+1
   \   0000078A   0xE000             B.N      ??CAN_SetupAFLUT_87
   \                     ??CAN_SetupAFLUT_86: (+1)
   \   0000078C   0x2100             MOVS     R1,#+0
   \                     ??CAN_SetupAFLUT_87: (+1)
   \   0000078E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000790   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000792   0x4308             ORRS     R0,R1,R0
   \   00000794   0x2800             CMP      R0,#+0
   \   00000796   0xD104             BNE.N    ??CAN_SetupAFLUT_88
   \   00000798   0xF240 0x11C1      MOVW     R1,#+449
   \   0000079C   0x....             LDR.N    R0,??DataTable3_2
   \   0000079E   0x.... 0x....      BL       check_failed
    450          			CHECK_PARAM(PARAM_ID_29(lowerEID));
   \                     ??CAN_SetupAFLUT_88: (+1)
   \   000007A2   0x9802             LDR      R0,[SP, #+8]
   \   000007A4   0x0F40             LSRS     R0,R0,#+29
   \   000007A6   0x2800             CMP      R0,#+0
   \   000007A8   0xD004             BEQ.N    ??CAN_SetupAFLUT_89
   \   000007AA   0xF44F 0x71E1      MOV      R1,#+450
   \   000007AE   0x....             LDR.N    R0,??DataTable3_2
   \   000007B0   0x.... 0x....      BL       check_failed
    451          			CHECK_PARAM(PARAM_ID_29(upperEID));
   \                     ??CAN_SetupAFLUT_89: (+1)
   \   000007B4   0x9803             LDR      R0,[SP, #+12]
   \   000007B6   0x0F40             LSRS     R0,R0,#+29
   \   000007B8   0x2800             CMP      R0,#+0
   \   000007BA   0xD004             BEQ.N    ??CAN_SetupAFLUT_90
   \   000007BC   0xF240 0x11C3      MOVW     R1,#+451
   \   000007C0   0x....             LDR.N    R0,??DataTable3_2
   \   000007C2   0x.... 0x....      BL       check_failed
    452          
    453          			entry = 0x00;
   \                     ??CAN_SetupAFLUT_90: (+1)
   \   000007C6   0x2000             MOVS     R0,#+0
   \   000007C8   0x4680             MOV      R8,R0
    454          			if(CANAF_gext_cnt != 0)
   \   000007CA   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   000007CE   0x8800             LDRH     R0,[R0, #+0]
   \   000007D0   0x2800             CMP      R0,#+0
   \   000007D2   0xD01B             BEQ.N    ??CAN_SetupAFLUT_91
    455          			{
    456          				buf = LPC_CANAF_RAM->mask[count-1];
   \   000007D4   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000007D8   0xEA5F 0x008A      LSLS     R0,R10,#+2
   \   000007DC   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   000007E0   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   000007E4   0xF850 0x0C04      LDR      R0,[R0, #-4]
   \   000007E8   0x4681             MOV      R9,R0
    457          //				EID_temp = buf & 0x0FFFFFFF;
    458          				if((ctrl1 != ctrl2) || (lowerEID > upperEID) || (buf > ((ctrl1 << 29)|(lowerEID << 0))))
   \   000007EA   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   000007EE   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000007F0   0x4285             CMP      R5,R0
   \   000007F2   0xD109             BNE.N    ??CAN_SetupAFLUT_92
   \   000007F4   0x9803             LDR      R0,[SP, #+12]
   \   000007F6   0x9902             LDR      R1,[SP, #+8]
   \   000007F8   0x4288             CMP      R0,R1
   \   000007FA   0xD305             BCC.N    ??CAN_SetupAFLUT_92
   \   000007FC   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000007FE   0x9802             LDR      R0,[SP, #+8]
   \   00000800   0xEA50 0x7045      ORRS     R0,R0,R5, LSL #+29
   \   00000804   0x4548             CMP      R0,R9
   \   00000806   0xD201             BCS.N    ??CAN_SetupAFLUT_91
    459          				{
    460          					return CAN_AF_ENTRY_ERROR;
   \                     ??CAN_SetupAFLUT_92: (+1)
   \   00000808   0x2005             MOVS     R0,#+5
   \   0000080A   0xE061             B.N      ??CAN_SetupAFLUT_5
    461          				}
    462          			}
    463          			entry = (ctrl1 << 29)|(lowerEID << 0);
   \                     ??CAN_SetupAFLUT_91: (+1)
   \   0000080C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000080E   0x9802             LDR      R0,[SP, #+8]
   \   00000810   0xEA50 0x7045      ORRS     R0,R0,R5, LSL #+29
   \   00000814   0x4680             MOV      R8,R0
    464          			LPC_CANAF_RAM->mask[count++] = entry;
   \   00000816   0x....             LDR.N    R0,??DataTable3_3  ;; 0x40038000
   \   00000818   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   0000081C   0xF840 0x802A      STR      R8,[R0, R10, LSL #+2]
   \   00000820   0xF11A 0x0A01      ADDS     R10,R10,#+1
    465          			entry = (ctrl2 << 29)|(upperEID << 0);
   \   00000824   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000828   0x9903             LDR      R1,[SP, #+12]
   \   0000082A   0xEA51 0x7040      ORRS     R0,R1,R0, LSL #+29
   \   0000082E   0x4680             MOV      R8,R0
    466          			LPC_CANAF_RAM->mask[count++] = entry;
   \   00000830   0x....             LDR.N    R0,??DataTable3_3  ;; 0x40038000
   \   00000832   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000836   0xF840 0x802A      STR      R8,[R0, R10, LSL #+2]
   \   0000083A   0xF11A 0x0A01      ADDS     R10,R10,#+1
    467          			CANAF_gext_cnt++;
   \   0000083E   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   00000842   0x8800             LDRH     R0,[R0, #+0]
   \   00000844   0x1C40             ADDS     R0,R0,#+1
   \   00000846   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   0000084A   0x8008             STRH     R0,[R1, #+0]
    468          			AFSection->EFF_GPR_Sec = (EFF_GPR_Entry *)((uint32_t)(AFSection->EFF_GPR_Sec)+ sizeof(EFF_GPR_Entry));
   \   0000084C   0x6A20             LDR      R0,[R4, #+32]
   \   0000084E   0x300C             ADDS     R0,R0,#+12
   \   00000850   0x6220             STR      R0,[R4, #+32]
    469          		}
   \   00000852   0xF11B 0x0B01      ADDS     R11,R11,#+1
   \   00000856   0xE758             B.N      ??CAN_SetupAFLUT_77
    470          	}
    471          	//update address values
    472          	LPC_CANAF->SFF_sa = ((CANAF_FullCAN_cnt + 1)>>1)<<2;
   \                     ??CAN_SetupAFLUT_76: (+1)
   \   00000858   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   0000085C   0x8800             LDRH     R0,[R0, #+0]
   \   0000085E   0x1C40             ADDS     R0,R0,#+1
   \   00000860   0x1040             ASRS     R0,R0,#+1
   \   00000862   0x0080             LSLS     R0,R0,#+2
   \   00000864   0x....             LDR.N    R1,??DataTable3_4  ;; 0x4003c004
   \   00000866   0x6008             STR      R0,[R1, #+0]
    473          	LPC_CANAF->SFF_GRP_sa = LPC_CANAF->SFF_sa + (((CANAF_std_cnt+1)>>1)<< 2);
   \   00000868   0x....             LDR.N    R0,??DataTable3_4  ;; 0x4003c004
   \   0000086A   0x6800             LDR      R0,[R0, #+0]
   \   0000086C   0x.... 0x....      LDR.W    R1,??DataTable4_2
   \   00000870   0x8809             LDRH     R1,[R1, #+0]
   \   00000872   0x1C49             ADDS     R1,R1,#+1
   \   00000874   0x1049             ASRS     R1,R1,#+1
   \   00000876   0xEB10 0x0081      ADDS     R0,R0,R1, LSL #+2
   \   0000087A   0x....             LDR.N    R1,??DataTable3_5  ;; 0x4003c008
   \   0000087C   0x6008             STR      R0,[R1, #+0]
    474          	LPC_CANAF->EFF_sa = LPC_CANAF->SFF_GRP_sa + (CANAF_gstd_cnt << 2);
   \   0000087E   0x....             LDR.N    R0,??DataTable3_5  ;; 0x4003c008
   \   00000880   0x6800             LDR      R0,[R0, #+0]
   \   00000882   0x.... 0x....      LDR.W    R1,??DataTable5
   \   00000886   0x8809             LDRH     R1,[R1, #+0]
   \   00000888   0xEB10 0x0081      ADDS     R0,R0,R1, LSL #+2
   \   0000088C   0x....             LDR.N    R1,??DataTable3_6  ;; 0x4003c00c
   \   0000088E   0x6008             STR      R0,[R1, #+0]
    475          	LPC_CANAF->EFF_GRP_sa = LPC_CANAF->EFF_sa + (CANAF_ext_cnt << 2);
   \   00000890   0x....             LDR.N    R0,??DataTable3_6  ;; 0x4003c00c
   \   00000892   0x6800             LDR      R0,[R0, #+0]
   \   00000894   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   00000898   0x8809             LDRH     R1,[R1, #+0]
   \   0000089A   0xEB10 0x0081      ADDS     R0,R0,R1, LSL #+2
   \   0000089E   0x....             LDR.N    R1,??DataTable3_7  ;; 0x4003c010
   \   000008A0   0x6008             STR      R0,[R1, #+0]
    476          	LPC_CANAF->ENDofTable = LPC_CANAF->EFF_GRP_sa + (CANAF_gext_cnt << 3);
   \   000008A2   0x....             LDR.N    R0,??DataTable3_7  ;; 0x4003c010
   \   000008A4   0x6800             LDR      R0,[R0, #+0]
   \   000008A6   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   000008AA   0x8809             LDRH     R1,[R1, #+0]
   \   000008AC   0xEB10 0x00C1      ADDS     R0,R0,R1, LSL #+3
   \   000008B0   0x....             LDR.N    R1,??DataTable3_8  ;; 0x4003c014
   \   000008B2   0x6008             STR      R0,[R1, #+0]
    477          
    478          	if(FULLCAN_ENABLE == DISABLE)
   \   000008B4   0x....             LDR.N    R0,??DataTable3_9
   \   000008B6   0x7800             LDRB     R0,[R0, #+0]
   \   000008B8   0x2800             CMP      R0,#+0
   \   000008BA   0xD104             BNE.N    ??CAN_SetupAFLUT_93
    479          	{
    480          		LPC_CANAF->AFMR = 0x00; // Normal mode
   \   000008BC   0x2000             MOVS     R0,#+0
   \   000008BE   0x.... 0x....      LDR.W    R1,??DataTable4  ;; 0x4003c000
   \   000008C2   0x6008             STR      R0,[R1, #+0]
   \   000008C4   0xE003             B.N      ??CAN_SetupAFLUT_94
    481          	}
    482          	else
    483          	{
    484          		LPC_CANAF->AFMR = 0x04;
   \                     ??CAN_SetupAFLUT_93: (+1)
   \   000008C6   0x2004             MOVS     R0,#+4
   \   000008C8   0x.... 0x....      LDR.W    R1,??DataTable4  ;; 0x4003c000
   \   000008CC   0x6008             STR      R0,[R1, #+0]
    485          	}
    486          	return CAN_OK;
   \                     ??CAN_SetupAFLUT_94: (+1)
   \   000008CE   0x2001             MOVS     R0,#+1
   \                     ??CAN_SetupAFLUT_5: (+1)
   \   000008D0   0xB007             ADD      SP,SP,#+28
   \   000008D2   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    487          }
    488          /********************************************************************//**
    489           * @brief		Add Explicit ID into AF Look-Up Table dynamically.
    490           * @param[in]	CANx pointer to LPC_CAN_TypeDef, should be:
    491           * 				- LPC_CAN1: CAN1 peripheral
    492           * 				- LPC_CAN2: CAN2 peripheral
    493           * @param[in]	id: The ID of entry will be added
    494           * @param[in]	format: is the type of ID Frame Format, should be:
    495           * 				- STD_ID_FORMAT: 11-bit ID value
    496           * 				- EXT_ID_FORMAT: 29-bit ID value
    497           * @return 		CAN Error, could be:
    498           * 				- CAN_OBJECTS_FULL_ERROR: No more rx or tx objects available
    499           * 				- CAN_ID_EXIT_ERROR: ID exited in table
    500           * 				- CAN_OK: ID is added into table successfully
    501           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    502          CAN_ERROR CAN_LoadExplicitEntry(LPC_CAN_TypeDef* CANx, uint32_t id, CAN_ID_FORMAT_Type format)
    503          {
   \                     CAN_LoadExplicitEntry: (+1)
   \   00000000   0xE92D 0x4FF5      PUSH     {R0,R2,R4-R11,LR}
   \   00000004   0xB081             SUB      SP,SP,#+4
   \   00000006   0x468A             MOV      R10,R1
    504          	uint32_t tmp0 = 0;
   \   00000008   0x2400             MOVS     R4,#+0
    505          	uint32_t buf0=0, buf1=0;
   \   0000000A   0x2500             MOVS     R5,#+0
   \   0000000C   0x2600             MOVS     R6,#+0
    506          	int16_t cnt1=0, cnt2=0, bound1=0, total=0;
   \   0000000E   0x2700             MOVS     R7,#+0
   \   00000010   0xF05F 0x0800      MOVS     R8,#+0
   \   00000014   0xF05F 0x0B00      MOVS     R11,#+0
   \   00000018   0xF05F 0x0900      MOVS     R9,#+0
    507          
    508          
    509          	CHECK_PARAM(PARAM_CANx(CANx));
   \   0000001C   0x9801             LDR      R0,[SP, #+4]
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable5_3  ;; 0x40044000
   \   00000022   0x4288             CMP      R0,R1
   \   00000024   0xD00A             BEQ.N    ??CAN_LoadExplicitEntry_0
   \   00000026   0x9801             LDR      R0,[SP, #+4]
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable5_4  ;; 0x40048000
   \   0000002C   0x4288             CMP      R0,R1
   \   0000002E   0xD005             BEQ.N    ??CAN_LoadExplicitEntry_0
   \   00000030   0xF240 0x11FD      MOVW     R1,#+509
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable5_5
   \   00000038   0x.... 0x....      BL       check_failed
    510          	CHECK_PARAM(PARAM_ID_FORMAT(format));
   \                     ??CAN_LoadExplicitEntry_0: (+1)
   \   0000003C   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \   00000040   0x2800             CMP      R0,#+0
   \   00000042   0xD009             BEQ.N    ??CAN_LoadExplicitEntry_1
   \   00000044   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \   00000048   0x2801             CMP      R0,#+1
   \   0000004A   0xD005             BEQ.N    ??CAN_LoadExplicitEntry_1
   \   0000004C   0xF44F 0x71FF      MOV      R1,#+510
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable5_5
   \   00000054   0x.... 0x....      BL       check_failed
    511          
    512          	if (CANx == LPC_CAN1)
   \                     ??CAN_LoadExplicitEntry_1: (+1)
   \   00000058   0x9801             LDR      R0,[SP, #+4]
   \   0000005A   0x.... 0x....      LDR.W    R1,??DataTable5_3  ;; 0x40044000
   \   0000005E   0x4288             CMP      R0,R1
   \   00000060   0xD102             BNE.N    ??CAN_LoadExplicitEntry_2
    513          	{
    514          		tmp0 = 0;
   \   00000062   0x2000             MOVS     R0,#+0
   \   00000064   0x0004             MOVS     R4,R0
   \   00000066   0xE006             B.N      ??CAN_LoadExplicitEntry_3
    515          	}
    516          	else if (CANx == LPC_CAN2)
   \                     ??CAN_LoadExplicitEntry_2: (+1)
   \   00000068   0x9801             LDR      R0,[SP, #+4]
   \   0000006A   0x.... 0x....      LDR.W    R1,??DataTable5_4  ;; 0x40048000
   \   0000006E   0x4288             CMP      R0,R1
   \   00000070   0xD101             BNE.N    ??CAN_LoadExplicitEntry_3
    517          	{
    518          		tmp0 = 1;
   \   00000072   0x2001             MOVS     R0,#+1
   \   00000074   0x0004             MOVS     R4,R0
    519          	}
    520          
    521          	/* Acceptance Filter Memory full - return */
    522          	total =((CANAF_FullCAN_cnt+1)>>1)+ CANAF_FullCAN_cnt*3 +((CANAF_std_cnt + 1) >> 1)+  \
    523          			CANAF_gstd_cnt + CANAF_ext_cnt + (CANAF_gext_cnt<<1);
   \                     ??CAN_LoadExplicitEntry_3: (+1)
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   0000007A   0x8800             LDRH     R0,[R0, #+0]
   \   0000007C   0x1C40             ADDS     R0,R0,#+1
   \   0000007E   0x1040             ASRS     R0,R0,#+1
   \   00000080   0x.... 0x....      LDR.W    R1,??DataTable4_1
   \   00000084   0x8809             LDRH     R1,[R1, #+0]
   \   00000086   0x2203             MOVS     R2,#+3
   \   00000088   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   0000008C   0x.... 0x....      LDR.W    R1,??DataTable4_2
   \   00000090   0x8809             LDRH     R1,[R1, #+0]
   \   00000092   0x1C49             ADDS     R1,R1,#+1
   \   00000094   0xEB10 0x0061      ADDS     R0,R0,R1, ASR #+1
   \   00000098   0x.... 0x....      LDR.W    R1,??DataTable5
   \   0000009C   0x8809             LDRH     R1,[R1, #+0]
   \   0000009E   0x1808             ADDS     R0,R1,R0
   \   000000A0   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   000000A4   0x8809             LDRH     R1,[R1, #+0]
   \   000000A6   0x1808             ADDS     R0,R1,R0
   \   000000A8   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   000000AC   0x8809             LDRH     R1,[R1, #+0]
   \   000000AE   0xEB10 0x0041      ADDS     R0,R0,R1, LSL #+1
   \   000000B2   0x4681             MOV      R9,R0
    524          	if (total >= 512){ //don't have enough space
   \   000000B4   0xFA0F 0xF989      SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
   \   000000B8   0xF5B9 0x7F00      CMP      R9,#+512
   \   000000BC   0xDB01             BLT.N    ??CAN_LoadExplicitEntry_4
    525          		return CAN_OBJECTS_FULL_ERROR;
   \   000000BE   0x2002             MOVS     R0,#+2
   \   000000C0   0xE1B4             B.N      ??CAN_LoadExplicitEntry_5
    526          	}
    527          
    528          	/* Setup Acceptance Filter Configuration
    529              Acceptance Filter Mode Register = Off */
    530          	LPC_CANAF->AFMR = 0x00000001;
   \                     ??CAN_LoadExplicitEntry_4: (+1)
   \   000000C2   0x2001             MOVS     R0,#+1
   \   000000C4   0x....             LDR.N    R1,??DataTable4  ;; 0x4003c000
   \   000000C6   0x6008             STR      R0,[R1, #+0]
    531          
    532          /*********** Add Explicit Standard Identifier Frame Format entry *********/
    533           	if(format == STD_ID_FORMAT)
   \   000000C8   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \   000000CC   0x2800             CMP      R0,#+0
   \   000000CE   0xF040 0x8145      BNE.W    ??CAN_LoadExplicitEntry_6
    534           	{
    535           		id &= 0x07FF;
   \   000000D2   0xEA5F 0x5A4A      LSLS     R10,R10,#+21     ;; ZeroExtS R10,R10,#+21,#+21
   \   000000D6   0xEA5F 0x5A5A      LSRS     R10,R10,#+21
    536           		id |= (tmp0 << 13); /* Add controller number */
   \   000000DA   0xEA5A 0x3A44      ORRS     R10,R10,R4, LSL #+13
    537          		/* Move all remaining sections one place up
    538          		if new entry will increase FullCAN list */
    539          		if ((CANAF_std_cnt & 0x0001) == 0)
   \   000000DE   0x....             LDR.N    R0,??DataTable4_2
   \   000000E0   0x7800             LDRB     R0,[R0, #+0]
   \   000000E2   0x07C0             LSLS     R0,R0,#+31
   \   000000E4   0xD426             BMI.N    ??CAN_LoadExplicitEntry_7
    540          		{
    541          			cnt1   = ((CANAF_FullCAN_cnt+1)>>1)+((CANAF_std_cnt+1)>>1);
   \   000000E6   0x....             LDR.N    R0,??DataTable4_1
   \   000000E8   0x8800             LDRH     R0,[R0, #+0]
   \   000000EA   0x1C40             ADDS     R0,R0,#+1
   \   000000EC   0x....             LDR.N    R1,??DataTable4_2
   \   000000EE   0x8809             LDRH     R1,[R1, #+0]
   \   000000F0   0x1C49             ADDS     R1,R1,#+1
   \   000000F2   0x1049             ASRS     R1,R1,#+1
   \   000000F4   0xEB11 0x0060      ADDS     R0,R1,R0, ASR #+1
   \   000000F8   0x0007             MOVS     R7,R0
    542          			bound1 = total - cnt1;
   \   000000FA   0xEBB9 0x0007      SUBS     R0,R9,R7
   \   000000FE   0x4683             MOV      R11,R0
    543          			buf0   = LPC_CANAF_RAM->mask[cnt1];
   \   00000100   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   00000104   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000106   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   0000010A   0x0005             MOVS     R5,R0
    544          			while(bound1--)
   \                     ??CAN_LoadExplicitEntry_8: (+1)
   \   0000010C   0x4658             MOV      R0,R11
   \   0000010E   0xF1B0 0x0B01      SUBS     R11,R0,#+1
   \   00000112   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000114   0x2800             CMP      R0,#+0
   \   00000116   0xD00D             BEQ.N    ??CAN_LoadExplicitEntry_7
    545          			{
    546          				cnt1++;
   \   00000118   0x1C7F             ADDS     R7,R7,#+1
    547          				buf1 = LPC_CANAF_RAM->mask[cnt1];
   \   0000011A   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   0000011E   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000120   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   00000124   0x0006             MOVS     R6,R0
    548          				LPC_CANAF_RAM->mask[cnt1] = buf0;
   \   00000126   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   0000012A   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000012C   0xF840 0x5027      STR      R5,[R0, R7, LSL #+2]
    549          				buf0 = buf1;
   \   00000130   0x0035             MOVS     R5,R6
   \   00000132   0xE7EB             B.N      ??CAN_LoadExplicitEntry_8
    550          			}
    551          		}
    552          		if (CANAF_std_cnt == 0)
   \                     ??CAN_LoadExplicitEntry_7: (+1)
   \   00000134   0x....             LDR.N    R0,??DataTable4_2
   \   00000136   0x8800             LDRH     R0,[R0, #+0]
   \   00000138   0x2800             CMP      R0,#+0
   \   0000013A   0xD111             BNE.N    ??CAN_LoadExplicitEntry_9
    553          		{
    554          			cnt2 = (CANAF_FullCAN_cnt + 1)>>1;
   \   0000013C   0x....             LDR.N    R0,??DataTable4_1
   \   0000013E   0x8800             LDRH     R0,[R0, #+0]
   \   00000140   0x1C40             ADDS     R0,R0,#+1
   \   00000142   0x1040             ASRS     R0,R0,#+1
   \   00000144   0x4680             MOV      R8,R0
    555          			/* For entering first ID */
    556          			LPC_CANAF_RAM->mask[cnt2] = 0x0000FFFF | (id << 16);
   \   00000146   0xEA5F 0x400A      LSLS     R0,R10,#+16
   \   0000014A   0xF440 0x407F      ORR      R0,R0,#0xFF00
   \   0000014E   0xF050 0x00FF      ORRS     R0,R0,#0xFF
   \   00000152   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x40038000
   \   00000156   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   0000015A   0xF841 0x0028      STR      R0,[R1, R8, LSL #+2]
   \   0000015E   0xE0DB             B.N      ??CAN_LoadExplicitEntry_10
    557          		}
    558          		else if (CANAF_std_cnt == 1)
   \                     ??CAN_LoadExplicitEntry_9: (+1)
   \   00000160   0x....             LDR.N    R0,??DataTable4_2
   \   00000162   0x8800             LDRH     R0,[R0, #+0]
   \   00000164   0x2801             CMP      R0,#+1
   \   00000166   0xD132             BNE.N    ??CAN_LoadExplicitEntry_11
    559          		{
    560          			cnt2 = (CANAF_FullCAN_cnt + 1)>>1;
   \   00000168   0x....             LDR.N    R0,??DataTable4_1
   \   0000016A   0x8800             LDRH     R0,[R0, #+0]
   \   0000016C   0x1C40             ADDS     R0,R0,#+1
   \   0000016E   0x1040             ASRS     R0,R0,#+1
   \   00000170   0x4680             MOV      R8,R0
    561          			/* For entering second ID */
    562          			if (((LPC_CANAF_RAM->mask[cnt2] >> 16)& 0xE7FF) > id)
   \   00000172   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   00000176   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   0000017A   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   0000017E   0xF24E 0x71FF      MOVW     R1,#+59391
   \   00000182   0xEA11 0x4010      ANDS     R0,R1,R0, LSR #+16
   \   00000186   0x4582             CMP      R10,R0
   \   00000188   0xD210             BCS.N    ??CAN_LoadExplicitEntry_12
    563          			{
    564          				LPC_CANAF_RAM->mask[cnt2] = (LPC_CANAF_RAM->mask[cnt2] >> 16) | (id << 16);
   \   0000018A   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   0000018E   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000192   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   00000196   0xEA5F 0x410A      LSLS     R1,R10,#+16
   \   0000019A   0xEA51 0x4010      ORRS     R0,R1,R0, LSR #+16
   \   0000019E   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x40038000
   \   000001A2   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000001A6   0xF841 0x0028      STR      R0,[R1, R8, LSL #+2]
   \   000001AA   0xE0B5             B.N      ??CAN_LoadExplicitEntry_10
    565          			}
    566          			else
    567          			{
    568          				LPC_CANAF_RAM->mask[cnt2] = (LPC_CANAF_RAM->mask[cnt2] & 0xFFFF0000) | id;
   \                     ??CAN_LoadExplicitEntry_12: (+1)
   \   000001AC   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   000001B0   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000001B4   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   000001B8   0x0C00             LSRS     R0,R0,#+16
   \   000001BA   0x0400             LSLS     R0,R0,#+16
   \   000001BC   0xEA5A 0x0000      ORRS     R0,R10,R0
   \   000001C0   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x40038000
   \   000001C4   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000001C8   0xF841 0x0028      STR      R0,[R1, R8, LSL #+2]
   \   000001CC   0xE0A4             B.N      ??CAN_LoadExplicitEntry_10
    569          			}
    570          		}
    571          		else
    572          		{
    573          			/* Find where to insert new ID */
    574          			cnt1 = (CANAF_FullCAN_cnt+1)>>1;
   \                     ??CAN_LoadExplicitEntry_11: (+1)
   \   000001CE   0x....             LDR.N    R0,??DataTable4_1
   \   000001D0   0x8800             LDRH     R0,[R0, #+0]
   \   000001D2   0x1C40             ADDS     R0,R0,#+1
   \   000001D4   0x1040             ASRS     R0,R0,#+1
   \   000001D6   0x0007             MOVS     R7,R0
    575          			cnt2 = CANAF_std_cnt;
   \   000001D8   0x....             LDR.N    R0,??DataTable4_2
   \   000001DA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001DE   0x4680             MOV      R8,R0
    576          			bound1 = ((CANAF_FullCAN_cnt+1)>>1)+((CANAF_std_cnt+1)>>1);
   \   000001E0   0x....             LDR.N    R0,??DataTable4_1
   \   000001E2   0x8800             LDRH     R0,[R0, #+0]
   \   000001E4   0x1C40             ADDS     R0,R0,#+1
   \   000001E6   0x....             LDR.N    R1,??DataTable4_2
   \   000001E8   0x8809             LDRH     R1,[R1, #+0]
   \   000001EA   0x1C49             ADDS     R1,R1,#+1
   \   000001EC   0x1049             ASRS     R1,R1,#+1
   \   000001EE   0xEB11 0x0060      ADDS     R0,R1,R0, ASR #+1
   \   000001F2   0x4683             MOV      R11,R0
    577          			while (cnt1 < bound1)
   \                     ??CAN_LoadExplicitEntry_13: (+1)
   \   000001F4   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000001F6   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   000001FA   0x455F             CMP      R7,R11
   \   000001FC   0xDA1F             BGE.N    ??CAN_LoadExplicitEntry_14
    578          			{
    579          				/* Loop through standard existing IDs */
    580          				if (((LPC_CANAF_RAM->mask[cnt1] >> 16) & 0xE7FF) > id)
   \   000001FE   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   00000202   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000204   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   00000208   0xF24E 0x71FF      MOVW     R1,#+59391
   \   0000020C   0xEA11 0x4010      ANDS     R0,R1,R0, LSR #+16
   \   00000210   0x4582             CMP      R10,R0
   \   00000212   0xD203             BCS.N    ??CAN_LoadExplicitEntry_15
    581          				{
    582          					cnt2 = cnt1 * 2;
   \   00000214   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000216   0x0078             LSLS     R0,R7,#+1
   \   00000218   0x4680             MOV      R8,R0
    583          					break;
   \   0000021A   0xE010             B.N      ??CAN_LoadExplicitEntry_14
    584          				}
    585          
    586          				if ((LPC_CANAF_RAM->mask[cnt1] & 0x0000E7FF) > id)
   \                     ??CAN_LoadExplicitEntry_15: (+1)
   \   0000021C   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   00000220   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000222   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   00000226   0xF24E 0x71FF      MOVW     R1,#+59391
   \   0000022A   0x4008             ANDS     R0,R1,R0
   \   0000022C   0x4582             CMP      R10,R0
   \   0000022E   0xD204             BCS.N    ??CAN_LoadExplicitEntry_16
    587          				{
    588          					cnt2 = cnt1 * 2 + 1;
   \   00000230   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000232   0x0078             LSLS     R0,R7,#+1
   \   00000234   0x1C40             ADDS     R0,R0,#+1
   \   00000236   0x4680             MOV      R8,R0
    589          					break;
   \   00000238   0xE001             B.N      ??CAN_LoadExplicitEntry_14
    590          				}
    591          
    592          				cnt1++;
   \                     ??CAN_LoadExplicitEntry_16: (+1)
   \   0000023A   0x1C7F             ADDS     R7,R7,#+1
   \   0000023C   0xE7DA             B.N      ??CAN_LoadExplicitEntry_13
    593          			}
    594          			/* cnt1 = U32 where to insert new ID */
    595          			/* cnt2 = U16 where to insert new ID */
    596          
    597          			if (cnt1 == bound1)
   \                     ??CAN_LoadExplicitEntry_14: (+1)
   \   0000023E   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000240   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   00000244   0x455F             CMP      R7,R11
   \   00000246   0xD11E             BNE.N    ??CAN_LoadExplicitEntry_17
    598          			{
    599          				/* Adding ID as last entry */
    600          				/* Even number of IDs exists */
    601          				if ((CANAF_std_cnt & 0x0001) == 0)
   \   00000248   0x....             LDR.N    R0,??DataTable4_2
   \   0000024A   0x7800             LDRB     R0,[R0, #+0]
   \   0000024C   0x07C0             LSLS     R0,R0,#+31
   \   0000024E   0xD40B             BMI.N    ??CAN_LoadExplicitEntry_18
    602          				{
    603          					LPC_CANAF_RAM->mask[cnt1]  = 0x0000FFFF | (id << 16);
   \   00000250   0xEA5F 0x400A      LSLS     R0,R10,#+16
   \   00000254   0xF440 0x407F      ORR      R0,R0,#0xFF00
   \   00000258   0xF050 0x00FF      ORRS     R0,R0,#0xFF
   \   0000025C   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x40038000
   \   00000260   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000262   0xF841 0x0027      STR      R0,[R1, R7, LSL #+2]
   \   00000266   0xE057             B.N      ??CAN_LoadExplicitEntry_10
    604          				}
    605          				/* Odd  number of IDs exists */
    606          				else
    607          				{
    608          					LPC_CANAF_RAM->mask[cnt1]  = (LPC_CANAF_RAM->mask[cnt1] & 0xFFFF0000) | id;
   \                     ??CAN_LoadExplicitEntry_18: (+1)
   \   00000268   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   0000026C   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000026E   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   00000272   0x0C00             LSRS     R0,R0,#+16
   \   00000274   0x0400             LSLS     R0,R0,#+16
   \   00000276   0xEA5A 0x0000      ORRS     R0,R10,R0
   \   0000027A   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x40038000
   \   0000027E   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000280   0xF841 0x0027      STR      R0,[R1, R7, LSL #+2]
   \   00000284   0xE048             B.N      ??CAN_LoadExplicitEntry_10
    609          				}
    610          			}
    611          			else
    612          			{
    613          				buf0 = LPC_CANAF_RAM->mask[cnt1]; /* Remember current entry */
   \                     ??CAN_LoadExplicitEntry_17: (+1)
   \   00000286   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   0000028A   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000028C   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   00000290   0x0005             MOVS     R5,R0
    614          				if ((cnt2 & 0x0001) == 0)
   \   00000292   0xEA5F 0x70C8      LSLS     R0,R8,#+31
   \   00000296   0xD404             BMI.N    ??CAN_LoadExplicitEntry_19
    615          				{
    616          					/* Insert new mask to even address*/
    617          					buf1 = (id << 16) | (buf0 >> 16);
   \   00000298   0x0C28             LSRS     R0,R5,#+16
   \   0000029A   0xEA50 0x400A      ORRS     R0,R0,R10, LSL #+16
   \   0000029E   0x0006             MOVS     R6,R0
   \   000002A0   0xE004             B.N      ??CAN_LoadExplicitEntry_20
    618          				}
    619          				else
    620          				{
    621          					/* Insert new mask to odd  address */
    622          					buf1 = (buf0 & 0xFFFF0000) | id;
   \                     ??CAN_LoadExplicitEntry_19: (+1)
   \   000002A2   0x0C28             LSRS     R0,R5,#+16
   \   000002A4   0x0400             LSLS     R0,R0,#+16
   \   000002A6   0xEA5A 0x0000      ORRS     R0,R10,R0
   \   000002AA   0x0006             MOVS     R6,R0
    623          				}
    624          				LPC_CANAF_RAM->mask[cnt1] = buf1;/* Insert mask */
   \                     ??CAN_LoadExplicitEntry_20: (+1)
   \   000002AC   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   000002B0   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000002B2   0xF840 0x6027      STR      R6,[R0, R7, LSL #+2]
    625          				bound1 = ((CANAF_FullCAN_cnt+1)>>1)+((CANAF_std_cnt+1)>>1)-1;
   \   000002B6   0x....             LDR.N    R0,??DataTable4_1
   \   000002B8   0x8800             LDRH     R0,[R0, #+0]
   \   000002BA   0x1C40             ADDS     R0,R0,#+1
   \   000002BC   0x....             LDR.N    R1,??DataTable4_2
   \   000002BE   0x8809             LDRH     R1,[R1, #+0]
   \   000002C0   0x1C49             ADDS     R1,R1,#+1
   \   000002C2   0x1049             ASRS     R1,R1,#+1
   \   000002C4   0xEB11 0x0060      ADDS     R0,R1,R0, ASR #+1
   \   000002C8   0x1E40             SUBS     R0,R0,#+1
   \   000002CA   0x4683             MOV      R11,R0
    626          				/* Move all remaining standard mask entries one place up */
    627          				while (cnt1 < bound1)
   \                     ??CAN_LoadExplicitEntry_21: (+1)
   \   000002CC   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000002CE   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   000002D2   0x455F             CMP      R7,R11
   \   000002D4   0xDA10             BGE.N    ??CAN_LoadExplicitEntry_22
    628          				{
    629          					cnt1++;
   \   000002D6   0x1C7F             ADDS     R7,R7,#+1
    630          					buf1  = LPC_CANAF_RAM->mask[cnt1];
   \   000002D8   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   000002DC   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000002DE   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   000002E2   0x0006             MOVS     R6,R0
    631          					LPC_CANAF_RAM->mask[cnt1] = (buf1 >> 16) | (buf0 << 16);
   \   000002E4   0x0428             LSLS     R0,R5,#+16
   \   000002E6   0xEA50 0x4016      ORRS     R0,R0,R6, LSR #+16
   \   000002EA   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x40038000
   \   000002EE   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000002F0   0xF841 0x0027      STR      R0,[R1, R7, LSL #+2]
    632          					buf0  = buf1;
   \   000002F4   0x0035             MOVS     R5,R6
   \   000002F6   0xE7E9             B.N      ??CAN_LoadExplicitEntry_21
    633          				}
    634          
    635          				if ((CANAF_std_cnt & 0x0001) == 0)
   \                     ??CAN_LoadExplicitEntry_22: (+1)
   \   000002F8   0x....             LDR.N    R0,??DataTable4_2
   \   000002FA   0x7800             LDRB     R0,[R0, #+0]
   \   000002FC   0x07C0             LSLS     R0,R0,#+31
   \   000002FE   0xD40B             BMI.N    ??CAN_LoadExplicitEntry_10
    636          				{
    637          					/* Even number of IDs exists */
    638          					LPC_CANAF_RAM->mask[cnt1+1] = (buf0 <<16) |(0x0000FFFF);
   \   00000300   0x0428             LSLS     R0,R5,#+16
   \   00000302   0xF440 0x407F      ORR      R0,R0,#0xFF00
   \   00000306   0xF050 0x00FF      ORRS     R0,R0,#0xFF
   \   0000030A   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000030C   0x00B9             LSLS     R1,R7,#+2
   \   0000030E   0xF101 0x4180      ADD      R1,R1,#+1073741824
   \   00000312   0xF511 0x3160      ADDS     R1,R1,#+229376
   \   00000316   0x6048             STR      R0,[R1, #+4]
    639          				}
    640          			}
    641          		}
    642          		CANAF_std_cnt++;
   \                     ??CAN_LoadExplicitEntry_10: (+1)
   \   00000318   0x....             LDR.N    R0,??DataTable4_2
   \   0000031A   0x8800             LDRH     R0,[R0, #+0]
   \   0000031C   0x1C40             ADDS     R0,R0,#+1
   \   0000031E   0x....             LDR.N    R1,??DataTable4_2
   \   00000320   0x8008             STRH     R0,[R1, #+0]
    643          		//update address values
    644          		LPC_CANAF->SFF_GRP_sa +=0x04 ;
   \   00000322   0x.... 0x....      LDR.W    R0,??DataTable6_1  ;; 0x4003c008
   \   00000326   0x6800             LDR      R0,[R0, #+0]
   \   00000328   0x1D00             ADDS     R0,R0,#+4
   \   0000032A   0x.... 0x....      LDR.W    R1,??DataTable6_1  ;; 0x4003c008
   \   0000032E   0x6008             STR      R0,[R1, #+0]
    645          		LPC_CANAF->EFF_sa     +=0x04 ;
   \   00000330   0x.... 0x....      LDR.W    R0,??DataTable6_2  ;; 0x4003c00c
   \   00000334   0x6800             LDR      R0,[R0, #+0]
   \   00000336   0x1D00             ADDS     R0,R0,#+4
   \   00000338   0x.... 0x....      LDR.W    R1,??DataTable6_2  ;; 0x4003c00c
   \   0000033C   0x6008             STR      R0,[R1, #+0]
    646          		LPC_CANAF->EFF_GRP_sa +=0x04;
   \   0000033E   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x4003c010
   \   00000342   0x6800             LDR      R0,[R0, #+0]
   \   00000344   0x1D00             ADDS     R0,R0,#+4
   \   00000346   0x.... 0x....      LDR.W    R1,??DataTable6_3  ;; 0x4003c010
   \   0000034A   0x6008             STR      R0,[R1, #+0]
    647          		LPC_CANAF->ENDofTable +=0x04;
   \   0000034C   0x.... 0x....      LDR.W    R0,??DataTable6_4  ;; 0x4003c014
   \   00000350   0x6800             LDR      R0,[R0, #+0]
   \   00000352   0x1D00             ADDS     R0,R0,#+4
   \   00000354   0x.... 0x....      LDR.W    R1,??DataTable6_4  ;; 0x4003c014
   \   00000358   0x6008             STR      R0,[R1, #+0]
   \   0000035A   0xE05B             B.N      ??CAN_LoadExplicitEntry_23
    648           	}
    649          
    650          /*********** Add Explicit Extended Identifier Frame Format entry *********/
    651           	else
    652           	{
    653           		/* Add controller number */
    654           		id |= (tmp0) << 29;
   \                     ??CAN_LoadExplicitEntry_6: (+1)
   \   0000035C   0xEA5A 0x7A44      ORRS     R10,R10,R4, LSL #+29
    655          
    656           		cnt1 = ((CANAF_FullCAN_cnt+1)>>1)+(((CANAF_std_cnt + 1) >> 1) + CANAF_gstd_cnt);
   \   00000360   0x....             LDR.N    R0,??DataTable4_1
   \   00000362   0x8800             LDRH     R0,[R0, #+0]
   \   00000364   0x1C40             ADDS     R0,R0,#+1
   \   00000366   0x....             LDR.N    R1,??DataTable4_2
   \   00000368   0x8809             LDRH     R1,[R1, #+0]
   \   0000036A   0x1C49             ADDS     R1,R1,#+1
   \   0000036C   0x1049             ASRS     R1,R1,#+1
   \   0000036E   0xEB11 0x0060      ADDS     R0,R1,R0, ASR #+1
   \   00000372   0x.... 0x....      LDR.W    R1,??DataTable5
   \   00000376   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000037A   0x1808             ADDS     R0,R1,R0
   \   0000037C   0x0007             MOVS     R7,R0
    657           		cnt2 = 0;
   \   0000037E   0x2000             MOVS     R0,#+0
   \   00000380   0x4680             MOV      R8,R0
    658           		while (cnt2 < CANAF_ext_cnt)
   \                     ??CAN_LoadExplicitEntry_24: (+1)
   \   00000382   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000386   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   0000038A   0x8800             LDRH     R0,[R0, #+0]
   \   0000038C   0x4580             CMP      R8,R0
   \   0000038E   0xDA0A             BGE.N    ??CAN_LoadExplicitEntry_25
    659           		{
    660           			/* Loop through extended existing masks*/
    661           			if (LPC_CANAF_RAM->mask[cnt1] > id)
   \   00000390   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   00000394   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000396   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   0000039A   0x4582             CMP      R10,R0
   \   0000039C   0xD303             BCC.N    ??CAN_LoadExplicitEntry_25
    662           			{
    663           				break;
    664           			}
    665           			cnt1++;/* cnt1 = U32 where to insert new mask */
   \                     ??CAN_LoadExplicitEntry_26: (+1)
   \   0000039E   0x1C7F             ADDS     R7,R7,#+1
    666          			cnt2++;
   \   000003A0   0xF118 0x0801      ADDS     R8,R8,#+1
   \   000003A4   0xE7ED             B.N      ??CAN_LoadExplicitEntry_24
    667           		}
    668          
    669           		buf0 = LPC_CANAF_RAM->mask[cnt1];  /* Remember current entry */
   \                     ??CAN_LoadExplicitEntry_25: (+1)
   \   000003A6   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   000003AA   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000003AC   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   000003B0   0x0005             MOVS     R5,R0
    670           		LPC_CANAF_RAM->mask[cnt1] = id;    /* Insert mask */
   \   000003B2   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   000003B6   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000003B8   0xF840 0xA027      STR      R10,[R0, R7, LSL #+2]
    671          
    672           		CANAF_ext_cnt++;
   \   000003BC   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   000003C0   0x8800             LDRH     R0,[R0, #+0]
   \   000003C2   0x1C40             ADDS     R0,R0,#+1
   \   000003C4   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   000003C8   0x8008             STRH     R0,[R1, #+0]
    673          
    674           		bound1 = total;
   \   000003CA   0x46CB             MOV      R11,R9
    675           		/* Move all remaining extended mask entries one place up*/
    676           		while (cnt2 < bound1)
   \                     ??CAN_LoadExplicitEntry_27: (+1)
   \   000003CC   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000003D0   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   000003D4   0x45D8             CMP      R8,R11
   \   000003D6   0xDA0F             BGE.N    ??CAN_LoadExplicitEntry_28
    677           		{
    678           			cnt1++;
   \   000003D8   0x1C7F             ADDS     R7,R7,#+1
    679           			cnt2++;
   \   000003DA   0xF118 0x0801      ADDS     R8,R8,#+1
    680           			buf1 = LPC_CANAF_RAM->mask[cnt1];
   \   000003DE   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   000003E2   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000003E4   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   000003E8   0x0006             MOVS     R6,R0
    681           			LPC_CANAF_RAM->mask[cnt1] = buf0;
   \   000003EA   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   000003EE   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000003F0   0xF840 0x5027      STR      R5,[R0, R7, LSL #+2]
    682           			buf0 = buf1;
   \   000003F4   0x0035             MOVS     R5,R6
   \   000003F6   0xE7E9             B.N      ??CAN_LoadExplicitEntry_27
    683           		}
    684           		/* update address values */
    685           		LPC_CANAF->EFF_GRP_sa += 4;
   \                     ??CAN_LoadExplicitEntry_28: (+1)
   \   000003F8   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x4003c010
   \   000003FC   0x6800             LDR      R0,[R0, #+0]
   \   000003FE   0x1D00             ADDS     R0,R0,#+4
   \   00000400   0x.... 0x....      LDR.W    R1,??DataTable6_3  ;; 0x4003c010
   \   00000404   0x6008             STR      R0,[R1, #+0]
    686           		LPC_CANAF->ENDofTable += 4;
   \   00000406   0x.... 0x....      LDR.W    R0,??DataTable6_4  ;; 0x4003c014
   \   0000040A   0x6800             LDR      R0,[R0, #+0]
   \   0000040C   0x1D00             ADDS     R0,R0,#+4
   \   0000040E   0x.... 0x....      LDR.W    R1,??DataTable6_4  ;; 0x4003c014
   \   00000412   0x6008             STR      R0,[R1, #+0]
    687           	}
    688           	if(CANAF_FullCAN_cnt == 0) //not use FullCAN mode
   \                     ??CAN_LoadExplicitEntry_23: (+1)
   \   00000414   0x....             LDR.N    R0,??DataTable4_1
   \   00000416   0x8800             LDRH     R0,[R0, #+0]
   \   00000418   0x2800             CMP      R0,#+0
   \   0000041A   0xD103             BNE.N    ??CAN_LoadExplicitEntry_29
    689           	{
    690           		LPC_CANAF->AFMR = 0x00;//not use FullCAN mode
   \   0000041C   0x2000             MOVS     R0,#+0
   \   0000041E   0x....             LDR.N    R1,??DataTable4  ;; 0x4003c000
   \   00000420   0x6008             STR      R0,[R1, #+0]
   \   00000422   0xE002             B.N      ??CAN_LoadExplicitEntry_30
    691           	}
    692           	else
    693           	{
    694           		LPC_CANAF->AFMR = 0x04;
   \                     ??CAN_LoadExplicitEntry_29: (+1)
   \   00000424   0x2004             MOVS     R0,#+4
   \   00000426   0x....             LDR.N    R1,??DataTable4  ;; 0x4003c000
   \   00000428   0x6008             STR      R0,[R1, #+0]
    695           	}
    696          
    697           	return CAN_OK;
   \                     ??CAN_LoadExplicitEntry_30: (+1)
   \   0000042A   0x2001             MOVS     R0,#+1
   \                     ??CAN_LoadExplicitEntry_5: (+1)
   \   0000042C   0xE8BD 0x8FFE      POP      {R1-R11,PC}      ;; return
    698          }
    699          
    700          /********************************************************************//**
    701           * @brief		Load FullCAN entry into AFLUT
    702           * @param[in]	CANx: CAN peripheral selected, should be:
    703           * 				- LPC_CAN1: CAN1 peripheral
    704           * 				- LPC_CAN2: CAN2 peripheral
    705           * @param[in]	id: identifier of entry that will be added
    706           * @return 		CAN_ERROR, could be:
    707           * 				- CAN_OK: loading is successful
    708           * 				- CAN_ID_EXIT_ERROR: ID exited in FullCAN Section
    709           * 				- CAN_OBJECTS_FULL_ERROR: no more space available
    710           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    711          CAN_ERROR CAN_LoadFullCANEntry (LPC_CAN_TypeDef* CANx, uint16_t id)
    712          {
   \                     CAN_LoadFullCANEntry: (+1)
   \   00000000   0xE92D 0x4FF1      PUSH     {R0,R4-R11,LR}
   \   00000004   0xB084             SUB      SP,SP,#+16
   \   00000006   0x4689             MOV      R9,R1
    713          	uint32_t ctrl0 = 0;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x9000             STR      R0,[SP, #+0]
    714          	uint32_t buf0=0, buf1=0, buf2=0;
   \   0000000C   0x2400             MOVS     R4,#+0
   \   0000000E   0x2500             MOVS     R5,#+0
   \   00000010   0x2600             MOVS     R6,#+0
    715          	uint32_t tmp0=0, tmp1=0, tmp2=0;
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x9003             STR      R0,[SP, #+12]
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x9002             STR      R0,[SP, #+8]
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x9001             STR      R0,[SP, #+4]
    716          	int16_t cnt1=0, cnt2=0, bound1=0, total=0;
   \   0000001E   0xF05F 0x0A00      MOVS     R10,#+0
   \   00000022   0x2700             MOVS     R7,#+0
   \   00000024   0xF05F 0x0B00      MOVS     R11,#+0
   \   00000028   0xF05F 0x0800      MOVS     R8,#+0
    717          
    718          	CHECK_PARAM(PARAM_CANx(CANx));
   \   0000002C   0x9804             LDR      R0,[SP, #+16]
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable5_3  ;; 0x40044000
   \   00000032   0x4288             CMP      R0,R1
   \   00000034   0xD00A             BEQ.N    ??CAN_LoadFullCANEntry_0
   \   00000036   0x9804             LDR      R0,[SP, #+16]
   \   00000038   0x.... 0x....      LDR.W    R1,??DataTable5_4  ;; 0x40048000
   \   0000003C   0x4288             CMP      R0,R1
   \   0000003E   0xD005             BEQ.N    ??CAN_LoadFullCANEntry_0
   \   00000040   0xF240 0x21CE      MOVW     R1,#+718
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable5_5
   \   00000048   0x.... 0x....      BL       check_failed
    719          
    720          	if (CANx == LPC_CAN1)
   \                     ??CAN_LoadFullCANEntry_0: (+1)
   \   0000004C   0x9804             LDR      R0,[SP, #+16]
   \   0000004E   0x.... 0x....      LDR.W    R1,??DataTable5_3  ;; 0x40044000
   \   00000052   0x4288             CMP      R0,R1
   \   00000054   0xD102             BNE.N    ??CAN_LoadFullCANEntry_1
    721          	{
    722          		ctrl0 = 0;
   \   00000056   0x2000             MOVS     R0,#+0
   \   00000058   0x9000             STR      R0,[SP, #+0]
   \   0000005A   0xE006             B.N      ??CAN_LoadFullCANEntry_2
    723          	}
    724          	else if (CANx == LPC_CAN2)
   \                     ??CAN_LoadFullCANEntry_1: (+1)
   \   0000005C   0x9804             LDR      R0,[SP, #+16]
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable5_4  ;; 0x40048000
   \   00000062   0x4288             CMP      R0,R1
   \   00000064   0xD101             BNE.N    ??CAN_LoadFullCANEntry_2
    725          	{
    726          		ctrl0 = 1;
   \   00000066   0x2001             MOVS     R0,#+1
   \   00000068   0x9000             STR      R0,[SP, #+0]
    727          	}
    728          
    729          	/* Acceptance Filter Memory full - return */
    730          	total =((CANAF_FullCAN_cnt+1)>>1)+ CANAF_FullCAN_cnt*3 +((CANAF_std_cnt + 1) >> 1)+  \
    731          			CANAF_gstd_cnt + CANAF_ext_cnt + (CANAF_gext_cnt<<1);
   \                     ??CAN_LoadFullCANEntry_2: (+1)
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   0000006E   0x8800             LDRH     R0,[R0, #+0]
   \   00000070   0x1C40             ADDS     R0,R0,#+1
   \   00000072   0x1040             ASRS     R0,R0,#+1
   \   00000074   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   00000078   0x8809             LDRH     R1,[R1, #+0]
   \   0000007A   0x2203             MOVS     R2,#+3
   \   0000007C   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   00000080   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   00000084   0x8809             LDRH     R1,[R1, #+0]
   \   00000086   0x1C49             ADDS     R1,R1,#+1
   \   00000088   0xEB10 0x0061      ADDS     R0,R0,R1, ASR #+1
   \   0000008C   0x.... 0x....      LDR.W    R1,??DataTable5
   \   00000090   0x8809             LDRH     R1,[R1, #+0]
   \   00000092   0x1808             ADDS     R0,R1,R0
   \   00000094   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   00000098   0x8809             LDRH     R1,[R1, #+0]
   \   0000009A   0x1808             ADDS     R0,R1,R0
   \   0000009C   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   000000A0   0x8809             LDRH     R1,[R1, #+0]
   \   000000A2   0xEB10 0x0041      ADDS     R0,R0,R1, LSL #+1
   \   000000A6   0x4680             MOV      R8,R0
    732          	//don't have enough space for this fullCAN Entry and its Object(3*32 bytes)
    733          	if ((total >=508)||(CANAF_FullCAN_cnt>=64)){
   \   000000A8   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000000AC   0xF5B8 0x7FFE      CMP      R8,#+508
   \   000000B0   0xDA04             BGE.N    ??CAN_LoadFullCANEntry_3
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   000000B6   0x8800             LDRH     R0,[R0, #+0]
   \   000000B8   0x2840             CMP      R0,#+64
   \   000000BA   0xDB01             BLT.N    ??CAN_LoadFullCANEntry_4
    734          		return CAN_OBJECTS_FULL_ERROR;
   \                     ??CAN_LoadFullCANEntry_3: (+1)
   \   000000BC   0x2002             MOVS     R0,#+2
   \   000000BE   0xE1F5             B.N      ??CAN_LoadFullCANEntry_5
    735          	}
    736          	/* Setup Acceptance Filter Configuration
    737              Acceptance Filter Mode Register = Off */
    738          	LPC_CANAF->AFMR = 0x00000001;
   \                     ??CAN_LoadFullCANEntry_4: (+1)
   \   000000C0   0x2001             MOVS     R0,#+1
   \   000000C2   0x.... 0x....      LDR.W    R1,??DataTable6_7  ;; 0x4003c000
   \   000000C6   0x6008             STR      R0,[R1, #+0]
    739          
    740          	/* Add mask for standard identifiers   */
    741          	id &= 0x07FF;
   \   000000C8   0xEA5F 0x5949      LSLS     R9,R9,#+21       ;; ZeroExtS R9,R9,#+21,#+21
   \   000000CC   0xEA5F 0x5959      LSRS     R9,R9,#+21
    742          	id |= (ctrl0 << 13) | (1 << 11); /* Add controller number */
   \   000000D0   0x9800             LDR      R0,[SP, #+0]
   \   000000D2   0x0340             LSLS     R0,R0,#+13
   \   000000D4   0xF450 0x6000      ORRS     R0,R0,#0x800
   \   000000D8   0xEA50 0x0909      ORRS     R9,R0,R9
    743          //	total = ((CANAF_std_cnt + 1) >> 1)+ CANAF_gstd_cnt + CANAF_ext_cnt + (CANAF_gext_cnt<<1);
    744          	/* Move all remaining sections one place up
    745          	if new entry will increase FullCAN list */
    746          	if (((CANAF_FullCAN_cnt & 0x0001) == 0)&&(total!=0))
   \   000000DC   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   000000E0   0x7800             LDRB     R0,[R0, #+0]
   \   000000E2   0x07C0             LSLS     R0,R0,#+31
   \   000000E4   0xD429             BMI.N    ??CAN_LoadFullCANEntry_6
   \   000000E6   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000000EA   0xF1B8 0x0F00      CMP      R8,#+0
   \   000000EE   0xD024             BEQ.N    ??CAN_LoadFullCANEntry_6
    747          	{
    748          		//then remove remaining section
    749          		cnt1   = (CANAF_FullCAN_cnt >> 1);
   \   000000F0   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   000000F4   0x8800             LDRH     R0,[R0, #+0]
   \   000000F6   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000F8   0x0840             LSRS     R0,R0,#+1
   \   000000FA   0x4682             MOV      R10,R0
    750          		bound1 = total;
   \   000000FC   0x46C3             MOV      R11,R8
    751          		buf0   = LPC_CANAF_RAM->mask[cnt1];
   \   000000FE   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   00000102   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   00000106   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   0000010A   0x0004             MOVS     R4,R0
    752          
    753          		while (bound1--)
   \                     ??CAN_LoadFullCANEntry_7: (+1)
   \   0000010C   0x4658             MOV      R0,R11
   \   0000010E   0xF1B0 0x0B01      SUBS     R11,R0,#+1
   \   00000112   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000114   0x2800             CMP      R0,#+0
   \   00000116   0xD010             BEQ.N    ??CAN_LoadFullCANEntry_6
    754          		{
    755          			cnt1++;
   \   00000118   0xF11A 0x0A01      ADDS     R10,R10,#+1
    756          			buf1 = LPC_CANAF_RAM->mask[cnt1];
   \   0000011C   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   00000120   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   00000124   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   00000128   0x0005             MOVS     R5,R0
    757          			LPC_CANAF_RAM->mask[cnt1] = buf0;
   \   0000012A   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   0000012E   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   00000132   0xF840 0x402A      STR      R4,[R0, R10, LSL #+2]
    758          			buf0 = buf1;
   \   00000136   0x002C             MOVS     R4,R5
   \   00000138   0xE7E8             B.N      ??CAN_LoadFullCANEntry_7
    759          		}
    760          	}
    761          	if (CANAF_FullCAN_cnt == 0)
   \                     ??CAN_LoadFullCANEntry_6: (+1)
   \   0000013A   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   0000013E   0x8800             LDRH     R0,[R0, #+0]
   \   00000140   0x2800             CMP      R0,#+0
   \   00000142   0xD10B             BNE.N    ??CAN_LoadFullCANEntry_8
    762          	{
    763          		/* For entering first ID */
    764          		LPC_CANAF_RAM->mask[0] = 0x0000FFFF | (id << 16);
   \   00000144   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   00000148   0xEA5F 0x4009      LSLS     R0,R9,#+16
   \   0000014C   0xF440 0x407F      ORR      R0,R0,#0xFF00
   \   00000150   0xF050 0x00FF      ORRS     R0,R0,#0xFF
   \   00000154   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x40038000
   \   00000158   0x6008             STR      R0,[R1, #+0]
   \   0000015A   0xE0EE             B.N      ??CAN_LoadFullCANEntry_9
    765          	}
    766          	else if (CANAF_FullCAN_cnt == 1)
   \                     ??CAN_LoadFullCANEntry_8: (+1)
   \   0000015C   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   00000160   0x8800             LDRH     R0,[R0, #+0]
   \   00000162   0x2801             CMP      R0,#+1
   \   00000164   0xD124             BNE.N    ??CAN_LoadFullCANEntry_10
    767          	{
    768          		/* For entering second ID */
    769          		if (((LPC_CANAF_RAM->mask[0] >> 16)& 0xE7FF) > id)
   \   00000166   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   0000016A   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   0000016E   0x6800             LDR      R0,[R0, #+0]
   \   00000170   0xF24E 0x71FF      MOVW     R1,#+59391
   \   00000174   0xEA11 0x4010      ANDS     R0,R1,R0, LSR #+16
   \   00000178   0x4581             CMP      R9,R0
   \   0000017A   0xD20C             BCS.N    ??CAN_LoadFullCANEntry_11
    770          		{
    771          			LPC_CANAF_RAM->mask[0] = (LPC_CANAF_RAM->mask[0] >> 16) | (id << 16);
   \   0000017C   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   00000180   0x6800             LDR      R0,[R0, #+0]
   \   00000182   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   00000186   0xEA5F 0x4109      LSLS     R1,R9,#+16
   \   0000018A   0xEA51 0x4010      ORRS     R0,R1,R0, LSR #+16
   \   0000018E   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x40038000
   \   00000192   0x6008             STR      R0,[R1, #+0]
   \   00000194   0xE0D1             B.N      ??CAN_LoadFullCANEntry_9
    772          		}
    773          		else
    774          		{
    775          			LPC_CANAF_RAM->mask[0] = (LPC_CANAF_RAM->mask[0] & 0xFFFF0000) | id;
   \                     ??CAN_LoadFullCANEntry_11: (+1)
   \   00000196   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   0000019A   0x6800             LDR      R0,[R0, #+0]
   \   0000019C   0x0C00             LSRS     R0,R0,#+16
   \   0000019E   0x0400             LSLS     R0,R0,#+16
   \   000001A0   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   000001A4   0xEA59 0x0000      ORRS     R0,R9,R0
   \   000001A8   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x40038000
   \   000001AC   0x6008             STR      R0,[R1, #+0]
   \   000001AE   0xE0C4             B.N      ??CAN_LoadFullCANEntry_9
    776          		}
    777          	}
    778          	else
    779          	{
    780          		/* Find where to insert new ID */
    781          		cnt1 = 0;
   \                     ??CAN_LoadFullCANEntry_10: (+1)
   \   000001B0   0x2000             MOVS     R0,#+0
   \   000001B2   0x4682             MOV      R10,R0
    782          		cnt2 = CANAF_FullCAN_cnt;
   \   000001B4   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   000001B8   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001BC   0x0007             MOVS     R7,R0
    783          		bound1 = (CANAF_FullCAN_cnt - 1) >> 1;
   \   000001BE   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   000001C2   0x8800             LDRH     R0,[R0, #+0]
   \   000001C4   0x1E40             SUBS     R0,R0,#+1
   \   000001C6   0x1040             ASRS     R0,R0,#+1
   \   000001C8   0x4683             MOV      R11,R0
    784          		while (cnt1 <= bound1)
   \                     ??CAN_LoadFullCANEntry_12: (+1)
   \   000001CA   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   000001CE   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   000001D2   0x45D3             CMP      R11,R10
   \   000001D4   0xDB32             BLT.N    ??CAN_LoadFullCANEntry_13
    785          		{
    786          			/* Loop through standard existing IDs */
    787          			if (((LPC_CANAF_RAM->mask[cnt1] >> 16) & 0xE7FF) > (id & 0xE7FF))
   \   000001D6   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   000001DA   0xF24E 0x70FF      MOVW     R0,#+59391
   \   000001DE   0xEA10 0x0009      ANDS     R0,R0,R9
   \   000001E2   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x40038000
   \   000001E6   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   000001EA   0xF851 0x102A      LDR      R1,[R1, R10, LSL #+2]
   \   000001EE   0xF24E 0x72FF      MOVW     R2,#+59391
   \   000001F2   0xEA12 0x4111      ANDS     R1,R2,R1, LSR #+16
   \   000001F6   0x4288             CMP      R0,R1
   \   000001F8   0xD205             BCS.N    ??CAN_LoadFullCANEntry_14
    788          			{
    789          				cnt2 = cnt1 * 2;
   \   000001FA   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   000001FE   0xEA5F 0x004A      LSLS     R0,R10,#+1
   \   00000202   0x0007             MOVS     R7,R0
    790          				break;
   \   00000204   0xE01A             B.N      ??CAN_LoadFullCANEntry_13
    791          			}
    792          
    793          			if ((LPC_CANAF_RAM->mask[cnt1] & 0x0000E7FF) > (id & 0xE7FF))
   \                     ??CAN_LoadFullCANEntry_14: (+1)
   \   00000206   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   0000020A   0xF24E 0x70FF      MOVW     R0,#+59391
   \   0000020E   0xEA10 0x0009      ANDS     R0,R0,R9
   \   00000212   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x40038000
   \   00000216   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   0000021A   0xF851 0x102A      LDR      R1,[R1, R10, LSL #+2]
   \   0000021E   0xF24E 0x72FF      MOVW     R2,#+59391
   \   00000222   0x4011             ANDS     R1,R2,R1
   \   00000224   0x4288             CMP      R0,R1
   \   00000226   0xD206             BCS.N    ??CAN_LoadFullCANEntry_15
    794          			{
    795          				cnt2 = cnt1 * 2 + 1;
   \   00000228   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   0000022C   0xEA5F 0x004A      LSLS     R0,R10,#+1
   \   00000230   0x1C40             ADDS     R0,R0,#+1
   \   00000232   0x0007             MOVS     R7,R0
    796          				break;
   \   00000234   0xE002             B.N      ??CAN_LoadFullCANEntry_13
    797          			}
    798          
    799          			cnt1++;
   \                     ??CAN_LoadFullCANEntry_15: (+1)
   \   00000236   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \   0000023A   0xE7C6             B.N      ??CAN_LoadFullCANEntry_12
    800          		}
    801          		/* cnt1 = U32 where to insert new ID */
    802          		/* cnt2 = U16 where to insert new ID */
    803          
    804          		if (cnt1 > bound1)
   \                     ??CAN_LoadFullCANEntry_13: (+1)
   \   0000023C   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   00000240   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   00000244   0x45D3             CMP      R11,R10
   \   00000246   0xDA26             BGE.N    ??CAN_LoadFullCANEntry_16
    805          		{
    806          			/* Adding ID as last entry */
    807          			/* Even number of IDs exists */
    808          			if ((CANAF_FullCAN_cnt & 0x0001) == 0)
   \   00000248   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   0000024C   0x7800             LDRB     R0,[R0, #+0]
   \   0000024E   0x07C0             LSLS     R0,R0,#+31
   \   00000250   0xD40E             BMI.N    ??CAN_LoadFullCANEntry_17
    809          			{
    810          				LPC_CANAF_RAM->mask[cnt1]  = 0x0000FFFF | (id << 16);
   \   00000252   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   00000256   0xEA5F 0x4009      LSLS     R0,R9,#+16
   \   0000025A   0xF440 0x407F      ORR      R0,R0,#0xFF00
   \   0000025E   0xF050 0x00FF      ORRS     R0,R0,#0xFF
   \   00000262   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x40038000
   \   00000266   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   0000026A   0xF841 0x002A      STR      R0,[R1, R10, LSL #+2]
   \   0000026E   0xE064             B.N      ??CAN_LoadFullCANEntry_9
    811          			}
    812          			/* Odd  number of IDs exists */
    813          			else
    814          			{
    815          				LPC_CANAF_RAM->mask[cnt1]  = (LPC_CANAF_RAM->mask[cnt1] & 0xFFFF0000) | id;
   \                     ??CAN_LoadFullCANEntry_17: (+1)
   \   00000270   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   00000274   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   00000278   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   0000027C   0x0C00             LSRS     R0,R0,#+16
   \   0000027E   0x0400             LSLS     R0,R0,#+16
   \   00000280   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   00000284   0xEA59 0x0000      ORRS     R0,R9,R0
   \   00000288   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x40038000
   \   0000028C   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   00000290   0xF841 0x002A      STR      R0,[R1, R10, LSL #+2]
   \   00000294   0xE051             B.N      ??CAN_LoadFullCANEntry_9
    816          			}
    817          		}
    818          		else
    819          		{
    820          			buf0 = LPC_CANAF_RAM->mask[cnt1]; /* Remember current entry */
   \                     ??CAN_LoadFullCANEntry_16: (+1)
   \   00000296   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   0000029A   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   0000029E   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   000002A2   0x0004             MOVS     R4,R0
    821          			if ((cnt2 & 0x0001) == 0)
   \   000002A4   0x07F8             LSLS     R0,R7,#+31
   \   000002A6   0xD406             BMI.N    ??CAN_LoadFullCANEntry_18
    822          			{
    823          				/* Insert new mask to even address*/
    824          				buf1 = (id << 16) | (buf0 >> 16);
   \   000002A8   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   000002AC   0x0C20             LSRS     R0,R4,#+16
   \   000002AE   0xEA50 0x4009      ORRS     R0,R0,R9, LSL #+16
   \   000002B2   0x0005             MOVS     R5,R0
   \   000002B4   0xE006             B.N      ??CAN_LoadFullCANEntry_19
    825          			}
    826          			else
    827          			{
    828          				/* Insert new mask to odd  address */
    829          				buf1 = (buf0 & 0xFFFF0000) | id;
   \                     ??CAN_LoadFullCANEntry_18: (+1)
   \   000002B6   0x0C20             LSRS     R0,R4,#+16
   \   000002B8   0x0400             LSLS     R0,R0,#+16
   \   000002BA   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   000002BE   0xEA59 0x0000      ORRS     R0,R9,R0
   \   000002C2   0x0005             MOVS     R5,R0
    830          			}
    831          			LPC_CANAF_RAM->mask[cnt1] = buf1;/* Insert mask */
   \                     ??CAN_LoadFullCANEntry_19: (+1)
   \   000002C4   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   000002C8   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   000002CC   0xF840 0x502A      STR      R5,[R0, R10, LSL #+2]
    832          			bound1 = CANAF_FullCAN_cnt >> 1;
   \   000002D0   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   000002D4   0x8800             LDRH     R0,[R0, #+0]
   \   000002D6   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000002D8   0x0840             LSRS     R0,R0,#+1
   \   000002DA   0x4683             MOV      R11,R0
    833          			/* Move all remaining standard mask entries one place up */
    834          			while (cnt1 < bound1)
   \                     ??CAN_LoadFullCANEntry_20: (+1)
   \   000002DC   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   000002E0   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   000002E4   0x45DA             CMP      R10,R11
   \   000002E6   0xDA13             BGE.N    ??CAN_LoadFullCANEntry_21
    835          			{
    836          				cnt1++;
   \   000002E8   0xF11A 0x0A01      ADDS     R10,R10,#+1
    837          				buf1  = LPC_CANAF_RAM->mask[cnt1];
   \   000002EC   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   000002F0   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   000002F4   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   000002F8   0x0005             MOVS     R5,R0
    838          				LPC_CANAF_RAM->mask[cnt1] = (buf1 >> 16) | (buf0 << 16);
   \   000002FA   0x0420             LSLS     R0,R4,#+16
   \   000002FC   0xEA50 0x4015      ORRS     R0,R0,R5, LSR #+16
   \   00000300   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x40038000
   \   00000304   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   00000308   0xF841 0x002A      STR      R0,[R1, R10, LSL #+2]
    839          				buf0  = buf1;
   \   0000030C   0x002C             MOVS     R4,R5
   \   0000030E   0xE7E5             B.N      ??CAN_LoadFullCANEntry_20
    840          			}
    841          
    842          			if ((CANAF_FullCAN_cnt & 0x0001) == 0)
   \                     ??CAN_LoadFullCANEntry_21: (+1)
   \   00000310   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   00000314   0x7800             LDRB     R0,[R0, #+0]
   \   00000316   0x07C0             LSLS     R0,R0,#+31
   \   00000318   0xD40F             BMI.N    ??CAN_LoadFullCANEntry_9
    843          			{
    844          				/* Even number of IDs exists */
    845          				LPC_CANAF_RAM->mask[cnt1] = (LPC_CANAF_RAM->mask[cnt1] & 0xFFFF0000)
    846          											| (0x0000FFFF);
   \   0000031A   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   0000031E   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   00000322   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   00000326   0xF440 0x407F      ORR      R0,R0,#0xFF00
   \   0000032A   0xF050 0x00FF      ORRS     R0,R0,#0xFF
   \   0000032E   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x40038000
   \   00000332   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   00000336   0xF841 0x002A      STR      R0,[R1, R10, LSL #+2]
    847          			}
    848          		}
    849          	}
    850          	//restruct FulCAN Object Section
    851          	bound1 = CANAF_FullCAN_cnt - cnt2;
   \                     ??CAN_LoadFullCANEntry_9: (+1)
   \   0000033A   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   0000033E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000342   0x1BC0             SUBS     R0,R0,R7
   \   00000344   0x4683             MOV      R11,R0
    852          	cnt1 = total - (CANAF_FullCAN_cnt)*3 + cnt2*3 + 1;
   \   00000346   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   0000034A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000034E   0x2103             MOVS     R1,#+3
   \   00000350   0xFB01 0x8010      MLS      R0,R1,R0,R8
   \   00000354   0x2103             MOVS     R1,#+3
   \   00000356   0xFB01 0x0007      MLA      R0,R1,R7,R0
   \   0000035A   0x1C40             ADDS     R0,R0,#+1
   \   0000035C   0x4682             MOV      R10,R0
    853          	buf0 = LPC_CANAF_RAM->mask[cnt1];
   \   0000035E   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   00000362   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   00000366   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   0000036A   0x0004             MOVS     R4,R0
    854          	buf1 = LPC_CANAF_RAM->mask[cnt1+1];
   \   0000036C   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   00000370   0xEA5F 0x008A      LSLS     R0,R10,#+2
   \   00000374   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   00000378   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   0000037C   0x6840             LDR      R0,[R0, #+4]
   \   0000037E   0x0005             MOVS     R5,R0
    855          	buf2 = LPC_CANAF_RAM->mask[cnt1+2];
   \   00000380   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   00000384   0xEA5F 0x008A      LSLS     R0,R10,#+2
   \   00000388   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   0000038C   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   00000390   0x6880             LDR      R0,[R0, #+8]
   \   00000392   0x0006             MOVS     R6,R0
    856          	LPC_CANAF_RAM->mask[cnt1]=LPC_CANAF_RAM->mask[cnt1+1]= LPC_CANAF_RAM->mask[cnt1+2]=0x00;
   \   00000394   0x2000             MOVS     R0,#+0
   \   00000396   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   0000039A   0xEA5F 0x018A      LSLS     R1,R10,#+2
   \   0000039E   0xF101 0x4180      ADD      R1,R1,#+1073741824
   \   000003A2   0xF511 0x3160      ADDS     R1,R1,#+229376
   \   000003A6   0x6088             STR      R0,[R1, #+8]
   \   000003A8   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   000003AC   0xEA5F 0x018A      LSLS     R1,R10,#+2
   \   000003B0   0xF101 0x4180      ADD      R1,R1,#+1073741824
   \   000003B4   0xF511 0x3160      ADDS     R1,R1,#+229376
   \   000003B8   0x6048             STR      R0,[R1, #+4]
   \   000003BA   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x40038000
   \   000003BE   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   000003C2   0xF841 0x002A      STR      R0,[R1, R10, LSL #+2]
    857          	cnt1+=3;
   \   000003C6   0xF11A 0x0A03      ADDS     R10,R10,#+3
    858          	while(bound1--)
   \                     ??CAN_LoadFullCANEntry_22: (+1)
   \   000003CA   0x4658             MOV      R0,R11
   \   000003CC   0xF1B0 0x0B01      SUBS     R11,R0,#+1
   \   000003D0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000003D2   0x2800             CMP      R0,#+0
   \   000003D4   0xD03B             BEQ.N    ??CAN_LoadFullCANEntry_23
    859          	{
    860          		tmp0 = LPC_CANAF_RAM->mask[cnt1];
   \   000003D6   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   000003DA   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   000003DE   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   000003E2   0x9003             STR      R0,[SP, #+12]
    861          		tmp1 = LPC_CANAF_RAM->mask[cnt1+1];
   \   000003E4   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   000003E8   0xEA5F 0x008A      LSLS     R0,R10,#+2
   \   000003EC   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   000003F0   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   000003F4   0x6840             LDR      R0,[R0, #+4]
   \   000003F6   0x9002             STR      R0,[SP, #+8]
    862          		tmp2 = LPC_CANAF_RAM->mask[cnt1+2];
   \   000003F8   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   000003FC   0xEA5F 0x008A      LSLS     R0,R10,#+2
   \   00000400   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   00000404   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   00000408   0x6880             LDR      R0,[R0, #+8]
   \   0000040A   0x9001             STR      R0,[SP, #+4]
    863          		LPC_CANAF_RAM->mask[cnt1]= buf0;
   \   0000040C   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40038000
   \   00000410   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   00000414   0xF840 0x402A      STR      R4,[R0, R10, LSL #+2]
    864          		LPC_CANAF_RAM->mask[cnt1+1]= buf1;
   \   00000418   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   0000041C   0xEA5F 0x008A      LSLS     R0,R10,#+2
   \   00000420   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   00000424   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   00000428   0x6045             STR      R5,[R0, #+4]
    865          		LPC_CANAF_RAM->mask[cnt1+2]= buf2;
   \   0000042A   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   0000042E   0xEA5F 0x008A      LSLS     R0,R10,#+2
   \   00000432   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   00000436   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   0000043A   0x6086             STR      R6,[R0, #+8]
    866          		buf0 = tmp0;
   \   0000043C   0x9803             LDR      R0,[SP, #+12]
   \   0000043E   0x0004             MOVS     R4,R0
    867          		buf1 = tmp1;
   \   00000440   0x9802             LDR      R0,[SP, #+8]
   \   00000442   0x0005             MOVS     R5,R0
    868          		buf2 = tmp2;
   \   00000444   0x9801             LDR      R0,[SP, #+4]
   \   00000446   0x0006             MOVS     R6,R0
    869          		cnt1+=3;
   \   00000448   0xF11A 0x0A03      ADDS     R10,R10,#+3
   \   0000044C   0xE7BD             B.N      ??CAN_LoadFullCANEntry_22
    870          	}
    871          	CANAF_FullCAN_cnt++;
   \                     ??CAN_LoadFullCANEntry_23: (+1)
   \   0000044E   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   00000452   0x8800             LDRH     R0,[R0, #+0]
   \   00000454   0x1C40             ADDS     R0,R0,#+1
   \   00000456   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   0000045A   0x8008             STRH     R0,[R1, #+0]
    872          	//update address values
    873          	LPC_CANAF->SFF_sa 	  +=0x04;
   \   0000045C   0x.... 0x....      LDR.W    R0,??DataTable7  ;; 0x4003c004
   \   00000460   0x6800             LDR      R0,[R0, #+0]
   \   00000462   0x1D00             ADDS     R0,R0,#+4
   \   00000464   0x.... 0x....      LDR.W    R1,??DataTable7  ;; 0x4003c004
   \   00000468   0x6008             STR      R0,[R1, #+0]
    874          	LPC_CANAF->SFF_GRP_sa +=0x04 ;
   \   0000046A   0x.... 0x....      LDR.W    R0,??DataTable6_1  ;; 0x4003c008
   \   0000046E   0x6800             LDR      R0,[R0, #+0]
   \   00000470   0x1D00             ADDS     R0,R0,#+4
   \   00000472   0x.... 0x....      LDR.W    R1,??DataTable6_1  ;; 0x4003c008
   \   00000476   0x6008             STR      R0,[R1, #+0]
    875          	LPC_CANAF->EFF_sa     +=0x04 ;
   \   00000478   0x.... 0x....      LDR.W    R0,??DataTable6_2  ;; 0x4003c00c
   \   0000047C   0x6800             LDR      R0,[R0, #+0]
   \   0000047E   0x1D00             ADDS     R0,R0,#+4
   \   00000480   0x.... 0x....      LDR.W    R1,??DataTable6_2  ;; 0x4003c00c
   \   00000484   0x6008             STR      R0,[R1, #+0]
    876          	LPC_CANAF->EFF_GRP_sa +=0x04;
   \   00000486   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x4003c010
   \   0000048A   0x6800             LDR      R0,[R0, #+0]
   \   0000048C   0x1D00             ADDS     R0,R0,#+4
   \   0000048E   0x.... 0x....      LDR.W    R1,??DataTable6_3  ;; 0x4003c010
   \   00000492   0x6008             STR      R0,[R1, #+0]
    877          	LPC_CANAF->ENDofTable +=0x04;
   \   00000494   0x.... 0x....      LDR.W    R0,??DataTable6_4  ;; 0x4003c014
   \   00000498   0x6800             LDR      R0,[R0, #+0]
   \   0000049A   0x1D00             ADDS     R0,R0,#+4
   \   0000049C   0x.... 0x....      LDR.W    R1,??DataTable6_4  ;; 0x4003c014
   \   000004A0   0x6008             STR      R0,[R1, #+0]
    878          
    879          	LPC_CANAF->AFMR = 0x04;
   \   000004A2   0x2004             MOVS     R0,#+4
   \   000004A4   0x.... 0x....      LDR.W    R1,??DataTable6_7  ;; 0x4003c000
   \   000004A8   0x6008             STR      R0,[R1, #+0]
    880           	return CAN_OK;
   \   000004AA   0x2001             MOVS     R0,#+1
   \                     ??CAN_LoadFullCANEntry_5: (+1)
   \   000004AC   0xB005             ADD      SP,SP,#+20
   \   000004AE   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    881          }
    882          
    883          /********************************************************************//**
    884           * @brief		Load Group entry into AFLUT
    885           * @param[in]	CANx: CAN peripheral selected, should be:
    886           * 				- LPC_CAN1: CAN1 peripheral
    887           * 				- LPC_CAN2: CAN2 peripheral
    888           * @param[in]	lowerID, upperID: lower and upper identifier of entry
    889           * @param[in]	format: type of ID format, should be:
    890           * 				- STD_ID_FORMAT: Standard ID format (11-bit value)
    891           * 				- EXT_ID_FORMAT: Extended ID format (29-bit value)
    892           * @return 		CAN_ERROR, could be:
    893           * 				- CAN_OK: loading is successful
    894           * 				- CAN_CONFLICT_ID_ERROR: Conflict ID occurs
    895           * 				- CAN_OBJECTS_FULL_ERROR: no more space available
    896           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    897          CAN_ERROR CAN_LoadGroupEntry(LPC_CAN_TypeDef* CANx, uint32_t lowerID, \
    898          		uint32_t upperID, CAN_ID_FORMAT_Type format)
    899          {
   \                     CAN_LoadGroupEntry: (+1)
   \   00000000   0xE92D 0x4FF9      PUSH     {R0,R3-R11,LR}
   \   00000004   0xB085             SUB      SP,SP,#+20
   \   00000006   0x4689             MOV      R9,R1
   \   00000008   0x4692             MOV      R10,R2
    900          	uint16_t tmp = 0;
   \   0000000A   0x2400             MOVS     R4,#+0
    901          	uint32_t buf0, buf1, entry1, entry2, LID,UID;
    902          	int16_t cnt1, bound1, total;
    903          	//LPC_CANAF_RAM_TypeDef *AFLUTTest = LPC_CANAF_RAM;
    904          
    905          	CHECK_PARAM(PARAM_CANx(CANx));
   \   0000000C   0x9805             LDR      R0,[SP, #+20]
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable7_1  ;; 0x40044000
   \   00000012   0x4288             CMP      R0,R1
   \   00000014   0xD00A             BEQ.N    ??CAN_LoadGroupEntry_0
   \   00000016   0x9805             LDR      R0,[SP, #+20]
   \   00000018   0x.... 0x....      LDR.W    R1,??DataTable7_2  ;; 0x40048000
   \   0000001C   0x4288             CMP      R0,R1
   \   0000001E   0xD005             BEQ.N    ??CAN_LoadGroupEntry_0
   \   00000020   0xF240 0x3189      MOVW     R1,#+905
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable7_3
   \   00000028   0x.... 0x....      BL       check_failed
    906          	CHECK_PARAM(PARAM_ID_FORMAT(format));
   \                     ??CAN_LoadGroupEntry_0: (+1)
   \   0000002C   0xF89D 0x0018      LDRB     R0,[SP, #+24]
   \   00000030   0x2800             CMP      R0,#+0
   \   00000032   0xD009             BEQ.N    ??CAN_LoadGroupEntry_1
   \   00000034   0xF89D 0x0018      LDRB     R0,[SP, #+24]
   \   00000038   0x2801             CMP      R0,#+1
   \   0000003A   0xD005             BEQ.N    ??CAN_LoadGroupEntry_1
   \   0000003C   0xF240 0x318A      MOVW     R1,#+906
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable7_3
   \   00000044   0x.... 0x....      BL       check_failed
    907          
    908          	if(lowerID > upperID) return CAN_CONFLICT_ID_ERROR;
   \                     ??CAN_LoadGroupEntry_1: (+1)
   \   00000048   0x45CA             CMP      R10,R9
   \   0000004A   0xD201             BCS.N    ??CAN_LoadGroupEntry_2
   \   0000004C   0x2006             MOVS     R0,#+6
   \   0000004E   0xE207             B.N      ??CAN_LoadGroupEntry_3
    909          	if(CANx == LPC_CAN1)
   \                     ??CAN_LoadGroupEntry_2: (+1)
   \   00000050   0x9805             LDR      R0,[SP, #+20]
   \   00000052   0x.... 0x....      LDR.W    R1,??DataTable7_1  ;; 0x40044000
   \   00000056   0x4288             CMP      R0,R1
   \   00000058   0xD102             BNE.N    ??CAN_LoadGroupEntry_4
    910          	{
    911          		tmp = 0;
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0x0004             MOVS     R4,R0
   \   0000005E   0xE001             B.N      ??CAN_LoadGroupEntry_5
    912          	}
    913          	else
    914          	{
    915          		tmp = 1;
   \                     ??CAN_LoadGroupEntry_4: (+1)
   \   00000060   0x2001             MOVS     R0,#+1
   \   00000062   0x0004             MOVS     R4,R0
    916          	}
    917          
    918          	total =((CANAF_FullCAN_cnt+1)>>1)+ CANAF_FullCAN_cnt*3 +((CANAF_std_cnt + 1) >> 1)+  \
    919          			CANAF_gstd_cnt + CANAF_ext_cnt + (CANAF_gext_cnt<<1);
   \                     ??CAN_LoadGroupEntry_5: (+1)
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   00000068   0x8800             LDRH     R0,[R0, #+0]
   \   0000006A   0x1C40             ADDS     R0,R0,#+1
   \   0000006C   0x1040             ASRS     R0,R0,#+1
   \   0000006E   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   00000072   0x8809             LDRH     R1,[R1, #+0]
   \   00000074   0x2203             MOVS     R2,#+3
   \   00000076   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   0000007E   0x8809             LDRH     R1,[R1, #+0]
   \   00000080   0x1C49             ADDS     R1,R1,#+1
   \   00000082   0xEB10 0x0061      ADDS     R0,R0,R1, ASR #+1
   \   00000086   0x.... 0x....      LDR.W    R1,??DataTable8
   \   0000008A   0x8809             LDRH     R1,[R1, #+0]
   \   0000008C   0x1808             ADDS     R0,R1,R0
   \   0000008E   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   00000092   0x8809             LDRH     R1,[R1, #+0]
   \   00000094   0x1808             ADDS     R0,R1,R0
   \   00000096   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   0000009A   0x8809             LDRH     R1,[R1, #+0]
   \   0000009C   0xEB10 0x0041      ADDS     R0,R0,R1, LSL #+1
   \   000000A0   0xF8AD 0x0004      STRH     R0,[SP, #+4]
    920          
    921          	/* Setup Acceptance Filter Configuration
    922          	Acceptance Filter Mode Register = Off */
    923          	LPC_CANAF->AFMR = 0x00000001;
   \   000000A4   0x2001             MOVS     R0,#+1
   \   000000A6   0x.... 0x....      LDR.W    R1,??DataTable6_7  ;; 0x4003c000
   \   000000AA   0x6008             STR      R0,[R1, #+0]
    924          
    925          /*********Add Group of Standard Identifier Frame Format************/
    926          	if(format == STD_ID_FORMAT)
   \   000000AC   0xF89D 0x0018      LDRB     R0,[SP, #+24]
   \   000000B0   0x2800             CMP      R0,#+0
   \   000000B2   0xF040 0x80C0      BNE.W    ??CAN_LoadGroupEntry_6
    927          	{
    928          		if ((total >= 512)){//don't have enough space
   \   000000B6   0xF9BD 0x0004      LDRSH    R0,[SP, #+4]
   \   000000BA   0xF5B0 0x7F00      CMP      R0,#+512
   \   000000BE   0xDB01             BLT.N    ??CAN_LoadGroupEntry_7
    929          			return CAN_OBJECTS_FULL_ERROR;
   \   000000C0   0x2002             MOVS     R0,#+2
   \   000000C2   0xE1CD             B.N      ??CAN_LoadGroupEntry_3
    930          		}
    931          		lowerID &=0x7FF; //mask ID
   \                     ??CAN_LoadGroupEntry_7: (+1)
   \   000000C4   0xEA5F 0x5949      LSLS     R9,R9,#+21       ;; ZeroExtS R9,R9,#+21,#+21
   \   000000C8   0xEA5F 0x5959      LSRS     R9,R9,#+21
    932          		upperID &=0x7FF;
   \   000000CC   0xEA5F 0x5A4A      LSLS     R10,R10,#+21     ;; ZeroExtS R10,R10,#+21,#+21
   \   000000D0   0xEA5F 0x5A5A      LSRS     R10,R10,#+21
    933          		entry1  = (tmp << 29)|(lowerID << 16)|(tmp << 13)|(upperID << 0);
   \   000000D4   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000D6   0xEA5F 0x4009      LSLS     R0,R9,#+16
   \   000000DA   0xEA50 0x7044      ORRS     R0,R0,R4, LSL #+29
   \   000000DE   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000E0   0xEA50 0x3044      ORRS     R0,R0,R4, LSL #+13
   \   000000E4   0xEA5A 0x0000      ORRS     R0,R10,R0
   \   000000E8   0x0007             MOVS     R7,R0
    934          		cnt1 = ((CANAF_FullCAN_cnt+1)>>1) + ((CANAF_std_cnt + 1) >> 1);
   \   000000EA   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   000000EE   0x8800             LDRH     R0,[R0, #+0]
   \   000000F0   0x1C40             ADDS     R0,R0,#+1
   \   000000F2   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   000000F6   0x8809             LDRH     R1,[R1, #+0]
   \   000000F8   0x1C49             ADDS     R1,R1,#+1
   \   000000FA   0x1049             ASRS     R1,R1,#+1
   \   000000FC   0xEB11 0x0060      ADDS     R0,R1,R0, ASR #+1
   \   00000100   0x4683             MOV      R11,R0
    935          
    936          		//if this is the first Group standard ID entry
    937          		if(CANAF_gstd_cnt == 0)
   \   00000102   0x.... 0x....      LDR.W    R0,??DataTable8
   \   00000106   0x8800             LDRH     R0,[R0, #+0]
   \   00000108   0x2800             CMP      R0,#+0
   \   0000010A   0xD105             BNE.N    ??CAN_LoadGroupEntry_8
    938          		{
    939          			LPC_CANAF_RAM->mask[cnt1] = entry1;
   \   0000010C   0x....             LDR.N    R0,??DataTable6  ;; 0x40038000
   \   0000010E   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   00000112   0xF840 0x702B      STR      R7,[R0, R11, LSL #+2]
   \   00000116   0xE077             B.N      ??CAN_LoadGroupEntry_9
    940          		}
    941          		else
    942          		{
    943          			//find the position to add new Group entry
    944          			bound1 = ((CANAF_FullCAN_cnt+1)>>1) + ((CANAF_std_cnt + 1) >> 1) + CANAF_gstd_cnt;
   \                     ??CAN_LoadGroupEntry_8: (+1)
   \   00000118   0x....             LDR.N    R0,??DataTable6_5
   \   0000011A   0x8800             LDRH     R0,[R0, #+0]
   \   0000011C   0x1C40             ADDS     R0,R0,#+1
   \   0000011E   0x....             LDR.N    R1,??DataTable6_6
   \   00000120   0x8809             LDRH     R1,[R1, #+0]
   \   00000122   0x1C49             ADDS     R1,R1,#+1
   \   00000124   0x1049             ASRS     R1,R1,#+1
   \   00000126   0xEB11 0x0060      ADDS     R0,R1,R0, ASR #+1
   \   0000012A   0x.... 0x....      LDR.W    R1,??DataTable8
   \   0000012E   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000132   0x1808             ADDS     R0,R1,R0
   \   00000134   0x4680             MOV      R8,R0
    945          			while(cnt1 < bound1)
   \                     ??CAN_LoadGroupEntry_10: (+1)
   \   00000136   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   0000013A   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   0000013E   0x45C3             CMP      R11,R8
   \   00000140   0xDA37             BGE.N    ??CAN_LoadGroupEntry_11
    946          			{
    947          				//compare controller first
    948          				while((LPC_CANAF_RAM->mask[cnt1] >> 29)< (entry1 >> 29))//increase until meet greater or equal controller
   \                     ??CAN_LoadGroupEntry_12: (+1)
   \   00000142   0x....             LDR.N    R0,??DataTable6  ;; 0x40038000
   \   00000144   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   00000148   0xF850 0x002B      LDR      R0,[R0, R11, LSL #+2]
   \   0000014C   0x0F40             LSRS     R0,R0,#+29
   \   0000014E   0xEBB0 0x7F57      CMP      R0,R7, LSR #+29
   \   00000152   0xD202             BCS.N    ??CAN_LoadGroupEntry_13
    949          					cnt1++;
   \   00000154   0xF11B 0x0B01      ADDS     R11,R11,#+1
   \   00000158   0xE7F3             B.N      ??CAN_LoadGroupEntry_12
    950          				buf0 = LPC_CANAF_RAM->mask[cnt1];
   \                     ??CAN_LoadGroupEntry_13: (+1)
   \   0000015A   0x....             LDR.N    R0,??DataTable6  ;; 0x40038000
   \   0000015C   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   00000160   0xF850 0x002B      LDR      R0,[R0, R11, LSL #+2]
   \   00000164   0x0005             MOVS     R5,R0
    951          				if((LPC_CANAF_RAM->mask[cnt1] >> 29)> (entry1 >> 29)) //meet greater controller
   \   00000166   0x0F78             LSRS     R0,R7,#+29
   \   00000168   0x....             LDR.N    R1,??DataTable6  ;; 0x40038000
   \   0000016A   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   0000016E   0xF851 0x102B      LDR      R1,[R1, R11, LSL #+2]
   \   00000172   0xEBB0 0x7F51      CMP      R0,R1, LSR #+29
   \   00000176   0xD205             BCS.N    ??CAN_LoadGroupEntry_14
    952          				{
    953          					//add at this position
    954          					LPC_CANAF_RAM->mask[cnt1] = entry1;
   \   00000178   0x....             LDR.N    R0,??DataTable6  ;; 0x40038000
   \   0000017A   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   0000017E   0xF840 0x702B      STR      R7,[R0, R11, LSL #+2]
    955          					break;
   \   00000182   0xE016             B.N      ??CAN_LoadGroupEntry_11
    956          				}
    957          				else //meet equal controller
    958          				{
    959          					LID  = (buf0 >> 16)&0x7FF;
   \                     ??CAN_LoadGroupEntry_14: (+1)
   \   00000184   0xF3C5 0x400A      UBFX     R0,R5,#+16,#+11
   \   00000188   0x9003             STR      R0,[SP, #+12]
    960          					UID  = buf0 & 0x7FF;
   \   0000018A   0x0568             LSLS     R0,R5,#+21       ;; ZeroExtS R0,R5,#+21,#+21
   \   0000018C   0x0D40             LSRS     R0,R0,#+21
   \   0000018E   0x9002             STR      R0,[SP, #+8]
    961          					if (upperID <= LID)
   \   00000190   0x9803             LDR      R0,[SP, #+12]
   \   00000192   0x4550             CMP      R0,R10
   \   00000194   0xD305             BCC.N    ??CAN_LoadGroupEntry_15
    962          					{
    963          						//add new entry before this entry
    964          						LPC_CANAF_RAM->mask[cnt1] = entry1;
   \   00000196   0x....             LDR.N    R0,??DataTable6  ;; 0x40038000
   \   00000198   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   0000019C   0xF840 0x702B      STR      R7,[R0, R11, LSL #+2]
    965          						break;
   \   000001A0   0xE007             B.N      ??CAN_LoadGroupEntry_11
    966          					}
    967          					else if (lowerID >= UID)
   \                     ??CAN_LoadGroupEntry_15: (+1)
   \   000001A2   0x9802             LDR      R0,[SP, #+8]
   \   000001A4   0x4581             CMP      R9,R0
   \   000001A6   0xD302             BCC.N    ??CAN_LoadGroupEntry_16
    968          					{
    969          						//load next entry to compare
    970          						cnt1 ++;
   \   000001A8   0xF11B 0x0B01      ADDS     R11,R11,#+1
   \   000001AC   0xE7C3             B.N      ??CAN_LoadGroupEntry_10
    971          					}
    972          					else
    973          						return CAN_CONFLICT_ID_ERROR;
   \                     ??CAN_LoadGroupEntry_16: (+1)
   \   000001AE   0x2006             MOVS     R0,#+6
   \   000001B0   0xE156             B.N      ??CAN_LoadGroupEntry_3
    974          				}
    975          			}
    976          			if(cnt1 >= bound1)
   \                     ??CAN_LoadGroupEntry_11: (+1)
   \   000001B2   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   000001B6   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000001BA   0x45C3             CMP      R11,R8
   \   000001BC   0xDB0A             BLT.N    ??CAN_LoadGroupEntry_17
    977          			{
    978          				//add new entry at the last position in this list
    979          				buf0 = LPC_CANAF_RAM->mask[cnt1];
   \   000001BE   0x....             LDR.N    R0,??DataTable6  ;; 0x40038000
   \   000001C0   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   000001C4   0xF850 0x002B      LDR      R0,[R0, R11, LSL #+2]
   \   000001C8   0x0005             MOVS     R5,R0
    980          				LPC_CANAF_RAM->mask[cnt1] = entry1;
   \   000001CA   0x....             LDR.N    R0,??DataTable6  ;; 0x40038000
   \   000001CC   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   000001D0   0xF840 0x702B      STR      R7,[R0, R11, LSL #+2]
    981          			}
    982          
    983          			//remove all remaining entry of this section one place up
    984          			bound1 = total - cnt1;
   \                     ??CAN_LoadGroupEntry_17: (+1)
   \   000001D4   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   000001D8   0xEBB0 0x000B      SUBS     R0,R0,R11
   \   000001DC   0x4680             MOV      R8,R0
    985          			while(bound1--)
   \                     ??CAN_LoadGroupEntry_18: (+1)
   \   000001DE   0x4640             MOV      R0,R8
   \   000001E0   0xF1B0 0x0801      SUBS     R8,R0,#+1
   \   000001E4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000001E6   0x2800             CMP      R0,#+0
   \   000001E8   0xD00E             BEQ.N    ??CAN_LoadGroupEntry_9
    986          			{
    987          				cnt1++;
   \   000001EA   0xF11B 0x0B01      ADDS     R11,R11,#+1
    988          				buf1 = LPC_CANAF_RAM->mask[cnt1];
   \   000001EE   0x....             LDR.N    R0,??DataTable6  ;; 0x40038000
   \   000001F0   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   000001F4   0xF850 0x002B      LDR      R0,[R0, R11, LSL #+2]
   \   000001F8   0x0006             MOVS     R6,R0
    989          				LPC_CANAF_RAM->mask[cnt1] = buf0;
   \   000001FA   0x....             LDR.N    R0,??DataTable6  ;; 0x40038000
   \   000001FC   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   00000200   0xF840 0x502B      STR      R5,[R0, R11, LSL #+2]
    990          				buf0 = buf1;
   \   00000204   0x0035             MOVS     R5,R6
   \   00000206   0xE7EA             B.N      ??CAN_LoadGroupEntry_18
    991          			}
    992          		}
    993          		CANAF_gstd_cnt++;
   \                     ??CAN_LoadGroupEntry_9: (+1)
   \   00000208   0x.... 0x....      LDR.W    R0,??DataTable8
   \   0000020C   0x8800             LDRH     R0,[R0, #+0]
   \   0000020E   0x1C40             ADDS     R0,R0,#+1
   \   00000210   0x.... 0x....      LDR.W    R1,??DataTable8
   \   00000214   0x8008             STRH     R0,[R1, #+0]
    994          		//update address values
    995          		LPC_CANAF->EFF_sa     +=0x04 ;
   \   00000216   0x....             LDR.N    R0,??DataTable6_2  ;; 0x4003c00c
   \   00000218   0x6800             LDR      R0,[R0, #+0]
   \   0000021A   0x1D00             ADDS     R0,R0,#+4
   \   0000021C   0x....             LDR.N    R1,??DataTable6_2  ;; 0x4003c00c
   \   0000021E   0x6008             STR      R0,[R1, #+0]
    996          		LPC_CANAF->EFF_GRP_sa +=0x04;
   \   00000220   0x....             LDR.N    R0,??DataTable6_3  ;; 0x4003c010
   \   00000222   0x6800             LDR      R0,[R0, #+0]
   \   00000224   0x1D00             ADDS     R0,R0,#+4
   \   00000226   0x....             LDR.N    R1,??DataTable6_3  ;; 0x4003c010
   \   00000228   0x6008             STR      R0,[R1, #+0]
    997          		LPC_CANAF->ENDofTable +=0x04;
   \   0000022A   0x....             LDR.N    R0,??DataTable6_4  ;; 0x4003c014
   \   0000022C   0x6800             LDR      R0,[R0, #+0]
   \   0000022E   0x1D00             ADDS     R0,R0,#+4
   \   00000230   0x....             LDR.N    R1,??DataTable6_4  ;; 0x4003c014
   \   00000232   0x6008             STR      R0,[R1, #+0]
   \   00000234   0xE110             B.N      ??CAN_LoadGroupEntry_19
    998          	}
    999          
   1000          
   1001          /*********Add Group of Extended Identifier Frame Format************/
   1002          	else
   1003          	{
   1004          		if ((total >= 511)){//don't have enough space
   \                     ??CAN_LoadGroupEntry_6: (+1)
   \   00000236   0xF9BD 0x0004      LDRSH    R0,[SP, #+4]
   \   0000023A   0xF5B0 0x7FFF      CMP      R0,#+510
   \   0000023E   0xDD01             BLE.N    ??CAN_LoadGroupEntry_20
   1005          			return CAN_OBJECTS_FULL_ERROR;
   \   00000240   0x2002             MOVS     R0,#+2
   \   00000242   0xE10D             B.N      ??CAN_LoadGroupEntry_3
   1006          		}
   1007          		lowerID  &= 0x1FFFFFFF; //mask ID
   \                     ??CAN_LoadGroupEntry_20: (+1)
   \   00000244   0xEA5F 0x09C9      LSLS     R9,R9,#+3        ;; ZeroExtS R9,R9,#+3,#+3
   \   00000248   0xEA5F 0x09D9      LSRS     R9,R9,#+3
   1008          		upperID &= 0x1FFFFFFF;
   \   0000024C   0xEA5F 0x0ACA      LSLS     R10,R10,#+3      ;; ZeroExtS R10,R10,#+3,#+3
   \   00000250   0xEA5F 0x0ADA      LSRS     R10,R10,#+3
   1009          		entry1   = (tmp << 29)|(lowerID << 0);
   \   00000254   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000256   0xEA59 0x7044      ORRS     R0,R9,R4, LSL #+29
   \   0000025A   0x0007             MOVS     R7,R0
   1010          		entry2   = (tmp << 29)|(upperID << 0);
   \   0000025C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000025E   0xEA5A 0x7044      ORRS     R0,R10,R4, LSL #+29
   \   00000262   0x9000             STR      R0,[SP, #+0]
   1011          
   1012          		cnt1 = ((CANAF_FullCAN_cnt+1)>>1) + ((CANAF_std_cnt + 1) >> 1) + CANAF_gstd_cnt + CANAF_ext_cnt;
   \   00000264   0x....             LDR.N    R0,??DataTable6_5
   \   00000266   0x8800             LDRH     R0,[R0, #+0]
   \   00000268   0x1C40             ADDS     R0,R0,#+1
   \   0000026A   0x....             LDR.N    R1,??DataTable6_6
   \   0000026C   0x8809             LDRH     R1,[R1, #+0]
   \   0000026E   0x1C49             ADDS     R1,R1,#+1
   \   00000270   0x1049             ASRS     R1,R1,#+1
   \   00000272   0xEB11 0x0060      ADDS     R0,R1,R0, ASR #+1
   \   00000276   0x.... 0x....      LDR.W    R1,??DataTable8
   \   0000027A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000027E   0x1808             ADDS     R0,R1,R0
   \   00000280   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   00000284   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000288   0x1808             ADDS     R0,R1,R0
   \   0000028A   0x4683             MOV      R11,R0
   1013          		//if this is the first Group standard ID entry
   1014          		if(CANAF_gext_cnt == 0)
   \   0000028C   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   00000290   0x8800             LDRH     R0,[R0, #+0]
   \   00000292   0x2800             CMP      R0,#+0
   \   00000294   0xD10F             BNE.N    ??CAN_LoadGroupEntry_21
   1015          		{
   1016          			LPC_CANAF_RAM->mask[cnt1] = entry1;
   \   00000296   0x....             LDR.N    R0,??DataTable6  ;; 0x40038000
   \   00000298   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   0000029C   0xF840 0x702B      STR      R7,[R0, R11, LSL #+2]
   1017          			LPC_CANAF_RAM->mask[cnt1+1] = entry2;
   \   000002A0   0x9800             LDR      R0,[SP, #+0]
   \   000002A2   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   000002A6   0xEA5F 0x018B      LSLS     R1,R11,#+2
   \   000002AA   0xF101 0x4180      ADD      R1,R1,#+1073741824
   \   000002AE   0xF511 0x3160      ADDS     R1,R1,#+229376
   \   000002B2   0x6048             STR      R0,[R1, #+4]
   \   000002B4   0xE0C4             B.N      ??CAN_LoadGroupEntry_22
   1018          		}
   1019          		else
   1020          		{
   1021          			//find the position to add new Group entry
   1022          			bound1 = ((CANAF_FullCAN_cnt+1)>>1) + ((CANAF_std_cnt + 1) >> 1) + CANAF_gstd_cnt \
   1023          						+ CANAF_ext_cnt + (CANAF_gext_cnt<<1);
   \                     ??CAN_LoadGroupEntry_21: (+1)
   \   000002B6   0x....             LDR.N    R0,??DataTable6_5
   \   000002B8   0x8800             LDRH     R0,[R0, #+0]
   \   000002BA   0x1C40             ADDS     R0,R0,#+1
   \   000002BC   0x....             LDR.N    R1,??DataTable6_6
   \   000002BE   0x8809             LDRH     R1,[R1, #+0]
   \   000002C0   0x1C49             ADDS     R1,R1,#+1
   \   000002C2   0x1049             ASRS     R1,R1,#+1
   \   000002C4   0xEB11 0x0060      ADDS     R0,R1,R0, ASR #+1
   \   000002C8   0x.... 0x....      LDR.W    R1,??DataTable8
   \   000002CC   0x8809             LDRH     R1,[R1, #+0]
   \   000002CE   0x1808             ADDS     R0,R1,R0
   \   000002D0   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   000002D4   0x8809             LDRH     R1,[R1, #+0]
   \   000002D6   0x1808             ADDS     R0,R1,R0
   \   000002D8   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   000002DC   0x8809             LDRH     R1,[R1, #+0]
   \   000002DE   0xEB10 0x0041      ADDS     R0,R0,R1, LSL #+1
   \   000002E2   0x4680             MOV      R8,R0
   1024          			while(cnt1 < bound1)
   \                     ??CAN_LoadGroupEntry_23: (+1)
   \   000002E4   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   000002E8   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000002EC   0x45C3             CMP      R11,R8
   \   000002EE   0xDA51             BGE.N    ??CAN_LoadGroupEntry_24
   1025          			{
   1026          				while((LPC_CANAF_RAM->mask[cnt1] >>29)< tmp) //increase until meet greater or equal controller
   \                     ??CAN_LoadGroupEntry_25: (+1)
   \   000002F0   0x....             LDR.N    R0,??DataTable6  ;; 0x40038000
   \   000002F2   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   000002F6   0xF850 0x002B      LDR      R0,[R0, R11, LSL #+2]
   \   000002FA   0x0F40             LSRS     R0,R0,#+29
   \   000002FC   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000002FE   0x42A0             CMP      R0,R4
   \   00000300   0xD202             BCS.N    ??CAN_LoadGroupEntry_26
   1027          					cnt1++;
   \   00000302   0xF11B 0x0B01      ADDS     R11,R11,#+1
   \   00000306   0xE7F3             B.N      ??CAN_LoadGroupEntry_25
   1028          				buf0 = LPC_CANAF_RAM->mask[cnt1];
   \                     ??CAN_LoadGroupEntry_26: (+1)
   \   00000308   0x....             LDR.N    R0,??DataTable6  ;; 0x40038000
   \   0000030A   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   0000030E   0xF850 0x002B      LDR      R0,[R0, R11, LSL #+2]
   \   00000312   0x0005             MOVS     R5,R0
   1029          				buf1 = LPC_CANAF_RAM->mask[cnt1+1];
   \   00000314   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   00000318   0xEA5F 0x008B      LSLS     R0,R11,#+2
   \   0000031C   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   00000320   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   00000324   0x6840             LDR      R0,[R0, #+4]
   \   00000326   0x0006             MOVS     R6,R0
   1030          				if((LPC_CANAF_RAM->mask[cnt1] >> 29)> (entry1 >> 29)) //meet greater controller
   \   00000328   0x0F78             LSRS     R0,R7,#+29
   \   0000032A   0x....             LDR.N    R1,??DataTable6  ;; 0x40038000
   \   0000032C   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   00000330   0xF851 0x102B      LDR      R1,[R1, R11, LSL #+2]
   \   00000334   0xEBB0 0x7F51      CMP      R0,R1, LSR #+29
   \   00000338   0xD20D             BCS.N    ??CAN_LoadGroupEntry_27
   1031          				{
   1032          					//add at this position
   1033          					LPC_CANAF_RAM->mask[cnt1] = entry1;
   \   0000033A   0x....             LDR.N    R0,??DataTable6  ;; 0x40038000
   \   0000033C   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   00000340   0xF840 0x702B      STR      R7,[R0, R11, LSL #+2]
   1034          					LPC_CANAF_RAM->mask[++cnt1] = entry2;
   \   00000344   0xF11B 0x0B01      ADDS     R11,R11,#+1
   \   00000348   0x9800             LDR      R0,[SP, #+0]
   \   0000034A   0x....             LDR.N    R1,??DataTable6  ;; 0x40038000
   \   0000034C   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   00000350   0xF841 0x002B      STR      R0,[R1, R11, LSL #+2]
   1035          					break;
   \   00000354   0xE01E             B.N      ??CAN_LoadGroupEntry_24
   1036          				}
   1037          				else //meet equal controller
   1038          				{
   1039          					LID  = buf0 & 0x1FFFFFFF; //mask ID
   \                     ??CAN_LoadGroupEntry_27: (+1)
   \   00000356   0x00E8             LSLS     R0,R5,#+3        ;; ZeroExtS R0,R5,#+3,#+3
   \   00000358   0x08C0             LSRS     R0,R0,#+3
   \   0000035A   0x9003             STR      R0,[SP, #+12]
   1040          					UID  = buf1 & 0x1FFFFFFF;
   \   0000035C   0x00F0             LSLS     R0,R6,#+3        ;; ZeroExtS R0,R6,#+3,#+3
   \   0000035E   0x08C0             LSRS     R0,R0,#+3
   \   00000360   0x9002             STR      R0,[SP, #+8]
   1041          					if (upperID <= LID)
   \   00000362   0x9803             LDR      R0,[SP, #+12]
   \   00000364   0x4550             CMP      R0,R10
   \   00000366   0xD30D             BCC.N    ??CAN_LoadGroupEntry_28
   1042          					{
   1043          						//add new entry before this entry
   1044          						LPC_CANAF_RAM->mask[cnt1] = entry1;
   \   00000368   0x....             LDR.N    R0,??DataTable6  ;; 0x40038000
   \   0000036A   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   0000036E   0xF840 0x702B      STR      R7,[R0, R11, LSL #+2]
   1045          						LPC_CANAF_RAM->mask[++cnt1] = entry2;
   \   00000372   0xF11B 0x0B01      ADDS     R11,R11,#+1
   \   00000376   0x9800             LDR      R0,[SP, #+0]
   \   00000378   0x....             LDR.N    R1,??DataTable6  ;; 0x40038000
   \   0000037A   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   0000037E   0xF841 0x002B      STR      R0,[R1, R11, LSL #+2]
   1046          						break;
   \   00000382   0xE007             B.N      ??CAN_LoadGroupEntry_24
   1047          					}
   1048          					else if (lowerID >= UID)
   \                     ??CAN_LoadGroupEntry_28: (+1)
   \   00000384   0x9802             LDR      R0,[SP, #+8]
   \   00000386   0x4581             CMP      R9,R0
   \   00000388   0xD302             BCC.N    ??CAN_LoadGroupEntry_29
   1049          					{
   1050          						//load next entry to compare
   1051          						cnt1 +=2;
   \   0000038A   0xF11B 0x0B02      ADDS     R11,R11,#+2
   \   0000038E   0xE7A9             B.N      ??CAN_LoadGroupEntry_23
   1052          					}
   1053          					else
   1054          						return CAN_CONFLICT_ID_ERROR;
   \                     ??CAN_LoadGroupEntry_29: (+1)
   \   00000390   0x2006             MOVS     R0,#+6
   \   00000392   0xE065             B.N      ??CAN_LoadGroupEntry_3
   1055          				}
   1056          			}
   1057          			if(cnt1 >= bound1)
   \                     ??CAN_LoadGroupEntry_24: (+1)
   \   00000394   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   00000398   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   0000039C   0x45C3             CMP      R11,R8
   \   0000039E   0xDB1C             BLT.N    ??CAN_LoadGroupEntry_30
   1058          			{
   1059          				//add new entry at the last position in this list
   1060          				buf0 = LPC_CANAF_RAM->mask[cnt1];
   \   000003A0   0x....             LDR.N    R0,??DataTable6  ;; 0x40038000
   \   000003A2   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   000003A6   0xF850 0x002B      LDR      R0,[R0, R11, LSL #+2]
   \   000003AA   0x0005             MOVS     R5,R0
   1061          				buf1 = LPC_CANAF_RAM->mask[cnt1+1];
   \   000003AC   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   000003B0   0xEA5F 0x008B      LSLS     R0,R11,#+2
   \   000003B4   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   000003B8   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   000003BC   0x6840             LDR      R0,[R0, #+4]
   \   000003BE   0x0006             MOVS     R6,R0
   1062          				LPC_CANAF_RAM->mask[cnt1]   = entry1;
   \   000003C0   0x....             LDR.N    R0,??DataTable6  ;; 0x40038000
   \   000003C2   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   000003C6   0xF840 0x702B      STR      R7,[R0, R11, LSL #+2]
   1063          				LPC_CANAF_RAM->mask[++cnt1] = entry2;
   \   000003CA   0xF11B 0x0B01      ADDS     R11,R11,#+1
   \   000003CE   0x9800             LDR      R0,[SP, #+0]
   \   000003D0   0x....             LDR.N    R1,??DataTable6  ;; 0x40038000
   \   000003D2   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   000003D6   0xF841 0x002B      STR      R0,[R1, R11, LSL #+2]
   1064          			}
   1065          			//remove all remaining entry of this section two place up
   1066          			bound1 = total - cnt1 + 1;
   \                     ??CAN_LoadGroupEntry_30: (+1)
   \   000003DA   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   000003DE   0xEBB0 0x000B      SUBS     R0,R0,R11
   \   000003E2   0x1C40             ADDS     R0,R0,#+1
   \   000003E4   0x4680             MOV      R8,R0
   1067          			cnt1++;
   \   000003E6   0xF11B 0x0B01      ADDS     R11,R11,#+1
   1068          			while(bound1>0)
   \                     ??CAN_LoadGroupEntry_31: (+1)
   \   000003EA   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000003EE   0xF1B8 0x0F01      CMP      R8,#+1
   \   000003F2   0xDB25             BLT.N    ??CAN_LoadGroupEntry_22
   1069          			{
   1070          				entry1 = LPC_CANAF_RAM->mask[cnt1];
   \   000003F4   0x....             LDR.N    R0,??DataTable6  ;; 0x40038000
   \   000003F6   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   000003FA   0xF850 0x002B      LDR      R0,[R0, R11, LSL #+2]
   \   000003FE   0x0007             MOVS     R7,R0
   1071          				entry2 = LPC_CANAF_RAM->mask[cnt1+1];
   \   00000400   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   00000404   0xEA5F 0x008B      LSLS     R0,R11,#+2
   \   00000408   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   0000040C   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   00000410   0x6840             LDR      R0,[R0, #+4]
   \   00000412   0x9000             STR      R0,[SP, #+0]
   1072          				LPC_CANAF_RAM->mask[cnt1]   = buf0;
   \   00000414   0x....             LDR.N    R0,??DataTable6  ;; 0x40038000
   \   00000416   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   0000041A   0xF840 0x502B      STR      R5,[R0, R11, LSL #+2]
   1073          				LPC_CANAF_RAM->mask[cnt1+1] = buf1;
   \   0000041E   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   00000422   0xEA5F 0x008B      LSLS     R0,R11,#+2
   \   00000426   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   0000042A   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   0000042E   0x6046             STR      R6,[R0, #+4]
   1074          				buf0 = entry1;
   \   00000430   0x003D             MOVS     R5,R7
   1075          				buf1 = entry2;
   \   00000432   0x9800             LDR      R0,[SP, #+0]
   \   00000434   0x0006             MOVS     R6,R0
   1076          				cnt1   +=2;
   \   00000436   0xF11B 0x0B02      ADDS     R11,R11,#+2
   1077          				bound1 -=2;
   \   0000043A   0xF1B8 0x0802      SUBS     R8,R8,#+2
   \   0000043E   0xE7D4             B.N      ??CAN_LoadGroupEntry_31
   1078          			}
   1079          		}
   1080          		CANAF_gext_cnt++;
   \                     ??CAN_LoadGroupEntry_22: (+1)
   \   00000440   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   00000444   0x8800             LDRH     R0,[R0, #+0]
   \   00000446   0x1C40             ADDS     R0,R0,#+1
   \   00000448   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   0000044C   0x8008             STRH     R0,[R1, #+0]
   1081          		//update address values
   1082          		LPC_CANAF->ENDofTable +=0x08;
   \   0000044E   0x....             LDR.N    R0,??DataTable6_4  ;; 0x4003c014
   \   00000450   0x6800             LDR      R0,[R0, #+0]
   \   00000452   0x3008             ADDS     R0,R0,#+8
   \   00000454   0x....             LDR.N    R1,??DataTable6_4  ;; 0x4003c014
   \   00000456   0x6008             STR      R0,[R1, #+0]
   1083          	}
   1084          	LPC_CANAF->AFMR = 0x04;
   \                     ??CAN_LoadGroupEntry_19: (+1)
   \   00000458   0x2004             MOVS     R0,#+4
   \   0000045A   0x....             LDR.N    R1,??DataTable6_7  ;; 0x4003c000
   \   0000045C   0x6008             STR      R0,[R1, #+0]
   1085           	return CAN_OK;
   \   0000045E   0x2001             MOVS     R0,#+1
   \                     ??CAN_LoadGroupEntry_3: (+1)
   \   00000460   0xB007             ADD      SP,SP,#+28
   \   00000462   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
   1086          }
   1087          
   1088          /********************************************************************//**
   1089           * @brief		Remove AFLUT entry (FullCAN entry and Explicit Standard entry)
   1090           * @param[in]	EntryType: the type of entry that want to remove, should be:
   1091           * 				- FULLCAN_ENTRY
   1092           * 				- EXPLICIT_STANDARD_ENTRY
   1093           * 				- GROUP_STANDARD_ENTRY
   1094           * 				- EXPLICIT_EXTEND_ENTRY
   1095           * 				- GROUP_EXTEND_ENTRY
   1096           * @param[in]	position: the position of this entry in its section
   1097           * Note: the first position is 0
   1098           * @return 		CAN_ERROR, could be:
   1099           * 				- CAN_OK: removing is successful
   1100           * 				- CAN_ENTRY_NOT_EXIT_ERROR: entry want to remove is not exit
   1101           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1102          CAN_ERROR CAN_RemoveEntry(AFLUT_ENTRY_Type EntryType, uint16_t position)
   1103          {
   \                     CAN_RemoveEntry: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x468A             MOV      R10,R1
   1104          	uint16_t cnt, bound, total;
   1105          	uint32_t buf0, buf1;
   1106          	CHECK_PARAM(PARAM_AFLUT_ENTRY_TYPE(EntryType));
   \   00000008   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000A   0x2C00             CMP      R4,#+0
   \   0000000C   0xD011             BEQ.N    ??CAN_RemoveEntry_0
   \   0000000E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000010   0x2C01             CMP      R4,#+1
   \   00000012   0xD00E             BEQ.N    ??CAN_RemoveEntry_0
   \   00000014   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000016   0x2C02             CMP      R4,#+2
   \   00000018   0xD00B             BEQ.N    ??CAN_RemoveEntry_0
   \   0000001A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001C   0x2C03             CMP      R4,#+3
   \   0000001E   0xD008             BEQ.N    ??CAN_RemoveEntry_0
   \   00000020   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000022   0x2C04             CMP      R4,#+4
   \   00000024   0xD005             BEQ.N    ??CAN_RemoveEntry_0
   \   00000026   0xF240 0x4152      MOVW     R1,#+1106
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable7_3
   \   0000002E   0x.... 0x....      BL       check_failed
   1107          	CHECK_PARAM(PARAM_POSITION(position));
   \                     ??CAN_RemoveEntry_0: (+1)
   \   00000032   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000036   0xF5BA 0x7F00      CMP      R10,#+512
   \   0000003A   0xDB05             BLT.N    ??CAN_RemoveEntry_1
   \   0000003C   0xF240 0x4153      MOVW     R1,#+1107
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable7_3
   \   00000044   0x.... 0x....      BL       check_failed
   1108          
   1109          	/* Setup Acceptance Filter Configuration
   1110          	Acceptance Filter Mode Register = Off */
   1111          	LPC_CANAF->AFMR = 0x00000001;
   \                     ??CAN_RemoveEntry_1: (+1)
   \   00000048   0x2001             MOVS     R0,#+1
   \   0000004A   0x.... 0x....      LDR.W    R1,??DataTable15  ;; 0x4003c000
   \   0000004E   0x6008             STR      R0,[R1, #+0]
   1112          	total = ((CANAF_FullCAN_cnt+1)>>1)+((CANAF_std_cnt + 1) >> 1) + \
   1113          			CANAF_gstd_cnt + CANAF_ext_cnt + (CANAF_gext_cnt<<1);
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable14
   \   00000054   0x8800             LDRH     R0,[R0, #+0]
   \   00000056   0x1C40             ADDS     R0,R0,#+1
   \   00000058   0x.... 0x....      LDR.W    R1,??DataTable14_1
   \   0000005C   0x8809             LDRH     R1,[R1, #+0]
   \   0000005E   0x1C49             ADDS     R1,R1,#+1
   \   00000060   0x1049             ASRS     R1,R1,#+1
   \   00000062   0xEB11 0x0060      ADDS     R0,R1,R0, ASR #+1
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable8
   \   0000006A   0x8809             LDRH     R1,[R1, #+0]
   \   0000006C   0x1808             ADDS     R0,R1,R0
   \   0000006E   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   00000072   0x8809             LDRH     R1,[R1, #+0]
   \   00000074   0x1808             ADDS     R0,R1,R0
   \   00000076   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   0000007A   0x8809             LDRH     R1,[R1, #+0]
   \   0000007C   0xEB10 0x0041      ADDS     R0,R0,R1, LSL #+1
   \   00000080   0x0007             MOVS     R7,R0
   1114          
   1115          
   1116          /************** Remove FullCAN Entry *************/
   1117          	if(EntryType == FULLCAN_ENTRY)
   \   00000082   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000084   0x2C00             CMP      R4,#+0
   \   00000086   0xF040 0x811A      BNE.W    ??CAN_RemoveEntry_2
   1118          	{
   1119          		if((CANAF_FullCAN_cnt==0)||(position >= CANAF_FullCAN_cnt))
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable14
   \   0000008E   0x8800             LDRH     R0,[R0, #+0]
   \   00000090   0x2800             CMP      R0,#+0
   \   00000092   0xD006             BEQ.N    ??CAN_RemoveEntry_3
   \   00000094   0x.... 0x....      LDR.W    R0,??DataTable14
   \   00000098   0x8800             LDRH     R0,[R0, #+0]
   \   0000009A   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   0000009E   0x4582             CMP      R10,R0
   \   000000A0   0xD301             BCC.N    ??CAN_RemoveEntry_4
   1120          		{
   1121          			return CAN_ENTRY_NOT_EXIT_ERROR;
   \                     ??CAN_RemoveEntry_3: (+1)
   \   000000A2   0x2007             MOVS     R0,#+7
   \   000000A4   0xE2FB             B.N      ??CAN_RemoveEntry_5
   1122          		}
   1123          		else
   1124          		{
   1125          			cnt = position >> 1;
   \                     ??CAN_RemoveEntry_4: (+1)
   \   000000A6   0x4650             MOV      R0,R10
   \   000000A8   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000AA   0x0840             LSRS     R0,R0,#+1
   \   000000AC   0x0005             MOVS     R5,R0
   1126          			buf0 = LPC_CANAF_RAM->mask[cnt];
   \   000000AE   0x.... 0x....      LDR.W    R0,??DataTable14_2  ;; 0x40038000
   \   000000B2   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000B4   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   000000B8   0x4680             MOV      R8,R0
   1127          			bound = (CANAF_FullCAN_cnt - position -1)>>1;
   \   000000BA   0x.... 0x....      LDR.W    R0,??DataTable14
   \   000000BE   0x8800             LDRH     R0,[R0, #+0]
   \   000000C0   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000000C4   0xEBB0 0x000A      SUBS     R0,R0,R10
   \   000000C8   0x1E40             SUBS     R0,R0,#+1
   \   000000CA   0x1040             ASRS     R0,R0,#+1
   \   000000CC   0x0006             MOVS     R6,R0
   1128          			if((position & 0x0001) == 0) //event position
   \   000000CE   0xEA5F 0x70CA      LSLS     R0,R10,#+31
   \   000000D2   0xD418             BMI.N    ??CAN_RemoveEntry_6
   1129          			{
   1130          				while(bound--)
   \                     ??CAN_RemoveEntry_7: (+1)
   \   000000D4   0x0030             MOVS     R0,R6
   \   000000D6   0x1E46             SUBS     R6,R0,#+1
   \   000000D8   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000DA   0x2800             CMP      R0,#+0
   \   000000DC   0xD03E             BEQ.N    ??CAN_RemoveEntry_8
   1131          				{
   1132          					//remove all remaining FullCAN entry one place down
   1133          					buf1  = LPC_CANAF_RAM->mask[cnt+1];
   \   000000DE   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000E0   0x00A8             LSLS     R0,R5,#+2
   \   000000E2   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   000000E6   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   000000EA   0x6840             LDR      R0,[R0, #+4]
   \   000000EC   0x4681             MOV      R9,R0
   1134          					LPC_CANAF_RAM->mask[cnt] = (buf1 >> 16) | (buf0 << 16);
   \   000000EE   0xEA5F 0x4008      LSLS     R0,R8,#+16
   \   000000F2   0xEA50 0x4019      ORRS     R0,R0,R9, LSR #+16
   \   000000F6   0x.... 0x....      LDR.W    R1,??DataTable14_2  ;; 0x40038000
   \   000000FA   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000FC   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   1135          					buf0  = buf1;
   \   00000100   0x46C8             MOV      R8,R9
   1136          					cnt++;
   \   00000102   0x1C6D             ADDS     R5,R5,#+1
   \   00000104   0xE7E6             B.N      ??CAN_RemoveEntry_7
   1137          				}
   1138          			}
   1139          			else //odd position
   1140          			{
   1141          				while(bound--)
   \                     ??CAN_RemoveEntry_6: (+1)
   \   00000106   0x0030             MOVS     R0,R6
   \   00000108   0x1E46             SUBS     R6,R0,#+1
   \   0000010A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000010C   0x2800             CMP      R0,#+0
   \   0000010E   0xD025             BEQ.N    ??CAN_RemoveEntry_8
   1142          				{
   1143          					//remove all remaining FullCAN entry one place down
   1144          					buf1  = LPC_CANAF_RAM->mask[cnt+1];
   \   00000110   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000112   0x00A8             LSLS     R0,R5,#+2
   \   00000114   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   00000118   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   0000011C   0x6840             LDR      R0,[R0, #+4]
   \   0000011E   0x4681             MOV      R9,R0
   1145          					LPC_CANAF_RAM->mask[cnt] = (buf0 & 0xFFFF0000)|(buf1 >> 16);
   \   00000120   0xEA5F 0x4018      LSRS     R0,R8,#+16
   \   00000124   0x0400             LSLS     R0,R0,#+16
   \   00000126   0xEA50 0x4019      ORRS     R0,R0,R9, LSR #+16
   \   0000012A   0x.... 0x....      LDR.W    R1,??DataTable14_2  ;; 0x40038000
   \   0000012E   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000130   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   1146          					LPC_CANAF_RAM->mask[cnt+1] = LPC_CANAF_RAM->mask[cnt+1] << 16;
   \   00000134   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000136   0x00A8             LSLS     R0,R5,#+2
   \   00000138   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   0000013C   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   00000140   0x6840             LDR      R0,[R0, #+4]
   \   00000142   0x0400             LSLS     R0,R0,#+16
   \   00000144   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000146   0x00A9             LSLS     R1,R5,#+2
   \   00000148   0xF101 0x4180      ADD      R1,R1,#+1073741824
   \   0000014C   0xF511 0x3160      ADDS     R1,R1,#+229376
   \   00000150   0x6048             STR      R0,[R1, #+4]
   1147          					buf0  = buf1<<16;
   \   00000152   0xEA5F 0x4009      LSLS     R0,R9,#+16
   \   00000156   0x4680             MOV      R8,R0
   1148          					cnt++;
   \   00000158   0x1C6D             ADDS     R5,R5,#+1
   \   0000015A   0xE7D4             B.N      ??CAN_RemoveEntry_6
   1149          				}
   1150          			}
   1151          			if((CANAF_FullCAN_cnt & 0x0001) == 0)
   \                     ??CAN_RemoveEntry_8: (+1)
   \   0000015C   0x.... 0x....      LDR.W    R0,??DataTable14
   \   00000160   0x7800             LDRB     R0,[R0, #+0]
   \   00000162   0x07C0             LSLS     R0,R0,#+31
   \   00000164   0xD418             BMI.N    ??CAN_RemoveEntry_9
   1152          			{
   1153          				if((position & 0x0001)==0)
   \   00000166   0xEA5F 0x70CA      LSLS     R0,R10,#+31
   \   0000016A   0xD40B             BMI.N    ??CAN_RemoveEntry_10
   1154          					LPC_CANAF_RAM->mask[cnt] = (buf0 << 16) | (0x0000FFFF);
   \   0000016C   0xEA5F 0x4008      LSLS     R0,R8,#+16
   \   00000170   0xF440 0x407F      ORR      R0,R0,#0xFF00
   \   00000174   0xF050 0x00FF      ORRS     R0,R0,#0xFF
   \   00000178   0x.... 0x....      LDR.W    R1,??DataTable14_2  ;; 0x40038000
   \   0000017C   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000017E   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   \   00000182   0xE056             B.N      ??CAN_RemoveEntry_11
   1155          				else
   1156          					LPC_CANAF_RAM->mask[cnt] = buf0 | 0x0000FFFF;
   \                     ??CAN_RemoveEntry_10: (+1)
   \   00000184   0xF448 0x407F      ORR      R0,R8,#0xFF00
   \   00000188   0xF050 0x00FF      ORRS     R0,R0,#0xFF
   \   0000018C   0x.... 0x....      LDR.W    R1,??DataTable14_2  ;; 0x40038000
   \   00000190   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000192   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   \   00000196   0xE04C             B.N      ??CAN_RemoveEntry_11
   1157          			}
   1158          			else
   1159          			{
   1160          				//remove all remaining section one place down
   1161          				cnt = (CANAF_FullCAN_cnt + 1)>>1;
   \                     ??CAN_RemoveEntry_9: (+1)
   \   00000198   0x.... 0x....      LDR.W    R0,??DataTable14
   \   0000019C   0x8800             LDRH     R0,[R0, #+0]
   \   0000019E   0x1C40             ADDS     R0,R0,#+1
   \   000001A0   0x1040             ASRS     R0,R0,#+1
   \   000001A2   0x0005             MOVS     R5,R0
   1162          				bound = total + CANAF_FullCAN_cnt * 3;
   \   000001A4   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000001A6   0x.... 0x....      LDR.W    R0,??DataTable14
   \   000001AA   0x8800             LDRH     R0,[R0, #+0]
   \   000001AC   0x2103             MOVS     R1,#+3
   \   000001AE   0xFB01 0x7000      MLA      R0,R1,R0,R7
   \   000001B2   0x0006             MOVS     R6,R0
   1163          				while(bound>cnt)
   \                     ??CAN_RemoveEntry_12: (+1)
   \   000001B4   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000001B6   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000001B8   0x42B5             CMP      R5,R6
   \   000001BA   0xD20E             BCS.N    ??CAN_RemoveEntry_13
   1164          				{
   1165          					LPC_CANAF_RAM->mask[cnt-1] = LPC_CANAF_RAM->mask[cnt];
   \   000001BC   0x.... 0x....      LDR.W    R0,??DataTable14_2  ;; 0x40038000
   \   000001C0   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000001C2   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   000001C6   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000001C8   0x00A9             LSLS     R1,R5,#+2
   \   000001CA   0xF101 0x4180      ADD      R1,R1,#+1073741824
   \   000001CE   0xF511 0x3160      ADDS     R1,R1,#+229376
   \   000001D2   0xF841 0x0C04      STR      R0,[R1, #-4]
   1166          					cnt++;
   \   000001D6   0x1C6D             ADDS     R5,R5,#+1
   \   000001D8   0xE7EC             B.N      ??CAN_RemoveEntry_12
   1167          				}
   1168          				LPC_CANAF_RAM->mask[cnt-1]=0x00;
   \                     ??CAN_RemoveEntry_13: (+1)
   \   000001DA   0x2000             MOVS     R0,#+0
   \   000001DC   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000001DE   0x00A9             LSLS     R1,R5,#+2
   \   000001E0   0xF101 0x4180      ADD      R1,R1,#+1073741824
   \   000001E4   0xF511 0x3160      ADDS     R1,R1,#+229376
   \   000001E8   0xF841 0x0C04      STR      R0,[R1, #-4]
   1169          				//update address values
   1170          				LPC_CANAF->SFF_sa 	  -=0x04;
   \   000001EC   0x.... 0x....      LDR.W    R0,??DataTable7  ;; 0x4003c004
   \   000001F0   0x6800             LDR      R0,[R0, #+0]
   \   000001F2   0x1F00             SUBS     R0,R0,#+4
   \   000001F4   0x.... 0x....      LDR.W    R1,??DataTable7  ;; 0x4003c004
   \   000001F8   0x6008             STR      R0,[R1, #+0]
   1171          				LPC_CANAF->SFF_GRP_sa -=0x04 ;
   \   000001FA   0x.... 0x....      LDR.W    R0,??DataTable17  ;; 0x4003c008
   \   000001FE   0x6800             LDR      R0,[R0, #+0]
   \   00000200   0x1F00             SUBS     R0,R0,#+4
   \   00000202   0x.... 0x....      LDR.W    R1,??DataTable17  ;; 0x4003c008
   \   00000206   0x6008             STR      R0,[R1, #+0]
   1172          				LPC_CANAF->EFF_sa     -=0x04 ;
   \   00000208   0x.... 0x....      LDR.W    R0,??DataTable18  ;; 0x4003c00c
   \   0000020C   0x6800             LDR      R0,[R0, #+0]
   \   0000020E   0x1F00             SUBS     R0,R0,#+4
   \   00000210   0x.... 0x....      LDR.W    R1,??DataTable18  ;; 0x4003c00c
   \   00000214   0x6008             STR      R0,[R1, #+0]
   1173          				LPC_CANAF->EFF_GRP_sa -=0x04;
   \   00000216   0x.... 0x....      LDR.W    R0,??DataTable18_1  ;; 0x4003c010
   \   0000021A   0x6800             LDR      R0,[R0, #+0]
   \   0000021C   0x1F00             SUBS     R0,R0,#+4
   \   0000021E   0x.... 0x....      LDR.W    R1,??DataTable18_1  ;; 0x4003c010
   \   00000222   0x6008             STR      R0,[R1, #+0]
   1174          				LPC_CANAF->ENDofTable -=0x04;
   \   00000224   0x.... 0x....      LDR.W    R0,??DataTable18_2  ;; 0x4003c014
   \   00000228   0x6800             LDR      R0,[R0, #+0]
   \   0000022A   0x1F00             SUBS     R0,R0,#+4
   \   0000022C   0x.... 0x....      LDR.W    R1,??DataTable18_2  ;; 0x4003c014
   \   00000230   0x6008             STR      R0,[R1, #+0]
   1175          			}
   1176          			CANAF_FullCAN_cnt--;
   \                     ??CAN_RemoveEntry_11: (+1)
   \   00000232   0x.... 0x....      LDR.W    R0,??DataTable14
   \   00000236   0x8800             LDRH     R0,[R0, #+0]
   \   00000238   0x1E40             SUBS     R0,R0,#+1
   \   0000023A   0x.... 0x....      LDR.W    R1,??DataTable14
   \   0000023E   0x8008             STRH     R0,[R1, #+0]
   1177          
   1178          			//delete its FullCAN Object in the FullCAN Object section
   1179          			//remove all remaining FullCAN Object three place down
   1180          			cnt = total + position * 3;
   \   00000240   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000242   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000246   0x2003             MOVS     R0,#+3
   \   00000248   0xFB00 0x700A      MLA      R0,R0,R10,R7
   \   0000024C   0x0005             MOVS     R5,R0
   1181          			bound = (CANAF_FullCAN_cnt - position + 1) * 3;
   \   0000024E   0x.... 0x....      LDR.W    R0,??DataTable14
   \   00000252   0x8800             LDRH     R0,[R0, #+0]
   \   00000254   0xEBB0 0x000A      SUBS     R0,R0,R10
   \   00000258   0x1C40             ADDS     R0,R0,#+1
   \   0000025A   0x2103             MOVS     R1,#+3
   \   0000025C   0x4348             MULS     R0,R1,R0
   \   0000025E   0x0006             MOVS     R6,R0
   1182          
   1183          			while(bound)
   \                     ??CAN_RemoveEntry_14: (+1)
   \   00000260   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000262   0x2E00             CMP      R6,#+0
   \   00000264   0xF000 0x8216      BEQ.W    ??CAN_RemoveEntry_15
   1184          			{
   1185          				LPC_CANAF_RAM->mask[cnt]=LPC_CANAF_RAM->mask[cnt+3];;
   \   00000268   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000026A   0x00A8             LSLS     R0,R5,#+2
   \   0000026C   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   00000270   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   00000274   0x68C0             LDR      R0,[R0, #+12]
   \   00000276   0x.... 0x....      LDR.W    R1,??DataTable14_2  ;; 0x40038000
   \   0000027A   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000027C   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   1186          				LPC_CANAF_RAM->mask[cnt+1]=LPC_CANAF_RAM->mask[cnt+4];
   \   00000280   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000282   0x00A8             LSLS     R0,R5,#+2
   \   00000284   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   00000288   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   0000028C   0x6900             LDR      R0,[R0, #+16]
   \   0000028E   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000290   0x00A9             LSLS     R1,R5,#+2
   \   00000292   0xF101 0x4180      ADD      R1,R1,#+1073741824
   \   00000296   0xF511 0x3160      ADDS     R1,R1,#+229376
   \   0000029A   0x6048             STR      R0,[R1, #+4]
   1187          				LPC_CANAF_RAM->mask[cnt+2]=LPC_CANAF_RAM->mask[cnt+5];
   \   0000029C   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000029E   0x00A8             LSLS     R0,R5,#+2
   \   000002A0   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   000002A4   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   000002A8   0x6940             LDR      R0,[R0, #+20]
   \   000002AA   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000002AC   0x00A9             LSLS     R1,R5,#+2
   \   000002AE   0xF101 0x4180      ADD      R1,R1,#+1073741824
   \   000002B2   0xF511 0x3160      ADDS     R1,R1,#+229376
   \   000002B6   0x6088             STR      R0,[R1, #+8]
   1188          				bound -=3;
   \   000002B8   0x1EF6             SUBS     R6,R6,#+3
   1189          				cnt   +=3;
   \   000002BA   0x1CED             ADDS     R5,R5,#+3
   \   000002BC   0xE7D0             B.N      ??CAN_RemoveEntry_14
   1190          			}
   1191          		}
   1192          	}
   1193          
   1194          /************** Remove Explicit Standard ID Entry *************/
   1195          	else if(EntryType == EXPLICIT_STANDARD_ENTRY)
   \                     ??CAN_RemoveEntry_2: (+1)
   \   000002BE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000002C0   0x2C01             CMP      R4,#+1
   \   000002C2   0xF040 0x80E2      BNE.W    ??CAN_RemoveEntry_16
   1196          	{
   1197          		if((CANAF_std_cnt==0)||(position >= CANAF_std_cnt))
   \   000002C6   0x.... 0x....      LDR.W    R0,??DataTable14_1
   \   000002CA   0x8800             LDRH     R0,[R0, #+0]
   \   000002CC   0x2800             CMP      R0,#+0
   \   000002CE   0xD006             BEQ.N    ??CAN_RemoveEntry_17
   \   000002D0   0x.... 0x....      LDR.W    R0,??DataTable14_1
   \   000002D4   0x8800             LDRH     R0,[R0, #+0]
   \   000002D6   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000002DA   0x4582             CMP      R10,R0
   \   000002DC   0xD301             BCC.N    ??CAN_RemoveEntry_18
   1198          		{
   1199          			return CAN_ENTRY_NOT_EXIT_ERROR;
   \                     ??CAN_RemoveEntry_17: (+1)
   \   000002DE   0x2007             MOVS     R0,#+7
   \   000002E0   0xE1DD             B.N      ??CAN_RemoveEntry_5
   1200          		}
   1201          		else
   1202          		{
   1203          			cnt = ((CANAF_FullCAN_cnt+1)>>1)+ (position >> 1);
   \                     ??CAN_RemoveEntry_18: (+1)
   \   000002E2   0x.... 0x....      LDR.W    R0,??DataTable14
   \   000002E6   0x8800             LDRH     R0,[R0, #+0]
   \   000002E8   0x1C41             ADDS     R1,R0,#+1
   \   000002EA   0x4650             MOV      R0,R10
   \   000002EC   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000002EE   0x0840             LSRS     R0,R0,#+1
   \   000002F0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000002F2   0xEB10 0x0061      ADDS     R0,R0,R1, ASR #+1
   \   000002F6   0x0005             MOVS     R5,R0
   1204          			buf0 = LPC_CANAF_RAM->mask[cnt];
   \   000002F8   0x.... 0x....      LDR.W    R0,??DataTable14_2  ;; 0x40038000
   \   000002FC   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000002FE   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   00000302   0x4680             MOV      R8,R0
   1205          			bound = (CANAF_std_cnt - position - 1)>>1;
   \   00000304   0x.... 0x....      LDR.W    R0,??DataTable14_1
   \   00000308   0x8800             LDRH     R0,[R0, #+0]
   \   0000030A   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   0000030E   0xEBB0 0x000A      SUBS     R0,R0,R10
   \   00000312   0x1E40             SUBS     R0,R0,#+1
   \   00000314   0x1040             ASRS     R0,R0,#+1
   \   00000316   0x0006             MOVS     R6,R0
   1206          			if((position & 0x0001) == 0) //event position
   \   00000318   0xEA5F 0x70CA      LSLS     R0,R10,#+31
   \   0000031C   0xD418             BMI.N    ??CAN_RemoveEntry_19
   1207          			{
   1208          				while(bound--)
   \                     ??CAN_RemoveEntry_20: (+1)
   \   0000031E   0x0030             MOVS     R0,R6
   \   00000320   0x1E46             SUBS     R6,R0,#+1
   \   00000322   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000324   0x2800             CMP      R0,#+0
   \   00000326   0xD03E             BEQ.N    ??CAN_RemoveEntry_21
   1209          				{
   1210          					//remove all remaining FullCAN entry one place down
   1211          					buf1  = LPC_CANAF_RAM->mask[cnt+1];
   \   00000328   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000032A   0x00A8             LSLS     R0,R5,#+2
   \   0000032C   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   00000330   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   00000334   0x6840             LDR      R0,[R0, #+4]
   \   00000336   0x4681             MOV      R9,R0
   1212          					LPC_CANAF_RAM->mask[cnt] = (buf1 >> 16) | (buf0 << 16);
   \   00000338   0xEA5F 0x4008      LSLS     R0,R8,#+16
   \   0000033C   0xEA50 0x4019      ORRS     R0,R0,R9, LSR #+16
   \   00000340   0x.... 0x....      LDR.W    R1,??DataTable14_2  ;; 0x40038000
   \   00000344   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000346   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   1213          					buf0  = buf1;
   \   0000034A   0x46C8             MOV      R8,R9
   1214          					cnt++;
   \   0000034C   0x1C6D             ADDS     R5,R5,#+1
   \   0000034E   0xE7E6             B.N      ??CAN_RemoveEntry_20
   1215          				}
   1216          			}
   1217          			else //odd position
   1218          			{
   1219          				while(bound--)
   \                     ??CAN_RemoveEntry_19: (+1)
   \   00000350   0x0030             MOVS     R0,R6
   \   00000352   0x1E46             SUBS     R6,R0,#+1
   \   00000354   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000356   0x2800             CMP      R0,#+0
   \   00000358   0xD025             BEQ.N    ??CAN_RemoveEntry_21
   1220          				{
   1221          					//remove all remaining FullCAN entry one place down
   1222          					buf1  = LPC_CANAF_RAM->mask[cnt+1];
   \   0000035A   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000035C   0x00A8             LSLS     R0,R5,#+2
   \   0000035E   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   00000362   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   00000366   0x6840             LDR      R0,[R0, #+4]
   \   00000368   0x4681             MOV      R9,R0
   1223          					LPC_CANAF_RAM->mask[cnt] = (buf0 & 0xFFFF0000)|(buf1 >> 16);
   \   0000036A   0xEA5F 0x4018      LSRS     R0,R8,#+16
   \   0000036E   0x0400             LSLS     R0,R0,#+16
   \   00000370   0xEA50 0x4019      ORRS     R0,R0,R9, LSR #+16
   \   00000374   0x.... 0x....      LDR.W    R1,??DataTable14_2  ;; 0x40038000
   \   00000378   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000037A   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   1224          					LPC_CANAF_RAM->mask[cnt+1] = LPC_CANAF_RAM->mask[cnt+1] << 16;
   \   0000037E   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000380   0x00A8             LSLS     R0,R5,#+2
   \   00000382   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   00000386   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   0000038A   0x6840             LDR      R0,[R0, #+4]
   \   0000038C   0x0400             LSLS     R0,R0,#+16
   \   0000038E   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000390   0x00A9             LSLS     R1,R5,#+2
   \   00000392   0xF101 0x4180      ADD      R1,R1,#+1073741824
   \   00000396   0xF511 0x3160      ADDS     R1,R1,#+229376
   \   0000039A   0x6048             STR      R0,[R1, #+4]
   1225          					buf0  = buf1<<16;
   \   0000039C   0xEA5F 0x4009      LSLS     R0,R9,#+16
   \   000003A0   0x4680             MOV      R8,R0
   1226          					cnt++;
   \   000003A2   0x1C6D             ADDS     R5,R5,#+1
   \   000003A4   0xE7D4             B.N      ??CAN_RemoveEntry_19
   1227          				}
   1228          			}
   1229          			if((CANAF_std_cnt & 0x0001) == 0)
   \                     ??CAN_RemoveEntry_21: (+1)
   \   000003A6   0x.... 0x....      LDR.W    R0,??DataTable14_1
   \   000003AA   0x7800             LDRB     R0,[R0, #+0]
   \   000003AC   0x07C0             LSLS     R0,R0,#+31
   \   000003AE   0xD418             BMI.N    ??CAN_RemoveEntry_22
   1230          			{
   1231          				if((position & 0x0001)==0)
   \   000003B0   0xEA5F 0x70CA      LSLS     R0,R10,#+31
   \   000003B4   0xD40B             BMI.N    ??CAN_RemoveEntry_23
   1232          					LPC_CANAF_RAM->mask[cnt] = (buf0 << 16) | (0x0000FFFF);
   \   000003B6   0xEA5F 0x4008      LSLS     R0,R8,#+16
   \   000003BA   0xF440 0x407F      ORR      R0,R0,#0xFF00
   \   000003BE   0xF050 0x00FF      ORRS     R0,R0,#0xFF
   \   000003C2   0x.... 0x....      LDR.W    R1,??DataTable14_2  ;; 0x40038000
   \   000003C6   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000003C8   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   \   000003CC   0xE055             B.N      ??CAN_RemoveEntry_24
   1233          				else
   1234          					LPC_CANAF_RAM->mask[cnt] = buf0 | 0x0000FFFF;
   \                     ??CAN_RemoveEntry_23: (+1)
   \   000003CE   0xF448 0x407F      ORR      R0,R8,#0xFF00
   \   000003D2   0xF050 0x00FF      ORRS     R0,R0,#0xFF
   \   000003D6   0x.... 0x....      LDR.W    R1,??DataTable14_2  ;; 0x40038000
   \   000003DA   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000003DC   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   \   000003E0   0xE04B             B.N      ??CAN_RemoveEntry_24
   1235          			}
   1236          			else
   1237          			{
   1238          				//remove all remaining section one place down
   1239          				cnt = ((CANAF_FullCAN_cnt + 1)>>1) + ((CANAF_std_cnt + 1) >> 1);
   \                     ??CAN_RemoveEntry_22: (+1)
   \   000003E2   0x.... 0x....      LDR.W    R0,??DataTable14
   \   000003E6   0x8800             LDRH     R0,[R0, #+0]
   \   000003E8   0x1C40             ADDS     R0,R0,#+1
   \   000003EA   0x.... 0x....      LDR.W    R1,??DataTable14_1
   \   000003EE   0x8809             LDRH     R1,[R1, #+0]
   \   000003F0   0x1C49             ADDS     R1,R1,#+1
   \   000003F2   0x1049             ASRS     R1,R1,#+1
   \   000003F4   0xEB11 0x0060      ADDS     R0,R1,R0, ASR #+1
   \   000003F8   0x0005             MOVS     R5,R0
   1240          				bound = total + CANAF_FullCAN_cnt * 3;
   \   000003FA   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000003FC   0x.... 0x....      LDR.W    R0,??DataTable14
   \   00000400   0x8800             LDRH     R0,[R0, #+0]
   \   00000402   0x2103             MOVS     R1,#+3
   \   00000404   0xFB01 0x7000      MLA      R0,R1,R0,R7
   \   00000408   0x0006             MOVS     R6,R0
   1241          				while(bound>cnt)
   \                     ??CAN_RemoveEntry_25: (+1)
   \   0000040A   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000040C   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000040E   0x42B5             CMP      R5,R6
   \   00000410   0xD20E             BCS.N    ??CAN_RemoveEntry_26
   1242          				{
   1243          					LPC_CANAF_RAM->mask[cnt-1] = LPC_CANAF_RAM->mask[cnt];
   \   00000412   0x.... 0x....      LDR.W    R0,??DataTable14_2  ;; 0x40038000
   \   00000416   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000418   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   0000041C   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000041E   0x00A9             LSLS     R1,R5,#+2
   \   00000420   0xF101 0x4180      ADD      R1,R1,#+1073741824
   \   00000424   0xF511 0x3160      ADDS     R1,R1,#+229376
   \   00000428   0xF841 0x0C04      STR      R0,[R1, #-4]
   1244          					cnt++;
   \   0000042C   0x1C6D             ADDS     R5,R5,#+1
   \   0000042E   0xE7EC             B.N      ??CAN_RemoveEntry_25
   1245          				}
   1246          				LPC_CANAF_RAM->mask[cnt-1]=0x00;
   \                     ??CAN_RemoveEntry_26: (+1)
   \   00000430   0x2000             MOVS     R0,#+0
   \   00000432   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000434   0x00A9             LSLS     R1,R5,#+2
   \   00000436   0xF101 0x4180      ADD      R1,R1,#+1073741824
   \   0000043A   0xF511 0x3160      ADDS     R1,R1,#+229376
   \   0000043E   0xF841 0x0C04      STR      R0,[R1, #-4]
   1247          				//update address value
   1248          				LPC_CANAF->SFF_GRP_sa -=0x04 ;
   \   00000442   0x.... 0x....      LDR.W    R0,??DataTable17  ;; 0x4003c008
   \   00000446   0x6800             LDR      R0,[R0, #+0]
   \   00000448   0x1F00             SUBS     R0,R0,#+4
   \   0000044A   0x.... 0x....      LDR.W    R1,??DataTable17  ;; 0x4003c008
   \   0000044E   0x6008             STR      R0,[R1, #+0]
   1249          				LPC_CANAF->EFF_sa     -=0x04 ;
   \   00000450   0x.... 0x....      LDR.W    R0,??DataTable18  ;; 0x4003c00c
   \   00000454   0x6800             LDR      R0,[R0, #+0]
   \   00000456   0x1F00             SUBS     R0,R0,#+4
   \   00000458   0x.... 0x....      LDR.W    R1,??DataTable18  ;; 0x4003c00c
   \   0000045C   0x6008             STR      R0,[R1, #+0]
   1250          				LPC_CANAF->EFF_GRP_sa -=0x04;
   \   0000045E   0x.... 0x....      LDR.W    R0,??DataTable18_1  ;; 0x4003c010
   \   00000462   0x6800             LDR      R0,[R0, #+0]
   \   00000464   0x1F00             SUBS     R0,R0,#+4
   \   00000466   0x.... 0x....      LDR.W    R1,??DataTable18_1  ;; 0x4003c010
   \   0000046A   0x6008             STR      R0,[R1, #+0]
   1251          				LPC_CANAF->ENDofTable -=0x04;
   \   0000046C   0x.... 0x....      LDR.W    R0,??DataTable18_2  ;; 0x4003c014
   \   00000470   0x6800             LDR      R0,[R0, #+0]
   \   00000472   0x1F00             SUBS     R0,R0,#+4
   \   00000474   0x.... 0x....      LDR.W    R1,??DataTable18_2  ;; 0x4003c014
   \   00000478   0x6008             STR      R0,[R1, #+0]
   1252          			}
   1253          			CANAF_std_cnt--;
   \                     ??CAN_RemoveEntry_24: (+1)
   \   0000047A   0x.... 0x....      LDR.W    R0,??DataTable14_1
   \   0000047E   0x8800             LDRH     R0,[R0, #+0]
   \   00000480   0x1E40             SUBS     R0,R0,#+1
   \   00000482   0x.... 0x....      LDR.W    R1,??DataTable14_1
   \   00000486   0x8008             STRH     R0,[R1, #+0]
   \   00000488   0xE104             B.N      ??CAN_RemoveEntry_15
   1254          		}
   1255          	}
   1256          
   1257          /************** Remove Group of Standard ID Entry *************/
   1258          	else if(EntryType == GROUP_STANDARD_ENTRY)
   \                     ??CAN_RemoveEntry_16: (+1)
   \   0000048A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000048C   0x2C02             CMP      R4,#+2
   \   0000048E   0xD15D             BNE.N    ??CAN_RemoveEntry_27
   1259          	{
   1260          		if((CANAF_gstd_cnt==0)||(position >= CANAF_gstd_cnt))
   \   00000490   0x.... 0x....      LDR.W    R0,??DataTable8
   \   00000494   0x8800             LDRH     R0,[R0, #+0]
   \   00000496   0x2800             CMP      R0,#+0
   \   00000498   0xD006             BEQ.N    ??CAN_RemoveEntry_28
   \   0000049A   0x.... 0x....      LDR.W    R0,??DataTable8
   \   0000049E   0x8800             LDRH     R0,[R0, #+0]
   \   000004A0   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000004A4   0x4582             CMP      R10,R0
   \   000004A6   0xD301             BCC.N    ??CAN_RemoveEntry_29
   1261          		{
   1262          			return CAN_ENTRY_NOT_EXIT_ERROR;
   \                     ??CAN_RemoveEntry_28: (+1)
   \   000004A8   0x2007             MOVS     R0,#+7
   \   000004AA   0xE0F8             B.N      ??CAN_RemoveEntry_5
   1263          		}
   1264          		else
   1265          		{
   1266          			cnt = ((CANAF_FullCAN_cnt + 1)>>1) + ((CANAF_std_cnt + 1) >> 1)+ position + 1;
   \                     ??CAN_RemoveEntry_29: (+1)
   \   000004AC   0x.... 0x....      LDR.W    R0,??DataTable14
   \   000004B0   0x8800             LDRH     R0,[R0, #+0]
   \   000004B2   0x1C40             ADDS     R0,R0,#+1
   \   000004B4   0x.... 0x....      LDR.W    R1,??DataTable14_1
   \   000004B8   0x8809             LDRH     R1,[R1, #+0]
   \   000004BA   0x1C49             ADDS     R1,R1,#+1
   \   000004BC   0x1049             ASRS     R1,R1,#+1
   \   000004BE   0xEB11 0x0060      ADDS     R0,R1,R0, ASR #+1
   \   000004C2   0xEB1A 0x0000      ADDS     R0,R10,R0
   \   000004C6   0x1C40             ADDS     R0,R0,#+1
   \   000004C8   0x0005             MOVS     R5,R0
   1267          			bound = total + CANAF_FullCAN_cnt * 3;
   \   000004CA   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000004CC   0x.... 0x....      LDR.W    R0,??DataTable14
   \   000004D0   0x8800             LDRH     R0,[R0, #+0]
   \   000004D2   0x2103             MOVS     R1,#+3
   \   000004D4   0xFB01 0x7000      MLA      R0,R1,R0,R7
   \   000004D8   0x0006             MOVS     R6,R0
   1268          			while (cnt<bound)
   \                     ??CAN_RemoveEntry_30: (+1)
   \   000004DA   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000004DC   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000004DE   0x42B5             CMP      R5,R6
   \   000004E0   0xD20E             BCS.N    ??CAN_RemoveEntry_31
   1269          			{
   1270          				LPC_CANAF_RAM->mask[cnt-1] = LPC_CANAF_RAM->mask[cnt];
   \   000004E2   0x.... 0x....      LDR.W    R0,??DataTable14_2  ;; 0x40038000
   \   000004E6   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000004E8   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   000004EC   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000004EE   0x00A9             LSLS     R1,R5,#+2
   \   000004F0   0xF101 0x4180      ADD      R1,R1,#+1073741824
   \   000004F4   0xF511 0x3160      ADDS     R1,R1,#+229376
   \   000004F8   0xF841 0x0C04      STR      R0,[R1, #-4]
   1271          				cnt++;
   \   000004FC   0x1C6D             ADDS     R5,R5,#+1
   \   000004FE   0xE7EC             B.N      ??CAN_RemoveEntry_30
   1272          			}
   1273          			LPC_CANAF_RAM->mask[cnt-1]=0x00;
   \                     ??CAN_RemoveEntry_31: (+1)
   \   00000500   0x2000             MOVS     R0,#+0
   \   00000502   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000504   0x00A9             LSLS     R1,R5,#+2
   \   00000506   0xF101 0x4180      ADD      R1,R1,#+1073741824
   \   0000050A   0xF511 0x3160      ADDS     R1,R1,#+229376
   \   0000050E   0xF841 0x0C04      STR      R0,[R1, #-4]
   1274          		}
   1275          		CANAF_gstd_cnt--;
   \   00000512   0x.... 0x....      LDR.W    R0,??DataTable8
   \   00000516   0x8800             LDRH     R0,[R0, #+0]
   \   00000518   0x1E40             SUBS     R0,R0,#+1
   \   0000051A   0x.... 0x....      LDR.W    R1,??DataTable8
   \   0000051E   0x8008             STRH     R0,[R1, #+0]
   1276          		//update address value
   1277          		LPC_CANAF->EFF_sa     -=0x04;
   \   00000520   0x.... 0x....      LDR.W    R0,??DataTable18  ;; 0x4003c00c
   \   00000524   0x6800             LDR      R0,[R0, #+0]
   \   00000526   0x1F00             SUBS     R0,R0,#+4
   \   00000528   0x.... 0x....      LDR.W    R1,??DataTable18  ;; 0x4003c00c
   \   0000052C   0x6008             STR      R0,[R1, #+0]
   1278          		LPC_CANAF->EFF_GRP_sa -=0x04;
   \   0000052E   0x.... 0x....      LDR.W    R0,??DataTable18_1  ;; 0x4003c010
   \   00000532   0x6800             LDR      R0,[R0, #+0]
   \   00000534   0x1F00             SUBS     R0,R0,#+4
   \   00000536   0x.... 0x....      LDR.W    R1,??DataTable18_1  ;; 0x4003c010
   \   0000053A   0x6008             STR      R0,[R1, #+0]
   1279          		LPC_CANAF->ENDofTable -=0x04;
   \   0000053C   0x.... 0x....      LDR.W    R0,??DataTable18_2  ;; 0x4003c014
   \   00000540   0x6800             LDR      R0,[R0, #+0]
   \   00000542   0x1F00             SUBS     R0,R0,#+4
   \   00000544   0x.... 0x....      LDR.W    R1,??DataTable18_2  ;; 0x4003c014
   \   00000548   0x6008             STR      R0,[R1, #+0]
   \   0000054A   0xE0A3             B.N      ??CAN_RemoveEntry_15
   1280          	}
   1281          
   1282          /************** Remove Explicit Extended ID Entry *************/
   1283          	else if(EntryType == EXPLICIT_EXTEND_ENTRY)
   \                     ??CAN_RemoveEntry_27: (+1)
   \   0000054C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000054E   0x2C03             CMP      R4,#+3
   \   00000550   0xD156             BNE.N    ??CAN_RemoveEntry_32
   1284          	{
   1285          		if((CANAF_ext_cnt==0)||(position >= CANAF_ext_cnt))
   \   00000552   0x.... 0x....      LDR.W    R0,??DataTable8_1
   \   00000556   0x8800             LDRH     R0,[R0, #+0]
   \   00000558   0x2800             CMP      R0,#+0
   \   0000055A   0xD005             BEQ.N    ??CAN_RemoveEntry_33
   \   0000055C   0x....             LDR.N    R0,??DataTable8_1
   \   0000055E   0x8800             LDRH     R0,[R0, #+0]
   \   00000560   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000564   0x4582             CMP      R10,R0
   \   00000566   0xD301             BCC.N    ??CAN_RemoveEntry_34
   1286          		{
   1287          			return CAN_ENTRY_NOT_EXIT_ERROR;
   \                     ??CAN_RemoveEntry_33: (+1)
   \   00000568   0x2007             MOVS     R0,#+7
   \   0000056A   0xE098             B.N      ??CAN_RemoveEntry_5
   1288          		}
   1289          		else
   1290          		{
   1291          			cnt = ((CANAF_FullCAN_cnt + 1)>>1) + ((CANAF_std_cnt + 1) >> 1)+ CANAF_gstd_cnt + position + 1;
   \                     ??CAN_RemoveEntry_34: (+1)
   \   0000056C   0x.... 0x....      LDR.W    R0,??DataTable14
   \   00000570   0x8800             LDRH     R0,[R0, #+0]
   \   00000572   0x1C40             ADDS     R0,R0,#+1
   \   00000574   0x.... 0x....      LDR.W    R1,??DataTable14_1
   \   00000578   0x8809             LDRH     R1,[R1, #+0]
   \   0000057A   0x1C49             ADDS     R1,R1,#+1
   \   0000057C   0x1049             ASRS     R1,R1,#+1
   \   0000057E   0xEB11 0x0060      ADDS     R0,R1,R0, ASR #+1
   \   00000582   0x....             LDR.N    R1,??DataTable8
   \   00000584   0x8809             LDRH     R1,[R1, #+0]
   \   00000586   0x1808             ADDS     R0,R1,R0
   \   00000588   0xEB1A 0x0000      ADDS     R0,R10,R0
   \   0000058C   0x1C40             ADDS     R0,R0,#+1
   \   0000058E   0x0005             MOVS     R5,R0
   1292          			bound = total + CANAF_FullCAN_cnt * 3;
   \   00000590   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000592   0x.... 0x....      LDR.W    R0,??DataTable14
   \   00000596   0x8800             LDRH     R0,[R0, #+0]
   \   00000598   0x2103             MOVS     R1,#+3
   \   0000059A   0xFB01 0x7000      MLA      R0,R1,R0,R7
   \   0000059E   0x0006             MOVS     R6,R0
   1293          			while (cnt<bound)
   \                     ??CAN_RemoveEntry_35: (+1)
   \   000005A0   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000005A2   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000005A4   0x42B5             CMP      R5,R6
   \   000005A6   0xD20E             BCS.N    ??CAN_RemoveEntry_36
   1294          			{
   1295          				LPC_CANAF_RAM->mask[cnt-1] = LPC_CANAF_RAM->mask[cnt];
   \   000005A8   0x.... 0x....      LDR.W    R0,??DataTable14_2  ;; 0x40038000
   \   000005AC   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000005AE   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   000005B2   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000005B4   0x00A9             LSLS     R1,R5,#+2
   \   000005B6   0xF101 0x4180      ADD      R1,R1,#+1073741824
   \   000005BA   0xF511 0x3160      ADDS     R1,R1,#+229376
   \   000005BE   0xF841 0x0C04      STR      R0,[R1, #-4]
   1296          				cnt++;
   \   000005C2   0x1C6D             ADDS     R5,R5,#+1
   \   000005C4   0xE7EC             B.N      ??CAN_RemoveEntry_35
   1297          			}
   1298          			LPC_CANAF_RAM->mask[cnt-1]=0x00;
   \                     ??CAN_RemoveEntry_36: (+1)
   \   000005C6   0x2000             MOVS     R0,#+0
   \   000005C8   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000005CA   0x00A9             LSLS     R1,R5,#+2
   \   000005CC   0xF101 0x4180      ADD      R1,R1,#+1073741824
   \   000005D0   0xF511 0x3160      ADDS     R1,R1,#+229376
   \   000005D4   0xF841 0x0C04      STR      R0,[R1, #-4]
   1299          		}
   1300          		CANAF_ext_cnt--;
   \   000005D8   0x....             LDR.N    R0,??DataTable8_1
   \   000005DA   0x8800             LDRH     R0,[R0, #+0]
   \   000005DC   0x1E40             SUBS     R0,R0,#+1
   \   000005DE   0x....             LDR.N    R1,??DataTable8_1
   \   000005E0   0x8008             STRH     R0,[R1, #+0]
   1301          		LPC_CANAF->EFF_GRP_sa -=0x04;
   \   000005E2   0x.... 0x....      LDR.W    R0,??DataTable18_1  ;; 0x4003c010
   \   000005E6   0x6800             LDR      R0,[R0, #+0]
   \   000005E8   0x1F00             SUBS     R0,R0,#+4
   \   000005EA   0x.... 0x....      LDR.W    R1,??DataTable18_1  ;; 0x4003c010
   \   000005EE   0x6008             STR      R0,[R1, #+0]
   1302          		LPC_CANAF->ENDofTable -=0x04;
   \   000005F0   0x.... 0x....      LDR.W    R0,??DataTable18_2  ;; 0x4003c014
   \   000005F4   0x6800             LDR      R0,[R0, #+0]
   \   000005F6   0x1F00             SUBS     R0,R0,#+4
   \   000005F8   0x.... 0x....      LDR.W    R1,??DataTable18_2  ;; 0x4003c014
   \   000005FC   0x6008             STR      R0,[R1, #+0]
   \   000005FE   0xE049             B.N      ??CAN_RemoveEntry_15
   1303          	}
   1304          
   1305          /************** Remove Group of Extended ID Entry *************/
   1306          	else
   1307          	{
   1308          		if((CANAF_gext_cnt==0)||(position >= CANAF_gext_cnt))
   \                     ??CAN_RemoveEntry_32: (+1)
   \   00000600   0x....             LDR.N    R0,??DataTable8_2
   \   00000602   0x8800             LDRH     R0,[R0, #+0]
   \   00000604   0x2800             CMP      R0,#+0
   \   00000606   0xD005             BEQ.N    ??CAN_RemoveEntry_37
   \   00000608   0x....             LDR.N    R0,??DataTable8_2
   \   0000060A   0x8800             LDRH     R0,[R0, #+0]
   \   0000060C   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000610   0x4582             CMP      R10,R0
   \   00000612   0xD301             BCC.N    ??CAN_RemoveEntry_38
   1309          		{
   1310          			return CAN_ENTRY_NOT_EXIT_ERROR;
   \                     ??CAN_RemoveEntry_37: (+1)
   \   00000614   0x2007             MOVS     R0,#+7
   \   00000616   0xE042             B.N      ??CAN_RemoveEntry_5
   1311          		}
   1312          		else
   1313          		{
   1314          			cnt = total - (CANAF_gext_cnt<<1) + (position<<1);
   \                     ??CAN_RemoveEntry_38: (+1)
   \   00000618   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000061A   0x....             LDR.N    R0,??DataTable8_2
   \   0000061C   0x8800             LDRH     R0,[R0, #+0]
   \   0000061E   0xEBB7 0x0040      SUBS     R0,R7,R0, LSL #+1
   \   00000622   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000626   0xEB10 0x004A      ADDS     R0,R0,R10, LSL #+1
   \   0000062A   0x0005             MOVS     R5,R0
   1315          			bound = total + CANAF_FullCAN_cnt * 3;
   \   0000062C   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000062E   0x.... 0x....      LDR.W    R0,??DataTable14
   \   00000632   0x8800             LDRH     R0,[R0, #+0]
   \   00000634   0x2103             MOVS     R1,#+3
   \   00000636   0xFB01 0x7000      MLA      R0,R1,R0,R7
   \   0000063A   0x0006             MOVS     R6,R0
   1316          			while (cnt<bound)
   \                     ??CAN_RemoveEntry_39: (+1)
   \   0000063C   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000063E   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000640   0x42B5             CMP      R5,R6
   \   00000642   0xD21B             BCS.N    ??CAN_RemoveEntry_40
   1317          			{
   1318          				//remove all remaining entry two place up
   1319          				LPC_CANAF_RAM->mask[cnt] = LPC_CANAF_RAM->mask[cnt+2];
   \   00000644   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000646   0x00A8             LSLS     R0,R5,#+2
   \   00000648   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   0000064C   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   00000650   0x6880             LDR      R0,[R0, #+8]
   \   00000652   0x.... 0x....      LDR.W    R1,??DataTable14_2  ;; 0x40038000
   \   00000656   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000658   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   1320          				LPC_CANAF_RAM->mask[cnt+1] = LPC_CANAF_RAM->mask[cnt+3];
   \   0000065C   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000065E   0x00A8             LSLS     R0,R5,#+2
   \   00000660   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   00000664   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   00000668   0x68C0             LDR      R0,[R0, #+12]
   \   0000066A   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000066C   0x00A9             LSLS     R1,R5,#+2
   \   0000066E   0xF101 0x4180      ADD      R1,R1,#+1073741824
   \   00000672   0xF511 0x3160      ADDS     R1,R1,#+229376
   \   00000676   0x6048             STR      R0,[R1, #+4]
   1321          				cnt+=2;
   \   00000678   0x1CAD             ADDS     R5,R5,#+2
   \   0000067A   0xE7DF             B.N      ??CAN_RemoveEntry_39
   1322          			}
   1323          		}
   1324          		CANAF_gext_cnt--;
   \                     ??CAN_RemoveEntry_40: (+1)
   \   0000067C   0x....             LDR.N    R0,??DataTable8_2
   \   0000067E   0x8800             LDRH     R0,[R0, #+0]
   \   00000680   0x1E40             SUBS     R0,R0,#+1
   \   00000682   0x....             LDR.N    R1,??DataTable8_2
   \   00000684   0x8008             STRH     R0,[R1, #+0]
   1325          		LPC_CANAF->ENDofTable -=0x08;
   \   00000686   0x.... 0x....      LDR.W    R0,??DataTable18_2  ;; 0x4003c014
   \   0000068A   0x6800             LDR      R0,[R0, #+0]
   \   0000068C   0x3808             SUBS     R0,R0,#+8
   \   0000068E   0x.... 0x....      LDR.W    R1,??DataTable18_2  ;; 0x4003c014
   \   00000692   0x6008             STR      R0,[R1, #+0]
   1326          	}
   1327          	LPC_CANAF->AFMR = 0x04;
   \                     ??CAN_RemoveEntry_15: (+1)
   \   00000694   0x2004             MOVS     R0,#+4
   \   00000696   0x.... 0x....      LDR.W    R1,??DataTable15  ;; 0x4003c000
   \   0000069A   0x6008             STR      R0,[R1, #+0]
   1328          	return CAN_OK;
   \   0000069C   0x2001             MOVS     R0,#+1
   \                     ??CAN_RemoveEntry_5: (+1)
   \   0000069E   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
   1329          }
   1330          
   1331          /********************************************************************//**
   1332           * @brief		Send message data
   1333           * @param[in]	CANx pointer to LPC_CAN_TypeDef, should be:
   1334           * 				- LPC_CAN1: CAN1 peripheral
   1335           * 				- LPC_CAN2: CAN2 peripheral
   1336           * @param[in]	CAN_Msg point to the CAN_MSG_Type Structure, it contains message
   1337           * 				information such as: ID, DLC, RTR, ID Format
   1338           * @return 		Status:
   1339           * 				- SUCCESS: send message successfully
   1340           * 				- ERROR: send message unsuccessfully
   1341           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1342          Status CAN_SendMsg (LPC_CAN_TypeDef *CANx, CAN_MSG_Type *CAN_Msg)
   1343          {
   \                     CAN_SendMsg: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   1344          	uint32_t data;
   1345          	CHECK_PARAM(PARAM_CANx(CANx));
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable19  ;; 0x40044000
   \   0000000A   0x4284             CMP      R4,R0
   \   0000000C   0xD009             BEQ.N    ??CAN_SendMsg_0
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable19_1  ;; 0x40048000
   \   00000012   0x4284             CMP      R4,R0
   \   00000014   0xD005             BEQ.N    ??CAN_SendMsg_0
   \   00000016   0xF240 0x5141      MOVW     R1,#+1345
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable19_2
   \   0000001E   0x.... 0x....      BL       check_failed
   1346          	CHECK_PARAM(PARAM_ID_FORMAT(CAN_Msg->format));
   \                     ??CAN_SendMsg_0: (+1)
   \   00000022   0x7B68             LDRB     R0,[R5, #+13]
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD008             BEQ.N    ??CAN_SendMsg_1
   \   00000028   0x7B68             LDRB     R0,[R5, #+13]
   \   0000002A   0x2801             CMP      R0,#+1
   \   0000002C   0xD005             BEQ.N    ??CAN_SendMsg_1
   \   0000002E   0xF240 0x5142      MOVW     R1,#+1346
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable19_2
   \   00000036   0x.... 0x....      BL       check_failed
   1347          	if(CAN_Msg->format==STD_ID_FORMAT)
   \                     ??CAN_SendMsg_1: (+1)
   \   0000003A   0x7B68             LDRB     R0,[R5, #+13]
   \   0000003C   0x2800             CMP      R0,#+0
   \   0000003E   0xD10A             BNE.N    ??CAN_SendMsg_2
   1348          	{
   1349          		CHECK_PARAM(PARAM_ID_11(CAN_Msg->id));
   \   00000040   0x6828             LDR      R0,[R5, #+0]
   \   00000042   0x0AC0             LSRS     R0,R0,#+11
   \   00000044   0x2800             CMP      R0,#+0
   \   00000046   0xD010             BEQ.N    ??CAN_SendMsg_3
   \   00000048   0xF240 0x5145      MOVW     R1,#+1349
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable19_2
   \   00000050   0x.... 0x....      BL       check_failed
   \   00000054   0xE009             B.N      ??CAN_SendMsg_3
   1350          	}
   1351          	else
   1352          	{
   1353          		CHECK_PARAM(PARAM_ID_29(CAN_Msg->id));
   \                     ??CAN_SendMsg_2: (+1)
   \   00000056   0x6828             LDR      R0,[R5, #+0]
   \   00000058   0x0F40             LSRS     R0,R0,#+29
   \   0000005A   0x2800             CMP      R0,#+0
   \   0000005C   0xD005             BEQ.N    ??CAN_SendMsg_3
   \   0000005E   0xF240 0x5149      MOVW     R1,#+1353
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable19_2
   \   00000066   0x.... 0x....      BL       check_failed
   1354          	}
   1355          	CHECK_PARAM(PARAM_DLC(CAN_Msg->len));
   \                     ??CAN_SendMsg_3: (+1)
   \   0000006A   0x7B28             LDRB     R0,[R5, #+12]
   \   0000006C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006E   0x0900             LSRS     R0,R0,#+4
   \   00000070   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000072   0x2800             CMP      R0,#+0
   \   00000074   0xD005             BEQ.N    ??CAN_SendMsg_4
   \   00000076   0xF240 0x514B      MOVW     R1,#+1355
   \   0000007A   0x.... 0x....      LDR.W    R0,??DataTable19_2
   \   0000007E   0x.... 0x....      BL       check_failed
   1356          	CHECK_PARAM(PARAM_FRAME_TYPE(CAN_Msg->type));
   \                     ??CAN_SendMsg_4: (+1)
   \   00000082   0x7BA8             LDRB     R0,[R5, #+14]
   \   00000084   0x2800             CMP      R0,#+0
   \   00000086   0xD008             BEQ.N    ??CAN_SendMsg_5
   \   00000088   0x7BA8             LDRB     R0,[R5, #+14]
   \   0000008A   0x2801             CMP      R0,#+1
   \   0000008C   0xD005             BEQ.N    ??CAN_SendMsg_5
   \   0000008E   0xF240 0x514C      MOVW     R1,#+1356
   \   00000092   0x.... 0x....      LDR.W    R0,??DataTable19_2
   \   00000096   0x.... 0x....      BL       check_failed
   1357          
   1358          	//Check status of Transmit Buffer 1
   1359          	if (CANx->SR & (1<<2))
   \                     ??CAN_SendMsg_5: (+1)
   \   0000009A   0x69E0             LDR      R0,[R4, #+28]
   \   0000009C   0x0740             LSLS     R0,R0,#+29
   \   0000009E   0xD53E             BPL.N    ??CAN_SendMsg_6
   1360          	{
   1361          		/* Transmit Channel 1 is available */
   1362          		/* Write frame informations and frame data into its CANxTFI1,
   1363          		 * CANxTID1, CANxTDA1, CANxTDB1 register */
   1364          		CANx->TFI1 &= ~0x000F0000;
   \   000000A0   0x6B20             LDR      R0,[R4, #+48]
   \   000000A2   0xF430 0x2070      BICS     R0,R0,#0xF0000
   \   000000A6   0x6320             STR      R0,[R4, #+48]
   1365          		CANx->TFI1 |= (CAN_Msg->len)<<16;
   \   000000A8   0x6B20             LDR      R0,[R4, #+48]
   \   000000AA   0x7B29             LDRB     R1,[R5, #+12]
   \   000000AC   0xEA50 0x4001      ORRS     R0,R0,R1, LSL #+16
   \   000000B0   0x6320             STR      R0,[R4, #+48]
   1366          		if(CAN_Msg->type == REMOTE_FRAME)
   \   000000B2   0x7BA8             LDRB     R0,[R5, #+14]
   \   000000B4   0x2801             CMP      R0,#+1
   \   000000B6   0xD104             BNE.N    ??CAN_SendMsg_7
   1367          		{
   1368          			CANx->TFI1 |= (1<<30); //set bit RTR
   \   000000B8   0x6B20             LDR      R0,[R4, #+48]
   \   000000BA   0xF050 0x4080      ORRS     R0,R0,#0x40000000
   \   000000BE   0x6320             STR      R0,[R4, #+48]
   \   000000C0   0xE003             B.N      ??CAN_SendMsg_8
   1369          		}
   1370          		else
   1371          		{
   1372          			CANx->TFI1 &= ~(1<<30);
   \                     ??CAN_SendMsg_7: (+1)
   \   000000C2   0x6B20             LDR      R0,[R4, #+48]
   \   000000C4   0xF030 0x4080      BICS     R0,R0,#0x40000000
   \   000000C8   0x6320             STR      R0,[R4, #+48]
   1373          		}
   1374          		if(CAN_Msg->format == EXT_ID_FORMAT)
   \                     ??CAN_SendMsg_8: (+1)
   \   000000CA   0x7B68             LDRB     R0,[R5, #+13]
   \   000000CC   0x2801             CMP      R0,#+1
   \   000000CE   0xD104             BNE.N    ??CAN_SendMsg_9
   1375          		{
   1376          			CANx->TFI1 |= (0x80000000); //set bit FF
   \   000000D0   0x6B20             LDR      R0,[R4, #+48]
   \   000000D2   0xF050 0x4000      ORRS     R0,R0,#0x80000000
   \   000000D6   0x6320             STR      R0,[R4, #+48]
   \   000000D8   0xE003             B.N      ??CAN_SendMsg_10
   1377          		}
   1378          		else
   1379          		{
   1380          			CANx->TFI1 &= ~(0x80000000);
   \                     ??CAN_SendMsg_9: (+1)
   \   000000DA   0x6B20             LDR      R0,[R4, #+48]
   \   000000DC   0x0040             LSLS     R0,R0,#+1        ;; ZeroExtS R0,R0,#+1,#+1
   \   000000DE   0x0840             LSRS     R0,R0,#+1
   \   000000E0   0x6320             STR      R0,[R4, #+48]
   1381          		}
   1382          
   1383          		/* Write CAN ID*/
   1384          		CANx->TID1 = CAN_Msg->id;
   \                     ??CAN_SendMsg_10: (+1)
   \   000000E2   0x6828             LDR      R0,[R5, #+0]
   \   000000E4   0x6360             STR      R0,[R4, #+52]
   1385          
   1386          		/*Write first 4 data bytes*/
   1387          		data = (CAN_Msg->dataA[0])|(((CAN_Msg->dataA[1]))<<8)|((CAN_Msg->dataA[2])<<16)|((CAN_Msg->dataA[3])<<24);
   \   000000E6   0x7928             LDRB     R0,[R5, #+4]
   \   000000E8   0x7969             LDRB     R1,[R5, #+5]
   \   000000EA   0xEA50 0x2001      ORRS     R0,R0,R1, LSL #+8
   \   000000EE   0x79A9             LDRB     R1,[R5, #+6]
   \   000000F0   0xEA50 0x4001      ORRS     R0,R0,R1, LSL #+16
   \   000000F4   0x79E9             LDRB     R1,[R5, #+7]
   \   000000F6   0xEA50 0x6001      ORRS     R0,R0,R1, LSL #+24
   \   000000FA   0x0006             MOVS     R6,R0
   1388          		CANx->TDA1 = data;
   \   000000FC   0x63A6             STR      R6,[R4, #+56]
   1389          
   1390          		/*Write second 4 data bytes*/
   1391          		data = (CAN_Msg->dataB[0])|(((CAN_Msg->dataB[1]))<<8)|((CAN_Msg->dataB[2])<<16)|((CAN_Msg->dataB[3])<<24);
   \   000000FE   0x7A28             LDRB     R0,[R5, #+8]
   \   00000100   0x7A69             LDRB     R1,[R5, #+9]
   \   00000102   0xEA50 0x2001      ORRS     R0,R0,R1, LSL #+8
   \   00000106   0x7AA9             LDRB     R1,[R5, #+10]
   \   00000108   0xEA50 0x4001      ORRS     R0,R0,R1, LSL #+16
   \   0000010C   0x7AE9             LDRB     R1,[R5, #+11]
   \   0000010E   0xEA50 0x6001      ORRS     R0,R0,R1, LSL #+24
   \   00000112   0x0006             MOVS     R6,R0
   1392          		CANx->TDB1 = data;
   \   00000114   0x63E6             STR      R6,[R4, #+60]
   1393          
   1394          		 /*Write transmission request*/
   1395          		 CANx->CMR = 0x21;
   \   00000116   0x2021             MOVS     R0,#+33
   \   00000118   0x6060             STR      R0,[R4, #+4]
   1396          		 return SUCCESS;
   \   0000011A   0x2001             MOVS     R0,#+1
   \   0000011C   0xE084             B.N      ??CAN_SendMsg_11
   1397          	}
   1398          	//check status of Transmit Buffer 2
   1399          	else if(CANx->SR & (1<<10))
   \                     ??CAN_SendMsg_6: (+1)
   \   0000011E   0x69E0             LDR      R0,[R4, #+28]
   \   00000120   0x0540             LSLS     R0,R0,#+21
   \   00000122   0xD53E             BPL.N    ??CAN_SendMsg_12
   1400          	{
   1401          		/* Transmit Channel 2 is available */
   1402          		/* Write frame informations and frame data into its CANxTFI2,
   1403          		 * CANxTID2, CANxTDA2, CANxTDB2 register */
   1404          		CANx->TFI2 &= ~0x000F0000;
   \   00000124   0x6C20             LDR      R0,[R4, #+64]
   \   00000126   0xF430 0x2070      BICS     R0,R0,#0xF0000
   \   0000012A   0x6420             STR      R0,[R4, #+64]
   1405          		CANx->TFI2 |= (CAN_Msg->len)<<16;
   \   0000012C   0x6C20             LDR      R0,[R4, #+64]
   \   0000012E   0x7B29             LDRB     R1,[R5, #+12]
   \   00000130   0xEA50 0x4001      ORRS     R0,R0,R1, LSL #+16
   \   00000134   0x6420             STR      R0,[R4, #+64]
   1406          		if(CAN_Msg->type == REMOTE_FRAME)
   \   00000136   0x7BA8             LDRB     R0,[R5, #+14]
   \   00000138   0x2801             CMP      R0,#+1
   \   0000013A   0xD104             BNE.N    ??CAN_SendMsg_13
   1407          		{
   1408          			CANx->TFI2 |= (1<<30); //set bit RTR
   \   0000013C   0x6C20             LDR      R0,[R4, #+64]
   \   0000013E   0xF050 0x4080      ORRS     R0,R0,#0x40000000
   \   00000142   0x6420             STR      R0,[R4, #+64]
   \   00000144   0xE003             B.N      ??CAN_SendMsg_14
   1409          		}
   1410          		else
   1411          		{
   1412          			CANx->TFI2 &= ~(1<<30);
   \                     ??CAN_SendMsg_13: (+1)
   \   00000146   0x6C20             LDR      R0,[R4, #+64]
   \   00000148   0xF030 0x4080      BICS     R0,R0,#0x40000000
   \   0000014C   0x6420             STR      R0,[R4, #+64]
   1413          		}
   1414          		if(CAN_Msg->format == EXT_ID_FORMAT)
   \                     ??CAN_SendMsg_14: (+1)
   \   0000014E   0x7B68             LDRB     R0,[R5, #+13]
   \   00000150   0x2801             CMP      R0,#+1
   \   00000152   0xD104             BNE.N    ??CAN_SendMsg_15
   1415          		{
   1416          			CANx->TFI2 |= (0x80000000); //set bit FF
   \   00000154   0x6C20             LDR      R0,[R4, #+64]
   \   00000156   0xF050 0x4000      ORRS     R0,R0,#0x80000000
   \   0000015A   0x6420             STR      R0,[R4, #+64]
   \   0000015C   0xE003             B.N      ??CAN_SendMsg_16
   1417          		}
   1418          		else
   1419          		{
   1420          			CANx->TFI2 &= ~(0x80000000);
   \                     ??CAN_SendMsg_15: (+1)
   \   0000015E   0x6C20             LDR      R0,[R4, #+64]
   \   00000160   0x0040             LSLS     R0,R0,#+1        ;; ZeroExtS R0,R0,#+1,#+1
   \   00000162   0x0840             LSRS     R0,R0,#+1
   \   00000164   0x6420             STR      R0,[R4, #+64]
   1421          		}
   1422          
   1423          		/* Write CAN ID*/
   1424          		CANx->TID2 = CAN_Msg->id;
   \                     ??CAN_SendMsg_16: (+1)
   \   00000166   0x6828             LDR      R0,[R5, #+0]
   \   00000168   0x6460             STR      R0,[R4, #+68]
   1425          
   1426          		/*Write first 4 data bytes*/
   1427          		data = (CAN_Msg->dataA[0])|(((CAN_Msg->dataA[1]))<<8)|((CAN_Msg->dataA[2])<<16)|((CAN_Msg->dataA[3])<<24);
   \   0000016A   0x7928             LDRB     R0,[R5, #+4]
   \   0000016C   0x7969             LDRB     R1,[R5, #+5]
   \   0000016E   0xEA50 0x2001      ORRS     R0,R0,R1, LSL #+8
   \   00000172   0x79A9             LDRB     R1,[R5, #+6]
   \   00000174   0xEA50 0x4001      ORRS     R0,R0,R1, LSL #+16
   \   00000178   0x79E9             LDRB     R1,[R5, #+7]
   \   0000017A   0xEA50 0x6001      ORRS     R0,R0,R1, LSL #+24
   \   0000017E   0x0006             MOVS     R6,R0
   1428          		CANx->TDA2 = data;
   \   00000180   0x64A6             STR      R6,[R4, #+72]
   1429          
   1430          		/*Write second 4 data bytes*/
   1431          		data = (CAN_Msg->dataB[0])|(((CAN_Msg->dataB[1]))<<8)|((CAN_Msg->dataB[2])<<16)|((CAN_Msg->dataB[3])<<24);
   \   00000182   0x7A28             LDRB     R0,[R5, #+8]
   \   00000184   0x7A69             LDRB     R1,[R5, #+9]
   \   00000186   0xEA50 0x2001      ORRS     R0,R0,R1, LSL #+8
   \   0000018A   0x7AA9             LDRB     R1,[R5, #+10]
   \   0000018C   0xEA50 0x4001      ORRS     R0,R0,R1, LSL #+16
   \   00000190   0x7AE9             LDRB     R1,[R5, #+11]
   \   00000192   0xEA50 0x6001      ORRS     R0,R0,R1, LSL #+24
   \   00000196   0x0006             MOVS     R6,R0
   1432          		CANx->TDB2 = data;
   \   00000198   0x64E6             STR      R6,[R4, #+76]
   1433          
   1434          		/*Write transmission request*/
   1435          		CANx->CMR = 0x41;
   \   0000019A   0x2041             MOVS     R0,#+65
   \   0000019C   0x6060             STR      R0,[R4, #+4]
   1436          		return SUCCESS;
   \   0000019E   0x2001             MOVS     R0,#+1
   \   000001A0   0xE042             B.N      ??CAN_SendMsg_11
   1437          	}
   1438          	//check status of Transmit Buffer 3
   1439          	else if (CANx->SR & (1<<18))
   \                     ??CAN_SendMsg_12: (+1)
   \   000001A2   0x69E0             LDR      R0,[R4, #+28]
   \   000001A4   0x0340             LSLS     R0,R0,#+13
   \   000001A6   0xD53E             BPL.N    ??CAN_SendMsg_17
   1440          	{
   1441          		/* Transmit Channel 3 is available */
   1442          		/* Write frame informations and frame data into its CANxTFI3,
   1443          		 * CANxTID3, CANxTDA3, CANxTDB3 register */
   1444          		CANx->TFI3 &= ~0x000F0000;
   \   000001A8   0x6D20             LDR      R0,[R4, #+80]
   \   000001AA   0xF430 0x2070      BICS     R0,R0,#0xF0000
   \   000001AE   0x6520             STR      R0,[R4, #+80]
   1445          		CANx->TFI3 |= (CAN_Msg->len)<<16;
   \   000001B0   0x6D20             LDR      R0,[R4, #+80]
   \   000001B2   0x7B29             LDRB     R1,[R5, #+12]
   \   000001B4   0xEA50 0x4001      ORRS     R0,R0,R1, LSL #+16
   \   000001B8   0x6520             STR      R0,[R4, #+80]
   1446          		if(CAN_Msg->type == REMOTE_FRAME)
   \   000001BA   0x7BA8             LDRB     R0,[R5, #+14]
   \   000001BC   0x2801             CMP      R0,#+1
   \   000001BE   0xD104             BNE.N    ??CAN_SendMsg_18
   1447          		{
   1448          			CANx->TFI3 |= (1<<30); //set bit RTR
   \   000001C0   0x6D20             LDR      R0,[R4, #+80]
   \   000001C2   0xF050 0x4080      ORRS     R0,R0,#0x40000000
   \   000001C6   0x6520             STR      R0,[R4, #+80]
   \   000001C8   0xE003             B.N      ??CAN_SendMsg_19
   1449          		}
   1450          		else
   1451          		{
   1452          			CANx->TFI3 &= ~(1<<30);
   \                     ??CAN_SendMsg_18: (+1)
   \   000001CA   0x6D20             LDR      R0,[R4, #+80]
   \   000001CC   0xF030 0x4080      BICS     R0,R0,#0x40000000
   \   000001D0   0x6520             STR      R0,[R4, #+80]
   1453          		}
   1454          		if(CAN_Msg->format == EXT_ID_FORMAT)
   \                     ??CAN_SendMsg_19: (+1)
   \   000001D2   0x7B68             LDRB     R0,[R5, #+13]
   \   000001D4   0x2801             CMP      R0,#+1
   \   000001D6   0xD104             BNE.N    ??CAN_SendMsg_20
   1455          		{
   1456          			CANx->TFI3 |= (0x80000000); //set bit FF
   \   000001D8   0x6D20             LDR      R0,[R4, #+80]
   \   000001DA   0xF050 0x4000      ORRS     R0,R0,#0x80000000
   \   000001DE   0x6520             STR      R0,[R4, #+80]
   \   000001E0   0xE003             B.N      ??CAN_SendMsg_21
   1457          		}
   1458          		else
   1459          		{
   1460          			CANx->TFI3 &= ~(0x80000000);
   \                     ??CAN_SendMsg_20: (+1)
   \   000001E2   0x6D20             LDR      R0,[R4, #+80]
   \   000001E4   0x0040             LSLS     R0,R0,#+1        ;; ZeroExtS R0,R0,#+1,#+1
   \   000001E6   0x0840             LSRS     R0,R0,#+1
   \   000001E8   0x6520             STR      R0,[R4, #+80]
   1461          		}
   1462          
   1463          		/* Write CAN ID*/
   1464          		CANx->TID3 = CAN_Msg->id;
   \                     ??CAN_SendMsg_21: (+1)
   \   000001EA   0x6828             LDR      R0,[R5, #+0]
   \   000001EC   0x6560             STR      R0,[R4, #+84]
   1465          
   1466          		/*Write first 4 data bytes*/
   1467          		data = (CAN_Msg->dataA[0])|(((CAN_Msg->dataA[1]))<<8)|((CAN_Msg->dataA[2])<<16)|((CAN_Msg->dataA[3])<<24);
   \   000001EE   0x7928             LDRB     R0,[R5, #+4]
   \   000001F0   0x7969             LDRB     R1,[R5, #+5]
   \   000001F2   0xEA50 0x2001      ORRS     R0,R0,R1, LSL #+8
   \   000001F6   0x79A9             LDRB     R1,[R5, #+6]
   \   000001F8   0xEA50 0x4001      ORRS     R0,R0,R1, LSL #+16
   \   000001FC   0x79E9             LDRB     R1,[R5, #+7]
   \   000001FE   0xEA50 0x6001      ORRS     R0,R0,R1, LSL #+24
   \   00000202   0x0006             MOVS     R6,R0
   1468          		CANx->TDA3 = data;
   \   00000204   0x65A6             STR      R6,[R4, #+88]
   1469          
   1470          		/*Write second 4 data bytes*/
   1471          		data = (CAN_Msg->dataB[0])|(((CAN_Msg->dataB[1]))<<8)|((CAN_Msg->dataB[2])<<16)|((CAN_Msg->dataB[3])<<24);
   \   00000206   0x7A28             LDRB     R0,[R5, #+8]
   \   00000208   0x7A69             LDRB     R1,[R5, #+9]
   \   0000020A   0xEA50 0x2001      ORRS     R0,R0,R1, LSL #+8
   \   0000020E   0x7AA9             LDRB     R1,[R5, #+10]
   \   00000210   0xEA50 0x4001      ORRS     R0,R0,R1, LSL #+16
   \   00000214   0x7AE9             LDRB     R1,[R5, #+11]
   \   00000216   0xEA50 0x6001      ORRS     R0,R0,R1, LSL #+24
   \   0000021A   0x0006             MOVS     R6,R0
   1472          		CANx->TDB3 = data;
   \   0000021C   0x65E6             STR      R6,[R4, #+92]
   1473          
   1474          		/*Write transmission request*/
   1475          		CANx->CMR = 0x81;
   \   0000021E   0x2081             MOVS     R0,#+129
   \   00000220   0x6060             STR      R0,[R4, #+4]
   1476          		return SUCCESS;
   \   00000222   0x2001             MOVS     R0,#+1
   \   00000224   0xE000             B.N      ??CAN_SendMsg_11
   1477          	}
   1478          	else
   1479          	{
   1480          		return ERROR;
   \                     ??CAN_SendMsg_17: (+1)
   \   00000226   0x2000             MOVS     R0,#+0
   \                     ??CAN_SendMsg_11: (+1)
   \   00000228   0xBD70             POP      {R4-R6,PC}       ;; return
   1481          	}
   1482          }
   1483          
   1484          /********************************************************************//**
   1485           * @brief		Receive message data
   1486           * @param[in]	CANx pointer to LPC_CAN_TypeDef, should be:
   1487           * 				- LPC_CAN1: CAN1 peripheral
   1488           * 				- LPC_CAN2: CAN2 peripheral
   1489           * @param[in]	CAN_Msg point to the CAN_MSG_Type Struct, it will contain received
   1490           *  			message information such as: ID, DLC, RTR, ID Format
   1491           * @return 		Status:
   1492           * 				- SUCCESS: receive message successfully
   1493           * 				- ERROR: receive message unsuccessfully
   1494           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1495          Status CAN_ReceiveMsg (LPC_CAN_TypeDef *CANx, CAN_MSG_Type *CAN_Msg)
   1496          {
   \                     CAN_ReceiveMsg: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   1497          	uint32_t data;
   1498          
   1499          	CHECK_PARAM(PARAM_CANx(CANx));
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable19  ;; 0x40044000
   \   0000000A   0x4284             CMP      R4,R0
   \   0000000C   0xD009             BEQ.N    ??CAN_ReceiveMsg_0
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable19_1  ;; 0x40048000
   \   00000012   0x4284             CMP      R4,R0
   \   00000014   0xD005             BEQ.N    ??CAN_ReceiveMsg_0
   \   00000016   0xF240 0x51DB      MOVW     R1,#+1499
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable19_2
   \   0000001E   0x.... 0x....      BL       check_failed
   1500          
   1501          	//check status of Receive Buffer
   1502          	if((CANx->SR &0x00000001))
   \                     ??CAN_ReceiveMsg_0: (+1)
   \   00000022   0x69E0             LDR      R0,[R4, #+28]
   \   00000024   0x07C0             LSLS     R0,R0,#+31
   \   00000026   0xD52B             BPL.N    ??CAN_ReceiveMsg_1
   1503          	{
   1504          		/* Receive message is available */
   1505          		/* Read frame informations */
   1506          		CAN_Msg->format   = (uint8_t)(((CANx->RFS) & 0x80000000)>>31);
   \   00000028   0x6A20             LDR      R0,[R4, #+32]
   \   0000002A   0x0FC0             LSRS     R0,R0,#+31
   \   0000002C   0x7368             STRB     R0,[R5, #+13]
   1507          		CAN_Msg->type     = (uint8_t)(((CANx->RFS) & 0x40000000)>>30);
   \   0000002E   0x6A20             LDR      R0,[R4, #+32]
   \   00000030   0x0F80             LSRS     R0,R0,#+30
   \   00000032   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000036   0x73A8             STRB     R0,[R5, #+14]
   1508          		CAN_Msg->len      = (uint8_t)(((CANx->RFS) & 0x000F0000)>>16);
   \   00000038   0x6A20             LDR      R0,[R4, #+32]
   \   0000003A   0x0C00             LSRS     R0,R0,#+16
   \   0000003C   0xF010 0x000F      ANDS     R0,R0,#0xF
   \   00000040   0x7328             STRB     R0,[R5, #+12]
   1509          
   1510          
   1511          		/* Read CAN message identifier */
   1512          		CAN_Msg->id = CANx->RID;
   \   00000042   0x6A60             LDR      R0,[R4, #+36]
   \   00000044   0x6028             STR      R0,[R5, #+0]
   1513          
   1514          		/* Read the data if received message was DATA FRAME */
   1515          		if (CAN_Msg->type == DATA_FRAME)
   \   00000046   0x7BA8             LDRB     R0,[R5, #+14]
   \   00000048   0x2800             CMP      R0,#+0
   \   0000004A   0xD115             BNE.N    ??CAN_ReceiveMsg_2
   1516          		{
   1517          			/* Read first 4 data bytes */
   1518          			data = CANx->RDA;
   \   0000004C   0x6AA0             LDR      R0,[R4, #+40]
   \   0000004E   0x0006             MOVS     R6,R0
   1519          			*((uint8_t *) &CAN_Msg->dataA[0])= data & 0x000000FF;
   \   00000050   0x712E             STRB     R6,[R5, #+4]
   1520          			*((uint8_t *) &CAN_Msg->dataA[1])= (data & 0x0000FF00)>>8;;
   \   00000052   0x0A30             LSRS     R0,R6,#+8
   \   00000054   0x7168             STRB     R0,[R5, #+5]
   1521          			*((uint8_t *) &CAN_Msg->dataA[2])= (data & 0x00FF0000)>>16;
   \   00000056   0x0C30             LSRS     R0,R6,#+16
   \   00000058   0x71A8             STRB     R0,[R5, #+6]
   1522          			*((uint8_t *) &CAN_Msg->dataA[3])= (data & 0xFF000000)>>24;
   \   0000005A   0x0E30             LSRS     R0,R6,#+24
   \   0000005C   0x71E8             STRB     R0,[R5, #+7]
   1523          
   1524          			/* Read second 4 data bytes */
   1525          			data = CANx->RDB;
   \   0000005E   0x6AE0             LDR      R0,[R4, #+44]
   \   00000060   0x0006             MOVS     R6,R0
   1526          			*((uint8_t *) &CAN_Msg->dataB[0])= data & 0x000000FF;
   \   00000062   0x722E             STRB     R6,[R5, #+8]
   1527          			*((uint8_t *) &CAN_Msg->dataB[1])= (data & 0x0000FF00)>>8;
   \   00000064   0x0A30             LSRS     R0,R6,#+8
   \   00000066   0x7268             STRB     R0,[R5, #+9]
   1528          			*((uint8_t *) &CAN_Msg->dataB[2])= (data & 0x00FF0000)>>16;
   \   00000068   0x0C30             LSRS     R0,R6,#+16
   \   0000006A   0x72A8             STRB     R0,[R5, #+10]
   1529          			*((uint8_t *) &CAN_Msg->dataB[3])= (data & 0xFF000000)>>24;
   \   0000006C   0x0E30             LSRS     R0,R6,#+24
   \   0000006E   0x72E8             STRB     R0,[R5, #+11]
   1530          
   1531          		/*release receive buffer*/
   1532          		CANx->CMR = 0x04;
   \   00000070   0x2004             MOVS     R0,#+4
   \   00000072   0x6060             STR      R0,[R4, #+4]
   1533          		}
   1534          		else
   1535          		{
   1536          			/* Received Frame is a Remote Frame, not have data, we just receive
   1537          			 * message information only */
   1538          			CANx->CMR = 0x04; /*release receive buffer*/
   1539          			return SUCCESS;
   1540          		}
   1541          	}
   1542          	else
   1543          	{
   1544          		// no receive message available
   1545          		return ERROR;
   1546          	}
   1547          	return SUCCESS;
   \   00000074   0x2001             MOVS     R0,#+1
   \   00000076   0xE004             B.N      ??CAN_ReceiveMsg_3
   \                     ??CAN_ReceiveMsg_2: (+1)
   \   00000078   0x2004             MOVS     R0,#+4
   \   0000007A   0x6060             STR      R0,[R4, #+4]
   \   0000007C   0x2001             MOVS     R0,#+1
   \   0000007E   0xE000             B.N      ??CAN_ReceiveMsg_3
   \                     ??CAN_ReceiveMsg_1: (+1)
   \   00000080   0x2000             MOVS     R0,#+0
   \                     ??CAN_ReceiveMsg_3: (+1)
   \   00000082   0xBD70             POP      {R4-R6,PC}       ;; return
   1548          }
   1549          
   1550          /********************************************************************//**
   1551           * @brief		Receive FullCAN Object
   1552           * @param[in]	CANAFx: CAN Acceptance Filter register, should be: LPC_CANAF
   1553           * @param[in]	CAN_Msg point to the CAN_MSG_Type Struct, it will contain received
   1554           *  			message information such as: ID, DLC, RTR, ID Format
   1555           * @return 		CAN_ERROR, could be:
   1556           * 				- CAN_FULL_OBJ_NOT_RCV: FullCAN Object is not be received
   1557           * 				- CAN_OK: Received FullCAN Object successful
   1558           *
   1559           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1560          CAN_ERROR FCAN_ReadObj (LPC_CANAF_TypeDef* CANAFx, CAN_MSG_Type *CAN_Msg)
   1561          {
   \                     FCAN_ReadObj: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   1562          	uint32_t *pSrc, data;
   1563          	uint32_t interrut_word, msg_idx, test_bit, head_idx, tail_idx;
   1564          
   1565          	CHECK_PARAM(PARAM_CANAFx(CANAFx));
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable15  ;; 0x4003c000
   \   0000000C   0x4284             CMP      R4,R0
   \   0000000E   0xD005             BEQ.N    ??FCAN_ReadObj_0
   \   00000010   0xF240 0x611D      MOVW     R1,#+1565
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable19_2
   \   00000018   0x.... 0x....      BL       check_failed
   1566          
   1567          	interrut_word = 0;
   \                     ??FCAN_ReadObj_0: (+1)
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x4680             MOV      R8,R0
   1568          
   1569          	if (LPC_CANAF->FCANIC0 != 0)
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable19_3  ;; 0x4003c024
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0x2800             CMP      R0,#+0
   \   00000028   0xD008             BEQ.N    ??FCAN_ReadObj_1
   1570          	{
   1571          		interrut_word = LPC_CANAF->FCANIC0;
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable19_3  ;; 0x4003c024
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0x4680             MOV      R8,R0
   1572          		head_idx = 0;
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x9000             STR      R0,[SP, #+0]
   1573          		tail_idx = 31;
   \   00000036   0x201F             MOVS     R0,#+31
   \   00000038   0x4683             MOV      R11,R0
   \   0000003A   0xE00C             B.N      ??FCAN_ReadObj_2
   1574          	}
   1575          	else if (LPC_CANAF->FCANIC1 != 0)
   \                     ??FCAN_ReadObj_1: (+1)
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable19_4  ;; 0x4003c028
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0x2800             CMP      R0,#+0
   \   00000044   0xD007             BEQ.N    ??FCAN_ReadObj_2
   1576          	{
   1577          		interrut_word = LPC_CANAF->FCANIC1;
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable19_4  ;; 0x4003c028
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0x4680             MOV      R8,R0
   1578          		head_idx = 32;
   \   0000004E   0x2020             MOVS     R0,#+32
   \   00000050   0x9000             STR      R0,[SP, #+0]
   1579          		tail_idx = 63;
   \   00000052   0x203F             MOVS     R0,#+63
   \   00000054   0x4683             MOV      R11,R0
   1580          	}
   1581          
   1582          	if (interrut_word != 0)
   \                     ??FCAN_ReadObj_2: (+1)
   \   00000056   0xF1B8 0x0F00      CMP      R8,#+0
   \   0000005A   0xD050             BEQ.N    ??FCAN_ReadObj_3
   1583          	{
   1584          		/* Detect for interrupt pending */
   1585          		msg_idx = 0;
   \   0000005C   0x2000             MOVS     R0,#+0
   \   0000005E   0x4681             MOV      R9,R0
   1586          		for (msg_idx = head_idx; msg_idx <= tail_idx; msg_idx++)
   \   00000060   0x9800             LDR      R0,[SP, #+0]
   \   00000062   0x4681             MOV      R9,R0
   \                     ??FCAN_ReadObj_4: (+1)
   \   00000064   0x45CB             CMP      R11,R9
   \   00000066   0xD34A             BCC.N    ??FCAN_ReadObj_3
   1587          		{
   1588          			test_bit = interrut_word & 0x1;
   \   00000068   0xF018 0x0001      ANDS     R0,R8,#0x1
   \   0000006C   0x4682             MOV      R10,R0
   1589          			interrut_word = interrut_word >> 1;
   \   0000006E   0xEA5F 0x0858      LSRS     R8,R8,#+1
   1590          
   1591          			if (test_bit)
   \   00000072   0xF1BA 0x0F00      CMP      R10,#+0
   \   00000076   0xD03F             BEQ.N    ??FCAN_ReadObj_5
   1592          			{
   1593          				pSrc = (uint32_t *) (LPC_CANAF->ENDofTable + LPC_CANAF_RAM_BASE + msg_idx * 12);
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable18_2  ;; 0x4003c014
   \   0000007C   0x6800             LDR      R0,[R0, #+0]
   \   0000007E   0x210C             MOVS     R1,#+12
   \   00000080   0xFB01 0x0009      MLA      R0,R1,R9,R0
   \   00000084   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   00000088   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   0000008C   0x0006             MOVS     R6,R0
   1594          
   1595          	    	 	/* Has been finished updating the content */
   1596          	    	 	if ((*pSrc & 0x03000000L) == 0x03000000L)
   \   0000008E   0x6830             LDR      R0,[R6, #+0]
   \   00000090   0xF010 0x7040      ANDS     R0,R0,#0x3000000
   \   00000094   0xF1B0 0x7F40      CMP      R0,#+50331648
   \   00000098   0xD12E             BNE.N    ??FCAN_ReadObj_5
   1597          	    	 	{
   1598          	    	 		/*clear semaphore*/
   1599          	    	 		*pSrc &= 0xFCFFFFFF;
   \   0000009A   0x6830             LDR      R0,[R6, #+0]
   \   0000009C   0xF030 0x7040      BICS     R0,R0,#0x3000000
   \   000000A0   0x6030             STR      R0,[R6, #+0]
   1600          
   1601          	    	 		/*Set to DatA*/
   1602          	    	 		pSrc++;
   \   000000A2   0x1D36             ADDS     R6,R6,#+4
   1603          	    	 		/* Copy to dest buf */
   1604          	    	 		data = *pSrc;
   \   000000A4   0x6830             LDR      R0,[R6, #+0]
   \   000000A6   0x0007             MOVS     R7,R0
   1605          	    			*((uint8_t *) &CAN_Msg->dataA[0])= data & 0x000000FF;
   \   000000A8   0x712F             STRB     R7,[R5, #+4]
   1606          	    			*((uint8_t *) &CAN_Msg->dataA[1])= (data & 0x0000FF00)>>8;
   \   000000AA   0x0A38             LSRS     R0,R7,#+8
   \   000000AC   0x7168             STRB     R0,[R5, #+5]
   1607          	    			*((uint8_t *) &CAN_Msg->dataA[2])= (data & 0x00FF0000)>>16;
   \   000000AE   0x0C38             LSRS     R0,R7,#+16
   \   000000B0   0x71A8             STRB     R0,[R5, #+6]
   1608          	    			*((uint8_t *) &CAN_Msg->dataA[3])= (data & 0xFF000000)>>24;
   \   000000B2   0x0E38             LSRS     R0,R7,#+24
   \   000000B4   0x71E8             STRB     R0,[R5, #+7]
   1609          
   1610          	    	 		/*Set to DatB*/
   1611          	    	 		pSrc++;
   \   000000B6   0x1D36             ADDS     R6,R6,#+4
   1612          	    	 		/* Copy to dest buf */
   1613          	    	 		data = *pSrc;
   \   000000B8   0x6830             LDR      R0,[R6, #+0]
   \   000000BA   0x0007             MOVS     R7,R0
   1614          	    			*((uint8_t *) &CAN_Msg->dataB[0])= data & 0x000000FF;
   \   000000BC   0x722F             STRB     R7,[R5, #+8]
   1615          	    			*((uint8_t *) &CAN_Msg->dataB[1])= (data & 0x0000FF00)>>8;
   \   000000BE   0x0A38             LSRS     R0,R7,#+8
   \   000000C0   0x7268             STRB     R0,[R5, #+9]
   1616          	    			*((uint8_t *) &CAN_Msg->dataB[2])= (data & 0x00FF0000)>>16;
   \   000000C2   0x0C38             LSRS     R0,R7,#+16
   \   000000C4   0x72A8             STRB     R0,[R5, #+10]
   1617          	    			*((uint8_t *) &CAN_Msg->dataB[3])= (data & 0xFF000000)>>24;
   \   000000C6   0x0E38             LSRS     R0,R7,#+24
   \   000000C8   0x72E8             STRB     R0,[R5, #+11]
   1618          	    	 		/*Back to Dat1*/
   1619          	    	 		pSrc -= 2;
   \   000000CA   0x3E08             SUBS     R6,R6,#+8
   1620          
   1621          	    	 		CAN_Msg->id = *pSrc & 0x7FF;
   \   000000CC   0x6830             LDR      R0,[R6, #+0]
   \   000000CE   0x0540             LSLS     R0,R0,#+21       ;; ZeroExtS R0,R0,#+21,#+21
   \   000000D0   0x0D40             LSRS     R0,R0,#+21
   \   000000D2   0x6028             STR      R0,[R5, #+0]
   1622          	    	 		CAN_Msg->len = (uint8_t) (*pSrc >> 16) & 0x0F;
   \   000000D4   0x6830             LDR      R0,[R6, #+0]
   \   000000D6   0x0C00             LSRS     R0,R0,#+16
   \   000000D8   0xF010 0x000F      ANDS     R0,R0,#0xF
   \   000000DC   0x7328             STRB     R0,[R5, #+12]
   1623          					CAN_Msg->format = 0; //FullCAN Object ID always is 11-bit value
   \   000000DE   0x2000             MOVS     R0,#+0
   \   000000E0   0x7368             STRB     R0,[R5, #+13]
   1624          					CAN_Msg->type = (uint8_t)(*pSrc >> 30) &0x01;
   \   000000E2   0x6830             LDR      R0,[R6, #+0]
   \   000000E4   0x0F80             LSRS     R0,R0,#+30
   \   000000E6   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   000000EA   0x73A8             STRB     R0,[R5, #+14]
   1625          	    	 		/*Re-read semaphore*/
   1626          	    	 		if ((*pSrc & 0x03000000L) == 0)
   \   000000EC   0x6830             LDR      R0,[R6, #+0]
   \   000000EE   0xF010 0x7F40      TST      R0,#0x3000000
   \   000000F2   0xD101             BNE.N    ??FCAN_ReadObj_5
   1627          	    	 		{
   1628          	    	 			return CAN_OK;
   \   000000F4   0x2001             MOVS     R0,#+1
   \   000000F6   0xE003             B.N      ??FCAN_ReadObj_6
   1629          	    	 		}
   1630          	    	 	}
   1631          			}
   1632          		}
   \                     ??FCAN_ReadObj_5: (+1)
   \   000000F8   0xF119 0x0901      ADDS     R9,R9,#+1
   \   000000FC   0xE7B2             B.N      ??FCAN_ReadObj_4
   1633          	}
   1634          	return CAN_FULL_OBJ_NOT_RCV;
   \                     ??FCAN_ReadObj_3: (+1)
   \   000000FE   0x2003             MOVS     R0,#+3
   \                     ??FCAN_ReadObj_6: (+1)
   \   00000100   0xE8BD 0x8FF2      POP      {R1,R4-R11,PC}   ;; return
   1635          }
   1636          /********************************************************************//**
   1637           * @brief		Get CAN Control Status
   1638           * @param[in]	CANx pointer to LPC_CAN_TypeDef, should be:
   1639           * 				- LPC_CAN1: CAN1 peripheral
   1640           * 				- LPC_CAN2: CAN2 peripheral
   1641           * @param[in]	arg: type of CAN status to get from CAN status register
   1642           * 				Should be:
   1643           * 				- CANCTRL_GLOBAL_STS: CAN Global Status
   1644           * 				- CANCTRL_INT_CAP: CAN Interrupt and Capture
   1645           * 				- CANCTRL_ERR_WRN: CAN Error Warning Limit
   1646           * 				- CANCTRL_STS: CAN Control Status
   1647           * @return 		Current Control Status that you want to get value
   1648           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1649          uint32_t CAN_GetCTRLStatus (LPC_CAN_TypeDef* CANx, CAN_CTRL_STS_Type arg)
   1650          {
   \                     CAN_GetCTRLStatus: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   1651          	CHECK_PARAM(PARAM_CANx(CANx));
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable19  ;; 0x40044000
   \   0000000A   0x4284             CMP      R4,R0
   \   0000000C   0xD009             BEQ.N    ??CAN_GetCTRLStatus_0
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable19_1  ;; 0x40048000
   \   00000012   0x4284             CMP      R4,R0
   \   00000014   0xD005             BEQ.N    ??CAN_GetCTRLStatus_0
   \   00000016   0xF240 0x6173      MOVW     R1,#+1651
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable19_2
   \   0000001E   0x.... 0x....      BL       check_failed
   1652          	CHECK_PARAM(PARAM_CTRL_STS_TYPE(arg));
   \                     ??CAN_GetCTRLStatus_0: (+1)
   \   00000022   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000024   0x2D00             CMP      R5,#+0
   \   00000026   0xD00E             BEQ.N    ??CAN_GetCTRLStatus_1
   \   00000028   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000002A   0x2D01             CMP      R5,#+1
   \   0000002C   0xD00B             BEQ.N    ??CAN_GetCTRLStatus_1
   \   0000002E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000030   0x2D02             CMP      R5,#+2
   \   00000032   0xD008             BEQ.N    ??CAN_GetCTRLStatus_1
   \   00000034   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000036   0x2D03             CMP      R5,#+3
   \   00000038   0xD005             BEQ.N    ??CAN_GetCTRLStatus_1
   \   0000003A   0xF240 0x6174      MOVW     R1,#+1652
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable19_2
   \   00000042   0x.... 0x....      BL       check_failed
   1653          
   1654          	switch (arg)
   \                     ??CAN_GetCTRLStatus_1: (+1)
   \   00000046   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000048   0x2D00             CMP      R5,#+0
   \   0000004A   0xD003             BEQ.N    ??CAN_GetCTRLStatus_2
   \   0000004C   0x2D02             CMP      R5,#+2
   \   0000004E   0xD005             BEQ.N    ??CAN_GetCTRLStatus_3
   \   00000050   0xD302             BCC.N    ??CAN_GetCTRLStatus_4
   \   00000052   0xE005             B.N      ??CAN_GetCTRLStatus_5
   1655          	{
   1656          	case CANCTRL_GLOBAL_STS:
   1657          		return CANx->GSR;
   \                     ??CAN_GetCTRLStatus_2: (+1)
   \   00000054   0x68A0             LDR      R0,[R4, #+8]
   \   00000056   0xE004             B.N      ??CAN_GetCTRLStatus_6
   1658          
   1659          	case CANCTRL_INT_CAP:
   1660          		return CANx->ICR;
   \                     ??CAN_GetCTRLStatus_4: (+1)
   \   00000058   0x68E0             LDR      R0,[R4, #+12]
   \   0000005A   0xE002             B.N      ??CAN_GetCTRLStatus_6
   1661          
   1662          	case CANCTRL_ERR_WRN:
   1663          		return CANx->EWL;
   \                     ??CAN_GetCTRLStatus_3: (+1)
   \   0000005C   0x69A0             LDR      R0,[R4, #+24]
   \   0000005E   0xE000             B.N      ??CAN_GetCTRLStatus_6
   1664          
   1665          	default: // CANCTRL_STS
   1666          		return CANx->SR;
   \                     ??CAN_GetCTRLStatus_5: (+1)
   \   00000060   0x69E0             LDR      R0,[R4, #+28]
   \                     ??CAN_GetCTRLStatus_6: (+1)
   \   00000062   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   1667          	}
   1668          }
   1669          /********************************************************************//**
   1670           * @brief		Get CAN Central Status
   1671           * @param[in]	CANCRx point to LPC_CANCR_TypeDef, should be: LPC_CANCR
   1672           * @param[in]	arg: type of CAN status to get from CAN Central status register
   1673           * 				Should be:
   1674           * 				- CANCR_TX_STS: Central CAN Tx Status
   1675           * 				- CANCR_RX_STS: Central CAN Rx Status
   1676           * 				- CANCR_MS: Central CAN Miscellaneous Status
   1677           * @return 		Current Central Status that you want to get value
   1678           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1679          uint32_t CAN_GetCRStatus (LPC_CANCR_TypeDef* CANCRx, CAN_CR_STS_Type arg)
   1680          {
   \                     CAN_GetCRStatus: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   1681          	CHECK_PARAM(PARAM_CANCRx(CANCRx));
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable19_5  ;; 0x40040000
   \   0000000A   0x4284             CMP      R4,R0
   \   0000000C   0xD005             BEQ.N    ??CAN_GetCRStatus_0
   \   0000000E   0xF240 0x6191      MOVW     R1,#+1681
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable19_2
   \   00000016   0x.... 0x....      BL       check_failed
   1682          	CHECK_PARAM(PARAM_CR_STS_TYPE(arg));
   \                     ??CAN_GetCRStatus_0: (+1)
   \   0000001A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001C   0x2D00             CMP      R5,#+0
   \   0000001E   0xD00B             BEQ.N    ??CAN_GetCRStatus_1
   \   00000020   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000022   0x2D01             CMP      R5,#+1
   \   00000024   0xD008             BEQ.N    ??CAN_GetCRStatus_1
   \   00000026   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000028   0x2D02             CMP      R5,#+2
   \   0000002A   0xD005             BEQ.N    ??CAN_GetCRStatus_1
   \   0000002C   0xF240 0x6192      MOVW     R1,#+1682
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable19_2
   \   00000034   0x.... 0x....      BL       check_failed
   1683          
   1684          	switch (arg)
   \                     ??CAN_GetCRStatus_1: (+1)
   \   00000038   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000003A   0x2D00             CMP      R5,#+0
   \   0000003C   0xD002             BEQ.N    ??CAN_GetCRStatus_2
   \   0000003E   0x2D01             CMP      R5,#+1
   \   00000040   0xD002             BEQ.N    ??CAN_GetCRStatus_3
   \   00000042   0xE003             B.N      ??CAN_GetCRStatus_4
   1685          	{
   1686          	case CANCR_TX_STS:
   1687          		return CANCRx->CANTxSR;
   \                     ??CAN_GetCRStatus_2: (+1)
   \   00000044   0x6820             LDR      R0,[R4, #+0]
   \   00000046   0xE002             B.N      ??CAN_GetCRStatus_5
   1688          
   1689          	case CANCR_RX_STS:
   1690          		return CANCRx->CANRxSR;
   \                     ??CAN_GetCRStatus_3: (+1)
   \   00000048   0x6860             LDR      R0,[R4, #+4]
   \   0000004A   0xE000             B.N      ??CAN_GetCRStatus_5
   1691          
   1692          	default:	// CANCR_MS
   1693          		return CANCRx->CANMSR;
   \                     ??CAN_GetCRStatus_4: (+1)
   \   0000004C   0x68A0             LDR      R0,[R4, #+8]
   \                     ??CAN_GetCRStatus_5: (+1)
   \   0000004E   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   1694          	}
   1695          }
   1696          /********************************************************************//**
   1697           * @brief		Enable/Disable CAN Interrupt
   1698           * @param[in]	CANx pointer to LPC_CAN_TypeDef, should be:
   1699           * 				- LPC_CAN1: CAN1 peripheral
   1700           * 				- LPC_CAN2: CAN2 peripheral
   1701           * @param[in]	arg: type of CAN interrupt that you want to enable/disable
   1702           * 				Should be:
   1703           * 				- CANINT_RIE: CAN Receiver Interrupt Enable
   1704           * 				- CANINT_TIE1: CAN Transmit Interrupt Enable
   1705           * 				- CANINT_EIE: CAN Error Warning Interrupt Enable
   1706           * 				- CANINT_DOIE: CAN Data Overrun Interrupt Enable
   1707           * 				- CANINT_WUIE: CAN Wake-Up Interrupt Enable
   1708           * 				- CANINT_EPIE: CAN Error Passive Interrupt Enable
   1709           * 				- CANINT_ALIE: CAN Arbitration Lost Interrupt Enable
   1710           * 				- CANINT_BEIE: CAN Bus Error Interrupt Enable
   1711           * 				- CANINT_IDIE: CAN ID Ready Interrupt Enable
   1712           * 				- CANINT_TIE2: CAN Transmit Interrupt Enable for Buffer2
   1713           * 				- CANINT_TIE3: CAN Transmit Interrupt Enable for Buffer3
   1714           * 				- CANINT_FCE: FullCAN Interrupt Enable
   1715           * @param[in]	NewState: New state of this function, should be:
   1716           * 				- ENABLE
   1717           * 				- DISABLE
   1718           * @return 		none
   1719           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1720          void CAN_IRQCmd (LPC_CAN_TypeDef* CANx, CAN_INT_EN_Type arg, FunctionalState NewState)
   1721          {
   \                     CAN_IRQCmd: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   1722          	CHECK_PARAM(PARAM_CANx(CANx));
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable19  ;; 0x40044000
   \   0000000C   0x4284             CMP      R4,R0
   \   0000000E   0xD009             BEQ.N    ??CAN_IRQCmd_0
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable19_1  ;; 0x40048000
   \   00000014   0x4284             CMP      R4,R0
   \   00000016   0xD005             BEQ.N    ??CAN_IRQCmd_0
   \   00000018   0xF240 0x61BA      MOVW     R1,#+1722
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable19_2
   \   00000020   0x.... 0x....      BL       check_failed
   1723          	CHECK_PARAM(PARAM_INT_EN_TYPE(arg));
   \                     ??CAN_IRQCmd_0: (+1)
   \   00000024   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000026   0x2D00             CMP      R5,#+0
   \   00000028   0xD025             BEQ.N    ??CAN_IRQCmd_1
   \   0000002A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000002C   0x2D01             CMP      R5,#+1
   \   0000002E   0xD022             BEQ.N    ??CAN_IRQCmd_1
   \   00000030   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000032   0x2D02             CMP      R5,#+2
   \   00000034   0xD01F             BEQ.N    ??CAN_IRQCmd_1
   \   00000036   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000038   0x2D03             CMP      R5,#+3
   \   0000003A   0xD01C             BEQ.N    ??CAN_IRQCmd_1
   \   0000003C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000003E   0x2D04             CMP      R5,#+4
   \   00000040   0xD019             BEQ.N    ??CAN_IRQCmd_1
   \   00000042   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000044   0x2D05             CMP      R5,#+5
   \   00000046   0xD016             BEQ.N    ??CAN_IRQCmd_1
   \   00000048   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000004A   0x2D06             CMP      R5,#+6
   \   0000004C   0xD013             BEQ.N    ??CAN_IRQCmd_1
   \   0000004E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000050   0x2D07             CMP      R5,#+7
   \   00000052   0xD010             BEQ.N    ??CAN_IRQCmd_1
   \   00000054   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000056   0x2D08             CMP      R5,#+8
   \   00000058   0xD00D             BEQ.N    ??CAN_IRQCmd_1
   \   0000005A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000005C   0x2D09             CMP      R5,#+9
   \   0000005E   0xD00A             BEQ.N    ??CAN_IRQCmd_1
   \   00000060   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000062   0x2D0A             CMP      R5,#+10
   \   00000064   0xD007             BEQ.N    ??CAN_IRQCmd_1
   \   00000066   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000068   0x2D0B             CMP      R5,#+11
   \   0000006A   0xD004             BEQ.N    ??CAN_IRQCmd_1
   \   0000006C   0xF240 0x61BB      MOVW     R1,#+1723
   \   00000070   0x....             LDR.N    R0,??DataTable19_2
   \   00000072   0x.... 0x....      BL       check_failed
   1724          	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
   \                     ??CAN_IRQCmd_1: (+1)
   \   00000076   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000078   0x2E00             CMP      R6,#+0
   \   0000007A   0xD007             BEQ.N    ??CAN_IRQCmd_2
   \   0000007C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000007E   0x2E01             CMP      R6,#+1
   \   00000080   0xD004             BEQ.N    ??CAN_IRQCmd_2
   \   00000082   0xF240 0x61BC      MOVW     R1,#+1724
   \   00000086   0x....             LDR.N    R0,??DataTable19_2
   \   00000088   0x.... 0x....      BL       check_failed
   1725          
   1726          	if(NewState == ENABLE)
   \                     ??CAN_IRQCmd_2: (+1)
   \   0000008C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000008E   0x2E01             CMP      R6,#+1
   \   00000090   0xD112             BNE.N    ??CAN_IRQCmd_3
   1727          	{
   1728          		if(arg==CANINT_FCE)
   \   00000092   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000094   0x2D0B             CMP      R5,#+11
   \   00000096   0xD109             BNE.N    ??CAN_IRQCmd_4
   1729          		{
   1730          			LPC_CANAF->AFMR = 0x01;
   \   00000098   0x2001             MOVS     R0,#+1
   \   0000009A   0x....             LDR.N    R1,??DataTable19_6  ;; 0x4003c000
   \   0000009C   0x6008             STR      R0,[R1, #+0]
   1731          			LPC_CANAF->FCANIE = 0x01;
   \   0000009E   0x2001             MOVS     R0,#+1
   \   000000A0   0x....             LDR.N    R1,??DataTable19_7  ;; 0x4003c020
   \   000000A2   0x6008             STR      R0,[R1, #+0]
   1732          			LPC_CANAF->AFMR = 0x04;
   \   000000A4   0x2004             MOVS     R0,#+4
   \   000000A6   0x....             LDR.N    R1,??DataTable19_6  ;; 0x4003c000
   \   000000A8   0x6008             STR      R0,[R1, #+0]
   \   000000AA   0xE017             B.N      ??CAN_IRQCmd_5
   1733          		}
   1734          		else
   1735          			CANx->IER |= (1 << arg);
   \                     ??CAN_IRQCmd_4: (+1)
   \   000000AC   0x6920             LDR      R0,[R4, #+16]
   \   000000AE   0x2101             MOVS     R1,#+1
   \   000000B0   0x40A9             LSLS     R1,R1,R5
   \   000000B2   0x4308             ORRS     R0,R1,R0
   \   000000B4   0x6120             STR      R0,[R4, #+16]
   \   000000B6   0xE011             B.N      ??CAN_IRQCmd_5
   1736          	}
   1737          	else
   1738          	{
   1739          		if(arg==CANINT_FCE){
   \                     ??CAN_IRQCmd_3: (+1)
   \   000000B8   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000BA   0x2D0B             CMP      R5,#+11
   \   000000BC   0xD109             BNE.N    ??CAN_IRQCmd_6
   1740          			LPC_CANAF->AFMR = 0x01;
   \   000000BE   0x2001             MOVS     R0,#+1
   \   000000C0   0x....             LDR.N    R1,??DataTable19_6  ;; 0x4003c000
   \   000000C2   0x6008             STR      R0,[R1, #+0]
   1741          			LPC_CANAF->FCANIE = 0x01;
   \   000000C4   0x2001             MOVS     R0,#+1
   \   000000C6   0x....             LDR.N    R1,??DataTable19_7  ;; 0x4003c020
   \   000000C8   0x6008             STR      R0,[R1, #+0]
   1742          			LPC_CANAF->AFMR = 0x00;
   \   000000CA   0x2000             MOVS     R0,#+0
   \   000000CC   0x....             LDR.N    R1,??DataTable19_6  ;; 0x4003c000
   \   000000CE   0x6008             STR      R0,[R1, #+0]
   \   000000D0   0xE004             B.N      ??CAN_IRQCmd_5
   1743          		}
   1744          		else
   1745          			CANx->IER &= ~(1 << arg);
   \                     ??CAN_IRQCmd_6: (+1)
   \   000000D2   0x6920             LDR      R0,[R4, #+16]
   \   000000D4   0x2101             MOVS     R1,#+1
   \   000000D6   0x40A9             LSLS     R1,R1,R5
   \   000000D8   0x4388             BICS     R0,R0,R1
   \   000000DA   0x6120             STR      R0,[R4, #+16]
   1746          	}
   1747          }
   \                     ??CAN_IRQCmd_5: (+1)
   \   000000DC   0xBD70             POP      {R4-R6,PC}       ;; return
   1748          
   1749          /********************************************************************//**
   1750           * @brief		Setting Acceptance Filter mode
   1751           * @param[in]	CANAFx point to LPC_CANAF_TypeDef object, should be: LPC_CANAF
   1752           * @param[in]	AFMode: type of AF mode that you want to set, should be:
   1753           * 				- CAN_Normal: Normal mode
   1754           * 				- CAN_AccOff: Acceptance Filter Off Mode
   1755           * 				- CAN_AccBP: Acceptance Fileter Bypass Mode
   1756           * 				- CAN_eFCAN: FullCAN Mode Enhancement
   1757           * @return 		none
   1758           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1759          void CAN_SetAFMode (LPC_CANAF_TypeDef* CANAFx, CAN_AFMODE_Type AFMode)
   1760          {
   \                     CAN_SetAFMode: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   1761          	CHECK_PARAM(PARAM_CANAFx(CANAFx));
   \   00000006   0x....             LDR.N    R0,??DataTable15  ;; 0x4003c000
   \   00000008   0x4284             CMP      R4,R0
   \   0000000A   0xD004             BEQ.N    ??CAN_SetAFMode_0
   \   0000000C   0xF240 0x61E1      MOVW     R1,#+1761
   \   00000010   0x....             LDR.N    R0,??DataTable19_2
   \   00000012   0x.... 0x....      BL       check_failed
   1762          	CHECK_PARAM(PARAM_AFMODE_TYPE(AFMode));
   \                     ??CAN_SetAFMode_0: (+1)
   \   00000016   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000018   0x2D00             CMP      R5,#+0
   \   0000001A   0xD00D             BEQ.N    ??CAN_SetAFMode_1
   \   0000001C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001E   0x2D01             CMP      R5,#+1
   \   00000020   0xD00A             BEQ.N    ??CAN_SetAFMode_1
   \   00000022   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000024   0x2D02             CMP      R5,#+2
   \   00000026   0xD007             BEQ.N    ??CAN_SetAFMode_1
   \   00000028   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000002A   0x2D03             CMP      R5,#+3
   \   0000002C   0xD004             BEQ.N    ??CAN_SetAFMode_1
   \   0000002E   0xF240 0x61E2      MOVW     R1,#+1762
   \   00000032   0x....             LDR.N    R0,??DataTable19_2
   \   00000034   0x.... 0x....      BL       check_failed
   1763          
   1764          	switch(AFMode)
   \                     ??CAN_SetAFMode_1: (+1)
   \   00000038   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000003A   0x2D00             CMP      R5,#+0
   \   0000003C   0xD005             BEQ.N    ??CAN_SetAFMode_2
   \   0000003E   0x2D02             CMP      R5,#+2
   \   00000040   0xD009             BEQ.N    ??CAN_SetAFMode_3
   \   00000042   0xD305             BCC.N    ??CAN_SetAFMode_4
   \   00000044   0x2D03             CMP      R5,#+3
   \   00000046   0xD009             BEQ.N    ??CAN_SetAFMode_5
   \   00000048   0xE00A             B.N      ??CAN_SetAFMode_6
   1765          	{
   1766          	case CAN_Normal:
   1767          		CANAFx->AFMR = 0x00;
   \                     ??CAN_SetAFMode_2: (+1)
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0x6020             STR      R0,[R4, #+0]
   1768          		break;
   \   0000004E   0xE007             B.N      ??CAN_SetAFMode_6
   1769          	case CAN_AccOff:
   1770          		CANAFx->AFMR = 0x01;
   \                     ??CAN_SetAFMode_4: (+1)
   \   00000050   0x2001             MOVS     R0,#+1
   \   00000052   0x6020             STR      R0,[R4, #+0]
   1771          		break;
   \   00000054   0xE004             B.N      ??CAN_SetAFMode_6
   1772          	case CAN_AccBP:
   1773          		CANAFx->AFMR = 0x02;
   \                     ??CAN_SetAFMode_3: (+1)
   \   00000056   0x2002             MOVS     R0,#+2
   \   00000058   0x6020             STR      R0,[R4, #+0]
   1774          		break;
   \   0000005A   0xE001             B.N      ??CAN_SetAFMode_6
   1775          	case CAN_eFCAN:
   1776          		CANAFx->AFMR = 0x04;
   \                     ??CAN_SetAFMode_5: (+1)
   \   0000005C   0x2004             MOVS     R0,#+4
   \   0000005E   0x6020             STR      R0,[R4, #+0]
   1777          		break;
   1778          	}
   1779          }
   \                     ??CAN_SetAFMode_6: (+1)
   \   00000060   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   1780          
   1781          /********************************************************************//**
   1782           * @brief		Enable/Disable CAN Mode
   1783           * @param[in]	CANx pointer to LPC_CAN_TypeDef, should be:
   1784           * 				- LPC_CAN1: CAN1 peripheral
   1785           * 				- LPC_CAN2: CAN2 peripheral
   1786           * @param[in]	mode: type of CAN mode that you want to enable/disable, should be:
   1787           * 				- CAN_OPERATING_MODE: Normal Operating Mode
   1788           * 				- CAN_RESET_MODE: Reset Mode
   1789           * 				- CAN_LISTENONLY_MODE: Listen Only Mode
   1790           * 				- CAN_SELFTEST_MODE: Self Test Mode
   1791           * 				- CAN_TXPRIORITY_MODE: Transmit Priority Mode
   1792           * 				- CAN_SLEEP_MODE: Sleep Mode
   1793           * 				- CAN_RXPOLARITY_MODE: Receive Polarity Mode
   1794           * 				- CAN_TEST_MODE: Test Mode
   1795           * @param[in]	NewState: New State of this function, should be:
   1796           * 				- ENABLE
   1797           * 				- DISABLE
   1798           * @return 		none
   1799           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1800          void CAN_ModeConfig(LPC_CAN_TypeDef* CANx, CAN_MODE_Type mode, FunctionalState NewState)
   1801          {
   \                     CAN_ModeConfig: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   1802          	CHECK_PARAM(PARAM_CANx(CANx));
   \   00000008   0x....             LDR.N    R0,??DataTable19  ;; 0x40044000
   \   0000000A   0x4284             CMP      R4,R0
   \   0000000C   0xD007             BEQ.N    ??CAN_ModeConfig_0
   \   0000000E   0x....             LDR.N    R0,??DataTable19_1  ;; 0x40048000
   \   00000010   0x4284             CMP      R4,R0
   \   00000012   0xD004             BEQ.N    ??CAN_ModeConfig_0
   \   00000014   0xF240 0x710A      MOVW     R1,#+1802
   \   00000018   0x....             LDR.N    R0,??DataTable19_2
   \   0000001A   0x.... 0x....      BL       check_failed
   1803          	CHECK_PARAM(PARAM_MODE_TYPE(mode));
   \                     ??CAN_ModeConfig_0: (+1)
   \   0000001E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000020   0x2D00             CMP      R5,#+0
   \   00000022   0xD019             BEQ.N    ??CAN_ModeConfig_1
   \   00000024   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000026   0x2D01             CMP      R5,#+1
   \   00000028   0xD016             BEQ.N    ??CAN_ModeConfig_1
   \   0000002A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000002C   0x2D02             CMP      R5,#+2
   \   0000002E   0xD013             BEQ.N    ??CAN_ModeConfig_1
   \   00000030   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000032   0x2D03             CMP      R5,#+3
   \   00000034   0xD010             BEQ.N    ??CAN_ModeConfig_1
   \   00000036   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000038   0x2D04             CMP      R5,#+4
   \   0000003A   0xD00D             BEQ.N    ??CAN_ModeConfig_1
   \   0000003C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000003E   0x2D05             CMP      R5,#+5
   \   00000040   0xD00A             BEQ.N    ??CAN_ModeConfig_1
   \   00000042   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000044   0x2D06             CMP      R5,#+6
   \   00000046   0xD007             BEQ.N    ??CAN_ModeConfig_1
   \   00000048   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000004A   0x2D07             CMP      R5,#+7
   \   0000004C   0xD004             BEQ.N    ??CAN_ModeConfig_1
   \   0000004E   0xF240 0x710B      MOVW     R1,#+1803
   \   00000052   0x....             LDR.N    R0,??DataTable19_2
   \   00000054   0x.... 0x....      BL       check_failed
   1804          	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
   \                     ??CAN_ModeConfig_1: (+1)
   \   00000058   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000005A   0x2E00             CMP      R6,#+0
   \   0000005C   0xD007             BEQ.N    ??CAN_ModeConfig_2
   \   0000005E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000060   0x2E01             CMP      R6,#+1
   \   00000062   0xD004             BEQ.N    ??CAN_ModeConfig_2
   \   00000064   0xF240 0x710C      MOVW     R1,#+1804
   \   00000068   0x....             LDR.N    R0,??DataTable19_2
   \   0000006A   0x.... 0x....      BL       check_failed
   1805          
   1806          	switch(mode)
   \                     ??CAN_ModeConfig_2: (+1)
   \   0000006E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000070   0x2D00             CMP      R5,#+0
   \   00000072   0xD00B             BEQ.N    ??CAN_ModeConfig_3
   \   00000074   0x2D02             CMP      R5,#+2
   \   00000076   0xD019             BEQ.N    ??CAN_ModeConfig_4
   \   00000078   0xD30B             BCC.N    ??CAN_ModeConfig_5
   \   0000007A   0x2D04             CMP      R5,#+4
   \   0000007C   0xD040             BEQ.N    ??CAN_ModeConfig_6
   \   0000007E   0xD32A             BCC.N    ??CAN_ModeConfig_7
   \   00000080   0x2D06             CMP      R5,#+6
   \   00000082   0xD057             BEQ.N    ??CAN_ModeConfig_8
   \   00000084   0xD349             BCC.N    ??CAN_ModeConfig_9
   \   00000086   0x2D07             CMP      R5,#+7
   \   00000088   0xD061             BEQ.N    ??CAN_ModeConfig_10
   \   0000008A   0xE06C             B.N      ??CAN_ModeConfig_11
   1807          	{
   1808          	case CAN_OPERATING_MODE:
   1809          		CANx->MOD = 0x00;
   \                     ??CAN_ModeConfig_3: (+1)
   \   0000008C   0x2000             MOVS     R0,#+0
   \   0000008E   0x6020             STR      R0,[R4, #+0]
   1810          		break;
   \   00000090   0xE069             B.N      ??CAN_ModeConfig_11
   1811          	case CAN_RESET_MODE:
   1812          		if(NewState == ENABLE)
   \                     ??CAN_ModeConfig_5: (+1)
   \   00000092   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000094   0x2E01             CMP      R6,#+1
   \   00000096   0xD104             BNE.N    ??CAN_ModeConfig_12
   1813          			CANx->MOD |=CAN_MOD_RM;
   \   00000098   0x6820             LDR      R0,[R4, #+0]
   \   0000009A   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000009E   0x6020             STR      R0,[R4, #+0]
   \   000000A0   0xE003             B.N      ??CAN_ModeConfig_13
   1814          		else
   1815          			CANx->MOD &= ~CAN_MOD_RM;
   \                     ??CAN_ModeConfig_12: (+1)
   \   000000A2   0x6820             LDR      R0,[R4, #+0]
   \   000000A4   0x0840             LSRS     R0,R0,#+1
   \   000000A6   0x0040             LSLS     R0,R0,#+1
   \   000000A8   0x6020             STR      R0,[R4, #+0]
   1816          		break;
   \                     ??CAN_ModeConfig_13: (+1)
   \   000000AA   0xE05C             B.N      ??CAN_ModeConfig_11
   1817          	case CAN_LISTENONLY_MODE:
   1818          		CANx->MOD |=CAN_MOD_RM;//Enter Reset mode
   \                     ??CAN_ModeConfig_4: (+1)
   \   000000AC   0x6820             LDR      R0,[R4, #+0]
   \   000000AE   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000000B2   0x6020             STR      R0,[R4, #+0]
   1819          		if(NewState == ENABLE)
   \   000000B4   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000B6   0x2E01             CMP      R6,#+1
   \   000000B8   0xD104             BNE.N    ??CAN_ModeConfig_14
   1820          			CANx->MOD |=CAN_MOD_LOM;
   \   000000BA   0x6820             LDR      R0,[R4, #+0]
   \   000000BC   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   000000C0   0x6020             STR      R0,[R4, #+0]
   \   000000C2   0xE003             B.N      ??CAN_ModeConfig_15
   1821          		else
   1822          			CANx->MOD &=~CAN_MOD_LOM;
   \                     ??CAN_ModeConfig_14: (+1)
   \   000000C4   0x6820             LDR      R0,[R4, #+0]
   \   000000C6   0xF030 0x0002      BICS     R0,R0,#0x2
   \   000000CA   0x6020             STR      R0,[R4, #+0]
   1823          		CANx->MOD &=~CAN_MOD_RM;//Release Reset mode
   \                     ??CAN_ModeConfig_15: (+1)
   \   000000CC   0x6820             LDR      R0,[R4, #+0]
   \   000000CE   0x0840             LSRS     R0,R0,#+1
   \   000000D0   0x0040             LSLS     R0,R0,#+1
   \   000000D2   0x6020             STR      R0,[R4, #+0]
   1824          		break;
   \   000000D4   0xE047             B.N      ??CAN_ModeConfig_11
   1825          	case CAN_SELFTEST_MODE:
   1826          		CANx->MOD |=CAN_MOD_RM;//Enter Reset mode
   \                     ??CAN_ModeConfig_7: (+1)
   \   000000D6   0x6820             LDR      R0,[R4, #+0]
   \   000000D8   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000000DC   0x6020             STR      R0,[R4, #+0]
   1827          		if(NewState == ENABLE)
   \   000000DE   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000E0   0x2E01             CMP      R6,#+1
   \   000000E2   0xD104             BNE.N    ??CAN_ModeConfig_16
   1828          			CANx->MOD |=CAN_MOD_STM;
   \   000000E4   0x6820             LDR      R0,[R4, #+0]
   \   000000E6   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   000000EA   0x6020             STR      R0,[R4, #+0]
   \   000000EC   0xE003             B.N      ??CAN_ModeConfig_17
   1829          		else
   1830          			CANx->MOD &=~CAN_MOD_STM;
   \                     ??CAN_ModeConfig_16: (+1)
   \   000000EE   0x6820             LDR      R0,[R4, #+0]
   \   000000F0   0xF030 0x0004      BICS     R0,R0,#0x4
   \   000000F4   0x6020             STR      R0,[R4, #+0]
   1831          		CANx->MOD &=~CAN_MOD_RM;//Release Reset mode
   \                     ??CAN_ModeConfig_17: (+1)
   \   000000F6   0x6820             LDR      R0,[R4, #+0]
   \   000000F8   0x0840             LSRS     R0,R0,#+1
   \   000000FA   0x0040             LSLS     R0,R0,#+1
   \   000000FC   0x6020             STR      R0,[R4, #+0]
   1832          		break;
   \   000000FE   0xE032             B.N      ??CAN_ModeConfig_11
   1833          	case CAN_TXPRIORITY_MODE:
   1834          		if(NewState == ENABLE)
   \                     ??CAN_ModeConfig_6: (+1)
   \   00000100   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000102   0x2E01             CMP      R6,#+1
   \   00000104   0xD104             BNE.N    ??CAN_ModeConfig_18
   1835          			CANx->MOD |=CAN_MOD_TPM;
   \   00000106   0x6820             LDR      R0,[R4, #+0]
   \   00000108   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   0000010C   0x6020             STR      R0,[R4, #+0]
   \   0000010E   0xE003             B.N      ??CAN_ModeConfig_19
   1836          		else
   1837          			CANx->MOD &=~CAN_MOD_TPM;
   \                     ??CAN_ModeConfig_18: (+1)
   \   00000110   0x6820             LDR      R0,[R4, #+0]
   \   00000112   0xF030 0x0008      BICS     R0,R0,#0x8
   \   00000116   0x6020             STR      R0,[R4, #+0]
   1838          		break;
   \                     ??CAN_ModeConfig_19: (+1)
   \   00000118   0xE025             B.N      ??CAN_ModeConfig_11
   1839          	case CAN_SLEEP_MODE:
   1840          		if(NewState == ENABLE)
   \                     ??CAN_ModeConfig_9: (+1)
   \   0000011A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000011C   0x2E01             CMP      R6,#+1
   \   0000011E   0xD104             BNE.N    ??CAN_ModeConfig_20
   1841          			CANx->MOD |=CAN_MOD_SM;
   \   00000120   0x6820             LDR      R0,[R4, #+0]
   \   00000122   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000126   0x6020             STR      R0,[R4, #+0]
   \   00000128   0xE003             B.N      ??CAN_ModeConfig_21
   1842          		else
   1843          			CANx->MOD &=~CAN_MOD_SM;
   \                     ??CAN_ModeConfig_20: (+1)
   \   0000012A   0x6820             LDR      R0,[R4, #+0]
   \   0000012C   0xF030 0x0010      BICS     R0,R0,#0x10
   \   00000130   0x6020             STR      R0,[R4, #+0]
   1844          		break;
   \                     ??CAN_ModeConfig_21: (+1)
   \   00000132   0xE018             B.N      ??CAN_ModeConfig_11
   1845          	case CAN_RXPOLARITY_MODE:
   1846          		if(NewState == ENABLE)
   \                     ??CAN_ModeConfig_8: (+1)
   \   00000134   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000136   0x2E01             CMP      R6,#+1
   \   00000138   0xD104             BNE.N    ??CAN_ModeConfig_22
   1847          			CANx->MOD |=CAN_MOD_RPM;
   \   0000013A   0x6820             LDR      R0,[R4, #+0]
   \   0000013C   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   00000140   0x6020             STR      R0,[R4, #+0]
   \   00000142   0xE003             B.N      ??CAN_ModeConfig_23
   1848          		else
   1849          			CANx->MOD &=~CAN_MOD_RPM;
   \                     ??CAN_ModeConfig_22: (+1)
   \   00000144   0x6820             LDR      R0,[R4, #+0]
   \   00000146   0xF030 0x0020      BICS     R0,R0,#0x20
   \   0000014A   0x6020             STR      R0,[R4, #+0]
   1850          		break;
   \                     ??CAN_ModeConfig_23: (+1)
   \   0000014C   0xE00B             B.N      ??CAN_ModeConfig_11
   1851          	case CAN_TEST_MODE:
   1852          		if(NewState == ENABLE)
   \                     ??CAN_ModeConfig_10: (+1)
   \   0000014E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000150   0x2E01             CMP      R6,#+1
   \   00000152   0xD104             BNE.N    ??CAN_ModeConfig_24
   1853          			CANx->MOD |=CAN_MOD_TM;
   \   00000154   0x6820             LDR      R0,[R4, #+0]
   \   00000156   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   0000015A   0x6020             STR      R0,[R4, #+0]
   \   0000015C   0xE003             B.N      ??CAN_ModeConfig_25
   1854          		else
   1855          			CANx->MOD &=~CAN_MOD_TM;
   \                     ??CAN_ModeConfig_24: (+1)
   \   0000015E   0x6820             LDR      R0,[R4, #+0]
   \   00000160   0xF030 0x0080      BICS     R0,R0,#0x80
   \   00000164   0x6020             STR      R0,[R4, #+0]
   1856          		break;
   1857          	}
   1858          }
   \                     ??CAN_ModeConfig_25: (+1)
   \                     ??CAN_ModeConfig_11: (+1)
   \   00000166   0xBD70             POP      {R4-R6,PC}       ;; return
   1859          /*********************************************************************//**
   1860           * @brief		Set CAN command request
   1861           * @param[in]	CANx point to CAN peripheral selected, should be:
   1862           * 				- LPC_CAN1: CAN1 peripheral
   1863           * 				- LPC_CAN2: CAN2 peripheral
   1864           * @param[in]	CMRType	command request type, should be:
   1865           * 				- CAN_CMR_TR: Transmission request
   1866           * 				- CAN_CMR_AT: Abort Transmission request
   1867           * 				- CAN_CMR_RRB: Release Receive Buffer request
   1868           * 				- CAN_CMR_CDO: Clear Data Overrun request
   1869           * 				- CAN_CMR_SRR: Self Reception request
   1870           * 				- CAN_CMR_STB1: Select Tx Buffer 1 request
   1871           * 				- CAN_CMR_STB2: Select Tx Buffer 2 request
   1872           * 				- CAN_CMR_STB3: Select Tx Buffer 3 request
   1873           * @return		CANICR (CAN interrupt and Capture register) value
   1874           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1875          void CAN_SetCommand(LPC_CAN_TypeDef* CANx, uint32_t CMRType)
   1876          {
   \                     CAN_SetCommand: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   1877          	CHECK_PARAM(PARAM_CANx(CANx));
   \   00000006   0x....             LDR.N    R0,??DataTable19  ;; 0x40044000
   \   00000008   0x4284             CMP      R4,R0
   \   0000000A   0xD007             BEQ.N    ??CAN_SetCommand_0
   \   0000000C   0x....             LDR.N    R0,??DataTable19_1  ;; 0x40048000
   \   0000000E   0x4284             CMP      R4,R0
   \   00000010   0xD004             BEQ.N    ??CAN_SetCommand_0
   \   00000012   0xF240 0x7155      MOVW     R1,#+1877
   \   00000016   0x....             LDR.N    R0,??DataTable19_2
   \   00000018   0x.... 0x....      BL       check_failed
   1878          	CANx->CMR |= CMRType;
   \                     ??CAN_SetCommand_0: (+1)
   \   0000001C   0x6860             LDR      R0,[R4, #+4]
   \   0000001E   0x4328             ORRS     R0,R5,R0
   \   00000020   0x6060             STR      R0,[R4, #+4]
   1879          }
   \   00000022   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   1880          
   1881          /*********************************************************************//**
   1882           * @brief		Get CAN interrupt status
   1883           * @param[in]	CANx point to CAN peripheral selected, should be:
   1884           * 				- LPC_CAN1: CAN1 peripheral
   1885           * 				- LPC_CAN2: CAN2 peripheral
   1886           * @return		CANICR (CAN interrupt and Capture register) value
   1887           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1888          uint32_t CAN_IntGetStatus(LPC_CAN_TypeDef* CANx)
   1889          {
   \                     CAN_IntGetStatus: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   1890          	CHECK_PARAM(PARAM_CANx(CANx));
   \   00000004   0x....             LDR.N    R0,??DataTable19  ;; 0x40044000
   \   00000006   0x4284             CMP      R4,R0
   \   00000008   0xD007             BEQ.N    ??CAN_IntGetStatus_0
   \   0000000A   0x....             LDR.N    R0,??DataTable19_1  ;; 0x40048000
   \   0000000C   0x4284             CMP      R4,R0
   \   0000000E   0xD004             BEQ.N    ??CAN_IntGetStatus_0
   \   00000010   0xF240 0x7162      MOVW     R1,#+1890
   \   00000014   0x....             LDR.N    R0,??DataTable19_2
   \   00000016   0x.... 0x....      BL       check_failed
   1891          	return CANx->ICR;
   \                     ??CAN_IntGetStatus_0: (+1)
   \   0000001A   0x68E0             LDR      R0,[R4, #+12]
   \   0000001C   0xBD10             POP      {R4,PC}          ;; return
   1892          }
   1893          
   1894          /*********************************************************************//**
   1895           * @brief		Check if FullCAN interrupt enable or not
   1896           * @param[in]	CANAFx point to LPC_CANAF_TypeDef object, should be: LPC_CANAF
   1897           * @return		IntStatus, could be:
   1898           * 				- SET: if FullCAN interrupt is enable
   1899           * 				- RESET: if FullCAN interrupt is disable
   1900           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1901          IntStatus CAN_FullCANIntGetStatus (LPC_CANAF_TypeDef* CANAFx)
   1902          {
   \                     CAN_FullCANIntGetStatus: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   1903          	CHECK_PARAM( PARAM_CANAFx(CANAFx));
   \   00000004   0x....             LDR.N    R0,??DataTable19_6  ;; 0x4003c000
   \   00000006   0x4284             CMP      R4,R0
   \   00000008   0xD004             BEQ.N    ??CAN_FullCANIntGetStatus_0
   \   0000000A   0xF240 0x716F      MOVW     R1,#+1903
   \   0000000E   0x....             LDR.N    R0,??DataTable19_2
   \   00000010   0x.... 0x....      BL       check_failed
   1904          	if (CANAFx->FCANIE)
   \                     ??CAN_FullCANIntGetStatus_0: (+1)
   \   00000014   0x6A20             LDR      R0,[R4, #+32]
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD001             BEQ.N    ??CAN_FullCANIntGetStatus_1
   1905          		return SET;
   \   0000001A   0x2001             MOVS     R0,#+1
   \   0000001C   0xE000             B.N      ??CAN_FullCANIntGetStatus_2
   1906          	return RESET;
   \                     ??CAN_FullCANIntGetStatus_1: (+1)
   \   0000001E   0x2000             MOVS     R0,#+0
   \                     ??CAN_FullCANIntGetStatus_2: (+1)
   \   00000020   0xBD10             POP      {R4,PC}          ;; return
   1907          }
   1908          
   1909          /*********************************************************************//**
   1910           * @brief		Get value of FullCAN interrupt and capture register
   1911           * @param[in]	CANAFx point to LPC_CANAF_TypeDef object, should be: LPC_CANAF
   1912           * @param[in]	type: FullCAN IC type, should be:
   1913           * 				- FULLCAN_IC0: FullCAN Interrupt Capture 0
   1914           * 				- FULLCAN_IC1: FullCAN Interrupt Capture 1
   1915           * @return		FCANIC0 or FCANIC1 (FullCAN interrupt and Capture register) value
   1916           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1917          uint32_t CAN_FullCANPendGetStatus(LPC_CANAF_TypeDef* CANAFx, FullCAN_IC_Type type)
   1918          {
   \                     CAN_FullCANPendGetStatus: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   1919          	CHECK_PARAM(PARAM_CANAFx(CANAFx));
   \   00000006   0x....             LDR.N    R0,??DataTable19_6  ;; 0x4003c000
   \   00000008   0x4284             CMP      R4,R0
   \   0000000A   0xD004             BEQ.N    ??CAN_FullCANPendGetStatus_0
   \   0000000C   0xF240 0x717F      MOVW     R1,#+1919
   \   00000010   0x....             LDR.N    R0,??DataTable19_2
   \   00000012   0x.... 0x....      BL       check_failed
   1920          	CHECK_PARAM( PARAM_FULLCAN_IC(type));
   \                     ??CAN_FullCANPendGetStatus_0: (+1)
   \   00000016   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000018   0x2D00             CMP      R5,#+0
   \   0000001A   0xD007             BEQ.N    ??CAN_FullCANPendGetStatus_1
   \   0000001C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001E   0x2D01             CMP      R5,#+1
   \   00000020   0xD004             BEQ.N    ??CAN_FullCANPendGetStatus_1
   \   00000022   0xF44F 0x61F0      MOV      R1,#+1920
   \   00000026   0x....             LDR.N    R0,??DataTable19_2
   \   00000028   0x.... 0x....      BL       check_failed
   1921          	if (type == FULLCAN_IC0)
   \                     ??CAN_FullCANPendGetStatus_1: (+1)
   \   0000002C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000002E   0x2D00             CMP      R5,#+0
   \   00000030   0xD101             BNE.N    ??CAN_FullCANPendGetStatus_2
   1922          		return CANAFx->FCANIC0;
   \   00000032   0x6A60             LDR      R0,[R4, #+36]
   \   00000034   0xE000             B.N      ??CAN_FullCANPendGetStatus_3
   1923          	return CANAFx->FCANIC1;
   \                     ??CAN_FullCANPendGetStatus_2: (+1)
   \   00000036   0x6AA0             LDR      R0,[R4, #+40]
   \                     ??CAN_FullCANPendGetStatus_3: (+1)
   \   00000038   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   1924          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x40044000         DC32     0x40044000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x40048000         DC32     0x40048000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x4003C004         DC32     0x4003c004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x4003C008         DC32     0x4003c008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x4003C00C         DC32     0x4003c00c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x4003C010         DC32     0x4003c010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x4003C014         DC32     0x4003c014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x........         DC32     FULLCAN_ENABLE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x4003C000         DC32     0x4003c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     CANAF_FullCAN_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     CANAF_std_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x........         DC32     CANAF_gstd_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     CANAF_ext_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x........         DC32     CANAF_gext_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x40044000         DC32     0x40044000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x40048000         DC32     0x40048000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x4003C008         DC32     0x4003c008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x4003C00C         DC32     0x4003c00c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x4003C010         DC32     0x4003c010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x4003C014         DC32     0x4003c014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \   00000000   0x........         DC32     CANAF_FullCAN_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \   00000000   0x........         DC32     CANAF_std_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \   00000000   0x4003C000         DC32     0x4003c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x4003C004         DC32     0x4003c004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x40044000         DC32     0x40044000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x40048000         DC32     0x40048000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x........         DC32     CANAF_gstd_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \   00000000   0x........         DC32     CANAF_ext_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \   00000000   0x........         DC32     CANAF_gext_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   0x........         DC32     CANAF_FullCAN_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_1:
   \   00000000   0x........         DC32     CANAF_std_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_2:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   0x4003C000         DC32     0x4003c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17:
   \   00000000   0x4003C008         DC32     0x4003c008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18:
   \   00000000   0x4003C00C         DC32     0x4003c00c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_1:
   \   00000000   0x4003C010         DC32     0x4003c010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_2:
   \   00000000   0x4003C014         DC32     0x4003c014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19:
   \   00000000   0x40044000         DC32     0x40044000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_1:
   \   00000000   0x40048000         DC32     0x40048000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_2:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_3:
   \   00000000   0x4003C024         DC32     0x4003c024

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_4:
   \   00000000   0x4003C028         DC32     0x4003c028

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_5:
   \   00000000   0x40040000         DC32     0x40040000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_6:
   \   00000000   0x4003C000         DC32     0x4003c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_7:
   \   00000000   0x4003C020         DC32     0x4003c020

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x46 0x3A          DC8 46H, 3AH, 5CH, 69H, 61H, 72H, 5CH, 4EH
   \              0x5C 0x69    
   \              0x61 0x72    
   \              0x5C 0x4E    
   \   00000008   0x43 0x31          DC8 43H, 31H, 33H, 36H, 42H, 2DH, 33H, 31H
   \              0x33 0x36    
   \              0x42 0x2D    
   \              0x33 0x31    
   \   00000010   0x30 0x20          DC8 30H, 20H, 0CDH, 0B3H, 0BCH, 0C6H, 0C4H, 0A3H
   \              0xCD 0xB3    
   \              0xBC 0xC6    
   \              0xC4 0xA3    
   \   00000018   0xBF 0xE9          DC8 0BFH, 0E9H, 5CH, 53H, 6FH, 66H, 74H, 77H
   \              0x5C 0x53    
   \              0x6F 0x66    
   \              0x74 0x77    
   \   00000020   0x61 0x72          DC8 61H, 72H, 65H, 5CH, 43H, 53H, 42H, 5CH
   \              0x65 0x5C    
   \              0x43 0x53    
   \              0x42 0x5C    
   \   00000028   0x73 0x6F          DC8 73H, 6FH, 75H, 72H, 63H, 65H, 5CH, 6CH
   \              0x75 0x72    
   \              0x63 0x65    
   \              0x5C 0x6C    
   \   00000030   0x70 0x63          DC8 70H, 63H, 31H, 37H, 78H, 78H, 5FH, 63H
   \              0x31 0x37    
   \              0x78 0x78    
   \              0x5F 0x63    
   \   00000038   0x61 0x6E          DC8 61H, 6EH, 2EH, 63H, 0
   \              0x2E 0x63    
   \              0x00         
   \   0000003D   0x00 0x00          DC8 0, 0, 0
   \              0x00         
   1925          /* End of Public Variables ---------------------------------------------------------- */
   1926          /**
   1927           * @}
   1928           */
   1929          
   1930          #endif /* _CAN */
   1931          
   1932          /**
   1933           * @}
   1934           */
   1935          
   1936          /* --------------------------------- End Of File ------------------------------ */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   CAN_DeInit
         8   -> CLKPWR_ConfigPPWR
         8   -> check_failed
       8   CAN_FullCANIntGetStatus
         8   -> check_failed
      16   CAN_FullCANPendGetStatus
        16   -> check_failed
      16   CAN_GetCRStatus
        16   -> check_failed
      16   CAN_GetCTRLStatus
        16   -> check_failed
      16   CAN_IRQCmd
        16   -> check_failed
      16   CAN_Init
        16   -> CLKPWR_ConfigPPWR
        16   -> CLKPWR_SetPCLKDiv
        16   -> can_SetBaudrate
        16   -> check_failed
       8   CAN_IntGetStatus
         8   -> check_failed
      48   CAN_LoadExplicitEntry
        48   -> check_failed
      56   CAN_LoadFullCANEntry
        56   -> check_failed
      64   CAN_LoadGroupEntry
        64   -> check_failed
      16   CAN_ModeConfig
        16   -> check_failed
      16   CAN_ReceiveMsg
        16   -> check_failed
      32   CAN_RemoveEntry
        32   -> check_failed
      16   CAN_SendMsg
        16   -> check_failed
      16   CAN_SetAFMode
        16   -> check_failed
      16   CAN_SetCommand
        16   -> check_failed
      64   CAN_SetupAFLUT
        64   -> check_failed
      40   FCAN_ReadObj
        40   -> check_failed
      40   can_SetBaudrate
        40   -> CLKPWR_GetPCLK
        40   -> check_failed


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable14
       4  ??DataTable14_1
       4  ??DataTable14_2
       4  ??DataTable15
       4  ??DataTable17
       4  ??DataTable18
       4  ??DataTable18_1
       4  ??DataTable18_2
       4  ??DataTable19
       4  ??DataTable19_1
       4  ??DataTable19_2
       4  ??DataTable19_3
       4  ??DataTable19_4
       4  ??DataTable19_5
       4  ??DataTable19_6
       4  ??DataTable19_7
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_2
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
       4  ??DataTable6_7
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_2
       4  ??DataTable7_3
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_2
      64  ?_0
       2  CANAF_FullCAN_cnt
       2  CANAF_ext_cnt
       2  CANAF_gext_cnt
       2  CANAF_gstd_cnt
       2  CANAF_std_cnt
      62  CAN_DeInit
      34  CAN_FullCANIntGetStatus
      58  CAN_FullCANPendGetStatus
      80  CAN_GetCRStatus
     100  CAN_GetCTRLStatus
     222  CAN_IRQCmd
     204  CAN_Init
      30  CAN_IntGetStatus
    1072  CAN_LoadExplicitEntry
    1202  CAN_LoadFullCANEntry
    1126  CAN_LoadGroupEntry
     360  CAN_ModeConfig
     132  CAN_ReceiveMsg
    1698  CAN_RemoveEntry
     554  CAN_SendMsg
      98  CAN_SetAFMode
      36  CAN_SetCommand
    2262  CAN_SetupAFLUT
     260  FCAN_ReadObj
       1  FULLCAN_ENABLE
     214  can_SetBaudrate

 
     11 bytes in section .bss
     64 bytes in section .rodata
 10 004 bytes in section .text
 
 10 004 bytes of CODE  memory
     64 bytes of CONST memory
     11 bytes of DATA  memory

Errors: none
Warnings: none
