###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       21/Aug/2017  11:49:43
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC136B-310统计模块\Application\Library\DataDeal\DealOilBox.c
#    Command line =  
#        F:\iar\NC136B-310统计模块\Application\Library\DataDeal\DealOilBox.c
#        -lCN
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List
#        --diag_suppress Pa050 -o
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\csnr_package_deal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\iap\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\DealOilBox.lst
#    Object file  =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\DealOilBox.o
#
###############################################################################

F:\iar\NC136B-310统计模块\Application\Library\DataDeal\DealOilBox.c
      1          ////#include    "config.h" 
      2          ////#include    "stdlib.h"
      3          ////#include    "string.h"
      4          ////#include    "Globe.h"
      5          ////#include    "CpuDrive.h"
      6          ////#include    "HardDrive.h"
      7          ////#include    "OperateCard.h"
      8          ////#include    "FramStore.h"
      9          //
     10          #include    <includes.h>
     11          #include    "FRAM.h"
     12          #include    "APP_ctrl.h"
     13          
     14          
     15          #define     MODEL_SEL0          10//P010
     16          #define     MODEL_SEL1          11//P011
     17          #define     MODEL_SEL2          12//P012
     18          #define     MODEL_SEL3          13//P013
     19          #define     MODEL_SEL4          15//P015
     20          #define     MODEL_SEL5          20//P020
     21          
     22          
     23          // 
     24          ////定义油箱和车型对照关系   20120110
     25          //
     26          ///////////////////////////////////////
     27          //
     28          //
     29          ////定义油箱和车型对照关系
     30          //static	stcLocoModNum sLocoModNumBuf[64];
     31          //#define LOCO_MOD_TYP_NUM	64
     32          ////------------------------------------------------------------------------
     33          ////名    称：    void IniLocoModTab(void)
     34          ////功    能：    初始化机车车型与油箱模型对照表
     35          ////入口参数：    无
     36          ////出口参数：    无
     37          ////------------------------------------------------------------------------
     38          //void IniLocoModTab(void)
     39          //{
     40          //	uint8	i;
     41          //	for(i = 0; i < LOCO_MOD_TYP_NUM;i++)					//初始化油箱模型编号
     42          //	{
     43          //		//SysFastHoldTast();
     44          //
     45          //		sLocoModNumBuf[i].ModeNum = i;
     46          //		
     47          //		switch (sLocoModNumBuf[i].ModeNum)
     48          //		{
     49          //			case 1:	sLocoModNumBuf[i].LocoType = 141;strcpy((int8 *)sLocoModNumBuf[i].LocoStr,"DF4D"); break;
     50          //			case 2:	sLocoModNumBuf[i].LocoType = 104;strcpy((int8 *)sLocoModNumBuf[i].LocoStr,"DF4B"); break;
     51          //			case 3:	sLocoModNumBuf[i].LocoType = 142;strcpy((int8 *)sLocoModNumBuf[i].LocoStr,"DF8B"); break;
     52          //			case 4:	sLocoModNumBuf[i].LocoType = 131;strcpy((int8 *)sLocoModNumBuf[i].LocoStr,"DF7C"); break;
     53          //			case 5:	sLocoModNumBuf[i].LocoType = 107;strcpy((int8 *)sLocoModNumBuf[i].LocoStr,"DF5"); break;
     54          //			case 6:	sLocoModNumBuf[i].LocoType = 138;strcpy((int8 *)sLocoModNumBuf[i].LocoStr,"DF11"); break;
     55          //			case 7:	sLocoModNumBuf[i].LocoType = 111;strcpy((int8 *)sLocoModNumBuf[i].LocoStr,"DF8"); break;
     56          //		  //case 8:	sLocoModNumBuf[i].LocoType = 141;strcpy((int8 *)sLocoModNumBuf[i].LocoStr,"DF4D"); break;
     57          //			
     58          //			case 30:sLocoModNumBuf[i].LocoType = 161;strcpy((int8 *)sLocoModNumBuf[i].LocoStr,"HXN5"); break;
     59          //			
     60          //		}
     61          //	}
     62          //}
     63          //
     64          //
     65          ////------------------------------------------------------------------------
     66          ////名    称：    uin8 GetLocoModInfo(uint32	LocoTyp,uint32 ModeNum;stcLocoModNum *sLocoModNum)
     67          ////功    能：    根据输入的车型或机车油箱模型编号查找对应的信息
     68          ////入口参数：    车型代码，模型模型代码，反回车型数据
     69          ////出口参数：    操作是否成功
     70          ////------------------------------------------------------------------------
     71          //uint8 GetLocoModInfo(uint32	LocoTyp,uint32 ModeNum,stcLocoModNum *sLocoModNum)
     72          //{
     73          //	uint8 	i;
     74          //	uint8	Flg = FALSE;
     75          //	
     76          //	if( LocoTyp != 0)
     77          //	{
     78          //		for(i = 0; i < LOCO_MOD_TYP_NUM;i++)
     79          //		{
     80          //			//SysFastHoldTast();
     81          //
     82          //			if(sLocoModNumBuf[i].LocoType == LocoTyp)
     83          //			{
     84          //				printfcom0("\r\nLocoTyp %d,%d",LocoTyp,i);
     85          //
     86          //				memcpy((uint8 *)sLocoModNum,(uint8 *)&sLocoModNumBuf[i],sizeof(sLocoModNumBuf[i]));	//8888888
     87          //				Flg = TRUE;
     88          //			}
     89          //		}
     90          //	}
     91          //	else if(ModeNum != 0)
     92          //	{
     93          //		for(i = 0; i < LOCO_MOD_TYP_NUM;i++)
     94          //		{
     95          //			//SysFastHoldTast();
     96          //
     97          //			if(sLocoModNumBuf[i].ModeNum == ModeNum)
     98          //			{
     99          //				printfcom0("\r\nModeNum %d,%d",ModeNum,i);
    100          //
    101          //				memcpy((uint8 *)sLocoModNum,(uint8 *)&sLocoModNumBuf[i],sizeof(sLocoModNumBuf[i]));	//8888888
    102          //				Flg = TRUE;
    103          //			}
    104          //		}	
    105          //	}
    106          //	else
    107          //	{
    108          //		;
    109          //	}
    110          //	
    111          //	return	Flg;
    112          //}
    113          //
    114          ////------------------------------------------------------------------------
    115          ////名    称：    uint8 ReadOilBoxCod(void)
    116          ////功    能：    取油箱模型设置代码
    117          ////入口参数：    无
    118          ////出口参数：    油尺的油箱模型代码
    119          ////------------------------------------------------------------------------
    120          //uint8 ReadOilBoxCod(void)
    121          //{
    122          //    uint8 BoxModelCode = 0;
    123          //    
    124          //    IO0DIR_IN(MODEL_SEL0);    
    125          //    IO0DIR_IN(MODEL_SEL1);    
    126          //    IO0DIR_IN(MODEL_SEL2);    
    127          //    IO0DIR_IN(MODEL_SEL3);    
    128          //    IO0DIR_IN(MODEL_SEL4);    
    129          //    //IO0DIR_IN(MODEL_SEL5);    
    130          //    
    131          //    BoxModelCode =  (IO0PIN_R(MODEL_SEL0) << 0)     |
    132          //                    (IO0PIN_R(MODEL_SEL1) << 1)     |
    133          //                    (IO0PIN_R(MODEL_SEL2) << 2)     |
    134          //                    (IO0PIN_R(MODEL_SEL3) << 3)     |
    135          //                    (IO0PIN_R(MODEL_SEL4) << 4)     ;
    136          //                    //(IO0PIN_R(MODEL_SEL5) << 5);
    137          //            		
    138          //    //BoxModelCode = 0x3f -  BoxModelCode;    
    139          //    BoxModelCode = 0x1f -  BoxModelCode;    
    140          //        
    141          //    return  BoxModelCode;
    142          //}
    143          //
    144          #define     DF4D    1
    145          #define     DF4B    2
    146          #define     DF8B    3
    147          #define     DF7C    4
    148          #define     DF5     5
    149          #define     DF11    6
    150          #define     DF8     7
    151          #define     DF7X    8
    152          #define     DF7G60 	9
    153          #define     DF7G80  10
    154          #define     DF7G20  11
    155          #define     DF7G50  12
    156          #define     DF12G40 13
    157          #define     DF12G50 14
    158          #define     DF12G17 15
    159          #define     DF5G20 	16
    160          #define     DF57G5675 	17
    161          //
    162          //
    163          ////------------------------------------------------------------------------------
    164          ////名    称：    stcModel    GetDf4bOilBoxModel(void)
    165          ////功    能：    DF4b油箱模型
    166          ////入口参数：    无
    167          ////出口参数：    DF4b的油箱模型
    168          ////------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    169          uint8    GetDf4bOilBoxModel(stcModel * sModel)
    170          {
   \                     GetDf4bOilBoxModel: (+1)
   \   00000000   0x0001             MOVS     R1,R0
    171          //    uint16      CrcCheck;
    172          //    
    173          //    sModel->sModPot[0].HigVal = 0;
    174          //    sModel->sModPot[0].DipVal = 2500;   
    175          //    
    176          //    sModel->sModPot[1].HigVal = 622;
    177          //    sModel->sModPot[1].DipVal = 3400;   
    178          //    
    179          //    sModel->sModPot[2].HigVal = 6239;
    180          //    sModel->sModPot[2].DipVal = 8700;   
    181          //    
    182          //    sModel->PotNum  = 3;
    183          //
    184          //    sModel->ModelNum    = DF4B;
    185          //    
    186          //    sModel->StartHight= 35;
    187          //        
    188          //    CrcCheck = GetCrc16Check((uint8 *)sModel,sizeof(stcModel) - 2);
    189          //    
    190          //    sModel->CrcCheck= CrcCheck;
    191          //    
    192              return  1;
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x4770             BX       LR               ;; return
    193          }
    194          //
    195          ////------------------------------------------------------------------------------
    196          ////名    称：    stcModel    GetDf7xOilBoxModel(void)
    197          ////功    能：    DF7x油箱模型
    198          ////入口参数：    无
    199          ////出口参数：    DF7x的油箱模型
    200          ////------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    201          uint8    GetDf7xOilBoxModel(stcModel * sModel)
    202          {
   \                     GetDf7xOilBoxModel: (+1)
   \   00000000   0x0001             MOVS     R1,R0
    203          //    uint16      CrcCheck;
    204          //    
    205          //    sModel->sModPot[0].HigVal = 0;
    206          //    sModel->sModPot[0].DipVal = 800;   
    207          //    
    208          //    sModel->sModPot[1].HigVal = 630;
    209          //    sModel->sModPot[1].DipVal = 1500;   
    210          //    
    211          //    sModel->sModPot[2].HigVal = 1430;
    212          //    sModel->sModPot[2].DipVal = 2500;   
    213          //    
    214          //    sModel->sModPot[3].HigVal = 1570;
    215          //    sModel->sModPot[3].DipVal = 2600;       
    216          //    
    217          //    sModel->sModPot[4].HigVal = 2250;
    218          //    sModel->sModPot[4].DipVal = 3000;       
    219          //    
    220          //    sModel->sModPot[5].HigVal = 7850;
    221          //    sModel->sModPot[5].DipVal = 6400;       
    222          //        
    223          //    sModel->PotNum  = 6;
    224          //
    225          //    sModel->ModelNum    = DF7X;
    226          //    
    227          //    sModel->StartHight= 0;
    228          //        
    229          //    CrcCheck = GetCrc16Check((uint8 *)sModel,sizeof(stcModel) - 2);
    230          //    
    231          //    sModel->CrcCheck= CrcCheck;
    232          //    
    233              return  1;
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x4770             BX       LR               ;; return
    234          }
    235          //
    236          ////------------------------------------------------------------------------------
    237          ////名    称：    stcModel    GetDf7xOilBoxModel(void)
    238          ////功    能：    DF7x油箱模型
    239          ////入口参数：    无
    240          ////出口参数：    DF7x的油箱模型
    241          ////------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    242          uint8    GetDf7G80OilBoxModel(stcModel * sModel)
    243          {
   \                     GetDf7G80OilBoxModel: (+1)
   \   00000000   0x0001             MOVS     R1,R0
    244          //    uint16      CrcCheck;
    245          //    
    246          //    sModel->sModPot[0].HigVal = 80;
    247          //    sModel->sModPot[0].DipVal = 2000;   
    248          //    
    249          //    sModel->sModPot[1].HigVal = 1180;
    250          //    sModel->sModPot[1].DipVal = 3100;   
    251          //    
    252          //    sModel->sModPot[2].HigVal = 1310;
    253          //    sModel->sModPot[2].DipVal = 3200;   
    254          //    
    255          //    sModel->sModPot[3].HigVal = 1511;
    256          //    sModel->sModPot[3].DipVal = 3300;       
    257          //    
    258          //    sModel->sModPot[4].HigVal = 7209;
    259          //    sModel->sModPot[4].DipVal = 6000;       
    260          //        
    261          //    sModel->PotNum  = 5;
    262          //
    263          //    sModel->ModelNum    = DF7G80;
    264          //    
    265          //    sModel->StartHight= 0;
    266          //        
    267          //    CrcCheck = GetCrc16Check((uint8 *)sModel,sizeof(stcModel) - 2);
    268          //    
    269          //    sModel->CrcCheck= CrcCheck;
    270          //    
    271              return  1;
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x4770             BX       LR               ;; return
    272          }
    273          //
    274          ////------------------------------------------------------------------------------
    275          ////名    称：    stcModel    GetDf7xOilBoxModel(void)
    276          ////功    能：    DF7x油箱模型
    277          ////入口参数：    无
    278          ////出口参数：    DF7x的油箱模型
    279          ////------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    280          uint8    GetDf7G60OilBoxModel(stcModel * sModel)
    281          {
   \                     GetDf7G60OilBoxModel: (+1)
   \   00000000   0x0001             MOVS     R1,R0
    282          //    uint16      CrcCheck;
    283          //    
    284          //    sModel->sModPot[0].HigVal = 0;
    285          //    sModel->sModPot[0].DipVal = 2500;   
    286          //    
    287          //    sModel->sModPot[1].HigVal = 7400;
    288          //    sModel->sModPot[1].DipVal = 6200;
    289          //    
    290          ////    sModel->sModPot[2].HigVal = 1310;
    291          ////    sModel->sModPot[2].DipVal = 3200;   
    292          //    
    293          ////    sModel->sModPot[3].HigVal = 1511;
    294          ////    sModel->sModPot[3].DipVal = 3300;       
    295          //    
    296          ////    sModel->sModPot[4].HigVal = 7209;
    297          ////    sModel->sModPot[4].DipVal = 6000;       
    298          //        
    299          //    sModel->PotNum  = 2;
    300          //
    301          //    sModel->ModelNum    = DF7G60;
    302          //    
    303          //    sModel->StartHight= 0;
    304          //        
    305          //    CrcCheck = GetCrc16Check((uint8 *)sModel,sizeof(stcModel) - 2);
    306          //    
    307          //    sModel->CrcCheck= CrcCheck;
    308          //    
    309              return  1;
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x4770             BX       LR               ;; return
    310          }
    311          //
    312          ////------------------------------------------------------------------------------
    313          ////名    称：    stcModel    GetDf7xOilBoxModel(void)
    314          ////功    能：    DF7x油箱模型
    315          ////入口参数：    无
    316          ////出口参数：    DF7x的油箱模型
    317          ////------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    318          uint8    GetDf7G20OilBoxModel(stcModel * sModel)
    319          {
   \                     GetDf7G20OilBoxModel: (+1)
   \   00000000   0x0001             MOVS     R1,R0
    320          //    uint16      CrcCheck;
    321          //    
    322          //    sModel->sModPot[0].HigVal = 0;
    323          //    sModel->sModPot[0].DipVal = 800;   
    324          //    
    325          //    sModel->sModPot[1].HigVal = 720;
    326          //    sModel->sModPot[1].DipVal = 1600; 
    327          //    
    328          //    sModel->sModPot[2].HigVal = 1440;
    329          //    sModel->sModPot[2].DipVal = 2500;   
    330          //    
    331          //    sModel->sModPot[3].HigVal = 1580;
    332          //    sModel->sModPot[3].DipVal = 2600;       
    333          //    
    334          //    sModel->sModPot[4].HigVal = 6365;
    335          //    sModel->sModPot[4].DipVal = 5500;       
    336          //    
    337          //    sModel->sModPot[5].HigVal = 7709;
    338          //    sModel->sModPot[5].DipVal = 6300;       
    339          //        
    340          //    sModel->PotNum  = 6;
    341          //
    342          //    sModel->ModelNum    = DF7G20;
    343          //    
    344          //    sModel->StartHight= 0;
    345          //        
    346          //    CrcCheck = GetCrc16Check((uint8 *)sModel,sizeof(stcModel) - 2);
    347          //    
    348          //    sModel->CrcCheck= CrcCheck;
    349          //    
    350              return  1;
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x4770             BX       LR               ;; return
    351          }
    352          //
    353          //
    354          ////------------------------------------------------------------------------------
    355          ////名    称：    stcModel    GetDf7xOilBoxModel(void)
    356          ////功    能：    DF7x油箱模型
    357          ////入口参数：    无
    358          ////出口参数：    DF7x的油箱模型
    359          ////------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    360          uint8    GetDf7G50OilBoxModel(stcModel * sModel)
    361          {
   \                     GetDf7G50OilBoxModel: (+1)
   \   00000000   0x0001             MOVS     R1,R0
    362          //    uint16      CrcCheck;
    363          //    
    364          //    sModel->sModPot[0].HigVal = 0;
    365          //    sModel->sModPot[0].DipVal = 700;   
    366          //    
    367          //    sModel->sModPot[1].HigVal = 1150;
    368          //    sModel->sModPot[1].DipVal = 1700; 
    369          //    
    370          //    sModel->sModPot[2].HigVal = 2690;
    371          //    sModel->sModPot[2].DipVal = 3100;   
    372          //    
    373          //    sModel->sModPot[3].HigVal = 7650;
    374          //    sModel->sModPot[3].DipVal = 6200;       
    375          //    
    376          //    sModel->PotNum  = 4;
    377          //
    378          //    sModel->ModelNum    = DF7G50;
    379          //    
    380          //    sModel->StartHight= 0;
    381          //        
    382          //    CrcCheck = GetCrc16Check((uint8 *)sModel,sizeof(stcModel) - 2);
    383          //    
    384          //    sModel->CrcCheck= CrcCheck;
    385          //    
    386              return  1;
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x4770             BX       LR               ;; return
    387          }
    388          //
    389          ////------------------------------------------------------------------------------
    390          ////名    称：    stcModel    GetDf7xOilBoxModel(void)
    391          ////功    能：    DF7x油箱模型
    392          ////入口参数：    无
    393          ////出口参数：    DF7x的油箱模型
    394          ////------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    395          uint8    GetDf12G50OilBoxModel(stcModel * sModel)
    396          {
   \                     GetDf12G50OilBoxModel: (+1)
   \   00000000   0x0001             MOVS     R1,R0
    397          //    uint16      CrcCheck;
    398          //    
    399          //    sModel->sModPot[0].HigVal = 0;
    400          //    sModel->sModPot[0].DipVal = 2200;   
    401          //    
    402          //    sModel->sModPot[1].HigVal = 330;
    403          //    sModel->sModPot[1].DipVal = 2400; 
    404          //    
    405          //    sModel->sModPot[2].HigVal = 550;
    406          //    sModel->sModPot[2].DipVal = 2600;   
    407          //    
    408          //    sModel->sModPot[3].HigVal = 2000;
    409          //    sModel->sModPot[3].DipVal = 3600;             
    410          //    
    411          //    sModel->sModPot[4].HigVal = 2220;
    412          //    sModel->sModPot[4].DipVal = 3800;   
    413          //    
    414          //    sModel->sModPot[5].HigVal = 2520;
    415          //    sModel->sModPot[5].DipVal = 4000; 
    416          //    
    417          //    sModel->sModPot[6].HigVal = 2840;
    418          //    sModel->sModPot[6].DipVal = 4200;   
    419          //    
    420          //    sModel->sModPot[7].HigVal = 4580;
    421          //    sModel->sModPot[7].DipVal = 5400;  
    422          //    
    423          //    sModel->sModPot[8].HigVal = 4850;
    424          //    sModel->sModPot[8].DipVal = 5600;   
    425          //    
    426          //    sModel->sModPot[9].HigVal = 5450;
    427          //    sModel->sModPot[9].DipVal = 6000;  
    428          //              
    429          //    sModel->PotNum  = 10;
    430          //
    431          //    sModel->ModelNum    = DF12G50;
    432          //    
    433          //    sModel->StartHight= 0;
    434          //        
    435          //    CrcCheck = GetCrc16Check((uint8 *)sModel,sizeof(stcModel) - 2);
    436          //    
    437          //    sModel->CrcCheck= CrcCheck;
    438          //    
    439              return  1;
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x4770             BX       LR               ;; return
    440          }
    441          //
    442          //
    443          ////------------------------------------------------------------------------------
    444          ////名    称：    stcModel    GetDf7xOilBoxModel(void)
    445          ////功    能：    DF7x油箱模型
    446          ////入口参数：    无
    447          ////出口参数：    DF7x的油箱模型
    448          ////------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    449          uint8    GetDf12G40OilBoxModel(stcModel * sModel)
    450          {
   \                     GetDf12G40OilBoxModel: (+1)
   \   00000000   0x0001             MOVS     R1,R0
    451          //    uint16      CrcCheck;
    452          //    
    453          //    sModel->sModPot[0].HigVal = 0;
    454          //    sModel->sModPot[0].DipVal = 1600;   
    455          //    
    456          //    sModel->sModPot[1].HigVal = 440;
    457          //    sModel->sModPot[1].DipVal = 2000; 
    458          //    
    459          //    sModel->sModPot[2].HigVal = 1030;
    460          //    sModel->sModPot[2].DipVal = 2500;   
    461          //    
    462          //    sModel->sModPot[3].HigVal = 5830;
    463          //    sModel->sModPot[3].DipVal = 6500;             
    464          //        
    465          //    sModel->PotNum  = 4;
    466          //
    467          //    sModel->ModelNum    = DF12G40;
    468          //    
    469          //    sModel->StartHight= 0;
    470          //        
    471          //    CrcCheck = GetCrc16Check((uint8 *)sModel,sizeof(stcModel) - 2);
    472          //    
    473          //    sModel->CrcCheck= CrcCheck;
    474          //    
    475              return  1;
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x4770             BX       LR               ;; return
    476          }
    477          //
    478          //
    479          ////------------------------------------------------------------------------------
    480          ////名    称：    stcModel    GetDf7xOilBoxModel(void)
    481          ////功    能：    DF7x油箱模型
    482          ////入口参数：    无
    483          ////出口参数：    DF7x的油箱模型
    484          ////------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    485          uint8    GetDf12G17OilBoxModel(stcModel * sModel)
    486          {
   \                     GetDf12G17OilBoxModel: (+1)
   \   00000000   0x0001             MOVS     R1,R0
    487          //    uint16      CrcCheck;
    488          //    
    489          //    sModel->sModPot[0].HigVal = 0;
    490          //    sModel->sModPot[0].DipVal = 2300-500;  //20121210  
    491          //    
    492          //    sModel->sModPot[1].HigVal = 5434;
    493          //    sModel->sModPot[1].DipVal = 6100-500;          
    494          //        
    495          //    sModel->PotNum  = 2;
    496          //
    497          //    sModel->ModelNum    = DF12G17;
    498          //    
    499          //    sModel->StartHight= 0;
    500          //        
    501          //    CrcCheck = GetCrc16Check((uint8 *)sModel,sizeof(stcModel) - 2);
    502          //    
    503          //    sModel->CrcCheck= CrcCheck;
    504          //    
    505              return  1;
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x4770             BX       LR               ;; return
    506          }
    507          //
    508          ////------------------------------------------------------------------------------
    509          ////名    称：    stcModel    GetDf7xOilBoxModel(void)
    510          ////功    能：    DF7x油箱模型
    511          ////入口参数：    无
    512          ////出口参数：    DF7x的油箱模型
    513          ////------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    514          uint8    GetDf5G20OilBoxModel(stcModel * sModel)
    515          {
   \                     GetDf5G20OilBoxModel: (+1)
   \   00000000   0x0001             MOVS     R1,R0
    516          //    uint16      CrcCheck;
    517          //    
    518          //    sModel->sModPot[0].HigVal = 0;
    519          //    sModel->sModPot[0].DipVal = 1100;   
    520          //    
    521          //    sModel->sModPot[1].HigVal = 2806;
    522          //    sModel->sModPot[1].DipVal = 3400;          
    523          //
    524          //    sModel->sModPot[2].HigVal = 6656;
    525          //    sModel->sModPot[2].DipVal = 5600;
    526          //            
    527          //    sModel->PotNum  = 3;
    528          //
    529          //    sModel->ModelNum    = DF5G20;
    530          //    
    531          //    sModel->StartHight= 0;
    532          //        
    533          //    CrcCheck = GetCrc16Check((uint8 *)sModel,sizeof(stcModel) - 2);
    534          //    
    535          //    sModel->CrcCheck= CrcCheck;
    536          //    
    537              return  1;
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x4770             BX       LR               ;; return
    538          }
    539          //
    540          ////------------------------------------------------------------------------------
    541          ////名    称：    stcModel    GetDf7xOilBoxModel(void)
    542          ////功    能：    DF7x油箱模型
    543          ////入口参数：    无
    544          ////出口参数：    DF7x的油箱模型
    545          ////------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    546          uint8    GetDf7C5675OilBoxModel(stcModel * sModel)
    547          {
   \                     GetDf7C5675OilBoxModel: (+1)
   \   00000000   0x0001             MOVS     R1,R0
    548          //    uint16      CrcCheck;
    549          //    
    550          //    sModel->sModPot[0].HigVal = 0;
    551          //    sModel->sModPot[0].DipVal = 700;   
    552          //    
    553          //    sModel->sModPot[1].HigVal = 736;
    554          //    sModel->sModPot[1].DipVal = 1500;          
    555          //
    556          //    sModel->sModPot[2].HigVal = 1556;
    557          //    sModel->sModPot[2].DipVal = 2500;
    558          //            
    559          //    sModel->sModPot[3].HigVal = 7952;
    560          //    sModel->sModPot[3].DipVal = 6400;
    561          //    
    562          //    sModel->PotNum  = 4;
    563          //
    564          //    sModel->ModelNum    = DF57G5675;
    565          //    
    566          //    sModel->StartHight= 0;
    567          //        
    568          //    CrcCheck = GetCrc16Check((uint8 *)sModel,sizeof(stcModel) - 2);
    569          //    
    570          //    sModel->CrcCheck= CrcCheck;
    571          //    
    572              return  1;
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x4770             BX       LR               ;; return
    573          }
    574          ////------------------------------------------------------------------------------
    575          ////名    称：    stcModel    GetDf11OilBoxModel(void)
    576          ////功    能：    DF11油箱模型
    577          ////入口参数：    无
    578          ////出口参数：    DF11的油箱模型
    579          ////------------------------------------------------------------------------------
    580          //uint8    GetDf11OilBoxModel(stcModel * sModel)
    581          //{
    582          ////    uint16      CrcCheck;
    583          ////    
    584          ////    sModel->sModPot[0].HigVal = 0;
    585          ////    sModel->sModPot[0].DipVal = 2200;   
    586          ////    
    587          ////    sModel->sModPot[1].HigVal = 100;
    588          ////    sModel->sModPot[1].DipVal = 2300;   
    589          ////    
    590          ////    sModel->sModPot[2].HigVal = 195;
    591          ////    sModel->sModPot[2].DipVal = 2400;         
    592          ////    
    593          ////    sModel->sModPot[3].HigVal = 310;
    594          ////    sModel->sModPot[3].DipVal = 2500;
    595          ////    
    596          ////    sModel->sModPot[4].HigVal = 5590;
    597          ////    sModel->sModPot[4].DipVal = 6500;    
    598          ////               
    599          ////    sModel->PotNum      = 5;
    600          ////
    601          ////    sModel->ModelNum    = DF11;
    602          ////    
    603          ////    sModel->StartHight= 35;
    604          ////        
    605          ////    CrcCheck = GetCrc16Check((uint8 *)sModel,sizeof(stcModel) - 2);
    606          ////    
    607          ////    sModel->CrcCheck= CrcCheck;
    608          ////    
    609          ////    return  1;
    610          //}
    611          
    612          ////------------------------------------------------------------------------------
    613          ////名    称：    stcModel    GetDf8OilBoxModel(void)
    614          ////功    能：    DF8油箱模型
    615          ////入口参数：    无
    616          ////出口参数：    DF8的油箱模型
    617          ////------------------------------------------------------------------------------
    618          //uint8    GetDf8OilBoxModel(stcModel * sModel)
    619          //{
    620          ////    uint16      CrcCheck;
    621          ////    
    622          ////    sModel->sModPot[0].HigVal = 0;
    623          ////    sModel->sModPot[0].DipVal = 2500;   
    624          ////    
    625          ////    sModel->sModPot[1].HigVal = 350;
    626          ////    sModel->sModPot[1].DipVal = 2900;   
    627          ////    
    628          ////    sModel->sModPot[2].HigVal = 5654;
    629          ////    sModel->sModPot[2].DipVal = 8000;         
    630          ////        
    631          ////    sModel->PotNum      = 3;
    632          ////
    633          ////    sModel->ModelNum    = DF8;
    634          ////    
    635          ////    sModel->StartHight= 35;
    636          ////        
    637          ////    CrcCheck = GetCrc16Check((uint8 *)sModel,sizeof(stcModel) - 2);
    638          ////    
    639          ////    sModel->CrcCheck= CrcCheck;
    640          ////    
    641          ////    return  1;
    642          //}
    643          
    644          ////------------------------------------------------------------------------------
    645          ////名    称：    stcModel    GetDf8bOilBoxModel(void)
    646          ////功    能：    DF8b油箱模型
    647          ////入口参数：    无
    648          ////出口参数：    DF8b的油箱模型
    649          ////------------------------------------------------------------------------------
    650          //uint8    GetDf8bOilBoxModel(stcModel * sModel)
    651          //{
    652          ////    uint16      CrcCheck;
    653          ////    
    654          ////    sModel->sModPot[0].HigVal = 0;
    655          ////    sModel->sModPot[0].DipVal = 2500;   
    656          ////    
    657          ////    sModel->sModPot[1].HigVal = 487;
    658          ////    sModel->sModPot[1].DipVal = 3100;   
    659          ////    
    660          ////    sModel->sModPot[2].HigVal = 6201;
    661          ////    sModel->sModPot[2].DipVal = 9000;   
    662          ////    
    663          ////    sModel->PotNum  	= 3;
    664          ////
    665          ////    sModel->ModelNum    = DF8B;
    666          ////    
    667          ////    sModel->StartHight= 35;
    668          ////        
    669          ////    CrcCheck = GetCrc16Check((uint8 *)sModel,sizeof(stcModel) - 2);
    670          ////    
    671          ////    sModel->CrcCheck= CrcCheck;
    672          ////    
    673          ////    return  1;
    674          //}
    675          
    676          //////------------------------------------------------------------------------------
    677          //////名    称：    stcModel    GetDf7cOilBoxModel(void)
    678          //////功    能：    Df7c油箱模型
    679          //////入口参数：    无
    680          //////出口参数：    Df7c的油箱模型
    681          //////------------------------------------------------------------------------------
    682          //uint8    GetDf7cOilBoxModel(stcModel * sModel)
    683          //{
    684          ////    uint16      CrcCheck;
    685          ////    
    686          ////    sModel->sModPot[0].HigVal = 0;
    687          ////    sModel->sModPot[0].DipVal = 600;    
    688          ////    
    689          ////    sModel->sModPot[1].HigVal = 2330;
    690          ////    sModel->sModPot[1].DipVal = 2500;   
    691          ////    
    692          ////    sModel->sModPot[2].HigVal = 6030;
    693          ////    sModel->sModPot[2].DipVal = 5000;   
    694          ////    
    695          ////    sModel->PotNum  = 3;
    696          ////
    697          ////    sModel->ModelNum    = DF7C; 
    698          ////    
    699          ////    sModel->StartHight= 170;
    700          ////        
    701          ////    CrcCheck = GetCrc16Check((uint8 *)sModel,sizeof(stcModel) - 2);
    702          ////    
    703          ////    sModel->CrcCheck= CrcCheck;
    704          ////    
    705          ////    return  1;
    706          //}
    707          
    708          ////------------------------------------------------------------------------------
    709          ////名    称：    stcModel    GetDf4dOilBoxModel(void)
    710          ////功    能：    Df4d油箱模型
    711          ////入口参数：    无
    712          ////出口参数：    Df4d的油箱模型
    713          ////------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    714          uint8    GetDf4dOilBoxModel(stcModel * sModel)
    715          {
   \                     GetDf4dOilBoxModel: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    716              uint16      CrcCheck;
    717              
    718              sModel->sModPot[0].HigVal = 0;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x8020             STRH     R0,[R4, #+0]
    719              sModel->sModPot[0].DipVal = 1200;   
   \   00000008   0xF44F 0x6096      MOV      R0,#+1200
   \   0000000C   0x8060             STRH     R0,[R4, #+2]
    720              
    721              sModel->sModPot[1].HigVal = 1558;
   \   0000000E   0xF240 0x6016      MOVW     R0,#+1558
   \   00000012   0x80A0             STRH     R0,[R4, #+4]
    722              sModel->sModPot[1].DipVal = 3400;   
   \   00000014   0xF640 0x5048      MOVW     R0,#+3400
   \   00000018   0x80E0             STRH     R0,[R4, #+6]
    723              
    724              sModel->sModPot[2].HigVal = 7529;
   \   0000001A   0xF641 0x5069      MOVW     R0,#+7529
   \   0000001E   0x8120             STRH     R0,[R4, #+8]
    725              sModel->sModPot[2].DipVal = 9000;   
   \   00000020   0xF242 0x3028      MOVW     R0,#+9000
   \   00000024   0x8160             STRH     R0,[R4, #+10]
    726              
    727              sModel->PotNum      = 3;
   \   00000026   0x2003             MOVS     R0,#+3
   \   00000028   0xF8A4 0x00C8      STRH     R0,[R4, #+200]
    728              
    729              sModel->ModelNum    = DF4D; 
   \   0000002C   0x2001             MOVS     R0,#+1
   \   0000002E   0xF884 0x00CC      STRB     R0,[R4, #+204]
    730              
    731              sModel->StartHight  = 0;
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0xF8A4 0x00CA      STRH     R0,[R4, #+202]
    732                  
    733              CrcCheck = GetCrc16Check((uint8 *)sModel,sizeof(stcModel) - 2);
   \   00000038   0x21CE             MOVS     R1,#+206
   \   0000003A   0x0020             MOVS     R0,R4
   \   0000003C   0x.... 0x....      BL       GetCrc16Check
   \   00000040   0x0005             MOVS     R5,R0
    734              
    735              sModel->CrcCheck    = CrcCheck;
   \   00000042   0xF8A4 0x50CE      STRH     R5,[R4, #+206]
    736              
    737              return  1;
   \   00000046   0x2001             MOVS     R0,#+1
   \   00000048   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    738          }
    739          
    740          ////------------------------------------------------------------------------------
    741          ////名    称：    stcModel    GetDf5OilBoxModel(void)
    742          ////功    能：    Df5油箱模型
    743          ////入口参数：    无
    744          ////出口参数：    Df5的油箱模型
    745          ////------------------------------------------------------------------------------
    746          //uint8   GetDf5OilBoxModel(stcModel * sModel)
    747          //{
    748          ////    uint16      CrcCheck;
    749          ////    
    750          ////    sModel->sModPot[0].HigVal = 0;
    751          ////    sModel->sModPot[0].DipVal = 600;    
    752          ////    
    753          ////    sModel->sModPot[1].HigVal = 3420;
    754          ////    sModel->sModPot[1].DipVal = 3400;   
    755          ////    
    756          ////    sModel->sModPot[2].HigVal = 9220;
    757          ////    sModel->sModPot[2].DipVal = 6700;   
    758          ////    
    759          ////    sModel->PotNum  = 3;
    760          ////
    761          ////    sModel->ModelNum    = DF5;
    762          ////    
    763          ////    sModel->StartHight= 260;
    764          ////        
    765          ////    CrcCheck = GetCrc16Check((uint8 *)sModel,sizeof(stcModel) - 2);
    766          ////    
    767          ////    sModel->CrcCheck= CrcCheck;
    768          ////    
    769          ////    return  1;
    770          //}
    771          

   \                                 In section .data, align 1
    772          uint8		l_SelModelErrFlg 		= NO_ERROR;		//模型设置故障
   \                     l_SelModelErrFlg:
   \   00000000   0x01               DC8 1
    773          //extern	uint8 GetLocoModInfo(uint32	LocoTyp,uint32 ModeNum,stcLocoModNum *sLocoModNum);
    774          //extern	uint8 ReadFixInfo_Flsh(stcFixInfo * sFix);
    775          //extern	uint8	ReadSelectModel_Flsh(uint8	*ModelNum);
    776          ////------------------------------------------------------------------------------
    777          ////名    称：    uint8   GetOilBoxCod(void)
    778          ////功    能：    取油箱模型号
    779          ////入口参数：    油箱模型指针
    780          ////出口参数：    无
    781          ////------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    782          uint8   GetOilBoxCod(void)
    783          {
    784              uint8      		OilBoxTypCod = 1;                                   	//装车信息
   \                     GetOilBoxCod: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
    785          	
    786              OilBoxTypCod = sCtrl.SOilPara.ModelNum;
   \   00000002   0x....             LDR.N    R1,??DataTable2
   \   00000004   0xF891 0x10A0      LDRB     R1,[R1, #+160]
   \   00000008   0x0008             MOVS     R0,R1
    787          //	l_SelModelErrFlg = ERROR;	
    788          //	
    789          //    if(ReadSelectModel( (uint8 *)&OilBoxTypCod))					//读取设置的油量模型编号
    790          //    {                                               				//读卡调试信息    	
    791          //        if(OilBoxTypCod > 63 || OilBoxTypCod == 0) 					//设置错误，采用默认的油箱模型1
    792          //    	{
    793          //            OilBoxTypCod = 1;
    794          //    	}
    795          //    	else
    796          //    	{
    797          //    		l_SelModelErrFlg 		= NO_ERROR;
    798          //    	}
    799          //    }
    800          //	else
    801          //	{
    802          //		OilBoxTypCod = 1;	
    803          //	}
    804          //   
    805              return	OilBoxTypCod;
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x4770             BX       LR               ;; return
    806          }
    807          
    808          //uint8	GetSelModelErrFlg(void)
    809          //{
    810          //	return l_SelModelErrFlg;
    811          //}
    812          ////
    813          //
    814          #define			DF4_MODLE		2
    815          //
    816          ////------------------------------------------------------------------------------
    817          ////名    称：    void   stcModelTostcModelComplex(stcModelComplex * sComplexModel,stcModel	* sModel)
    818          ////功    能：    取油箱模型
    819          ////入口参数：    油箱模型指针
    820          ////出口参数：    无
    821          ////------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    822          void   stcModelTostcModelComplex(stcCalcModel * sComplexModel,stcModel	* sModel)
    823          {
   \                     stcModelTostcModelComplex: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    824          	uint16		Crc16;
    825          	uint16		StartPointNum;
    826          
    827           	if(sModel->Reserve0 > 5)										//防止Reserve没有赋值
   \   00000006   0xF895 0x00CD      LDRB     R0,[R5, #+205]
   \   0000000A   0x2806             CMP      R0,#+6
   \   0000000C   0xDB02             BLT.N    ??stcModelTostcModelComplex_0
    828          	{		
    829          		sModel->Reserve0 = 0;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0xF885 0x00CD      STRB     R0,[R5, #+205]
    830          	}
    831          	
    832          //	StartPointNum = (sModel->Reserve0)*(sizeof(sModel->sModPot)/sizeof(stcModPot));
    833          
    834          //	memcpy((uint8 *)&sComplexModel->sModPot[StartPointNum],(uint8 *)sModel->sModPot,sizeof(sModel->sModPot));
    835          	memcpy((uint8 *)&sComplexModel->sModPot,(uint8 *)sModel->sModPot,sizeof(sModel->sModPot));
   \                     ??stcModelTostcModelComplex_0: (+1)
   \   00000014   0x27C8             MOVS     R7,#+200
   \   00000016   0x003A             MOVS     R2,R7
   \   00000018   0x0029             MOVS     R1,R5
   \   0000001A   0x0020             MOVS     R0,R4
   \   0000001C   0x.... 0x....      BL       __aeabi_memcpy
    836          //	printfcom0("\r\n sModel->Reserve2220 = %u",sModel->Reserve0);	
    837          ///////////////////////////////////////////////////////////////////20120511
    838          //	if(sModel->ModelNum == DF4_MODLE)
    839          //	{
    840          //		if(sComplexModel->sModPot[1].HigVal == 1114 )
    841          //		{
    842          //			sComplexModel->sModPot[1].HigVal = 622;
    843          //		}
    844          //	}
    845          //////////////////////////////////////////////////////////////////	
    846          
    847          	sComplexModel->	ModelNum 	= sModel->ModelNum;
   \   00000020   0xF895 0x00CC      LDRB     R0,[R5, #+204]
   \   00000024   0xF884 0x0194      STRB     R0,[R4, #+404]
    848          	sComplexModel->	PotNum 		= sModel->PotNum;
   \   00000028   0xF8B5 0x00C8      LDRH     R0,[R5, #+200]
   \   0000002C   0xF8A4 0x0190      STRH     R0,[R4, #+400]
    849          	sComplexModel->	StartOil 	= sModel->StartHight;
   \   00000030   0xF8B5 0x00CA      LDRH     R0,[R5, #+202]
   \   00000034   0xF8A4 0x0192      STRH     R0,[R4, #+402]
    850          	
    851          	
    852          
    853          	Crc16 = GetCrc16Check((uint8 *)sComplexModel,sizeof(stcModelComplex) - 2);
   \   00000038   0xF44F 0x71CB      MOV      R1,#+406
   \   0000003C   0x0020             MOVS     R0,R4
   \   0000003E   0x.... 0x....      BL       GetCrc16Check
   \   00000042   0x0006             MOVS     R6,R0
    854          	
    855          	sComplexModel->CrcCheck  	= Crc16;
   \   00000044   0xF8A4 0x6196      STRH     R6,[R4, #+406]
    856          }	
   \   00000048   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    857          //
    858          //void   stcModelComplexTostcModel(stcModel	* sModel,stcModelComplex * sComplexModel)
    859          //{
    860          //	uint16		Crc16;
    861          //	uint16		StartPointNum;
    862          //	uint16		pointnum;
    863          //	uint16		i;
    864          //
    865          //// 	if(sModel->Reserve0 > 5)										//防止Reserve没有赋值
    866          ////	{		
    867          ////		sModel->Reserve0 = 0;
    868          ////	}
    869          //	pointnum = sComplexModel-> ModelNum;
    870          //	if(pointnum < 50)	
    871          //	{
    872          //		memcpy((uint8 *)sModel->sModPot,(uint8 *)sComplexModel->sModPot,sizeof(sModel->sModPot));
    873          //	}
    874          //	else
    875          //	{
    876          //		for(i = 0;i<50;i++)	
    877          //		{
    878          //			memcpy((uint8 *)&sModel->sModPot[i],(uint8 *)&sComplexModel->sModPot[],sizeof(sModel->sModPot));
    879          //
    880          //		}
    881          //	}	
    882          //
    883          ////	printfcom0("\r\n sModel->Reserve2220 = %u",sModel->Reserve0);	
    884          /////////////////////////////////////////////////////////////////////20120511
    885          ////	if(sModel->ModelNum == DF4_MODLE)
    886          ////	{
    887          ////		if(sComplexModel->sModPot[1].HigVal == 1114 )
    888          ////		{
    889          ////			sComplexModel->sModPot[1].HigVal = 622;
    890          ////		}
    891          ////	}
    892          ////////////////////////////////////////////////////////////////////	
    893          //
    894          //	sComplexModel->	ModelNum 	= sModel->ModelNum;
    895          //	sComplexModel->	PotNum 		= sModel->PotNum;
    896          //	sComplexModel->	StartHight 	= sModel->StartHight;
    897          //	
    898          //	Crc16 = GetCrc16Check((uint8 *)sComplexModel,sizeof(stcModelComplex) - 2);
    899          //	
    900          //	sComplexModel->CrcCheck  	= Crc16;
    901          //}
    902          
    903          
    904          ////------------------------------------------------------------------------------
    905          ////名    称：    void   stcModelTostcModelComplex(stcModelComplex * sComplexModel,stcModel	* sModel)
    906          ////功    能：    取油箱模型
    907          ////入口参数：    油箱模型指针
    908          ////出口参数：    无
    909          ////------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    910          void   stcModelSempleTostcModelComplex(stcCalcModel * sComplexModel,stcModelSemple	* sModelSemple)
    911          {
   \                     stcModelSempleTostcModelComplex: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
    912          	uint16		Crc16;
    913          	uint16		StartPointNum;
    914          	
    915          	if(sModelSemple->Reserve0 > 25)									//防止Reserve没有赋值	
   \   00000008   0xF895 0x002D      LDRB     R0,[R5, #+45]
   \   0000000C   0x281A             CMP      R0,#+26
   \   0000000E   0xDB02             BLT.N    ??stcModelSempleTostcModelComplex_0
    916          	{		
    917          		sModelSemple->Reserve0 = 0;
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0xF885 0x002D      STRB     R0,[R5, #+45]
    918          	}
    919          		
    920          	StartPointNum = (sModelSemple->Reserve0)*(sizeof(sModelSemple->sModPot)/sizeof(stcModPot));
   \                     ??stcModelSempleTostcModelComplex_0: (+1)
   \   00000016   0xF895 0x002D      LDRB     R0,[R5, #+45]
   \   0000001A   0x210A             MOVS     R1,#+10
   \   0000001C   0x4348             MULS     R0,R1,R0
   \   0000001E   0x0007             MOVS     R7,R0
    921          	
    922          	memcpy((uint8 *)&sComplexModel->sModPot[StartPointNum],(uint8 *)sModelSemple->sModPot,sizeof(sModelSemple->sModPot));
   \   00000020   0xF05F 0x0828      MOVS     R8,#+40
   \   00000024   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000026   0xEB14 0x0987      ADDS     R9,R4,R7, LSL #+2
   \   0000002A   0x4642             MOV      R2,R8
   \   0000002C   0x0029             MOVS     R1,R5
   \   0000002E   0x4648             MOV      R0,R9
   \   00000030   0x.... 0x....      BL       __aeabi_memcpy
    923          
    924          ///////////////////////////////////////////////////////////////////20120511
    925          //if(sModelSemple->PotNum == DF4_MODLE)
    926          //{
    927          //	if(sComplexModel->sModPot[1].HigVal == 1114 )
    928          //	{
    929          //		sComplexModel->sModPot[1].HigVal = 622;
    930          //	}
    931          //}
    932          //////////////////////////////////////////////////////////////////	
    933          	
    934          	sComplexModel->	ModelNum 	= sModelSemple->ModelNum;
   \   00000034   0xF895 0x002C      LDRB     R0,[R5, #+44]
   \   00000038   0xF884 0x0194      STRB     R0,[R4, #+404]
    935          	sComplexModel->	PotNum 		= sModelSemple->PotNum;
   \   0000003C   0x8D28             LDRH     R0,[R5, #+40]
   \   0000003E   0xF8A4 0x0190      STRH     R0,[R4, #+400]
    936          	sComplexModel->	StartOil 	= sModelSemple->StartHight;
   \   00000042   0x8D68             LDRH     R0,[R5, #+42]
   \   00000044   0xF8A4 0x0192      STRH     R0,[R4, #+402]
    937          	
    938          	Crc16 = GetCrc16Check((uint8 *)sComplexModel,sizeof(stcModelComplex) - 2);
   \   00000048   0xF44F 0x71CB      MOV      R1,#+406
   \   0000004C   0x0020             MOVS     R0,R4
   \   0000004E   0x.... 0x....      BL       GetCrc16Check
   \   00000052   0x0006             MOVS     R6,R0
    939          	
    940          	sComplexModel->CrcCheck  	= Crc16;
   \   00000054   0xF8A4 0x6196      STRH     R6,[R4, #+406]
    941          }	
   \   00000058   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    942          
    943          ////------------------------------------------------------------------------------
    944          ////名    称：    void   stcModelComplexTostcModel(stcModel* sComplexModel,stcModelComplex * sModel)
    945          ////功    能：    取油箱模型
    946          ////入口参数：    油箱模型指针
    947          ////出口参数：    无
    948          ////------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    949          void   stcModelComplexTostcModel(stcModel* sModel,stcModelComplex * sComplexModel)
    950          {
   \                     stcModelComplexTostcModel: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    951          	uint16		Crc16;
    952          
    953          	memcpy((uint8 *)sModel->sModPot,(uint8 *)sComplexModel->sModPot,sizeof(sModel->sModPot));
   \   00000006   0x27C8             MOVS     R7,#+200
   \   00000008   0x003A             MOVS     R2,R7
   \   0000000A   0x0029             MOVS     R1,R5
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0x.... 0x....      BL       __aeabi_memcpy
    954          	
    955          	sModel->ModelNum 	= sComplexModel->ModelNum;
   \   00000012   0xF895 0x0194      LDRB     R0,[R5, #+404]
   \   00000016   0xF884 0x00CC      STRB     R0,[R4, #+204]
    956          	sModel->PotNum 		= sComplexModel->PotNum;
   \   0000001A   0xF8B5 0x0190      LDRH     R0,[R5, #+400]
   \   0000001E   0xF8A4 0x00C8      STRH     R0,[R4, #+200]
    957          	sModel->StartHight 	= sComplexModel->StartHight;
   \   00000022   0xF8B5 0x0192      LDRH     R0,[R5, #+402]
   \   00000026   0xF8A4 0x00CA      STRH     R0,[R4, #+202]
    958          	sModel->Reserve0 	= sComplexModel->Reserve0;
   \   0000002A   0xF895 0x0195      LDRB     R0,[R5, #+405]
   \   0000002E   0xF884 0x00CD      STRB     R0,[R4, #+205]
    959          	
    960          	Crc16 = GetCrc16Check((uint8 *)sModel,sizeof(stcModel) - 2);
   \   00000032   0x21CE             MOVS     R1,#+206
   \   00000034   0x0020             MOVS     R0,R4
   \   00000036   0x.... 0x....      BL       GetCrc16Check
   \   0000003A   0x0006             MOVS     R6,R0
    961          	
    962          	sModel->CrcCheck  	= Crc16;
   \   0000003C   0xF8A4 0x60CE      STRH     R6,[R4, #+206]
    963          }	
   \   00000040   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    964          
    965          ////------------------------------------------------------------------------------
    966          ////名    称：    void   stcModelComplexTostcModel(stcModel* sComplexModel,stcModelComplex * sModel)
    967          ////功    能：    取油箱模型
    968          ////入口参数：    油箱模型指针
    969          ////出口参数：    无
    970          ////------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    971          void   stcModelComplexToMulstcModel(stcModel* sModel,stcModelComplex * sComplexModel,uint16	ReserveNum)
    972          {
   \                     stcModelComplexToMulstcModel: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    973          	uint16		Crc16;
    974          
    975          	memcpy((uint8 *)sModel->sModPot,(uint8 *)&sComplexModel->sModPot[ReserveNum*(sizeof(sModel->sModPot) / sizeof(stcModPot))],sizeof(sModel->sModPot));
   \   0000000A   0xF05F 0x08C8      MOVS     R8,#+200
   \   0000000E   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000010   0x20C8             MOVS     R0,#+200
   \   00000012   0xFB00 0x5906      MLA      R9,R0,R6,R5
   \   00000016   0x4642             MOV      R2,R8
   \   00000018   0x4649             MOV      R1,R9
   \   0000001A   0x0020             MOVS     R0,R4
   \   0000001C   0x.... 0x....      BL       __aeabi_memcpy
    976          	
    977          	sModel->ModelNum 	= sComplexModel->ModelNum;
   \   00000020   0xF895 0x0194      LDRB     R0,[R5, #+404]
   \   00000024   0xF884 0x00CC      STRB     R0,[R4, #+204]
    978          	sModel->PotNum 		= sComplexModel->PotNum;
   \   00000028   0xF8B5 0x0190      LDRH     R0,[R5, #+400]
   \   0000002C   0xF8A4 0x00C8      STRH     R0,[R4, #+200]
    979          	sModel->StartHight 	= sComplexModel->StartHight;
   \   00000030   0xF8B5 0x0192      LDRH     R0,[R5, #+402]
   \   00000034   0xF8A4 0x00CA      STRH     R0,[R4, #+202]
    980          	sModel->Reserve0 	= ReserveNum;
   \   00000038   0xF884 0x60CD      STRB     R6,[R4, #+205]
    981          	
    982          	Crc16 = GetCrc16Check((uint8 *)sModel,sizeof(stcModel) - 2);
   \   0000003C   0x21CE             MOVS     R1,#+206
   \   0000003E   0x0020             MOVS     R0,R4
   \   00000040   0x.... 0x....      BL       GetCrc16Check
   \   00000044   0x0007             MOVS     R7,R0
    983          	
    984          	sModel->CrcCheck  	= Crc16;
   \   00000046   0xF8A4 0x70CE      STRH     R7,[R4, #+206]
    985          }	
   \   0000004A   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    986          
    987          ////------------------------------------------------------------------------------
    988          ////名    称：    void   stcModelTostcModelComplex(stcModelComplex * sComplexModel,stcModel	* sModel)
    989          ////功    能：    取油箱模型
    990          ////入口参数：    油箱模型指针
    991          ////出口参数：    无
    992          ////------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    993          void   stcModelComplexTostcModelSemple(stcModelSemple * sModelSemple,stcModelComplex	* sComplexModel)
    994          {
    995          //	uint16		Crc16;
    996          //	
    997          //	memcpy((uint8 *)sModelSemple->sModPot,(uint8 *)sComplexModel->sModPot,sizeof(sModelSemple->sModPot));
    998          //	
    999          //	sModelSemple->ModelNum 		= sComplexModel->ModelNum;
   1000          //	sModelSemple->PotNum 		= sComplexModel->PotNum;
   1001          //	sModelSemple->StartHight 	= sComplexModel->StartHight;
   1002          //	sModelSemple->Reserve0 		= sComplexModel->Reserve0;
   1003          //	
   1004          //	Crc16 = GetCrc16Check((uint8 *)sModelSemple,sizeof(stcModelSemple) - 2);
   1005          //	
   1006          //	sModelSemple->CrcCheck  	= Crc16;
   1007          }	
   \                     stcModelComplexTostcModelSemple: (+1)
   \   00000000   0x4770             BX       LR               ;; return
   1008          //
   1009          ////------------------------------------------------------------------------------
   1010          ////名    称：    void   stcModelTostcModelComplex(stcModelComplex * sComplexModel,stcModel	* sModel)
   1011          ////功    能：    取油箱模型
   1012          ////入口参数：    油箱模型指针
   1013          ////出口参数：    无
   1014          ////------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
   1015          void   GetHxn5OilBoxModel(stcCalcModel * sComplexModel)
   1016          {
   \                     GetHxn5OilBoxModel: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   1017          	uint16		Crc16;
   1018          	static		stcModPot	sModPot[100]= 
   1019          	{
   1020          		353,335,
   1021          		471,457,
   1022          		576,563,
   1023          		682,664,
   1024          		791,768,
   1025          		897,867,
   1026          		1000,965,
   1027          		1110,1068,
   1028          		1216,1167,
   1029          		1320,1265,
   1030          		1431,1369,
   1031          		1541,1472,
   1032          		1639,1565,
   1033          		1745,1665,
   1034          		1844,1761,
   1035          		1944,1856,
   1036          		2052,1961,
   1037          		2155,2060,
   1038          		2253,2156,
   1039          		2357,2256,
   1040          		2459,2355,
   1041          		2563,2454,
   1042          		2666,2552,
   1043          		2771,2652,
   1044          		2863,2742,
   1045          		2967,2845,
   1046          		3068,2945,
   1047          		3169,3044,
   1048          		3264,3142,
   1049          		3365,3242,
   1050          		3463,3341,
   1051          		3558,3439,
   1052          		3658,3538,
   1053          		3760,3638,
   1054          		3854,3736,
   1055          		3951,3834,
   1056          		4044,3932,
   1057          		4138,4029,
   1058          		4243,4134,
   1059          		4335,4228,
   1060          		4435,4328,
   1061          		4526,4425,
   1062          		4625,4524,
   1063          		4720,4623,
   1064          		4810,4720,
   1065          		4898,4813,
   1066          		4993,4917,
   1067          		5084,5015,
   1068          		5179,5116,
   1069          		5269,5211,
   1070          		5358,5308,
   1071          		5450,5409,
   1072          		5496,5459,
   1073          		5540,5509,
   1074          		5585,5559,
   1075          		5635,5613,
   1076          		5676,5657,
   1077          		5726,5712,
   1078          		5770,5760,
   1079          		5812,5808,
   1080          		5857,5859,
   1081          		5898,5906,
   1082          		5949,5961,
   1083          		6005,6024,
   1084          		6097,6095,
   1085          		6185,6150,
   1086          		6275,6204,
   1087          		6363,6261,
   1088          		6447,6316,
   1089          		6535,6371,
   1090          		6618,6433,
   1091          		6694,6495,
   1092          		6766,6548,
   1093          		6836,6598,
   1094          		6908,6651,
   1095          		6974,6698,
   1096          		7049,6753,
   1097          		7115,6801,
   1098          		7183,6850,
   1099          		7251,6899,
   1100          		7382,6994,
   1101          		7526,7099,
   1102          		7666,7200,
   1103          		8351,7698,
   1104          		9039,8197,
   1105          		9720,8691,
   1106          		10511,9266
   1107          	};
   1108          		
   1109          	sComplexModel->ModelNum 	= 30;
   \   00000004   0x201E             MOVS     R0,#+30
   \   00000006   0xF884 0x0194      STRB     R0,[R4, #+404]
   1110          	sComplexModel->PotNum 		= 87;
   \   0000000A   0x2057             MOVS     R0,#+87
   \   0000000C   0xF8A4 0x0190      STRH     R0,[R4, #+400]
   1111          	sComplexModel->StartOil 	= 0;	
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0xF8A4 0x0192      STRH     R0,[R4, #+402]
   1112          		
   1113          	memcpy((uint8 *)sComplexModel->sModPot,(uint8 *)sModPot,sizeof(sModPot));
   \   00000016   0xF44F 0x76C8      MOV      R6,#+400
   \   0000001A   0x....             LDR.N    R7,??DataTable2_1
   \   0000001C   0x0032             MOVS     R2,R6
   \   0000001E   0x0039             MOVS     R1,R7
   \   00000020   0x0020             MOVS     R0,R4
   \   00000022   0x.... 0x....      BL       __aeabi_memcpy
   1114          	
   1115          	Crc16 = GetCrc16Check((uint8 *)sComplexModel,sizeof(stcModelComplex) - 2);
   \   00000026   0xF44F 0x71CB      MOV      R1,#+406
   \   0000002A   0x0020             MOVS     R0,R4
   \   0000002C   0x.... 0x....      BL       GetCrc16Check
   \   00000030   0x0005             MOVS     R5,R0
   1116          	
   1117          	sComplexModel->CrcCheck  	= Crc16;
   \   00000032   0xF8A4 0x5196      STRH     R5,[R4, #+406]
   1118          }	
   \   00000036   0xBDF1             POP      {R0,R4-R7,PC}    ;; return

   \                                 In section .data, align 4
   \                     ??sModPot:
   \   00000000   0x0161 0x014F      DC16 353, 335, 471, 457, 576, 563, 682, 664, 791, 768, 897, 867, 1000
   \              0x01D7 0x01C9
   \              0x0240 0x0233
   \              0x02AA 0x0298
   \              0x0317 0x0300
   \              0x0381 0x0363
   \              0x03E8       
   \   0000001A   0x03C5 0x0456      DC16 965, 1110, 1068, 1216, 1167, 1320, 1265, 1431, 1369, 1541, 1472
   \              0x042C 0x04C0
   \              0x048F 0x0528
   \              0x04F1 0x0597
   \              0x0559 0x0605
   \              0x05C0       
   \   00000030   0x0667 0x061D      DC16 1639, 1565, 1745, 1665, 1844, 1761, 1944, 1856, 2052, 1961, 2155
   \              0x06D1 0x0681
   \              0x0734 0x06E1
   \              0x0798 0x0740
   \              0x0804 0x07A9
   \              0x086B       
   \   00000046   0x080C 0x08CD      DC16 2060, 2253, 2156, 2357, 2256, 2459, 2355, 2563, 2454, 2666, 2552
   \              0x086C 0x0935
   \              0x08D0 0x099B
   \              0x0933 0x0A03
   \              0x0996 0x0A6A
   \              0x09F8       
   \   0000005C   0x0AD3 0x0A5C      DC16 2771, 2652, 2863, 2742, 2967, 2845, 3068, 2945, 3169, 3044, 3264
   \              0x0B2F 0x0AB6
   \              0x0B97 0x0B1D
   \              0x0BFC 0x0B81
   \              0x0C61 0x0BE4
   \              0x0CC0       
   \   00000072   0x0C46 0x0D25      DC16 3142, 3365, 3242, 3463, 3341, 3558, 3439, 3658, 3538, 3760, 3638
   \              0x0CAA 0x0D87
   \              0x0D0D 0x0DE6
   \              0x0D6F 0x0E4A
   \              0x0DD2 0x0EB0
   \              0x0E36       
   \   00000088   0x0F0E 0x0E98      DC16 3854, 3736, 3951, 3834, 4044, 3932, 4138, 4029, 4243, 4134, 4335
   \              0x0F6F 0x0EFA
   \              0x0FCC 0x0F5C
   \              0x102A 0x0FBD
   \              0x1093 0x1026
   \              0x10EF       
   \   0000009E   0x1084 0x1153      DC16 4228, 4435, 4328, 4526, 4425, 4625, 4524, 4720, 4623, 4810, 4720
   \              0x10E8 0x11AE
   \              0x1149 0x1211
   \              0x11AC 0x1270
   \              0x120F 0x12CA
   \              0x1270       
   \   000000B4   0x1322 0x12CD      DC16 4898, 4813, 4993, 4917, 5084, 5015, 5179, 5116, 5269, 5211, 5358
   \              0x1381 0x1335
   \              0x13DC 0x1397
   \              0x143B 0x13FC
   \              0x1495 0x145B
   \              0x14EE       
   \   000000CA   0x14BC 0x154A      DC16 5308, 5450, 5409, 5496, 5459, 5540, 5509, 5585, 5559, 5635, 5613
   \              0x1521 0x1578
   \              0x1553 0x15A4
   \              0x1585 0x15D1
   \              0x15B7 0x1603
   \              0x15ED       
   \   000000E0   0x162C 0x1619      DC16 5676, 5657, 5726, 5712, 5770, 5760, 5812, 5808, 5857, 5859, 5898
   \              0x165E 0x1650
   \              0x168A 0x1680
   \              0x16B4 0x16B0
   \              0x16E1 0x16E3
   \              0x170A       
   \   000000F6   0x1712 0x173D      DC16 5906, 5949, 5961, 6005, 6024, 6097, 6095, 6185, 6150, 6275, 6204
   \              0x1749 0x1775
   \              0x1788 0x17D1
   \              0x17CF 0x1829
   \              0x1806 0x1883
   \              0x183C       
   \   0000010C   0x18DB 0x1875      DC16 6363, 6261, 6447, 6316, 6535, 6371, 6618, 6433, 6694, 6495, 6766
   \              0x192F 0x18AC
   \              0x1987 0x18E3
   \              0x19DA 0x1921
   \              0x1A26 0x195F
   \              0x1A6E       
   \   00000122   0x1994 0x1AB4      DC16 6548, 6836, 6598, 6908, 6651, 6974, 6698, 7049, 6753, 7115, 6801
   \              0x19C6 0x1AFC
   \              0x19FB 0x1B3E
   \              0x1A2A 0x1B89
   \              0x1A61 0x1BCB
   \              0x1A91       
   \   00000138   0x1C0F 0x1AC2      DC16 7183, 6850, 7251, 6899, 7382, 6994, 7526, 7099, 7666, 7200, 8351
   \              0x1C53 0x1AF3
   \              0x1CD6 0x1B52
   \              0x1D66 0x1BBB
   \              0x1DF2 0x1C20
   \              0x209F       
   \   0000014E   0x1E12 0x234F      DC16 7698, 9039, 8197, 9720, 8691, 10511, 9266, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x2005 0x25F8
   \              0x21F3 0x290F
   \              0x2432 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000       
   \   0000016C   0x0000 0x0000      DC16 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   1119          

   \                                 In section .text, align 2, keep-with-next
   1120          void   GetHxn3OilBoxModel(stcCalcModel * sComplexModel)
   1121          {
   \                     GetHxn3OilBoxModel: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   1122          	uint16		Crc16;
   1123          	static		stcModPot	sModPot[100]= 
   1124          	{
   1125          		530,176,
   1126          		750,325,
   1127          		1000,497,
   1128          		1250,674,
   1129          		1500,866,
   1130          		1750,1063,
   1131          		2000,1267,
   1132          		2250,1474,
   1133          		2500,1686,
   1134          		2750,1904,
   1135          		3000,2127,
   1136          		3250,2355,
   1137          		3500,2588,
   1138          		3750,2827,
   1139          		4000,3073,
   1140          		4250,3325,
   1141          		4500,3584,
   1142          		4750,3849,
   1143          		5000,4122,
   1144          		5250,4401,
   1145          		5500,4687,
   1146          		5750,4979,
   1147          		6000,5279,
   1148          		6250,5586,
   1149          		6500,5897,
   1150          		6750,6209,
   1151          		7000,6521,
   1152          		7250,6833,
   1153          		7500,7145,
   1154          		7750,7457,
   1155          		8000,7769,
   1156          		8250,8081,
   1157          		8500,8393,
   1158          		8750,8705,
   1159          		9000,9017,
   1160          		9192,9257
   1161          	};
   1162          		
   1163          	sComplexModel->ModelNum 	= 31;
   \   00000004   0x201F             MOVS     R0,#+31
   \   00000006   0xF884 0x0194      STRB     R0,[R4, #+404]
   1164          	sComplexModel->PotNum 		= 36;
   \   0000000A   0x2024             MOVS     R0,#+36
   \   0000000C   0xF8A4 0x0190      STRH     R0,[R4, #+400]
   1165          	sComplexModel->StartOil 	= 0;	
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0xF8A4 0x0192      STRH     R0,[R4, #+402]
   1166          		
   1167          	memcpy((uint8 *)sComplexModel->sModPot,(uint8 *)sModPot,sizeof(sModPot));
   \   00000016   0xF44F 0x76C8      MOV      R6,#+400
   \   0000001A   0x....             LDR.N    R7,??DataTable2_2
   \   0000001C   0x0032             MOVS     R2,R6
   \   0000001E   0x0039             MOVS     R1,R7
   \   00000020   0x0020             MOVS     R0,R4
   \   00000022   0x.... 0x....      BL       __aeabi_memcpy
   1168          	
   1169          	Crc16 = GetCrc16Check((uint8 *)sComplexModel,sizeof(stcModelComplex) - 2);
   \   00000026   0xF44F 0x71CB      MOV      R1,#+406
   \   0000002A   0x0020             MOVS     R0,R4
   \   0000002C   0x.... 0x....      BL       GetCrc16Check
   \   00000030   0x0005             MOVS     R5,R0
   1170          	
   1171          	sComplexModel->CrcCheck  	= Crc16;
   \   00000032   0xF8A4 0x5196      STRH     R5,[R4, #+406]
   1172          }
   \   00000036   0xBDF1             POP      {R0,R4-R7,PC}    ;; return

   \                                 In section .data, align 4
   \                     ??sModPot_1:
   \   00000000   0x0212 0x00B0      DC16 530, 176, 750, 325, 1000, 497, 1250, 674, 1500, 866, 1750, 1063
   \              0x02EE 0x0145
   \              0x03E8 0x01F1
   \              0x04E2 0x02A2
   \              0x05DC 0x0362
   \              0x06D6 0x0427
   \   00000018   0x07D0 0x04F3      DC16 2000, 1267, 2250, 1474, 2500, 1686, 2750, 1904, 3000, 2127, 3250
   \              0x08CA 0x05C2
   \              0x09C4 0x0696
   \              0x0ABE 0x0770
   \              0x0BB8 0x084F
   \              0x0CB2       
   \   0000002E   0x0933 0x0DAC      DC16 2355, 3500, 2588, 3750, 2827, 4000, 3073, 4250, 3325, 4500, 3584
   \              0x0A1C 0x0EA6
   \              0x0B0B 0x0FA0
   \              0x0C01 0x109A
   \              0x0CFD 0x1194
   \              0x0E00       
   \   00000044   0x128E 0x0F09      DC16 4750, 3849, 5000, 4122, 5250, 4401, 5500, 4687, 5750, 4979, 6000
   \              0x1388 0x101A
   \              0x1482 0x1131
   \              0x157C 0x124F
   \              0x1676 0x1373
   \              0x1770       
   \   0000005A   0x149F 0x186A      DC16 5279, 6250, 5586, 6500, 5897, 6750, 6209, 7000, 6521, 7250, 6833
   \              0x15D2 0x1964
   \              0x1709 0x1A5E
   \              0x1841 0x1B58
   \              0x1979 0x1C52
   \              0x1AB1       
   \   00000070   0x1D4C 0x1BE9      DC16 7500, 7145, 7750, 7457, 8000, 7769, 8250, 8081, 8500, 8393, 8750
   \              0x1E46 0x1D21
   \              0x1F40 0x1E59
   \              0x203A 0x1F91
   \              0x2134 0x20C9
   \              0x222E       
   \   00000086   0x2201 0x2328      DC16 8705, 9000, 9017, 9192, 9257, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x2339 0x23E8
   \              0x2429 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000       
   \   000000A8   0x0000 0x0000      DC16 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \   000000D4   0x0000 0x0000      DC16 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \   00000100   0x0000 0x0000      DC16 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \   0000012C   0x0000 0x0000      DC16 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \   00000158   0x0000 0x0000      DC16 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \   00000184   0x0000 0x0000      DC16 0, 0, 0, 0, 0, 0
   \              0x0000 0x0000
   \              0x0000 0x0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     sCtrl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     ??sModPot

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     ??sModPot_1
   1173          
   1174          #define			HXN3_MODLE		31
   1175          #define			HXN5_MODLE		30
   1176          //
   1177          //extern	uint8	ReadOilBoxModel_Flsh(stcModelCard * sModelCard);
   1178          //////------------------------------------------------------------------------------
   1179          //////名    称：    stcModel    GetOilBoxModel(void)
   1180          //////功    能：    取油箱模型
   1181          //////入口参数：    油箱模型指针
   1182          //////出口参数：    无
   1183          //////------------------------------------------------------------------------------
   1184          //uint8   GetOilBoxModel(stcCalcModel * sComplexModel)
   1185          //{
   1186          //    stcModel 		  	sModel;
   1187          //	stcModelSemple	  	sModelSemple;
   1188          //    uint8           	OilBoxTypCod = 0;                             	//油箱类型代码
   1189          //    uint8           	ModelErrFlg;				
   1190          ////	static		uint32	times = 0;
   1191          //
   1192          //  	
   1193          //  	ModelErrFlg 	= ERROR; 
   1194          //
   1195          //    OilBoxTypCod	= GetOilBoxCod(); 
   1196          ////    
   1197          ////	 printfcom0("\r\n 油尺的油箱模型读取 %d",OilBoxTypCod);
   1198          ////    //20110223      增加HXN5油箱模型
   1199          //    if(OilBoxTypCod == HXN5_MODLE)  									//先取一个模型，然后再进行读模型判断
   1200          //    {
   1201          //    	GetHxn5OilBoxModel(sComplexModel);
   1202          //  	
   1203          //    	ModelErrFlg = NO_ERROR;
   1204          //
   1205          //    	return	ModelErrFlg;
   1206          //    }
   1207          //	else if(OilBoxTypCod == HXN3_MODLE)
   1208          //	{
   1209          //    	GetHxn3OilBoxModel(sComplexModel);
   1210          //  	
   1211          //    	ModelErrFlg = NO_ERROR;
   1212          //
   1213          //    	return	ModelErrFlg;		
   1214          //	}
   1215          // 	else if(OilBoxTypCod < 30)
   1216          // 	{
   1217          //		if(GetOilBoxModelsModel((stcModel *)&sModel))
   1218          //		{
   1219          //			stcModelTostcModelComplex(sComplexModel,(stcModel *)&sModel);
   1220          //
   1221          //			ModelErrFlg = NO_ERROR;
   1222          //			//printfcom0("\r\n GetOilBoxModelsModel ");
   1223          //			return	ModelErrFlg;
   1224          //		} 		
   1225          //		
   1226          //		if(GetOilBoxModelsModelSemple((stcModelSemple *)&sModelSemple))
   1227          //		{
   1228          //			stcModelSempleTostcModelComplex(sComplexModel,(stcModelSemple *)&sModelSemple);			//100829
   1229          //	        
   1230          //			ModelErrFlg = NO_ERROR;
   1231          //			return	ModelErrFlg;    		
   1232          //		}
   1233          //	}
   1234          //
   1235          //	ModelErrFlg = ERROR;
   1236          //  printfcom0("\r\n\r\n■ 选择模型错误 %u,使用DF4D模型 %u\r\n",OilBoxTypCod,1);
   1237          //    
   1238          //	GetDf4dOilBoxModel((stcModel *)&sModel);    
   1239          //    
   1240          //	stcModelTostcModelComplex(sComplexModel,(stcModel *)&sModel);						//100829	
   1241          //	
   1242          ////	if(times++ == 0)
   1243          //
   1244          //
   1245          //    return  ModelErrFlg; 
   1246          //}
   1247          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   GetDf12G17OilBoxModel
       0   GetDf12G40OilBoxModel
       0   GetDf12G50OilBoxModel
       0   GetDf4bOilBoxModel
      16   GetDf4dOilBoxModel
        16   -> GetCrc16Check
       0   GetDf5G20OilBoxModel
       0   GetDf7C5675OilBoxModel
       0   GetDf7G20OilBoxModel
       0   GetDf7G50OilBoxModel
       0   GetDf7G60OilBoxModel
       0   GetDf7G80OilBoxModel
       0   GetDf7xOilBoxModel
      24   GetHxn3OilBoxModel
        24   -> GetCrc16Check
        24   -> __aeabi_memcpy
      24   GetHxn5OilBoxModel
        24   -> GetCrc16Check
        24   -> __aeabi_memcpy
       0   GetOilBoxCod
      32   stcModelComplexToMulstcModel
        32   -> GetCrc16Check
        32   -> __aeabi_memcpy
      24   stcModelComplexTostcModel
        24   -> GetCrc16Check
        24   -> __aeabi_memcpy
       0   stcModelComplexTostcModelSemple
      32   stcModelSempleTostcModelComplex
        32   -> GetCrc16Check
        32   -> __aeabi_memcpy
      24   stcModelTostcModelComplex
        24   -> GetCrc16Check
        24   -> __aeabi_memcpy


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       6  GetDf12G17OilBoxModel
       6  GetDf12G40OilBoxModel
       6  GetDf12G50OilBoxModel
       6  GetDf4bOilBoxModel
      74  GetDf4dOilBoxModel
       6  GetDf5G20OilBoxModel
       6  GetDf7C5675OilBoxModel
       6  GetDf7G20OilBoxModel
       6  GetDf7G50OilBoxModel
       6  GetDf7G60OilBoxModel
       6  GetDf7G80OilBoxModel
       6  GetDf7xOilBoxModel
      56  GetHxn3OilBoxModel
      56  GetHxn5OilBoxModel
      14  GetOilBoxCod
       1  l_SelModelErrFlg
     400  sModPot
     400  sModPot
      78  stcModelComplexToMulstcModel
      66  stcModelComplexTostcModel
       2  stcModelComplexTostcModelSemple
      92  stcModelSempleTostcModelComplex
      74  stcModelTostcModelComplex

 
 801 bytes in section .data
 590 bytes in section .text
 
 590 bytes of CODE memory
 801 bytes of DATA memory

Errors: none
Warnings: 1
