###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       18/Sep/2017  09:40:32
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  F:\iar\NC136B-310统计模块\Application\Library\Driver\Led.c
#    Command line =  
#        F:\iar\NC136B-310统计模块\Application\Library\Driver\Led.c -lCN
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List
#        --diag_suppress Pa050 -o
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\csnr_package_deal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\tax\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\Led.lst
#    Object file  =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\Led.o
#
###############################################################################

F:\iar\NC136B-310统计模块\Application\Library\Driver\Led.c
      1          //#include "config.h"
      2          //#include "CpuDrive.h" 
      3          //#include "HardDrive.h" 
      4          
      5          #include <includes.h>
      6          /*
      7          #define		Led0	P216							
      8          #define		Led1	P217							
      9          #define		Led2	P218							
     10          #define		Led3	P219							
     11          #define		Led4	P220
     12          #define		Led5	P221
     13          #define		Led6	P222
     14          #define		Led7	P223
     15          */
     16          
     17          //#define		Led3	P216							
     18          //#define		Led2	P217							
     19          //#define		Led1	P218							
     20          //#define		Led0	P219							
     21          //#define		Led7	P220
     22          //#define		Led6	P221
     23          //#define		Led5	P222
     24          //#define		Led4	P223
     25          
     26          #define		Led_3	115							
     27          #define		Led_2	116							
     28          #define		Led_1	109							
     29          #define		Led_0	110							
     30          #define		Led_7	114
     31          #define		Led_6	117
     32          #define		Led_4	108
     33          #define		Led_5	104
     34          
     35          
     36          #define		Led0	Led_7							
     37          #define		Led1	Led_0							
     38          #define		Led2	Led_1							
     39          #define		Led3	Led_4							
     40          #define		Led4	Led_5
     41          #define		Led5	Led_6
     42          #define		Led6	Led_2
     43          #define		Led7	Led_3
     44          /**/
     45          #define		LED_MAX	8
     46          
     47          typedef struct _stcLed_
     48                          {
     49                              volatile 	uint32  WorkingFlag;            //指示灯开启标志
     50                              volatile 	uint32  times;            		//指示灯闪烁的次数
     51                              volatile 	uint32  WorkXms;              	//指示灯亮的时间
     52                              volatile 	uint32  unWorkXms;             	//指示灯不亮的时间
     53                              volatile 	uint32	TotalTime;
     54                              volatile 	uint32  StarTimer;
     55                          }stcLed;
     56          

   \                                 In section .data, align 4
     57          stcLed	sLed[8] =
   \                     sLed:
   \   00000000   0x00000000         DC32 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000001   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000001   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000001   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \   00000058   0x00000001         DC32 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000001   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000001   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000001   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \   000000B0   0x00000000         DC32 0, 0, 1, 0
   \              0x00000000   
   \              0x00000001   
   \              0x00000000   
     58          			{
     59          				{0,0,0,0,1,0},
     60          				{0,0,0,0,1,0},
     61          				{0,0,0,0,1,0},
     62          				{0,0,0,0,1,0},
     63          				{0,0,0,0,1,0},
     64          				{0,0,0,0,1,0},
     65          				{0,0,0,0,1,0},
     66          				{0,0,0,0,1,0},
     67          			};
     68          			

   \                                 In section .bss, align 1
     69          uint8  	HLAB_i;
   \                     HLAB_i:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
     70          uint32  CurentTime;
   \                     CurentTime:
   \   00000000                      DS8 4
     71          
     72          //------------------------------------------------------------------------
     73          //	名	称 ：void LedUnLight(void)
     74          //	功	能 ：指示灯持续灭
     75          // 入口参数：
     76          // 出口参数：
     77          //------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
     78          void UnLightLed(uint8 num)
     79          {
   \                     UnLightLed: (+1)
   \   00000000   0xB51F             PUSH     {R0-R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     80          	uint16	LedBuf[LED_MAX] = {Led0,Led1,Led2,Led3,Led4,Led5,Led6,Led7};
   \   00000004   0x4668             MOV      R0,SP
   \   00000006   0x....             LDR.N    R1,??DataTable4
   \   00000008   0x2210             MOVS     R2,#+16
   \   0000000A   0x.... 0x....      BL       __aeabi_memcpy4
     81          
     82          	if(num>8)
   \   0000000E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000010   0x2C09             CMP      R4,#+9
   \   00000012   0xDA09             BGE.N    ??UnLightLed_0
     83          	{
     84          		return ;
     85          	}
     86          	if(num<8)
   \                     ??UnLightLed_1: (+1)
   \   00000014   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000016   0x2C08             CMP      R4,#+8
   \   00000018   0xDA06             BGE.N    ??UnLightLed_2
     87          	{
     88          //2014	 	IO2SET  |=  (0x00000001 << ( num+16 ));
     89          		GPIO_SetOrClearValue(LedBuf[num],1);
   \   0000001A   0x2101             MOVS     R1,#+1
   \   0000001C   0x4668             MOV      R0,SP
   \   0000001E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000020   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   00000024   0x.... 0x....      BL       GPIO_SetOrClearValue
     90          	}
     91          }
   \                     ??UnLightLed_2: (+1)
   \                     ??UnLightLed_0: (+1)
   \   00000028   0xBD1F             POP      {R0-R4,PC}       ;; return
     92          //------------------------------------------------------------------------
     93          //	名	称 ：void LedLight(void)
     94          //	功	能 ：指示灯持续亮
     95          // 入口参数：
     96          // 出口参数：
     97          //------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
     98          void LightLed(uint8 num)
     99          {
   \                     LightLed: (+1)
   \   00000000   0xB51F             PUSH     {R0-R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    100          	uint16	LedBuf[LED_MAX] = {Led0,Led1,Led2,Led3,Led4,Led5,Led6,Led7};
   \   00000004   0x4668             MOV      R0,SP
   \   00000006   0x....             LDR.N    R1,??DataTable4_1
   \   00000008   0x2210             MOVS     R2,#+16
   \   0000000A   0x.... 0x....      BL       __aeabi_memcpy4
    101          
    102          	if(num>8)
   \   0000000E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000010   0x2C09             CMP      R4,#+9
   \   00000012   0xDA09             BGE.N    ??LightLed_0
    103          	{
    104          		return ;
    105          	}
    106          	if(num<8)
   \                     ??LightLed_1: (+1)
   \   00000014   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000016   0x2C08             CMP      R4,#+8
   \   00000018   0xDA06             BGE.N    ??LightLed_2
    107          	{
    108          //2014	 	IO2CLR  |=  (0x00000001 << ( num+16 ));
    109          		GPIO_SetOrClearValue(LedBuf[num],0);
   \   0000001A   0x2100             MOVS     R1,#+0
   \   0000001C   0x4668             MOV      R0,SP
   \   0000001E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000020   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   00000024   0x.... 0x....      BL       GPIO_SetOrClearValue
    110          	}
    111          }
   \                     ??LightLed_2: (+1)
   \                     ??LightLed_0: (+1)
   \   00000028   0xBD1F             POP      {R0-R4,PC}       ;; return
    112          
    113          //------------------------------------------------------------------------
    114          //	名	称 ：void OnLed(uint8 num,uint32 times,uint16 LightTime,uint16 unLightTime)
    115          //	功	能 ：控制指示灯
    116          // 入口参数：uint8 Num			亮灯的对应序号	 参照 Driver.h 有关声明
    117          //			 uint16	times			蜂鸣器响的次数
    118          //			 uint16	LightTime		响的时间  以 0.1s为单位
    119          //			 uint16	unLightTime		不响的时间 以 0.1s 为单位
    120          // 出口参数：操作成功返回 TRUE	操作失败返回 FAULSE
    121          //------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    122          void OnLed(uint8 num,uint32 times,uint16	LightTime,uint16 unLightTime)
    123          {
   \                     OnLed: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   \   00000008   0x001F             MOVS     R7,R3
    124          	FeedDog();
   \   0000000A   0x.... 0x....      BL       FeedDog
    125          	
    126          	if(num >= LED_MAX || times == 0 || sLed[num].WorkingFlag)
   \   0000000E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000010   0x2C08             CMP      R4,#+8
   \   00000012   0xDA09             BGE.N    ??OnLed_0
   \   00000014   0x2D00             CMP      R5,#+0
   \   00000016   0xD007             BEQ.N    ??OnLed_0
   \   00000018   0x....             LDR.N    R0,??DataTable4_2
   \   0000001A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001C   0x2118             MOVS     R1,#+24
   \   0000001E   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD000             BEQ.N    ??OnLed_1
    127          	{
    128          	    return;
   \                     ??OnLed_0: (+1)
   \   00000028   0xE053             B.N      ??OnLed_2
    129          	}
    130          	if( LightTime ==0 || times == 0 )
   \                     ??OnLed_1: (+1)
   \   0000002A   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000002C   0x2E00             CMP      R6,#+0
   \   0000002E   0xD001             BEQ.N    ??OnLed_3
   \   00000030   0x2D00             CMP      R5,#+0
   \   00000032   0xD100             BNE.N    ??OnLed_4
    131          	{
    132          		return;
   \                     ??OnLed_3: (+1)
   \   00000034   0xE04D             B.N      ??OnLed_2
    133          	}
    134          	
    135          	sLed[num].times 		= times;
   \                     ??OnLed_4: (+1)
   \   00000036   0x....             LDR.N    R0,??DataTable4_2
   \   00000038   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003A   0x2118             MOVS     R1,#+24
   \   0000003C   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000040   0x6045             STR      R5,[R0, #+4]
    136          	sLed[num].WorkXms		= LightTime * 10;
   \   00000042   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000044   0x200A             MOVS     R0,#+10
   \   00000046   0xFB00 0xF006      MUL      R0,R0,R6
   \   0000004A   0x....             LDR.N    R1,??DataTable4_2
   \   0000004C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000004E   0x2218             MOVS     R2,#+24
   \   00000050   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   00000054   0x6088             STR      R0,[R1, #+8]
    137          	sLed[num].unWorkXms 	= unLightTime * 10;
   \   00000056   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000058   0x200A             MOVS     R0,#+10
   \   0000005A   0xFB00 0xF007      MUL      R0,R0,R7
   \   0000005E   0x....             LDR.N    R1,??DataTable4_2
   \   00000060   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000062   0x2218             MOVS     R2,#+24
   \   00000064   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   00000068   0x60C8             STR      R0,[R1, #+12]
    138          	sLed[num].WorkXms		= LightTime;
   \   0000006A   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000006C   0x....             LDR.N    R0,??DataTable4_2
   \   0000006E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000070   0x2118             MOVS     R1,#+24
   \   00000072   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000076   0x6086             STR      R6,[R0, #+8]
    139          	sLed[num].unWorkXms 	= unLightTime;	
   \   00000078   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000007A   0x....             LDR.N    R0,??DataTable4_2
   \   0000007C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007E   0x2118             MOVS     R1,#+24
   \   00000080   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000084   0x60C7             STR      R7,[R0, #+12]
    140          	sLed[num].TotalTime 	= sLed[num].WorkXms + sLed[num].unWorkXms ;
   \   00000086   0x....             LDR.N    R0,??DataTable4_2
   \   00000088   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000008A   0x2118             MOVS     R1,#+24
   \   0000008C   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000090   0x6880             LDR      R0,[R0, #+8]
   \   00000092   0x....             LDR.N    R1,??DataTable4_2
   \   00000094   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000096   0x2218             MOVS     R2,#+24
   \   00000098   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   0000009C   0x68C9             LDR      R1,[R1, #+12]
   \   0000009E   0x1808             ADDS     R0,R1,R0
   \   000000A0   0x....             LDR.N    R1,??DataTable4_2
   \   000000A2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000A4   0x2218             MOVS     R2,#+24
   \   000000A6   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   000000AA   0x6108             STR      R0,[R1, #+16]
    141          	sLed[num].StarTimer		= GetSysTime();
   \   000000AC   0x.... 0x....      BL       GetSysTime
   \   000000B0   0x....             LDR.N    R1,??DataTable4_2
   \   000000B2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000B4   0x2218             MOVS     R2,#+24
   \   000000B6   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   000000BA   0x6148             STR      R0,[R1, #+20]
    142          	sLed[num].WorkingFlag	= 1;
   \   000000BC   0x2001             MOVS     R0,#+1
   \   000000BE   0x....             LDR.N    R1,??DataTable4_2
   \   000000C0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000C2   0x2218             MOVS     R2,#+24
   \   000000C4   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   000000C8   0x6008             STR      R0,[R1, #+0]
    143          	LightLed(num);	
   \   000000CA   0x0020             MOVS     R0,R4
   \   000000CC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000CE   0x.... 0x....      BL       LightLed
    144          }
   \                     ??OnLed_2: (+1)
   \   000000D2   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    145          
    146          //------------------------------------------------------------------------
    147          //	名	称 ：void OnAllLed(void)
    148          //	功	能 ：全开
    149          // 入口参数：
    150          // 出口参数：
    151          //------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    152          void OnAllLed(void)
    153          {
   \                     OnAllLed: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    154          	uint8 num;
    155          	for(num = 0; num < LED_MAX; num++)
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x0004             MOVS     R4,R0
   \                     ??OnAllLed_0: (+1)
   \   00000006   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000008   0x2C08             CMP      R4,#+8
   \   0000000A   0xDA09             BGE.N    ??OnAllLed_1
    156          	{
    157          		OnLed(num,100,10000,0);						//开灯
   \   0000000C   0x2300             MOVS     R3,#+0
   \   0000000E   0xF242 0x7210      MOVW     R2,#+10000
   \   00000012   0x2164             MOVS     R1,#+100
   \   00000014   0x0020             MOVS     R0,R4
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       OnLed
    158              }
   \   0000001C   0x1C64             ADDS     R4,R4,#+1
   \   0000001E   0xE7F2             B.N      ??OnAllLed_0
    159          }
   \                     ??OnAllLed_1: (+1)
   \   00000020   0xBD10             POP      {R4,PC}          ;; return
    160          
    161          //------------------------------------------------------------------------
    162          //	名	称 ：void LedOff(uint8 LedNum)
    163          //	功	能 ：关闭对应序号指示灯
    164          // 入口参数：无 
    165          // 出口参数：
    166          //------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    167          void OffLed(uint8 num)
    168          {
   \                     OffLed: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    169          	sLed[num].WorkingFlag	= 0;            //指示灯开启标志
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x....             LDR.N    R1,??DataTable4_2
   \   00000008   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000A   0x2218             MOVS     R2,#+24
   \   0000000C   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   00000010   0x6008             STR      R0,[R1, #+0]
    170              sLed[num].times			= 0;            //指示灯闪烁的次数
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x....             LDR.N    R1,??DataTable4_2
   \   00000016   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000018   0x2218             MOVS     R2,#+24
   \   0000001A   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   0000001E   0x6048             STR      R0,[R1, #+4]
    171              sLed[num].WorkXms		= 0;            //指示灯亮的时间
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x....             LDR.N    R1,??DataTable4_2
   \   00000024   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000026   0x2218             MOVS     R2,#+24
   \   00000028   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   0000002C   0x6088             STR      R0,[R1, #+8]
    172              sLed[num].unWorkXms		= 0;          	//指示灯不亮的时间
   \   0000002E   0x2000             MOVS     R0,#+0
   \   00000030   0x....             LDR.N    R1,??DataTable4_2
   \   00000032   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000034   0x2218             MOVS     R2,#+24
   \   00000036   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   0000003A   0x60C8             STR      R0,[R1, #+12]
    173              sLed[num].TotalTime		= 1;
   \   0000003C   0x2001             MOVS     R0,#+1
   \   0000003E   0x....             LDR.N    R1,??DataTable4_2
   \   00000040   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000042   0x2218             MOVS     R2,#+24
   \   00000044   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   00000048   0x6108             STR      R0,[R1, #+16]
    174              sLed[num].StarTimer		= 0;
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0x....             LDR.N    R1,??DataTable4_2
   \   0000004E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000050   0x2218             MOVS     R2,#+24
   \   00000052   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   00000056   0x6148             STR      R0,[R1, #+20]
    175              UnLightLed(num);
   \   00000058   0x0020             MOVS     R0,R4
   \   0000005A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005C   0x.... 0x....      BL       UnLightLed
    176          }
   \   00000060   0xBD10             POP      {R4,PC}          ;; return
    177          
    178          //------------------------------------------------------------------------
    179          //	名	称 ：void OffAllLed(void)
    180          //	功	能 ：灯全关
    181          // 入口参数：无
    182          // 出口参数：
    183          //------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    184          void OffAllLed(void)
    185          {
   \                     OffAllLed: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    186          	uint8 num;
    187          	for(num = 0; num < LED_MAX; num++)
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x0004             MOVS     R4,R0
   \                     ??OffAllLed_0: (+1)
   \   00000006   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000008   0x2C08             CMP      R4,#+8
   \   0000000A   0xDA05             BGE.N    ??OffAllLed_1
    188          	{
    189          		OffLed(num);								//关灯
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x.... 0x....      BL       OffLed
    190              }
   \   00000014   0x1C64             ADDS     R4,R4,#+1
   \   00000016   0xE7F6             B.N      ??OffAllLed_0
    191          }
   \                     ??OffAllLed_1: (+1)
   \   00000018   0xBD10             POP      {R4,PC}          ;; return
    192          
    193          ////------------------------------------------------------------------------
    194          ////	名	称 ：void HoldLed(void)
    195          ////	功	能 ：指示灯维护
    196          //// 入口参数：
    197          //// 出口参数：
    198          ////------------------------------------------------------------------------
    199          //void HoldLed(void)
    200          //{
    201          //	CurentTime = GetSysTime();
    202          //	for(HLAB_i =	0; HLAB_i < LED_MAX; HLAB_i++)
    203          //	{
    204          //		if(sLed[HLAB_i].WorkingFlag)
    205          //		{
    206          //			if( ( (CurentTime - sLed[HLAB_i].StarTimer) % sLed[HLAB_i].TotalTime) 
    207          //					< sLed[HLAB_i].WorkXms)
    208          //				LightLed(HLAB_i);
    209          //			else
    210          //			{
    211          //				UnLightLed(HLAB_i);
    212          //			}
    213          //			if( ( (CurentTime	- sLed[HLAB_i].StarTimer) / sLed[HLAB_i].TotalTime) 
    214          //					>= (sLed[HLAB_i].times))
    215          //		   	{
    216          //		   	 	OffLed(HLAB_i);
    217          //		   	}
    218          //		}
    219          //	}
    220          //}
    221          
    222          //------------------------------------------------------------------------
    223          //	名	称 ：void InitLed( void )
    224          //	功	能 ：指示灯初始化
    225          // 入口参数：
    226          // 出口参数：
    227          //------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    228          void InitLed( void )
    229          {
   \                     InitLed: (+1)
   \   00000000   0xB51F             PUSH     {R0-R4,LR}
    230          	uint16	LedBuf[LED_MAX] = {Led0,Led1,Led2,Led3,Led4,Led5,Led6,Led7};
   \   00000002   0x4668             MOV      R0,SP
   \   00000004   0x....             LDR.N    R1,??DataTable4_3
   \   00000006   0x2210             MOVS     R2,#+16
   \   00000008   0x.... 0x....      BL       __aeabi_memcpy4
    231          	uint8	i;					
    232              
    233          	for(i = 0; i< LED_MAX;i++)
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x0004             MOVS     R4,R0
   \                     ??InitLed_0: (+1)
   \   00000010   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000012   0x2C08             CMP      R4,#+8
   \   00000014   0xDA09             BGE.N    ??InitLed_1
    234          	{
    235          		GPIO_PinselConfig(LedBuf[i],0);	
   \   00000016   0x2100             MOVS     R1,#+0
   \   00000018   0x4668             MOV      R0,SP
   \   0000001A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001C   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   00000020   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000022   0x.... 0x....      BL       GPIO_PinselConfig
    236          	}
   \   00000026   0x1C64             ADDS     R4,R4,#+1
   \   00000028   0xE7F2             B.N      ??InitLed_0
    237          
    238          	for(i = 0;i < 2; i++)					
   \                     ??InitLed_1: (+1)
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x0004             MOVS     R4,R0
   \                     ??InitLed_2: (+1)
   \   0000002E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000030   0x2C02             CMP      R4,#+2
   \   00000032   0xDA0B             BGE.N    ??InitLed_3
    239          	{
    240          		OnAllLed();								
   \   00000034   0x.... 0x....      BL       OnAllLed
    241          	
    242          	    DelayX10ms(25);
   \   00000038   0x2019             MOVS     R0,#+25
   \   0000003A   0x.... 0x....      BL       DelayX10ms
    243          
    244          		OffAllLed();						
   \   0000003E   0x.... 0x....      BL       OffAllLed
    245          		
    246          		DelayX10ms(25);
   \   00000042   0x2019             MOVS     R0,#+25
   \   00000044   0x.... 0x....      BL       DelayX10ms
    247          	}
   \   00000048   0x1C64             ADDS     R4,R4,#+1
   \   0000004A   0xE7F0             B.N      ??InitLed_2
    248          
    249          	for(i = 0; i< LED_MAX;i++)
   \                     ??InitLed_3: (+1)
   \   0000004C   0x2000             MOVS     R0,#+0
   \   0000004E   0x0004             MOVS     R4,R0
   \                     ??InitLed_4: (+1)
   \   00000050   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000052   0x2C08             CMP      R4,#+8
   \   00000054   0xDA0C             BGE.N    ??InitLed_5
    250          	{
    251          		OnLed(i,100,10000,0);
   \   00000056   0x2300             MOVS     R3,#+0
   \   00000058   0xF242 0x7210      MOVW     R2,#+10000
   \   0000005C   0x2164             MOVS     R1,#+100
   \   0000005E   0x0020             MOVS     R0,R4
   \   00000060   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000062   0x.... 0x....      BL       OnLed
    252          		DelayX10ms(50);
   \   00000066   0x2032             MOVS     R0,#+50
   \   00000068   0x.... 0x....      BL       DelayX10ms
    253          	}
   \   0000006C   0x1C64             ADDS     R4,R4,#+1
   \   0000006E   0xE7EF             B.N      ??InitLed_4
    254          
    255          	OffAllLed();	
   \                     ??InitLed_5: (+1)
   \   00000070   0x.... 0x....      BL       OffAllLed
    256          }
   \   00000074   0xBD1F             POP      {R0-R4,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     sLed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x0072 0x006E      DC16 114, 110, 109, 108, 104, 117, 116, 115
   \              0x006D 0x006C
   \              0x0068 0x0075
   \              0x0074 0x0073

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x0072 0x006E      DC16 114, 110, 109, 108, 104, 117, 116, 115
   \              0x006D 0x006C
   \              0x0068 0x0075
   \              0x0074 0x0073

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x0072 0x006E      DC16 114, 110, 109, 108, 104, 117, 116, 115
   \              0x006D 0x006C
   \              0x0068 0x0075
   \              0x0074 0x0073

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   InitLed
        24   -> DelayX10ms
        24   -> GPIO_PinselConfig
        24   -> OffAllLed
        24   -> OnAllLed
        24   -> OnLed
        24   -> __aeabi_memcpy4
      24   LightLed
        24   -> GPIO_SetOrClearValue
        24   -> __aeabi_memcpy4
       8   OffAllLed
         8   -> OffLed
       8   OffLed
         8   -> UnLightLed
       8   OnAllLed
         8   -> OnLed
      24   OnLed
        24   -> FeedDog
        24   -> GetSysTime
        24   -> LightLed
      24   UnLightLed
        24   -> GPIO_SetOrClearValue
        24   -> __aeabi_memcpy4


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
      16  ?_0
      16  ?_1
      16  ?_2
       4  CurentTime
       1  HLAB_i
     118  InitLed
      42  LightLed
      26  OffAllLed
      98  OffLed
      34  OnAllLed
     212  OnLed
      42  UnLightLed
     192  sLed

 
   5 bytes in section .bss
 192 bytes in section .data
  48 bytes in section .rodata
 588 bytes in section .text
 
 588 bytes of CODE  memory
  48 bytes of CONST memory
 197 bytes of DATA  memory

Errors: none
Warnings: 4
