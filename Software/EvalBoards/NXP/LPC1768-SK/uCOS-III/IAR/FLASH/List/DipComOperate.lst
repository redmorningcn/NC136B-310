###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       26/Sep/2017  15:08:22
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC136B-310统计模块\Application\Library\MastConTask\DipComOperate.c
#    Command line =  
#        F:\iar\NC136B-310统计模块\Application\Library\MastConTask\DipComOperate.c
#        -lCN
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List
#        --diag_suppress Pa050 -o
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\csnr_package_deal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\tax\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\DipComOperate.lst
#    Object file  =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\DipComOperate.o
#
###############################################################################

F:\iar\NC136B-310统计模块\Application\Library\MastConTask\DipComOperate.c
      1          #include <includes.h>
      2          
      3          

   \                                 In section .bss, align 1
      4          uint8	l_led0com1flg = 0;
   \                     l_led0com1flg:
   \   00000000                      DS8 1
      5          

   \                                 In section .bss, align 4
      6          StrDipCommData	l_sDip1CommData,l_sDip2CommData;
   \                     l_sDip1CommData:
   \   00000000                      DS8 36

   \                                 In section .bss, align 4
   \                     l_sDip2CommData:
   \   00000000                      DS8 36
      7          
      8          /////////////////////////////////////////

   \                                 In section .text, align 2, keep-with-next
      9          unsigned int GetDipVal(void)
     10          {
     11          	unsigned int  dipval;
     12          	dipval = g_DipVal;
   \                     GetDipVal: (+1)
   \   00000000   0x.... 0x....      LDR.W    R1,??DataTable10
   \   00000004   0x6809             LDR      R1,[R1, #+0]
   \   00000006   0x0008             MOVS     R0,R1
     13          	return dipval;
   \   00000008   0x4770             BX       LR               ;; return
     14          }
     15          

   \                                 In section .text, align 2, keep-with-next
     16          short	GetAddSpeed(void)
     17          {
   \                     GetAddSpeed: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     18          	short addspeed;
     19          	if(GetMyAddSpeed1())
   \   00000002   0x.... 0x....      BL       GetMyAddSpeed1
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD007             BEQ.N    ??GetAddSpeed_0
     20          	{
     21          		if( GetMyAddSpeed1() )
   \   0000000A   0x.... 0x....      BL       GetMyAddSpeed1
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD00A             BEQ.N    ??GetAddSpeed_1
     22          		{
     23          			addspeed = GetMyAddSpeed1();
   \   00000012   0x.... 0x....      BL       GetMyAddSpeed1
   \   00000016   0x0004             MOVS     R4,R0
   \   00000018   0xE006             B.N      ??GetAddSpeed_1
     24          		}
     25          	}
     26          	else
     27          	{
     28          		if( GetMyAddSpeed2() )
   \                     ??GetAddSpeed_0: (+1)
   \   0000001A   0x.... 0x....      BL       GetMyAddSpeed2
   \   0000001E   0x2800             CMP      R0,#+0
   \   00000020   0xD002             BEQ.N    ??GetAddSpeed_1
     29          		{
     30          			addspeed = GetMyAddSpeed2();
   \   00000022   0x.... 0x....      BL       GetMyAddSpeed2
   \   00000026   0x0004             MOVS     R4,R0
     31          		}
     32          	}
     33          
     34          	while(abs(addspeed) > 0x10000 )
   \                     ??GetAddSpeed_1: (+1)
   \   00000028   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000002A   0x0020             MOVS     R0,R4
   \   0000002C   0x.... 0x....      BL       abs
   \   00000030   0xF1B0 0x1F01      CMP      R0,#+65537
   \   00000034   0xDB0A             BLT.N    ??GetAddSpeed_2
     35          	{
     36          		printfcom0("\r\n addspeed %d",addspeed);
   \   00000036   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000038   0x0021             MOVS     R1,R4
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable10_1
   \   0000003E   0x.... 0x....      BL       printfcom0
     37          		addspeed /=10;
   \   00000042   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000044   0x200A             MOVS     R0,#+10
   \   00000046   0xFB94 0xF4F0      SDIV     R4,R4,R0
   \   0000004A   0xE7ED             B.N      ??GetAddSpeed_1
     38          	}
     39          	return addspeed;
   \                     ??GetAddSpeed_2: (+1)
   \   0000004C   0x0020             MOVS     R0,R4
   \   0000004E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000050   0xBD10             POP      {R4,PC}          ;; return
     40          }
     41          

   \                                 In section .text, align 2, keep-with-next
     42          unsigned short GetSpeed(void)
     43          {
   \                     GetSpeed: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     44          	unsigned short speed;
     45          	
     46          	if(GetMySpeed1() && GetMySpeed2())
   \   00000002   0x.... 0x....      BL       GetMySpeed1
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD00E             BEQ.N    ??GetSpeed_0
   \   0000000A   0x.... 0x....      BL       GetMySpeed2
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD00A             BEQ.N    ??GetSpeed_0
     47          	{
     48          		speed = (GetMySpeed1()+GetMySpeed2())/2;
   \   00000012   0x.... 0x....      BL       GetMySpeed1
   \   00000016   0x0005             MOVS     R5,R0
   \   00000018   0x.... 0x....      BL       GetMySpeed2
   \   0000001C   0x1940             ADDS     R0,R0,R5
   \   0000001E   0x2102             MOVS     R1,#+2
   \   00000020   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000024   0x0004             MOVS     R4,R0
   \   00000026   0xE011             B.N      ??GetSpeed_1
     49          	}
     50          	else  if(GetMySpeed1() )
   \                     ??GetSpeed_0: (+1)
   \   00000028   0x.... 0x....      BL       GetMySpeed1
   \   0000002C   0x2800             CMP      R0,#+0
   \   0000002E   0xD003             BEQ.N    ??GetSpeed_2
     51          	{
     52          		speed = GetMySpeed1(); 	
   \   00000030   0x.... 0x....      BL       GetMySpeed1
   \   00000034   0x0004             MOVS     R4,R0
   \   00000036   0xE009             B.N      ??GetSpeed_1
     53          	}
     54          	else if(GetMySpeed2() )
   \                     ??GetSpeed_2: (+1)
   \   00000038   0x.... 0x....      BL       GetMySpeed2
   \   0000003C   0x2800             CMP      R0,#+0
   \   0000003E   0xD003             BEQ.N    ??GetSpeed_3
     55          	{
     56          		speed = GetMySpeed2(); 	
   \   00000040   0x.... 0x....      BL       GetMySpeed2
   \   00000044   0x0004             MOVS     R4,R0
   \   00000046   0xE001             B.N      ??GetSpeed_1
     57          	}
     58          	else
     59          	{
     60          		speed = 0;	
   \                     ??GetSpeed_3: (+1)
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x0004             MOVS     R4,R0
     61          	}
     62          	return	speed;
   \                     ??GetSpeed_1: (+1)
   \   0000004C   0x0020             MOVS     R0,R4
   \   0000004E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000050   0xBD32             POP      {R1,R4,R5,PC}    ;; return
     63          }
     64          
     65          //unsigned char GetLocoSta(void)
     66          //{
     67          //	unsigned char locosta;
     68          //	
     69          //	locosta = 1;
     70          //	return  locosta;
     71          //}
     72          
     73          //////////////////////////////////////////

   \                                 In section .text, align 2, keep-with-next
     74          uint8	GetFramRecEndFlgDip(void)
     75          {
   \                     GetFramRecEndFlgDip: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     76          	return GetCOM1EndFlg();
   \   00000002   0x.... 0x....      BL       GetCOM1EndFlg
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0xBD02             POP      {R1,PC}          ;; return
     77          }
     78          
     79          //清接收完成标志  南瑞

   \                                 In section .text, align 2, keep-with-next
     80          void	ClearFramRecEndFlgDip(void)
     81          {
   \                     ClearFramRecEndFlgDip: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     82          	ClearCOM1EndFlg();
   \   00000002   0x.... 0x....      BL       ClearCOM1EndFlg
     83          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
     84          

   \                                 In section .text, align 2, keep-with-next
     85          uint16	ReadRs485DataDip(uint8 *Buf)
     86          {
   \                     ReadRs485DataDip: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     87          	return	ReadCOM1(Buf,64);
   \   00000004   0x2140             MOVS     R1,#+64
   \   00000006   0x0020             MOVS     R0,R4
   \   00000008   0x.... 0x....      BL       ReadCOM1
   \   0000000C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000000E   0xBD10             POP      {R4,PC}          ;; return
     88          }
     89          
     90          

   \                                 In section .bss, align 1
     91          uint8	l_recaddrdip = 0;
   \                     l_recaddrdip:
   \   00000000                      DS8 1

   \                                 In section .text, align 2, keep-with-next
     92          unsigned char GetRecaddrDip()
     93          {
     94          	return	l_recaddrdip;
   \                     GetRecaddrDip: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable11
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x4770             BX       LR               ;; return
     95          }
     96          

   \                                 In section .bss, align 1
     97          unsigned char l_com1dip1Errflg = 0;
   \                     l_com1dip1Errflg:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     98          unsigned char l_com1dip2Errflg = 0;
   \                     l_com1dip2Errflg:
   \   00000000                      DS8 1
     99          

   \                                 In section .bss, align 1
    100          unsigned char l_com1SetModelflg = 0;
   \                     l_com1SetModelflg:
   \   00000000                      DS8 1
    101          
    102          

   \                                 In section .text, align 2, keep-with-next
    103          uint8	GetCom1Dip1ErrFlg(void)
    104          {
    105          	return	l_com1dip1Errflg;	
   \                     GetCom1Dip1ErrFlg: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable10_2
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x4770             BX       LR               ;; return
    106          }
    107          

   \                                 In section .text, align 2, keep-with-next
    108          uint8	GetCom1Dip2ErrFlg(void)
    109          {
    110          	return	l_com1dip2Errflg;	
   \                     GetCom1Dip2ErrFlg: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable11_1
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x4770             BX       LR               ;; return
    111          }
    112          

   \                                 In section .bss, align 1
    113          unsigned char l_recFlgdip = 0;
   \                     l_recFlgdip:
   \   00000000                      DS8 1

   \                                 In section .text, align 2, keep-with-next
    114          unsigned char GetRecFlgdip(void)
    115          {
    116          	return l_recFlgdip;
   \                     GetRecFlgdip: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x4770             BX       LR               ;; return
    117          }
    118          
    119          
    120          

   \                                 In section .text, align 2, keep-with-next
    121          void DipComOperate(unsigned char *buf,unsigned int Len)		
    122          {
   \                     DipComOperate: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB083             SUB      SP,SP,#+12
   \   00000006   0x0004             MOVS     R4,R0
   \   00000008   0x000D             MOVS     R5,R1
    123          	short			hig;
    124          	unsigned short 	den;
    125          	unsigned char	sta;
    126          	char			tmp;
    127          	static	unsigned int	dip1time,dip2time;
    128          
    129          	unsigned int   datalen = 0;
   \   0000000A   0x2600             MOVS     R6,#+0
    130          	
    131          //	memcpy((unsigned char *)&hig,&buf[datalen],sizeof(hig));
    132          	hig = buf[datalen]*256 + buf[datalen+1]; 
   \   0000000C   0x5D30             LDRB     R0,[R6, R4]
   \   0000000E   0xF44F 0x7180      MOV      R1,#+256
   \   00000012   0x1932             ADDS     R2,R6,R4
   \   00000014   0x7852             LDRB     R2,[R2, #+1]
   \   00000016   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   0000001A   0xF8AD 0x0004      STRH     R0,[SP, #+4]
    133          	datalen += sizeof(hig);
   \   0000001E   0x1CB6             ADDS     R6,R6,#+2
    134          
    135          //	memcpy((unsigned char *)&den,&buf[datalen],sizeof(den));
    136          	den = buf[datalen+1]*256 + buf[datalen]; 
   \   00000020   0x1930             ADDS     R0,R6,R4
   \   00000022   0x7840             LDRB     R0,[R0, #+1]
   \   00000024   0xF44F 0x7180      MOV      R1,#+256
   \   00000028   0x5D32             LDRB     R2,[R6, R4]
   \   0000002A   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   0000002E   0xF8AD 0x0002      STRH     R0,[SP, #+2]
    137          	datalen += sizeof(den);
   \   00000032   0x1CB6             ADDS     R6,R6,#+2
    138          
    139          	memcpy((unsigned char *)&sta,&buf[datalen],sizeof(sta));
   \   00000034   0x2701             MOVS     R7,#+1
   \   00000036   0xEB16 0x0804      ADDS     R8,R6,R4
   \   0000003A   0xF10D 0x0901      ADD      R9,SP,#+1
   \   0000003E   0x003A             MOVS     R2,R7
   \   00000040   0x4641             MOV      R1,R8
   \   00000042   0x4648             MOV      R0,R9
   \   00000044   0x.... 0x....      BL       __aeabi_memcpy
    140          	datalen += sizeof(sta);
   \   00000048   0x1C76             ADDS     R6,R6,#+1
    141          
    142            memcpy((unsigned char *)&tmp,&buf[datalen],sizeof(tmp));
   \   0000004A   0xF05F 0x0901      MOVS     R9,#+1
   \   0000004E   0xEB16 0x0A04      ADDS     R10,R6,R4
   \   00000052   0x46EB             MOV      R11,SP
   \   00000054   0x464A             MOV      R2,R9
   \   00000056   0x4651             MOV      R1,R10
   \   00000058   0x4658             MOV      R0,R11
   \   0000005A   0x.... 0x....      BL       __aeabi_memcpy
    143          	datalen += sizeof(tmp);		
   \   0000005E   0x1C76             ADDS     R6,R6,#+1
    144          	
    145          	if(GetRecaddrDip()==0xA1)
   \   00000060   0x.... 0x....      BL       GetRecaddrDip
   \   00000064   0x28A1             CMP      R0,#+161
   \   00000066   0xD125             BNE.N    ??DipComOperate_0
    146          	{
    147          		l_com1dip1Errflg = ~ERROR;
   \   00000068   0x20FF             MOVS     R0,#+255
   \   0000006A   0x.... 0x....      LDR.W    R1,??DataTable10_2
   \   0000006E   0x7008             STRB     R0,[R1, #+0]
    148          		l_Dip1Prs 		= hig;
   \   00000070   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   00000074   0x.... 0x....      LDR.W    R1,??DataTable10_3
   \   00000078   0x8008             STRH     R0,[R1, #+0]
    149          		l_dip1den 		= den;
   \   0000007A   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   0000007E   0x.... 0x....      LDR.W    R1,??DataTable10_4
   \   00000082   0x8008             STRH     R0,[R1, #+0]
    150          		l_Dip1ErrCod 	= sta;
   \   00000084   0xF89D 0x0001      LDRB     R0,[SP, #+1]
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable10_5
   \   0000008C   0x7008             STRB     R0,[R1, #+0]
    151          		l_Dip1Tmp		= tmp;
   \   0000008E   0xF99D 0x0000      LDRSB    R0,[SP, #+0]
   \   00000092   0x.... 0x....      LDR.W    R1,??DataTable10_6
   \   00000096   0x7008             STRB     R0,[R1, #+0]
    152          		dip1time  		= GetSysTime(); 
   \   00000098   0x.... 0x....      BL       GetSysTime
   \   0000009C   0x.... 0x....      LDR.W    R1,??DataTable10_7
   \   000000A0   0x6008             STR      R0,[R1, #+0]
    153          		
    154          		memcpy((uint8 *)&l_sDip1CommData,buf,sizeof(l_sDip1CommData));
   \   000000A2   0x2724             MOVS     R7,#+36
   \   000000A4   0x.... 0x....      LDR.W    R8,??DataTable10_8
   \   000000A8   0x003A             MOVS     R2,R7
   \   000000AA   0x0021             MOVS     R1,R4
   \   000000AC   0x4640             MOV      R0,R8
   \   000000AE   0x.... 0x....      BL       __aeabi_memcpy
    155          		//l_sDip1CommData
    156          
    157          //		if(l_Dip1ErrCod & 0x03 == 0x03)
    158          //		{
    159          //			l_Dip1Prs 
    160          //		}
    161          
    162          //		printfcom0("\r\n dip1 %d, %d, %d, %d,l_com1dip1Errflg %x",hig,den,sta,tmp,l_com1dip1Errflg);
    163          	}
   \   000000B2   0xE028             B.N      ??DipComOperate_1
    164          	else if(GetRecaddrDip()==0xA2)
   \                     ??DipComOperate_0: (+1)
   \   000000B4   0x.... 0x....      BL       GetRecaddrDip
   \   000000B8   0x28A2             CMP      R0,#+162
   \   000000BA   0xD124             BNE.N    ??DipComOperate_1
    165          	{	
    166          		l_com1dip2Errflg = ~ERROR;
   \   000000BC   0x20FF             MOVS     R0,#+255
   \   000000BE   0x.... 0x....      LDR.W    R1,??DataTable11_1
   \   000000C2   0x7008             STRB     R0,[R1, #+0]
    167          
    168          		l_Dip2Prs 		= hig;
   \   000000C4   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   000000C8   0x.... 0x....      LDR.W    R1,??DataTable10_9
   \   000000CC   0x8008             STRH     R0,[R1, #+0]
    169          		l_dip2den 		= den;
   \   000000CE   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   000000D2   0x.... 0x....      LDR.W    R1,??DataTable10_10
   \   000000D6   0x8008             STRH     R0,[R1, #+0]
    170          		l_Dip2ErrCod 	= sta;
   \   000000D8   0xF89D 0x0001      LDRB     R0,[SP, #+1]
   \   000000DC   0x.... 0x....      LDR.W    R1,??DataTable10_11
   \   000000E0   0x7008             STRB     R0,[R1, #+0]
    171          		l_Dip2Tmp			= tmp;
   \   000000E2   0xF99D 0x0000      LDRSB    R0,[SP, #+0]
   \   000000E6   0x.... 0x....      LDR.W    R1,??DataTable10_12
   \   000000EA   0x7008             STRB     R0,[R1, #+0]
    172          		dip2time  		= GetSysTime(); 
   \   000000EC   0x.... 0x....      BL       GetSysTime
   \   000000F0   0x.... 0x....      LDR.W    R1,??DataTable12
   \   000000F4   0x6008             STR      R0,[R1, #+0]
    173          		
    174          		memcpy((uint8 *)&l_sDip2CommData,buf,sizeof(l_sDip2CommData));
   \   000000F6   0x2724             MOVS     R7,#+36
   \   000000F8   0x.... 0x....      LDR.W    R8,??DataTable11_3
   \   000000FC   0x003A             MOVS     R2,R7
   \   000000FE   0x0021             MOVS     R1,R4
   \   00000100   0x4640             MOV      R0,R8
   \   00000102   0x.... 0x....      BL       __aeabi_memcpy
    175          
    176          //		printfcom0("\r\n dip2 %d, %d, %d, %d,l_com1dip2Errflg %x",hig,den,sta,tmp,l_com1dip2Errflg);
    177          	}
    178          
    179          	if((GetSysTime() - dip1time > 1000) )
   \                     ??DipComOperate_1: (+1)
   \   00000106   0x.... 0x....      BL       GetSysTime
   \   0000010A   0x.... 0x....      LDR.W    R1,??DataTable10_7
   \   0000010E   0x6809             LDR      R1,[R1, #+0]
   \   00000110   0x1A40             SUBS     R0,R0,R1
   \   00000112   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   00000116   0xD903             BLS.N    ??DipComOperate_2
    180          	{
    181          		l_com1dip1Errflg = ERROR;
   \   00000118   0x2000             MOVS     R0,#+0
   \   0000011A   0x.... 0x....      LDR.W    R1,??DataTable10_2
   \   0000011E   0x7008             STRB     R0,[R1, #+0]
    182          	}
    183          	if((GetSysTime() - dip2time > 1000) )
   \                     ??DipComOperate_2: (+1)
   \   00000120   0x.... 0x....      BL       GetSysTime
   \   00000124   0x.... 0x....      LDR.W    R1,??DataTable12
   \   00000128   0x6809             LDR      R1,[R1, #+0]
   \   0000012A   0x1A40             SUBS     R0,R0,R1
   \   0000012C   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   00000130   0xD903             BLS.N    ??DipComOperate_3
    184          	{
    185          		l_com1dip2Errflg = ERROR;
   \   00000132   0x2000             MOVS     R0,#+0
   \   00000134   0x.... 0x....      LDR.W    R1,??DataTable11_1
   \   00000138   0x7008             STRB     R0,[R1, #+0]
    186          	}
    187          }
   \                     ??DipComOperate_3: (+1)
   \   0000013A   0xE8BD 0x8FF7      POP      {R0-R2,R4-R11,PC}  ;; return

   \                                 In section .bss, align 4
   \                     ??dip1time:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??dip2time:
   \   00000000                      DS8 4
    188          
    189          
    190          
    191          #define		OIL_BOX_MODEL_ADDR				2000	//油箱模型地址	
    192          extern	stcModelComplex	l_sModel ;	;

   \                                 In section .text, align 2, keep-with-next
    193          void	StoreSetModelVal(stcModelComplex *comsModel,unsigned char nodeletnum)
    194          {
   \                     StoreSetModelVal: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB0B5             SUB      SP,SP,#+212
   \   00000006   0x0004             MOVS     R4,R0
   \   00000008   0x4688             MOV      R8,R1
    195          	uint32		i,j,z;
    196          	stcModel 	sModel;
    197          	uint16 		Crc16;
    198          	
    199          	printfcom0("\r\n打印调整前的模型,不动点为 %d",nodeletnum);
   \   0000000A   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000000E   0x4641             MOV      R1,R8
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable12_1
   \   00000014   0x.... 0x....      BL       printfcom0
    200          	for(i = 0 ;i < comsModel->PotNum;i++)
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x4681             MOV      R9,R0
   \                     ??StoreSetModelVal_0: (+1)
   \   0000001C   0xF8B4 0x0190      LDRH     R0,[R4, #+400]
   \   00000020   0x4581             CMP      R9,R0
   \   00000022   0xD20B             BCS.N    ??StoreSetModelVal_1
    201          	{
    202          	  printfcom0("\r\n 高度 %d,油量 %d",comsModel->sModPot[i].HigVal,comsModel->sModPot[i].DipVal);
   \   00000024   0xEB14 0x0089      ADDS     R0,R4,R9, LSL #+2
   \   00000028   0x8842             LDRH     R2,[R0, #+2]
   \   0000002A   0xF834 0x1029      LDRH     R1,[R4, R9, LSL #+2]
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   00000032   0x.... 0x....      BL       printfcom0
    203          	}
   \   00000036   0xF119 0x0901      ADDS     R9,R9,#+1
   \   0000003A   0xE7EF             B.N      ??StoreSetModelVal_0
    204          
    205          	for(i = 0;i < (comsModel->PotNum-1);i++)	
   \                     ??StoreSetModelVal_1: (+1)
   \   0000003C   0x2000             MOVS     R0,#+0
   \   0000003E   0x4681             MOV      R9,R0
   \                     ??StoreSetModelVal_2: (+1)
   \   00000040   0xF8B4 0x0190      LDRH     R0,[R4, #+400]
   \   00000044   0x1E40             SUBS     R0,R0,#+1
   \   00000046   0x4581             CMP      R9,R0
   \   00000048   0xF080 0x80CD      BCS.W    ??StoreSetModelVal_3
    206          	{
    207          		if(comsModel->sModPot[i].HigVal == comsModel->sModPot[i+1].HigVal)
   \   0000004C   0xF834 0x0029      LDRH     R0,[R4, R9, LSL #+2]
   \   00000050   0xEB14 0x0189      ADDS     R1,R4,R9, LSL #+2
   \   00000054   0x8889             LDRH     R1,[R1, #+4]
   \   00000056   0x4288             CMP      R0,R1
   \   00000058   0xD139             BNE.N    ??StoreSetModelVal_4
    208          		{
    209          			printfcom0("\r\n comsModel->sModPot[%d].HigVal %d == comsModel->sModPot[i+1].HigVal %d",
    210          			i,comsModel->sModPot[i].HigVal,comsModel->sModPot[i+1].HigVal);
   \   0000005A   0xEB14 0x0089      ADDS     R0,R4,R9, LSL #+2
   \   0000005E   0x8883             LDRH     R3,[R0, #+4]
   \   00000060   0xF834 0x2029      LDRH     R2,[R4, R9, LSL #+2]
   \   00000064   0x4649             MOV      R1,R9
   \   00000066   0x.... 0x....      LDR.W    R0,??DataTable12_3
   \   0000006A   0x.... 0x....      BL       printfcom0
    211          
    212          			z = i;
   \   0000006E   0x464E             MOV      R6,R9
    213          			if(nodeletnum == i)
   \   00000070   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000074   0x45C8             CMP      R8,R9
   \   00000076   0xD106             BNE.N    ??StoreSetModelVal_5
    214          			{				
    215          				z++;
   \   00000078   0x1C76             ADDS     R6,R6,#+1
    216          				printfcom0("\r\n z %d,i %d",z,i);
   \   0000007A   0x464A             MOV      R2,R9
   \   0000007C   0x0031             MOVS     R1,R6
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   00000082   0x.... 0x....      BL       printfcom0
    217          			}
    218          
    219          			for(j = z;j <(comsModel->PotNum-1);j++)
   \                     ??StoreSetModelVal_5: (+1)
   \   00000086   0x0037             MOVS     R7,R6
   \                     ??StoreSetModelVal_6: (+1)
   \   00000088   0xF8B4 0x0190      LDRH     R0,[R4, #+400]
   \   0000008C   0x1E40             SUBS     R0,R0,#+1
   \   0000008E   0x4287             CMP      R7,R0
   \   00000090   0xD20C             BCS.N    ??StoreSetModelVal_7
    220          			{		
    221          				comsModel->sModPot[j].HigVal = comsModel->sModPot[j+1].HigVal;
   \   00000092   0xEB14 0x0087      ADDS     R0,R4,R7, LSL #+2
   \   00000096   0x8880             LDRH     R0,[R0, #+4]
   \   00000098   0xF824 0x0027      STRH     R0,[R4, R7, LSL #+2]
    222          				comsModel->sModPot[j].DipVal = comsModel->sModPot[j+1].DipVal;				
   \   0000009C   0xEB14 0x0087      ADDS     R0,R4,R7, LSL #+2
   \   000000A0   0x88C0             LDRH     R0,[R0, #+6]
   \   000000A2   0xEB14 0x0187      ADDS     R1,R4,R7, LSL #+2
   \   000000A6   0x8048             STRH     R0,[R1, #+2]
    223          			} 	
   \   000000A8   0x1C7F             ADDS     R7,R7,#+1
   \   000000AA   0xE7ED             B.N      ??StoreSetModelVal_6
    224          
    225          			comsModel->PotNum = comsModel->PotNum -1;
   \                     ??StoreSetModelVal_7: (+1)
   \   000000AC   0xF8B4 0x0190      LDRH     R0,[R4, #+400]
   \   000000B0   0x1E40             SUBS     R0,R0,#+1
   \   000000B2   0xF8A4 0x0190      STRH     R0,[R4, #+400]
    226          
    227          			nodeletnum<i?nodeletnum:nodeletnum--;
   \   000000B6   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000000BA   0x45C8             CMP      R8,R9
   \   000000BC   0xD202             BCS.N    ??StoreSetModelVal_8
   \   000000BE   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000000C2   0xE08D             B.N      ??StoreSetModelVal_9
   \                     ??StoreSetModelVal_8: (+1)
   \   000000C4   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000000C8   0xF1B8 0x0801      SUBS     R8,R8,#+1
   \   000000CC   0xE088             B.N      ??StoreSetModelVal_9
    228          		}
    229          		else if(comsModel->sModPot[i].HigVal > comsModel->sModPot[i+1].HigVal)
   \                     ??StoreSetModelVal_4: (+1)
   \   000000CE   0xEB14 0x0089      ADDS     R0,R4,R9, LSL #+2
   \   000000D2   0x8880             LDRH     R0,[R0, #+4]
   \   000000D4   0xF834 0x1029      LDRH     R1,[R4, R9, LSL #+2]
   \   000000D8   0x4288             CMP      R0,R1
   \   000000DA   0xD239             BCS.N    ??StoreSetModelVal_10
    230          		{
    231          			printfcom0("\r\n comsModel->sModPot[%d].HigVal %d > comsModel->sModPot[i+1].HigVal %d",
    232          			i,comsModel->sModPot[i].HigVal,comsModel->sModPot[i+1].HigVal);
   \   000000DC   0xEB14 0x0089      ADDS     R0,R4,R9, LSL #+2
   \   000000E0   0x8883             LDRH     R3,[R0, #+4]
   \   000000E2   0xF834 0x2029      LDRH     R2,[R4, R9, LSL #+2]
   \   000000E6   0x4649             MOV      R1,R9
   \   000000E8   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   000000EC   0x.... 0x....      BL       printfcom0
    233          
    234          			z = i;
   \   000000F0   0x464E             MOV      R6,R9
    235          			if(nodeletnum == i)
   \   000000F2   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000000F6   0x45C8             CMP      R8,R9
   \   000000F8   0xD106             BNE.N    ??StoreSetModelVal_11
    236          			{			
    237          				z++;
   \   000000FA   0x1C76             ADDS     R6,R6,#+1
    238          				printfcom0("\r\n z %d,i %d",z,i);
   \   000000FC   0x464A             MOV      R2,R9
   \   000000FE   0x0031             MOVS     R1,R6
   \   00000100   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   00000104   0x.... 0x....      BL       printfcom0
    239          
    240          			}
    241          			for(j = z;j <(comsModel->PotNum-1);j++)
   \                     ??StoreSetModelVal_11: (+1)
   \   00000108   0x0037             MOVS     R7,R6
   \                     ??StoreSetModelVal_12: (+1)
   \   0000010A   0xF8B4 0x0190      LDRH     R0,[R4, #+400]
   \   0000010E   0x1E40             SUBS     R0,R0,#+1
   \   00000110   0x4287             CMP      R7,R0
   \   00000112   0xD20C             BCS.N    ??StoreSetModelVal_13
    242          			{		
    243          				comsModel->sModPot[j].HigVal = comsModel->sModPot[j+1].HigVal;
   \   00000114   0xEB14 0x0087      ADDS     R0,R4,R7, LSL #+2
   \   00000118   0x8880             LDRH     R0,[R0, #+4]
   \   0000011A   0xF824 0x0027      STRH     R0,[R4, R7, LSL #+2]
    244          				comsModel->sModPot[j].DipVal = comsModel->sModPot[j+1].DipVal;	
   \   0000011E   0xEB14 0x0087      ADDS     R0,R4,R7, LSL #+2
   \   00000122   0x88C0             LDRH     R0,[R0, #+6]
   \   00000124   0xEB14 0x0187      ADDS     R1,R4,R7, LSL #+2
   \   00000128   0x8048             STRH     R0,[R1, #+2]
    245          			}	
   \   0000012A   0x1C7F             ADDS     R7,R7,#+1
   \   0000012C   0xE7ED             B.N      ??StoreSetModelVal_12
    246          
    247          			comsModel->PotNum = comsModel->PotNum -1;
   \                     ??StoreSetModelVal_13: (+1)
   \   0000012E   0xF8B4 0x0190      LDRH     R0,[R4, #+400]
   \   00000132   0x1E40             SUBS     R0,R0,#+1
   \   00000134   0xF8A4 0x0190      STRH     R0,[R4, #+400]
    248          
    249          			nodeletnum<i?nodeletnum:nodeletnum--;			
   \   00000138   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000013C   0x45C8             CMP      R8,R9
   \   0000013E   0xD202             BCS.N    ??StoreSetModelVal_14
   \   00000140   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000144   0xE04C             B.N      ??StoreSetModelVal_9
   \                     ??StoreSetModelVal_14: (+1)
   \   00000146   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000014A   0xF1B8 0x0801      SUBS     R8,R8,#+1
   \   0000014E   0xE047             B.N      ??StoreSetModelVal_9
    250          		}
    251          		else if(comsModel->sModPot[i].HigVal < comsModel->sModPot[i+1].HigVal)
   \                     ??StoreSetModelVal_10: (+1)
   \   00000150   0xF834 0x0029      LDRH     R0,[R4, R9, LSL #+2]
   \   00000154   0xEB14 0x0189      ADDS     R1,R4,R9, LSL #+2
   \   00000158   0x8889             LDRH     R1,[R1, #+4]
   \   0000015A   0x4288             CMP      R0,R1
   \   0000015C   0xD240             BCS.N    ??StoreSetModelVal_9
    252          		{
    253          			if(comsModel->sModPot[i+1].HigVal - 50 < comsModel->sModPot[i].HigVal)	//单点变化最少为50L
   \   0000015E   0xEB14 0x0089      ADDS     R0,R4,R9, LSL #+2
   \   00000162   0x8880             LDRH     R0,[R0, #+4]
   \   00000164   0x3832             SUBS     R0,R0,#+50
   \   00000166   0xF834 0x1029      LDRH     R1,[R4, R9, LSL #+2]
   \   0000016A   0x4288             CMP      R0,R1
   \   0000016C   0xDA38             BGE.N    ??StoreSetModelVal_9
    254          			{
    255          				printfcom0("\r\n comsModel->sModPot[%d].HigVal %d < comsModel->sModPot[i+1].HigVal %d",
    256          				i,comsModel->sModPot[i].HigVal,comsModel->sModPot[i+1].HigVal);
   \   0000016E   0xEB14 0x0089      ADDS     R0,R4,R9, LSL #+2
   \   00000172   0x8883             LDRH     R3,[R0, #+4]
   \   00000174   0xF834 0x2029      LDRH     R2,[R4, R9, LSL #+2]
   \   00000178   0x4649             MOV      R1,R9
   \   0000017A   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   0000017E   0x.... 0x....      BL       printfcom0
    257          				z = i;
   \   00000182   0x464E             MOV      R6,R9
    258          				if(nodeletnum == i)
   \   00000184   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000188   0x45C8             CMP      R8,R9
   \   0000018A   0xD106             BNE.N    ??StoreSetModelVal_15
    259          				{
    260          					z++;
   \   0000018C   0x1C76             ADDS     R6,R6,#+1
    261          					printfcom0("\r\n z %d,i %d",z,i);
   \   0000018E   0x464A             MOV      R2,R9
   \   00000190   0x0031             MOVS     R1,R6
   \   00000192   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   00000196   0x.... 0x....      BL       printfcom0
    262          				}
    263          				for(j = z;j <(comsModel->PotNum-1);j++)
   \                     ??StoreSetModelVal_15: (+1)
   \   0000019A   0x0037             MOVS     R7,R6
   \                     ??StoreSetModelVal_16: (+1)
   \   0000019C   0xF8B4 0x0190      LDRH     R0,[R4, #+400]
   \   000001A0   0x1E40             SUBS     R0,R0,#+1
   \   000001A2   0x4287             CMP      R7,R0
   \   000001A4   0xD20C             BCS.N    ??StoreSetModelVal_17
    264          				{		
    265          					comsModel->sModPot[j].HigVal = comsModel->sModPot[j+1].HigVal;
   \   000001A6   0xEB14 0x0087      ADDS     R0,R4,R7, LSL #+2
   \   000001AA   0x8880             LDRH     R0,[R0, #+4]
   \   000001AC   0xF824 0x0027      STRH     R0,[R4, R7, LSL #+2]
    266          					comsModel->sModPot[j].DipVal = comsModel->sModPot[j+1].DipVal;
   \   000001B0   0xEB14 0x0087      ADDS     R0,R4,R7, LSL #+2
   \   000001B4   0x88C0             LDRH     R0,[R0, #+6]
   \   000001B6   0xEB14 0x0187      ADDS     R1,R4,R7, LSL #+2
   \   000001BA   0x8048             STRH     R0,[R1, #+2]
    267          				}  
   \   000001BC   0x1C7F             ADDS     R7,R7,#+1
   \   000001BE   0xE7ED             B.N      ??StoreSetModelVal_16
    268          				comsModel->PotNum = comsModel->PotNum -1;
   \                     ??StoreSetModelVal_17: (+1)
   \   000001C0   0xF8B4 0x0190      LDRH     R0,[R4, #+400]
   \   000001C4   0x1E40             SUBS     R0,R0,#+1
   \   000001C6   0xF8A4 0x0190      STRH     R0,[R4, #+400]
    269          
    270          				nodeletnum<i?nodeletnum:nodeletnum--;				
   \   000001CA   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000001CE   0x45C8             CMP      R8,R9
   \   000001D0   0xD202             BCS.N    ??StoreSetModelVal_18
   \   000001D2   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000001D6   0xE003             B.N      ??StoreSetModelVal_9
   \                     ??StoreSetModelVal_18: (+1)
   \   000001D8   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000001DC   0xF1B8 0x0801      SUBS     R8,R8,#+1
    271          			}
    272          		}
    273          	}
   \                     ??StoreSetModelVal_9: (+1)
   \   000001E0   0xF119 0x0901      ADDS     R9,R9,#+1
   \   000001E4   0xE72C             B.N      ??StoreSetModelVal_2
    274          
    275          
    276          	for(i = 0;i < (comsModel->PotNum-1);i++)	
   \                     ??StoreSetModelVal_3: (+1)
   \   000001E6   0x2000             MOVS     R0,#+0
   \   000001E8   0x4681             MOV      R9,R0
   \                     ??StoreSetModelVal_19: (+1)
   \   000001EA   0xF8B4 0x0190      LDRH     R0,[R4, #+400]
   \   000001EE   0x1E40             SUBS     R0,R0,#+1
   \   000001F0   0x4581             CMP      R9,R0
   \   000001F2   0xF080 0x80D4      BCS.W    ??StoreSetModelVal_20
    277          	{
    278          		if(comsModel->sModPot[i].DipVal == comsModel->sModPot[i+1].DipVal)
   \   000001F6   0xEB14 0x0089      ADDS     R0,R4,R9, LSL #+2
   \   000001FA   0x8840             LDRH     R0,[R0, #+2]
   \   000001FC   0xEB14 0x0189      ADDS     R1,R4,R9, LSL #+2
   \   00000200   0x88C9             LDRH     R1,[R1, #+6]
   \   00000202   0x4288             CMP      R0,R1
   \   00000204   0xD13A             BNE.N    ??StoreSetModelVal_21
    279          		{
    280             			printfcom0("\r\n comsModel->sModPot[%d].DipVal %d == comsModel->sModPot[i+1].DipVal %d",
    281          			i,comsModel->sModPot[i].DipVal,comsModel->sModPot[i+1].DipVal);
   \   00000206   0xEB14 0x0089      ADDS     R0,R4,R9, LSL #+2
   \   0000020A   0x88C3             LDRH     R3,[R0, #+6]
   \   0000020C   0xEB14 0x0089      ADDS     R0,R4,R9, LSL #+2
   \   00000210   0x8842             LDRH     R2,[R0, #+2]
   \   00000212   0x4649             MOV      R1,R9
   \   00000214   0x.... 0x....      LDR.W    R0,??DataTable12_7
   \   00000218   0x.... 0x....      BL       printfcom0
    282          			z = i;
   \   0000021C   0x464E             MOV      R6,R9
    283          			if(nodeletnum == i)
   \   0000021E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000222   0x45C8             CMP      R8,R9
   \   00000224   0xD106             BNE.N    ??StoreSetModelVal_22
    284          			{
    285          				z++;
   \   00000226   0x1C76             ADDS     R6,R6,#+1
    286          				printfcom0("\r\n z %d,i %d",z,i);
   \   00000228   0x464A             MOV      R2,R9
   \   0000022A   0x0031             MOVS     R1,R6
   \   0000022C   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   00000230   0x.... 0x....      BL       printfcom0
    287          			}
    288          			for(j = z;j <(comsModel->PotNum-1);j++)
   \                     ??StoreSetModelVal_22: (+1)
   \   00000234   0x0037             MOVS     R7,R6
   \                     ??StoreSetModelVal_23: (+1)
   \   00000236   0xF8B4 0x0190      LDRH     R0,[R4, #+400]
   \   0000023A   0x1E40             SUBS     R0,R0,#+1
   \   0000023C   0x4287             CMP      R7,R0
   \   0000023E   0xD20C             BCS.N    ??StoreSetModelVal_24
    289          			{		
    290          				comsModel->sModPot[j].HigVal = comsModel->sModPot[j+1].HigVal;
   \   00000240   0xEB14 0x0087      ADDS     R0,R4,R7, LSL #+2
   \   00000244   0x8880             LDRH     R0,[R0, #+4]
   \   00000246   0xF824 0x0027      STRH     R0,[R4, R7, LSL #+2]
    291          				comsModel->sModPot[j].DipVal = comsModel->sModPot[j+1].DipVal;
   \   0000024A   0xEB14 0x0087      ADDS     R0,R4,R7, LSL #+2
   \   0000024E   0x88C0             LDRH     R0,[R0, #+6]
   \   00000250   0xEB14 0x0187      ADDS     R1,R4,R7, LSL #+2
   \   00000254   0x8048             STRH     R0,[R1, #+2]
    292          			}  	
   \   00000256   0x1C7F             ADDS     R7,R7,#+1
   \   00000258   0xE7ED             B.N      ??StoreSetModelVal_23
    293          			comsModel->PotNum = comsModel->PotNum -1;
   \                     ??StoreSetModelVal_24: (+1)
   \   0000025A   0xF8B4 0x0190      LDRH     R0,[R4, #+400]
   \   0000025E   0x1E40             SUBS     R0,R0,#+1
   \   00000260   0xF8A4 0x0190      STRH     R0,[R4, #+400]
    294          
    295          			nodeletnum<i?nodeletnum:nodeletnum--;
   \   00000264   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000268   0x45C8             CMP      R8,R9
   \   0000026A   0xD202             BCS.N    ??StoreSetModelVal_25
   \   0000026C   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000270   0xE092             B.N      ??StoreSetModelVal_26
   \                     ??StoreSetModelVal_25: (+1)
   \   00000272   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000276   0xF1B8 0x0801      SUBS     R8,R8,#+1
   \   0000027A   0xE08D             B.N      ??StoreSetModelVal_26
    296          		}
    297          		else if(comsModel->sModPot[i].DipVal > comsModel->sModPot[i+1].DipVal)
   \                     ??StoreSetModelVal_21: (+1)
   \   0000027C   0xEB14 0x0089      ADDS     R0,R4,R9, LSL #+2
   \   00000280   0x88C0             LDRH     R0,[R0, #+6]
   \   00000282   0xEB14 0x0189      ADDS     R1,R4,R9, LSL #+2
   \   00000286   0x8849             LDRH     R1,[R1, #+2]
   \   00000288   0x4288             CMP      R0,R1
   \   0000028A   0xD23A             BCS.N    ??StoreSetModelVal_27
    298          		{
    299           			printfcom0("\r\n comsModel->sModPot[%d].DipVal %d == comsModel->sModPot[i+1].DipVal %d",
    300          			i,comsModel->sModPot[i].DipVal,comsModel->sModPot[i+1].DipVal);		
   \   0000028C   0xEB14 0x0089      ADDS     R0,R4,R9, LSL #+2
   \   00000290   0x88C3             LDRH     R3,[R0, #+6]
   \   00000292   0xEB14 0x0089      ADDS     R0,R4,R9, LSL #+2
   \   00000296   0x8842             LDRH     R2,[R0, #+2]
   \   00000298   0x4649             MOV      R1,R9
   \   0000029A   0x.... 0x....      LDR.W    R0,??DataTable12_7
   \   0000029E   0x.... 0x....      BL       printfcom0
    301          			z = i;
   \   000002A2   0x464E             MOV      R6,R9
    302          			if(nodeletnum == i)
   \   000002A4   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000002A8   0x45C8             CMP      R8,R9
   \   000002AA   0xD106             BNE.N    ??StoreSetModelVal_28
    303          			{
    304          				z++;
   \   000002AC   0x1C76             ADDS     R6,R6,#+1
    305          				printfcom0("\r\n z %d,i %d",z,i);
   \   000002AE   0x464A             MOV      R2,R9
   \   000002B0   0x0031             MOVS     R1,R6
   \   000002B2   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   000002B6   0x.... 0x....      BL       printfcom0
    306          			}
    307          			for(j = z;j <(comsModel->PotNum-1);j++)
   \                     ??StoreSetModelVal_28: (+1)
   \   000002BA   0x0037             MOVS     R7,R6
   \                     ??StoreSetModelVal_29: (+1)
   \   000002BC   0xF8B4 0x0190      LDRH     R0,[R4, #+400]
   \   000002C0   0x1E40             SUBS     R0,R0,#+1
   \   000002C2   0x4287             CMP      R7,R0
   \   000002C4   0xD20C             BCS.N    ??StoreSetModelVal_30
    308          			{		
    309          				comsModel->sModPot[j].HigVal = comsModel->sModPot[j+1].HigVal;
   \   000002C6   0xEB14 0x0087      ADDS     R0,R4,R7, LSL #+2
   \   000002CA   0x8880             LDRH     R0,[R0, #+4]
   \   000002CC   0xF824 0x0027      STRH     R0,[R4, R7, LSL #+2]
    310          				comsModel->sModPot[j].DipVal = comsModel->sModPot[j+1].DipVal;		
   \   000002D0   0xEB14 0x0087      ADDS     R0,R4,R7, LSL #+2
   \   000002D4   0x88C0             LDRH     R0,[R0, #+6]
   \   000002D6   0xEB14 0x0187      ADDS     R1,R4,R7, LSL #+2
   \   000002DA   0x8048             STRH     R0,[R1, #+2]
    311          			}
   \   000002DC   0x1C7F             ADDS     R7,R7,#+1
   \   000002DE   0xE7ED             B.N      ??StoreSetModelVal_29
    312          			comsModel->PotNum = comsModel->PotNum -1;	
   \                     ??StoreSetModelVal_30: (+1)
   \   000002E0   0xF8B4 0x0190      LDRH     R0,[R4, #+400]
   \   000002E4   0x1E40             SUBS     R0,R0,#+1
   \   000002E6   0xF8A4 0x0190      STRH     R0,[R4, #+400]
    313          
    314          			nodeletnum<i?nodeletnum:nodeletnum--;		
   \   000002EA   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000002EE   0x45C8             CMP      R8,R9
   \   000002F0   0xD202             BCS.N    ??StoreSetModelVal_31
   \   000002F2   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000002F6   0xE04F             B.N      ??StoreSetModelVal_26
   \                     ??StoreSetModelVal_31: (+1)
   \   000002F8   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000002FC   0xF1B8 0x0801      SUBS     R8,R8,#+1
   \   00000300   0xE04A             B.N      ??StoreSetModelVal_26
    315          		}
    316          		else if(comsModel->sModPot[i].DipVal < comsModel->sModPot[i+1].DipVal)
   \                     ??StoreSetModelVal_27: (+1)
   \   00000302   0xEB14 0x0089      ADDS     R0,R4,R9, LSL #+2
   \   00000306   0x8840             LDRH     R0,[R0, #+2]
   \   00000308   0xEB14 0x0189      ADDS     R1,R4,R9, LSL #+2
   \   0000030C   0x88C9             LDRH     R1,[R1, #+6]
   \   0000030E   0x4288             CMP      R0,R1
   \   00000310   0xD242             BCS.N    ??StoreSetModelVal_26
    317          		{
    318          			if(comsModel->sModPot[i+1].DipVal - 50 < comsModel->sModPot[i].DipVal)	//单点变化最少为50L
   \   00000312   0xEB14 0x0089      ADDS     R0,R4,R9, LSL #+2
   \   00000316   0x88C0             LDRH     R0,[R0, #+6]
   \   00000318   0x3832             SUBS     R0,R0,#+50
   \   0000031A   0xEB14 0x0189      ADDS     R1,R4,R9, LSL #+2
   \   0000031E   0x8849             LDRH     R1,[R1, #+2]
   \   00000320   0x4288             CMP      R0,R1
   \   00000322   0xDA39             BGE.N    ??StoreSetModelVal_26
    319          			{
    320          				printfcom0("\r\n comsModel->sModPot[%d].DipVal %d < comsModel->sModPot[i+1].DipVal %d",
    321          				i,comsModel->sModPot[i].DipVal,comsModel->sModPot[i+1].DipVal);
   \   00000324   0xEB14 0x0089      ADDS     R0,R4,R9, LSL #+2
   \   00000328   0x88C3             LDRH     R3,[R0, #+6]
   \   0000032A   0xEB14 0x0089      ADDS     R0,R4,R9, LSL #+2
   \   0000032E   0x8842             LDRH     R2,[R0, #+2]
   \   00000330   0x4649             MOV      R1,R9
   \   00000332   0x.... 0x....      LDR.W    R0,??DataTable12_8
   \   00000336   0x.... 0x....      BL       printfcom0
    322          			
    323          				z = i;
   \   0000033A   0x464E             MOV      R6,R9
    324          
    325          				if(nodeletnum == i)
   \   0000033C   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000340   0x45C8             CMP      R8,R9
   \   00000342   0xD106             BNE.N    ??StoreSetModelVal_32
    326          				{
    327          					z++;
   \   00000344   0x1C76             ADDS     R6,R6,#+1
    328          					printfcom0("\r\n z %d,i %d",z,i);
   \   00000346   0x464A             MOV      R2,R9
   \   00000348   0x0031             MOVS     R1,R6
   \   0000034A   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   0000034E   0x.... 0x....      BL       printfcom0
    329          				}
    330          
    331          				for(j = z;j <(comsModel->PotNum-1);j++)
   \                     ??StoreSetModelVal_32: (+1)
   \   00000352   0x0037             MOVS     R7,R6
   \                     ??StoreSetModelVal_33: (+1)
   \   00000354   0xF8B4 0x0190      LDRH     R0,[R4, #+400]
   \   00000358   0x1E40             SUBS     R0,R0,#+1
   \   0000035A   0x4287             CMP      R7,R0
   \   0000035C   0xD20C             BCS.N    ??StoreSetModelVal_34
    332          				{		
    333          					comsModel->sModPot[j].HigVal = comsModel->sModPot[j+1].HigVal;
   \   0000035E   0xEB14 0x0087      ADDS     R0,R4,R7, LSL #+2
   \   00000362   0x8880             LDRH     R0,[R0, #+4]
   \   00000364   0xF824 0x0027      STRH     R0,[R4, R7, LSL #+2]
    334          					comsModel->sModPot[j].DipVal = comsModel->sModPot[j+1].DipVal;
   \   00000368   0xEB14 0x0087      ADDS     R0,R4,R7, LSL #+2
   \   0000036C   0x88C0             LDRH     R0,[R0, #+6]
   \   0000036E   0xEB14 0x0187      ADDS     R1,R4,R7, LSL #+2
   \   00000372   0x8048             STRH     R0,[R1, #+2]
    335          				}	
   \   00000374   0x1C7F             ADDS     R7,R7,#+1
   \   00000376   0xE7ED             B.N      ??StoreSetModelVal_33
    336          				comsModel->PotNum = comsModel->PotNum -1;
   \                     ??StoreSetModelVal_34: (+1)
   \   00000378   0xF8B4 0x0190      LDRH     R0,[R4, #+400]
   \   0000037C   0x1E40             SUBS     R0,R0,#+1
   \   0000037E   0xF8A4 0x0190      STRH     R0,[R4, #+400]
    337          
    338          				nodeletnum<i?nodeletnum:nodeletnum--;				
   \   00000382   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000386   0x45C8             CMP      R8,R9
   \   00000388   0xD202             BCS.N    ??StoreSetModelVal_35
   \   0000038A   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000038E   0xE003             B.N      ??StoreSetModelVal_26
   \                     ??StoreSetModelVal_35: (+1)
   \   00000390   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000394   0xF1B8 0x0801      SUBS     R8,R8,#+1
    339          			}
    340          		}
    341          	}
   \                     ??StoreSetModelVal_26: (+1)
   \   00000398   0xF119 0x0901      ADDS     R9,R9,#+1
   \   0000039C   0xE725             B.N      ??StoreSetModelVal_19
    342          
    343          
    344          //	
    345          	sModel.ModelNum = comsModel->ModelNum;
   \                     ??StoreSetModelVal_20: (+1)
   \   0000039E   0xF894 0x0194      LDRB     R0,[R4, #+404]
   \   000003A2   0xF88D 0x00CC      STRB     R0,[SP, #+204]
    346          	if(comsModel->PotNum < 50)
   \   000003A6   0xF8B4 0x0190      LDRH     R0,[R4, #+400]
   \   000003AA   0x2832             CMP      R0,#+50
   \   000003AC   0xDA04             BGE.N    ??StoreSetModelVal_36
    347          	{
    348          		sModel.PotNum = comsModel->PotNum;
   \   000003AE   0xF8B4 0x0190      LDRH     R0,[R4, #+400]
   \   000003B2   0xF8AD 0x00C8      STRH     R0,[SP, #+200]
   \   000003B6   0xE002             B.N      ??StoreSetModelVal_37
    349          	}
    350          	else
    351          	{
    352          		sModel.PotNum = 50;
   \                     ??StoreSetModelVal_36: (+1)
   \   000003B8   0x2032             MOVS     R0,#+50
   \   000003BA   0xF8AD 0x00C8      STRH     R0,[SP, #+200]
    353          	}
    354          	sModel.StartHight = comsModel->StartHight;
   \                     ??StoreSetModelVal_37: (+1)
   \   000003BE   0xF8B4 0x0192      LDRH     R0,[R4, #+402]
   \   000003C2   0xF8AD 0x00CA      STRH     R0,[SP, #+202]
    355          
    356          	memcpy((uint8 *)sModel.sModPot,(uint8 *)comsModel->sModPot,sizeof(sModel.sModPot));
   \   000003C6   0xF05F 0x0AC8      MOVS     R10,#+200
   \   000003CA   0x46EB             MOV      R11,SP
   \   000003CC   0x4652             MOV      R2,R10
   \   000003CE   0x0021             MOVS     R1,R4
   \   000003D0   0x4658             MOV      R0,R11
   \   000003D2   0x.... 0x....      BL       __aeabi_memcpy
    357          	if(comsModel->PotNum > 50)
   \   000003D6   0xF8B4 0x0190      LDRH     R0,[R4, #+400]
   \   000003DA   0x2833             CMP      R0,#+51
   \   000003DC   0xDB0F             BLT.N    ??StoreSetModelVal_38
    358          	{
    359          		sModel.sModPot[49].DipVal = comsModel->sModPot[comsModel->PotNum  -1].DipVal;	
   \   000003DE   0xF8B4 0x0190      LDRH     R0,[R4, #+400]
   \   000003E2   0xEB14 0x0080      ADDS     R0,R4,R0, LSL #+2
   \   000003E6   0xF830 0x0C02      LDRH     R0,[R0, #-2]
   \   000003EA   0xF8AD 0x00C6      STRH     R0,[SP, #+198]
    360          		sModel.sModPot[49].HigVal = comsModel->sModPot[comsModel->PotNum  -1].HigVal;
   \   000003EE   0xF8B4 0x0190      LDRH     R0,[R4, #+400]
   \   000003F2   0xEB14 0x0080      ADDS     R0,R4,R0, LSL #+2
   \   000003F6   0xF830 0x0C04      LDRH     R0,[R0, #-4]
   \   000003FA   0xF8AD 0x00C4      STRH     R0,[SP, #+196]
    361          	}
    362          
    363          	Crc16 = GetCrc16Check((uint8 *)&sModel,sizeof(sModel) - 2);
   \                     ??StoreSetModelVal_38: (+1)
   \   000003FE   0x21CE             MOVS     R1,#+206
   \   00000400   0x4668             MOV      R0,SP
   \   00000402   0x.... 0x....      BL       GetCrc16Check
   \   00000406   0x0005             MOVS     R5,R0
    364          	
    365          	sModel.CrcCheck  	= Crc16;	
   \   00000408   0xF8AD 0x50CE      STRH     R5,[SP, #+206]
    366          
    367            	WriteFM24CL64(OIL_BOX_MODEL_ADDR,(uint8 *)&sModel, sizeof(sModel));
   \   0000040C   0x22D0             MOVS     R2,#+208
   \   0000040E   0x4669             MOV      R1,SP
   \   00000410   0xF44F 0x60FA      MOV      R0,#+2000
   \   00000414   0x.... 0x....      BL       WriteFM24CL64
    368          
    369          	printfcom0("\r\n打印调整后的模型,不动点为 %d,comsModel->PotNum %d",nodeletnum,comsModel->PotNum);
   \   00000418   0xF8B4 0x2190      LDRH     R2,[R4, #+400]
   \   0000041C   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000420   0x4641             MOV      R1,R8
   \   00000422   0x.... 0x....      LDR.W    R0,??DataTable12_9
   \   00000426   0x.... 0x....      BL       printfcom0
    370          	for(i = 0 ;i < comsModel->PotNum;i++)
   \   0000042A   0x2000             MOVS     R0,#+0
   \   0000042C   0x4681             MOV      R9,R0
   \                     ??StoreSetModelVal_39: (+1)
   \   0000042E   0xF8B4 0x0190      LDRH     R0,[R4, #+400]
   \   00000432   0x4581             CMP      R9,R0
   \   00000434   0xD20B             BCS.N    ??StoreSetModelVal_40
    371          	{
    372          	  printfcom0("\r\n 高度 %d,油量 %d",comsModel->sModPot[i].HigVal,comsModel->sModPot[i].DipVal);
   \   00000436   0xEB14 0x0089      ADDS     R0,R4,R9, LSL #+2
   \   0000043A   0x8842             LDRH     R2,[R0, #+2]
   \   0000043C   0xF834 0x1029      LDRH     R1,[R4, R9, LSL #+2]
   \   00000440   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   00000444   0x.... 0x....      BL       printfcom0
    373          	}
   \   00000448   0xF119 0x0901      ADDS     R9,R9,#+1
   \   0000044C   0xE7EF             B.N      ??StoreSetModelVal_39
    374          
    375          }
   \                     ??StoreSetModelVal_40: (+1)
   \   0000044E   0xB035             ADD      SP,SP,#+212
   \   00000450   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    376          
    377          extern	stcModelComplex	l_sModel;
    378          

   \                                 In section .bss, align 1
    379          uint8	l_setmodelflg = 0;
   \                     l_setmodelflg:
   \   00000000                      DS8 1

   \                                 In section .text, align 2, keep-with-next
    380          uint8	GetSetModelFlg(void)
    381          {
    382          	return	l_setmodelflg;
   \                     GetSetModelFlg: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x4770             BX       LR               ;; return
    383          }

   \                                 In section .text, align 2, keep-with-next
    384          void	DipModelSet	(unsigned char *buf,unsigned int Len)		
    385          {
   \                     DipModelSet: (+1)
   \   00000000   0xE92D 0x4FF2      PUSH     {R1,R4-R11,LR}
   \   00000004   0xB082             SUB      SP,SP,#+8
   \   00000006   0x0004             MOVS     R4,R0
    386          	short			hig;
    387          	unsigned short 	den;
    388          	unsigned short	valadd;
    389          	unsigned short	setnum;
    390          	static	unsigned short   firstmodelsetval = 0;
    391          	static	unsigned short   firstaddval = 0;
    392          	static	short	lsthig = 0;
    393          	static  short	lstval = 0;
    394          	uint32	i,j;
    395          	uint32	portnum;
    396          	static	char	addflg = 0;
    397          
    398          //	static	unsigned int	dip1time,dip2time;
    399          
    400          	unsigned int   datalen = 0;
   \   00000008   0xF05F 0x0B00      MOVS     R11,#+0
    401          		
    402          //	memcpy((unsigned char *)&hig,&buf[datalen],sizeof(hig));
    403          	hig = buf[datalen]*256 + buf[datalen+1]; 
   \   0000000C   0xF81B 0x0004      LDRB     R0,[R11, R4]
   \   00000010   0xF44F 0x7180      MOV      R1,#+256
   \   00000014   0xEB1B 0x0204      ADDS     R2,R11,R4
   \   00000018   0x7852             LDRB     R2,[R2, #+1]
   \   0000001A   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   0000001E   0x0005             MOVS     R5,R0
    404          	datalen += sizeof(hig);
   \   00000020   0xF11B 0x0B02      ADDS     R11,R11,#+2
    405          
    406          //	memcpy((unsigned char *)&den,&buf[datalen],sizeof(den));
    407          	den = buf[datalen]*256 + buf[datalen+1]; 
   \   00000024   0xF81B 0x0004      LDRB     R0,[R11, R4]
   \   00000028   0xF44F 0x7180      MOV      R1,#+256
   \   0000002C   0xEB1B 0x0204      ADDS     R2,R11,R4
   \   00000030   0x7852             LDRB     R2,[R2, #+1]
   \   00000032   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000036   0xF8AD 0x0004      STRH     R0,[SP, #+4]
    408          	datalen += sizeof(den);
   \   0000003A   0xF11B 0x0B02      ADDS     R11,R11,#+2
    409          
    410          //	memcpy((unsigned char *)&valadd,&buf[datalen],sizeof(valadd));
    411          	valadd = buf[datalen]*256 + buf[datalen+1]; 
   \   0000003E   0xF81B 0x0004      LDRB     R0,[R11, R4]
   \   00000042   0xF44F 0x7180      MOV      R1,#+256
   \   00000046   0xEB1B 0x0204      ADDS     R2,R11,R4
   \   0000004A   0x7852             LDRB     R2,[R2, #+1]
   \   0000004C   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000050   0x0006             MOVS     R6,R0
    412          	datalen += sizeof(valadd);
   \   00000052   0xF11B 0x0B02      ADDS     R11,R11,#+2
    413          
    414          //  memcpy((unsigned char *)&setnum,&buf[datalen],sizeof(setnum));
    415          	setnum = buf[datalen]*256 + buf[datalen+1]; 
   \   00000056   0xF81B 0x0004      LDRB     R0,[R11, R4]
   \   0000005A   0xF44F 0x7180      MOV      R1,#+256
   \   0000005E   0xEB1B 0x0204      ADDS     R2,R11,R4
   \   00000062   0x7852             LDRB     R2,[R2, #+1]
   \   00000064   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000068   0x0007             MOVS     R7,R0
    416          	datalen += sizeof(setnum);		
   \   0000006A   0xF11B 0x0B02      ADDS     R11,R11,#+2
    417          	
    418          	if(GetRecaddrDip()==0xA5)
   \   0000006E   0x.... 0x....      BL       GetRecaddrDip
   \   00000072   0x28A5             CMP      R0,#+165
   \   00000074   0xF040 0x828B      BNE.W    ??DipModelSet_0
    419          	{
    420          		l_setmodelflg = 1;
   \   00000078   0x2001             MOVS     R0,#+1
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable12_10
   \   0000007E   0x7008             STRB     R0,[R1, #+0]
    421          		printfcom0("\r\n Set %d, %d, %d, %d,l_com1dip1Errflg %x",hig,den,valadd,setnum);
   \   00000080   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000082   0x9700             STR      R7,[SP, #+0]
   \   00000084   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000086   0x0033             MOVS     R3,R6
   \   00000088   0xF8BD 0x2004      LDRH     R2,[SP, #+4]
   \   0000008C   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   0000008E   0x0029             MOVS     R1,R5
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable12_11
   \   00000094   0x.... 0x....      BL       printfcom0
    422          		
    423          		if(setnum == 0)
   \   00000098   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000009A   0x2F00             CMP      R7,#+0
   \   0000009C   0xF040 0x8113      BNE.W    ??DipModelSet_1
    424          		{
    425          			firstmodelsetval = 0;
   \   000000A0   0x2000             MOVS     R0,#+0
   \   000000A2   0x.... 0x....      LDR.W    R1,??DataTable12_12
   \   000000A6   0x8008             STRH     R0,[R1, #+0]
    426          			if(g_DipVal>valadd)
   \   000000A8   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000000AA   0x.... 0x....      LDR.W    R0,??DataTable10
   \   000000AE   0x6800             LDR      R0,[R0, #+0]
   \   000000B0   0x4286             CMP      R6,R0
   \   000000B2   0xD20A             BCS.N    ??DipModelSet_2
    427          			{
    428          				firstmodelsetval = g_DipVal-valadd;
   \   000000B4   0x.... 0x....      LDR.W    R0,??DataTable10
   \   000000B8   0x6800             LDR      R0,[R0, #+0]
   \   000000BA   0x1B80             SUBS     R0,R0,R6
   \   000000BC   0x.... 0x....      LDR.W    R1,??DataTable12_12
   \   000000C0   0x8008             STRH     R0,[R1, #+0]
    429          				firstaddval      = valadd;
   \   000000C2   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   000000C6   0x8006             STRH     R6,[R0, #+0]
   \   000000C8   0xE005             B.N      ??DipModelSet_3
    430          			}
    431          			else
    432          			{
    433          				firstmodelsetval = valadd;	
   \                     ??DipModelSet_2: (+1)
   \   000000CA   0x.... 0x....      LDR.W    R0,??DataTable12_12
   \   000000CE   0x8006             STRH     R6,[R0, #+0]
    434          				firstaddval      = valadd;
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   000000D4   0x8006             STRH     R6,[R0, #+0]
    435          			}
    436          			addflg = 0;
   \                     ??DipModelSet_3: (+1)
   \   000000D6   0x2000             MOVS     R0,#+0
   \   000000D8   0x.... 0x....      LDR.W    R1,??DataTable12_14
   \   000000DC   0x7008             STRB     R0,[R1, #+0]
    437          			DisplaySet(150,2,"SET_%d",setnum);
   \   000000DE   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000000E0   0x003B             MOVS     R3,R7
   \   000000E2   0x.... 0x....      LDR.W    R2,??DataTable12_15
   \   000000E6   0x2102             MOVS     R1,#+2
   \   000000E8   0x2096             MOVS     R0,#+150
   \   000000EA   0x.... 0x....      BL       DisplaySet
    438          		   	printfcom0("\r\n 校准零点校准");
   \   000000EE   0x.... 0x....      LDR.W    R0,??DataTable12_16
   \   000000F2   0x.... 0x....      BL       printfcom0
    439          			GetMathModelPara((stcModelComplex *)&l_sModel,0);		//模型参数	
   \   000000F6   0x2100             MOVS     R1,#+0
   \   000000F8   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   000000FC   0x.... 0x....      BL       GetMathModelPara
    440          			
    441          			portnum = l_sModel.PotNum;
   \   00000100   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   00000104   0xF8B0 0x0190      LDRH     R0,[R0, #+400]
   \   00000108   0x4682             MOV      R10,R0
    442          			
    443          			if(portnum > 199)
   \   0000010A   0xF1BA 0x0FC8      CMP      R10,#+200
   \   0000010E   0xD301             BCC.N    ??DipModelSet_4
    444          			{
    445          				portnum = 199;	
   \   00000110   0x20C7             MOVS     R0,#+199
   \   00000112   0x4682             MOV      R10,R0
    446          			}
    447          
    448          			printfcom0("\r\n portnum %d",portnum);
   \                     ??DipModelSet_4: (+1)
   \   00000114   0x4651             MOV      R1,R10
   \   00000116   0x.... 0x....      LDR.W    R0,??DataTable12_18
   \   0000011A   0x.... 0x....      BL       printfcom0
    449          			for(i = portnum;i>0;i--)
   \   0000011E   0x46D0             MOV      R8,R10
   \                     ??DipModelSet_5: (+1)
   \   00000120   0xF1B8 0x0F00      CMP      R8,#+0
   \   00000124   0xF000 0x822F      BEQ.W    ??DipModelSet_6
    450          			{
    451          				if(hig < l_sModel.sModPot[i-1].HigVal)
   \   00000128   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   0000012A   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   0000012E   0xEB10 0x0088      ADDS     R0,R0,R8, LSL #+2
   \   00000132   0xF830 0x0C04      LDRH     R0,[R0, #-4]
   \   00000136   0x4285             CMP      R5,R0
   \   00000138   0xDA49             BGE.N    ??DipModelSet_7
    452          				{
    453          					l_sModel.sModPot[i].HigVal =  l_sModel.sModPot[i-1].HigVal;
   \   0000013A   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   0000013E   0xEB10 0x0088      ADDS     R0,R0,R8, LSL #+2
   \   00000142   0xF830 0x0C04      LDRH     R0,[R0, #-4]
   \   00000146   0x.... 0x....      LDR.W    R1,??DataTable12_17
   \   0000014A   0xF821 0x0028      STRH     R0,[R1, R8, LSL #+2]
    454          					l_sModel.sModPot[i].DipVal =  l_sModel.sModPot[i-1].DipVal;
   \   0000014E   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   00000152   0xEB10 0x0088      ADDS     R0,R0,R8, LSL #+2
   \   00000156   0xF830 0x0C02      LDRH     R0,[R0, #-2]
   \   0000015A   0x.... 0x....      LDR.W    R1,??DataTable12_17
   \   0000015E   0xEB11 0x0188      ADDS     R1,R1,R8, LSL #+2
   \   00000162   0x8048             STRH     R0,[R1, #+2]
    455          
    456          					if(i == 1)
   \   00000164   0xF1B8 0x0F01      CMP      R8,#+1
   \   00000168   0xD11E             BNE.N    ??DipModelSet_8
    457          					{
    458          						l_sModel.sModPot[i-1].HigVal = hig;
   \   0000016A   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   0000016E   0xEB10 0x0088      ADDS     R0,R0,R8, LSL #+2
   \   00000172   0xF820 0x5C04      STRH     R5,[R0, #-4]
    459          						l_sModel.sModPot[i-1].DipVal = firstmodelsetval;
   \   00000176   0x.... 0x....      LDR.W    R0,??DataTable12_12
   \   0000017A   0x8800             LDRH     R0,[R0, #+0]
   \   0000017C   0x.... 0x....      LDR.W    R1,??DataTable12_17
   \   00000180   0xEB11 0x0188      ADDS     R1,R1,R8, LSL #+2
   \   00000184   0xF821 0x0C02      STRH     R0,[R1, #-2]
    460          						l_sModel.PotNum++;
   \   00000188   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   0000018C   0xF8B0 0x0190      LDRH     R0,[R0, #+400]
   \   00000190   0x1C40             ADDS     R0,R0,#+1
   \   00000192   0x.... 0x....      LDR.W    R1,??DataTable12_17
   \   00000196   0xF8A1 0x0190      STRH     R0,[R1, #+400]
    461          
    462          						StoreSetModelVal((stcModelComplex *)&l_sModel,i-1);
   \   0000019A   0x4640             MOV      R0,R8
   \   0000019C   0x1E41             SUBS     R1,R0,#+1
   \   0000019E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001A0   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   000001A4   0x.... 0x....      BL       StoreSetModelVal
    463          					}
    464          
    465          					//printfcom0("\r\n i-1 %d",i-1);
    466          
    467          					printfcom0("\r\n hig %d < l_sModel.sModPot[i-1].HigVal %d,l_sModel.PotNum %d",
    468          											hig,l_sModel.sModPot[i-1].HigVal,l_sModel.PotNum);
   \                     ??DipModelSet_8: (+1)
   \   000001A8   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   000001AC   0xF8B0 0x3190      LDRH     R3,[R0, #+400]
   \   000001B0   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   000001B4   0xEB10 0x0088      ADDS     R0,R0,R8, LSL #+2
   \   000001B8   0xF830 0x2C04      LDRH     R2,[R0, #-4]
   \   000001BC   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   000001BE   0x0029             MOVS     R1,R5
   \   000001C0   0x.... 0x....      LDR.W    R0,??DataTable12_19
   \   000001C4   0x.... 0x....      BL       printfcom0
    469          				}
   \   000001C8   0xF1B8 0x0801      SUBS     R8,R8,#+1
   \   000001CC   0xE7A8             B.N      ??DipModelSet_5
    470          				else if(hig == l_sModel.sModPot[i-1].HigVal)
   \                     ??DipModelSet_7: (+1)
   \   000001CE   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   000001D0   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   000001D4   0xEB10 0x0088      ADDS     R0,R0,R8, LSL #+2
   \   000001D8   0xF830 0x0C04      LDRH     R0,[R0, #-4]
   \   000001DC   0x4285             CMP      R5,R0
   \   000001DE   0xD141             BNE.N    ??DipModelSet_9
    471          				{
    472          					l_sModel.sModPot[i-1].DipVal = firstmodelsetval;
   \   000001E0   0x.... 0x....      LDR.W    R0,??DataTable12_12
   \   000001E4   0x8800             LDRH     R0,[R0, #+0]
   \   000001E6   0x.... 0x....      LDR.W    R1,??DataTable12_17
   \   000001EA   0xEB11 0x0188      ADDS     R1,R1,R8, LSL #+2
   \   000001EE   0xF821 0x0C02      STRH     R0,[R1, #-2]
    473          					for(j=i;j<portnum-1;j++)
   \   000001F2   0x46C1             MOV      R9,R8
   \                     ??DipModelSet_10: (+1)
   \   000001F4   0xF1BA 0x0001      SUBS     R0,R10,#+1
   \   000001F8   0x4581             CMP      R9,R0
   \   000001FA   0xD215             BCS.N    ??DipModelSet_11
    474          					{
    475          						l_sModel.sModPot[i].HigVal =  l_sModel.sModPot[i+1].HigVal;
   \   000001FC   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   00000200   0xEB10 0x0088      ADDS     R0,R0,R8, LSL #+2
   \   00000204   0x8880             LDRH     R0,[R0, #+4]
   \   00000206   0x.... 0x....      LDR.W    R1,??DataTable12_17
   \   0000020A   0xF821 0x0028      STRH     R0,[R1, R8, LSL #+2]
    476          						l_sModel.sModPot[i].DipVal =  l_sModel.sModPot[i+1].DipVal;
   \   0000020E   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   00000212   0xEB10 0x0088      ADDS     R0,R0,R8, LSL #+2
   \   00000216   0x88C0             LDRH     R0,[R0, #+6]
   \   00000218   0x.... 0x....      LDR.W    R1,??DataTable12_17
   \   0000021C   0xEB11 0x0188      ADDS     R1,R1,R8, LSL #+2
   \   00000220   0x8048             STRH     R0,[R1, #+2]
    477          					} 
   \   00000222   0xF119 0x0901      ADDS     R9,R9,#+1
   \   00000226   0xE7E5             B.N      ??DipModelSet_10
    478          
    479          					printfcom0("\r\n i-1 %d",i-1);
   \                     ??DipModelSet_11: (+1)
   \   00000228   0xF1B8 0x0101      SUBS     R1,R8,#+1
   \   0000022C   0x.... 0x....      LDR.W    R0,??DataTable12_20
   \   00000230   0x.... 0x....      BL       printfcom0
    480          
    481          					printfcom0("\r\n hig %d = l_sModel.sModPot[i-1].HigVal %d,l_sModel.PotNum %d",hig,l_sModel.sModPot[i-1].HigVal,l_sModel.PotNum);
   \   00000234   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   00000238   0xF8B0 0x3190      LDRH     R3,[R0, #+400]
   \   0000023C   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   00000240   0xEB10 0x0088      ADDS     R0,R0,R8, LSL #+2
   \   00000244   0xF830 0x2C04      LDRH     R2,[R0, #-4]
   \   00000248   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   0000024A   0x0029             MOVS     R1,R5
   \   0000024C   0x.... 0x....      LDR.W    R0,??DataTable12_21
   \   00000250   0x.... 0x....      BL       printfcom0
    482          
    483          					StoreSetModelVal((stcModelComplex *)&l_sModel,i-1);
   \   00000254   0x4640             MOV      R0,R8
   \   00000256   0x1E41             SUBS     R1,R0,#+1
   \   00000258   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000025A   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   0000025E   0x.... 0x....      BL       StoreSetModelVal
    484          					break;
   \   00000262   0xE190             B.N      ??DipModelSet_6
    485          				}
    486          				else
    487          				{
    488          					l_sModel.sModPot[i].HigVal =  hig;
   \                     ??DipModelSet_9: (+1)
   \   00000264   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   00000268   0xF820 0x5028      STRH     R5,[R0, R8, LSL #+2]
    489          					l_sModel.sModPot[i].DipVal =  firstmodelsetval;
   \   0000026C   0x.... 0x....      LDR.W    R0,??DataTable12_12
   \   00000270   0x8800             LDRH     R0,[R0, #+0]
   \   00000272   0x.... 0x....      LDR.W    R1,??DataTable12_17
   \   00000276   0xEB11 0x0188      ADDS     R1,R1,R8, LSL #+2
   \   0000027A   0x8048             STRH     R0,[R1, #+2]
    490          
    491          					l_sModel.PotNum ++;
   \   0000027C   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   00000280   0xF8B0 0x0190      LDRH     R0,[R0, #+400]
   \   00000284   0x1C40             ADDS     R0,R0,#+1
   \   00000286   0x.... 0x....      LDR.W    R1,??DataTable12_17
   \   0000028A   0xF8A1 0x0190      STRH     R0,[R1, #+400]
    492          					
    493          					printfcom0("\r\n i %d",i);
   \   0000028E   0x4641             MOV      R1,R8
   \   00000290   0x.... 0x....      LDR.W    R0,??DataTable12_22
   \   00000294   0x.... 0x....      BL       printfcom0
    494          
    495          					printfcom0("\r\n hig %d > l_sModel.sModPot[i-1].HigVal %d,l_sModel.PotNum %d",hig,l_sModel.sModPot[i-1].HigVal,l_sModel.PotNum);
   \   00000298   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   0000029C   0xF8B0 0x3190      LDRH     R3,[R0, #+400]
   \   000002A0   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   000002A4   0xEB10 0x0088      ADDS     R0,R0,R8, LSL #+2
   \   000002A8   0xF830 0x2C04      LDRH     R2,[R0, #-4]
   \   000002AC   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   000002AE   0x0029             MOVS     R1,R5
   \   000002B0   0x.... 0x....      LDR.W    R0,??DataTable12_23
   \   000002B4   0x.... 0x....      BL       printfcom0
    496          
    497          					StoreSetModelVal((stcModelComplex *)&l_sModel,i);
   \   000002B8   0x4641             MOV      R1,R8
   \   000002BA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002BC   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   000002C0   0x.... 0x....      BL       StoreSetModelVal
    498          					break;
   \   000002C4   0xE15F             B.N      ??DipModelSet_6
    499          				}
    500          			}
    501          		}
    502          		else  if(setnum != 0xffff)	   //非起点
   \                     ??DipModelSet_1: (+1)
   \   000002C6   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000002C8   0xF64F 0x70FF      MOVW     R0,#+65535
   \   000002CC   0x4287             CMP      R7,R0
   \   000002CE   0xF000 0x815A      BEQ.W    ??DipModelSet_6
    503          		{
    504          			DisplaySet(150,2,"SET_%d",setnum);
   \   000002D2   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000002D4   0x003B             MOVS     R3,R7
   \   000002D6   0x.... 0x....      LDR.W    R2,??DataTable12_15
   \   000002DA   0x2102             MOVS     R1,#+2
   \   000002DC   0x2096             MOVS     R0,#+150
   \   000002DE   0x.... 0x....      BL       DisplaySet
    505          
    506          			GetMathModelPara((stcModelComplex *)&l_sModel,0);		//模型参数	
   \   000002E2   0x2100             MOVS     R1,#+0
   \   000002E4   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   000002E8   0x.... 0x....      BL       GetMathModelPara
    507          			
    508          			portnum = l_sModel.PotNum;
   \   000002EC   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   000002F0   0xF8B0 0x0190      LDRH     R0,[R0, #+400]
   \   000002F4   0x4682             MOV      R10,R0
    509          			
    510          			if(portnum > 199)
   \   000002F6   0xF1BA 0x0FC8      CMP      R10,#+200
   \   000002FA   0xD301             BCC.N    ??DipModelSet_12
    511          			{
    512          				portnum = 199;	
   \   000002FC   0x20C7             MOVS     R0,#+199
   \   000002FE   0x4682             MOV      R10,R0
    513          			}
    514          			
    515          			if(abs(valadd-lstval)<50 ||abs(hig-lsthig)<50)
   \                     ??DipModelSet_12: (+1)
   \   00000300   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000302   0x.... 0x....      LDR.W    R0,??DataTable12_24
   \   00000306   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000030A   0x1A30             SUBS     R0,R6,R0
   \   0000030C   0x.... 0x....      BL       abs
   \   00000310   0x2832             CMP      R0,#+50
   \   00000312   0xDB09             BLT.N    ??DipModelSet_13
   \   00000314   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   00000316   0x.... 0x....      LDR.W    R0,??DataTable12_25
   \   0000031A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000031E   0x1A28             SUBS     R0,R5,R0
   \   00000320   0x.... 0x....      BL       abs
   \   00000324   0x2832             CMP      R0,#+50
   \   00000326   0xDA11             BGE.N    ??DipModelSet_14
    516          			{
    517          				printfcom0("\r\n 增量过小 valadd %d,lstval %d,hig %d,lsthig %d",valadd,lstval,hig,lsthig);
   \                     ??DipModelSet_13: (+1)
   \   00000328   0x.... 0x....      LDR.W    R0,??DataTable12_25
   \   0000032C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000330   0x9000             STR      R0,[SP, #+0]
   \   00000332   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   00000334   0x002B             MOVS     R3,R5
   \   00000336   0x.... 0x....      LDR.W    R0,??DataTable12_24
   \   0000033A   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   0000033E   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000340   0x0031             MOVS     R1,R6
   \   00000342   0x.... 0x....      LDR.W    R0,??DataTable12_26
   \   00000346   0x.... 0x....      BL       printfcom0
    518          				return;
   \   0000034A   0xE120             B.N      ??DipModelSet_15
    519          			}
    520          
    521          			printfcom0("\r\n portnum %d",portnum);
   \                     ??DipModelSet_14: (+1)
   \   0000034C   0x4651             MOV      R1,R10
   \   0000034E   0x.... 0x....      LDR.W    R0,??DataTable12_18
   \   00000352   0x.... 0x....      BL       printfcom0
    522          			for(i = portnum;i>0;i--)
   \   00000356   0x46D0             MOV      R8,R10
   \                     ??DipModelSet_16: (+1)
   \   00000358   0xF1B8 0x0F00      CMP      R8,#+0
   \   0000035C   0xF000 0x8113      BEQ.W    ??DipModelSet_6
    523          			{
    524          				if(hig < l_sModel.sModPot[i-1].HigVal)
   \   00000360   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   00000362   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   00000366   0xEB10 0x0088      ADDS     R0,R0,R8, LSL #+2
   \   0000036A   0xF830 0x0C04      LDRH     R0,[R0, #-4]
   \   0000036E   0x4285             CMP      R5,R0
   \   00000370   0xDA65             BGE.N    ??DipModelSet_17
    525          				{
    526          					l_sModel.sModPot[i].HigVal =  l_sModel.sModPot[i-1].HigVal;
   \   00000372   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   00000376   0xEB10 0x0088      ADDS     R0,R0,R8, LSL #+2
   \   0000037A   0xF830 0x0C04      LDRH     R0,[R0, #-4]
   \   0000037E   0x.... 0x....      LDR.W    R1,??DataTable12_17
   \   00000382   0xF821 0x0028      STRH     R0,[R1, R8, LSL #+2]
    527          					l_sModel.sModPot[i].DipVal =  l_sModel.sModPot[i-1].DipVal;
   \   00000386   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   0000038A   0xEB10 0x0088      ADDS     R0,R0,R8, LSL #+2
   \   0000038E   0xF830 0x0C02      LDRH     R0,[R0, #-2]
   \   00000392   0x.... 0x....      LDR.W    R1,??DataTable12_17
   \   00000396   0xEB11 0x0188      ADDS     R1,R1,R8, LSL #+2
   \   0000039A   0x8048             STRH     R0,[R1, #+2]
    528          					
    529          					if(i == 1)
   \   0000039C   0xF1B8 0x0F01      CMP      R8,#+1
   \   000003A0   0xD13A             BNE.N    ??DipModelSet_18
    530          					{
    531          						l_sModel.sModPot[i-1].HigVal = hig;
   \   000003A2   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   000003A6   0xEB10 0x0088      ADDS     R0,R0,R8, LSL #+2
   \   000003AA   0xF820 0x5C04      STRH     R5,[R0, #-4]
    532          						if(hig > lsthig)
   \   000003AE   0x.... 0x....      LDR.W    R0,??DataTable12_25
   \   000003B2   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000003B6   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   000003B8   0x42A8             CMP      R0,R5
   \   000003BA   0xDA12             BGE.N    ??DipModelSet_19
    533          						{
    534          							l_sModel.sModPot[i-1].DipVal = firstmodelsetval + (valadd - firstaddval);
   \   000003BC   0x.... 0x....      LDR.W    R0,??DataTable12_12
   \   000003C0   0x8800             LDRH     R0,[R0, #+0]
   \   000003C2   0x1830             ADDS     R0,R6,R0
   \   000003C4   0x.... 0x....      LDR.W    R1,??DataTable12_13
   \   000003C8   0x8809             LDRH     R1,[R1, #+0]
   \   000003CA   0x1A40             SUBS     R0,R0,R1
   \   000003CC   0x.... 0x....      LDR.W    R1,??DataTable12_17
   \   000003D0   0xEB11 0x0188      ADDS     R1,R1,R8, LSL #+2
   \   000003D4   0xF821 0x0C02      STRH     R0,[R1, #-2]
    535          							printfcom0("\r\n 上油校准");
   \   000003D8   0x.... 0x....      LDR.W    R0,??DataTable12_27
   \   000003DC   0x.... 0x....      BL       printfcom0
   \   000003E0   0xE011             B.N      ??DipModelSet_20
    536          						}
    537          						else
    538          						{
    539          							l_sModel.sModPot[i-1].DipVal = firstmodelsetval - (valadd - firstaddval);
   \                     ??DipModelSet_19: (+1)
   \   000003E2   0x.... 0x....      LDR.W    R0,??DataTable12_12
   \   000003E6   0x8800             LDRH     R0,[R0, #+0]
   \   000003E8   0x1B80             SUBS     R0,R0,R6
   \   000003EA   0x.... 0x....      LDR.W    R1,??DataTable12_13
   \   000003EE   0x8809             LDRH     R1,[R1, #+0]
   \   000003F0   0x1808             ADDS     R0,R1,R0
   \   000003F2   0x.... 0x....      LDR.W    R1,??DataTable12_17
   \   000003F6   0xEB11 0x0188      ADDS     R1,R1,R8, LSL #+2
   \   000003FA   0xF821 0x0C02      STRH     R0,[R1, #-2]
    540          							printfcom0("\r\n 卸油校准");
   \   000003FE   0x.... 0x....      LDR.W    R0,??DataTable12_28
   \   00000402   0x.... 0x....      BL       printfcom0
    541          						}
    542          						l_sModel.PotNum ++;
   \                     ??DipModelSet_20: (+1)
   \   00000406   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   0000040A   0xF8B0 0x0190      LDRH     R0,[R0, #+400]
   \   0000040E   0x1C40             ADDS     R0,R0,#+1
   \   00000410   0x.... 0x....      LDR.W    R1,??DataTable12_17
   \   00000414   0xF8A1 0x0190      STRH     R0,[R1, #+400]
    543          					}
    544          
    545          					printfcom0("\r\n hig %d > l_sModel.sModPot[i-1].HigVal %d,l_sModel.PotNum %d",hig,l_sModel.sModPot[i-1].HigVal,l_sModel.PotNum);
   \                     ??DipModelSet_18: (+1)
   \   00000418   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   0000041C   0xF8B0 0x3190      LDRH     R3,[R0, #+400]
   \   00000420   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   00000424   0xEB10 0x0088      ADDS     R0,R0,R8, LSL #+2
   \   00000428   0xF830 0x2C04      LDRH     R2,[R0, #-4]
   \   0000042C   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   0000042E   0x0029             MOVS     R1,R5
   \   00000430   0x.... 0x....      LDR.W    R0,??DataTable12_23
   \   00000434   0x.... 0x....      BL       printfcom0
    546          
    547          				}
   \   00000438   0xF1B8 0x0801      SUBS     R8,R8,#+1
   \   0000043C   0xE78C             B.N      ??DipModelSet_16
    548          				else if(hig == l_sModel.sModPot[i-1].HigVal)
   \                     ??DipModelSet_17: (+1)
   \   0000043E   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   00000440   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   00000444   0xEB10 0x0088      ADDS     R0,R0,R8, LSL #+2
   \   00000448   0xF830 0x0C04      LDRH     R0,[R0, #-4]
   \   0000044C   0x4285             CMP      R5,R0
   \   0000044E   0xD15D             BNE.N    ??DipModelSet_21
    549          				{
    550          					if(hig > lsthig)
   \   00000450   0x.... 0x....      LDR.W    R0,??DataTable12_25
   \   00000454   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000458   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   0000045A   0x42A8             CMP      R0,R5
   \   0000045C   0xDA12             BGE.N    ??DipModelSet_22
    551          					{
    552          						l_sModel.sModPot[i-1].DipVal = firstmodelsetval + (valadd - firstaddval);
   \   0000045E   0x.... 0x....      LDR.W    R0,??DataTable12_12
   \   00000462   0x8800             LDRH     R0,[R0, #+0]
   \   00000464   0x1830             ADDS     R0,R6,R0
   \   00000466   0x.... 0x....      LDR.W    R1,??DataTable12_13
   \   0000046A   0x8809             LDRH     R1,[R1, #+0]
   \   0000046C   0x1A40             SUBS     R0,R0,R1
   \   0000046E   0x.... 0x....      LDR.W    R1,??DataTable12_17
   \   00000472   0xEB11 0x0188      ADDS     R1,R1,R8, LSL #+2
   \   00000476   0xF821 0x0C02      STRH     R0,[R1, #-2]
    553          						printfcom0("\r\n 上油校准");
   \   0000047A   0x.... 0x....      LDR.W    R0,??DataTable12_27
   \   0000047E   0x.... 0x....      BL       printfcom0
   \   00000482   0xE011             B.N      ??DipModelSet_23
    554          					}
    555          					else
    556          					{
    557          						l_sModel.sModPot[i-1].DipVal = firstmodelsetval - (valadd - firstaddval);
   \                     ??DipModelSet_22: (+1)
   \   00000484   0x.... 0x....      LDR.W    R0,??DataTable12_12
   \   00000488   0x8800             LDRH     R0,[R0, #+0]
   \   0000048A   0x1B80             SUBS     R0,R0,R6
   \   0000048C   0x.... 0x....      LDR.W    R1,??DataTable12_13
   \   00000490   0x8809             LDRH     R1,[R1, #+0]
   \   00000492   0x1808             ADDS     R0,R1,R0
   \   00000494   0x.... 0x....      LDR.W    R1,??DataTable12_17
   \   00000498   0xEB11 0x0188      ADDS     R1,R1,R8, LSL #+2
   \   0000049C   0xF821 0x0C02      STRH     R0,[R1, #-2]
    558          						printfcom0("\r\n 卸油校准");
   \   000004A0   0x.... 0x....      LDR.W    R0,??DataTable12_28
   \   000004A4   0x.... 0x....      BL       printfcom0
    559          					}
    560          
    561          					for(j=i;j<portnum-1;j++)
   \                     ??DipModelSet_23: (+1)
   \   000004A8   0x46C1             MOV      R9,R8
   \                     ??DipModelSet_24: (+1)
   \   000004AA   0xF1BA 0x0001      SUBS     R0,R10,#+1
   \   000004AE   0x4581             CMP      R9,R0
   \   000004B0   0xD215             BCS.N    ??DipModelSet_25
    562          					{
    563          						l_sModel.sModPot[i].HigVal =  l_sModel.sModPot[i+1].HigVal;
   \   000004B2   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   000004B6   0xEB10 0x0088      ADDS     R0,R0,R8, LSL #+2
   \   000004BA   0x8880             LDRH     R0,[R0, #+4]
   \   000004BC   0x.... 0x....      LDR.W    R1,??DataTable12_17
   \   000004C0   0xF821 0x0028      STRH     R0,[R1, R8, LSL #+2]
    564          						l_sModel.sModPot[i].DipVal =  l_sModel.sModPot[i+1].DipVal;
   \   000004C4   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   000004C8   0xEB10 0x0088      ADDS     R0,R0,R8, LSL #+2
   \   000004CC   0x88C0             LDRH     R0,[R0, #+6]
   \   000004CE   0x.... 0x....      LDR.W    R1,??DataTable12_17
   \   000004D2   0xEB11 0x0188      ADDS     R1,R1,R8, LSL #+2
   \   000004D6   0x8048             STRH     R0,[R1, #+2]
    565          					} 
   \   000004D8   0xF119 0x0901      ADDS     R9,R9,#+1
   \   000004DC   0xE7E5             B.N      ??DipModelSet_24
    566          
    567          					printfcom0("\r\n hig %d = l_sModel.sModPot[i-1].HigVal %d,l_sModel.PotNum %d",hig,l_sModel.sModPot[i-1].HigVal,l_sModel.PotNum);
   \                     ??DipModelSet_25: (+1)
   \   000004DE   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   000004E2   0xF8B0 0x3190      LDRH     R3,[R0, #+400]
   \   000004E6   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   000004EA   0xEB10 0x0088      ADDS     R0,R0,R8, LSL #+2
   \   000004EE   0xF830 0x2C04      LDRH     R2,[R0, #-4]
   \   000004F2   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   000004F4   0x0029             MOVS     R1,R5
   \   000004F6   0x.... 0x....      LDR.W    R0,??DataTable12_21
   \   000004FA   0x.... 0x....      BL       printfcom0
    568          
    569          					StoreSetModelVal((stcModelComplex *)&l_sModel,i-1);
   \   000004FE   0x4640             MOV      R0,R8
   \   00000500   0x1E41             SUBS     R1,R0,#+1
   \   00000502   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000504   0x....             LDR.N    R0,??DataTable12_17
   \   00000506   0x.... 0x....      BL       StoreSetModelVal
    570          					break;
   \   0000050A   0xE03C             B.N      ??DipModelSet_6
    571          				}
    572          				else
    573          				{
    574          
    575          					l_sModel.sModPot[i].HigVal =  hig;
   \                     ??DipModelSet_21: (+1)
   \   0000050C   0x....             LDR.N    R0,??DataTable12_17
   \   0000050E   0xF820 0x5028      STRH     R5,[R0, R8, LSL #+2]
    576          					if(hig > lsthig)
   \   00000512   0x....             LDR.N    R0,??DataTable12_25
   \   00000514   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000518   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   0000051A   0x42A8             CMP      R0,R5
   \   0000051C   0xDA0D             BGE.N    ??DipModelSet_26
    577          					{
    578          						l_sModel.sModPot[i].DipVal = firstmodelsetval + (valadd - firstaddval);
   \   0000051E   0x....             LDR.N    R0,??DataTable12_12
   \   00000520   0x8800             LDRH     R0,[R0, #+0]
   \   00000522   0x1830             ADDS     R0,R6,R0
   \   00000524   0x....             LDR.N    R1,??DataTable12_13
   \   00000526   0x8809             LDRH     R1,[R1, #+0]
   \   00000528   0x1A40             SUBS     R0,R0,R1
   \   0000052A   0x....             LDR.N    R1,??DataTable12_17
   \   0000052C   0xEB11 0x0188      ADDS     R1,R1,R8, LSL #+2
   \   00000530   0x8048             STRH     R0,[R1, #+2]
    579          						printfcom0("\r\n 上油校准");
   \   00000532   0x....             LDR.N    R0,??DataTable12_27
   \   00000534   0x.... 0x....      BL       printfcom0
   \   00000538   0xE00C             B.N      ??DipModelSet_27
    580          					}
    581          					else
    582          					{
    583          						l_sModel.sModPot[i].DipVal = firstmodelsetval - (valadd - firstaddval);
   \                     ??DipModelSet_26: (+1)
   \   0000053A   0x....             LDR.N    R0,??DataTable12_12
   \   0000053C   0x8800             LDRH     R0,[R0, #+0]
   \   0000053E   0x1B80             SUBS     R0,R0,R6
   \   00000540   0x....             LDR.N    R1,??DataTable12_13
   \   00000542   0x8809             LDRH     R1,[R1, #+0]
   \   00000544   0x1808             ADDS     R0,R1,R0
   \   00000546   0x....             LDR.N    R1,??DataTable12_17
   \   00000548   0xEB11 0x0188      ADDS     R1,R1,R8, LSL #+2
   \   0000054C   0x8048             STRH     R0,[R1, #+2]
    584          						printfcom0("\r\n 卸油校准");
   \   0000054E   0x....             LDR.N    R0,??DataTable12_28
   \   00000550   0x.... 0x....      BL       printfcom0
    585          					}
    586          
    587          					l_sModel.PotNum ++;
   \                     ??DipModelSet_27: (+1)
   \   00000554   0x....             LDR.N    R0,??DataTable12_17
   \   00000556   0xF8B0 0x0190      LDRH     R0,[R0, #+400]
   \   0000055A   0x1C40             ADDS     R0,R0,#+1
   \   0000055C   0x....             LDR.N    R1,??DataTable12_17
   \   0000055E   0xF8A1 0x0190      STRH     R0,[R1, #+400]
    588          
    589          					printfcom0("\r\n hig %d < l_sModel.sModPot[i-1].HigVal %d,l_sModel.PotNum %d",hig,l_sModel.sModPot[i-1].HigVal,l_sModel.PotNum);
   \   00000562   0x....             LDR.N    R0,??DataTable12_17
   \   00000564   0xF8B0 0x3190      LDRH     R3,[R0, #+400]
   \   00000568   0x....             LDR.N    R0,??DataTable12_17
   \   0000056A   0xEB10 0x0088      ADDS     R0,R0,R8, LSL #+2
   \   0000056E   0xF830 0x2C04      LDRH     R2,[R0, #-4]
   \   00000572   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   00000574   0x0029             MOVS     R1,R5
   \   00000576   0x....             LDR.N    R0,??DataTable12_19
   \   00000578   0x.... 0x....      BL       printfcom0
    590          
    591          					StoreSetModelVal((stcModelComplex *)&l_sModel,i);
   \   0000057C   0x4641             MOV      R1,R8
   \   0000057E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000580   0x....             LDR.N    R0,??DataTable12_17
   \   00000582   0x.... 0x....      BL       StoreSetModelVal
    592          					break;
    593          				}
    594          			}
    595          		}
    596          
    597          		lsthig = hig;
   \                     ??DipModelSet_6: (+1)
   \   00000586   0x....             LDR.N    R0,??DataTable12_25
   \   00000588   0x8005             STRH     R5,[R0, #+0]
    598          		lstval = valadd;
   \   0000058A   0x....             LDR.N    R0,??DataTable12_24
   \   0000058C   0x8006             STRH     R6,[R0, #+0]
    599          
    600          	}
    601          }
   \                     ??DipModelSet_0: (+1)
   \                     ??DipModelSet_15: (+1)
   \   0000058E   0xE8BD 0x8FF7      POP      {R0-R2,R4-R11,PC}  ;; return

   \                                 In section .bss, align 2
   \                     ??firstmodelsetval:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     ??firstaddval:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     ??lsthig:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     ??lstval:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
   \                     ??addflg:
   \   00000000                      DS8 1
    602          

   \                                 In section .bss, align 1
    603          unsigned char sentendflgdip = 0;
   \                     sentendflgdip:
   \   00000000                      DS8 1

   \                                 In section .text, align 2, keep-with-next
    604          void HostScanDip(void)
    605          {
   \                     HostScanDip: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB089             SUB      SP,SP,#+36
    606          	static	unsigned char 	tmp = 0;
    607          	static	unsigned int 	time = 0;
    608          	unsigned char 		 	ScanAddrList[9]={0xA1,0xA2,0xA3,0xA5};
   \   00000006   0xA805             ADD      R0,SP,#+20
   \   00000008   0x....             LDR.N    R1,??DataTable12_29
   \   0000000A   0xC91C             LDM      R1!,{R2-R4}
   \   0000000C   0xC01C             STM      R0!,{R2-R4}
   \   0000000E   0x390C             SUBS     R1,R1,#+12
   \   00000010   0x380C             SUBS     R0,R0,#+12
    609          	unsigned char   		buf[12];
    610          	unsigned char 			datalen;
    611          	
    612          	unsigned int            dipval;
    613          	short                   addspeed;
    614          	unsigned short			speed;
    615          	unsigned char           locosta;
    616          	unsigned char           tmpbuf[3]={0};
   \   00000012   0xA804             ADD      R0,SP,#+16
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0x6001             STR      R1,[R0, #+0]
    617          	
    618          	if(		GetSysTime() - time > 50 
    619          		|| (GetRecFlgdip() && (GetSysTime() - time > 10))
    620          		)
   \   00000018   0x.... 0x....      BL       GetSysTime
   \   0000001C   0x....             LDR.N    R1,??DataTable12_30
   \   0000001E   0x6809             LDR      R1,[R1, #+0]
   \   00000020   0x1A40             SUBS     R0,R0,R1
   \   00000022   0x2833             CMP      R0,#+51
   \   00000024   0xD20B             BCS.N    ??HostScanDip_0
   \   00000026   0x.... 0x....      BL       GetRecFlgdip
   \   0000002A   0x2800             CMP      R0,#+0
   \   0000002C   0xF000 0x8080      BEQ.W    ??HostScanDip_1
   \   00000030   0x.... 0x....      BL       GetSysTime
   \   00000034   0x....             LDR.N    R1,??DataTable12_30
   \   00000036   0x6809             LDR      R1,[R1, #+0]
   \   00000038   0x1A40             SUBS     R0,R0,R1
   \   0000003A   0x280B             CMP      R0,#+11
   \   0000003C   0xD378             BCC.N    ??HostScanDip_1
    621          	{
    622          		time 	= GetSysTime(); 
   \                     ??HostScanDip_0: (+1)
   \   0000003E   0x.... 0x....      BL       GetSysTime
   \   00000042   0x....             LDR.N    R1,??DataTable12_30
   \   00000044   0x6008             STR      R0,[R1, #+0]
    623          		datalen = 0;
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0x0006             MOVS     R6,R0
    624          		
    625          //		dipval = g_DipVal;	  	//
    626          
    627          #ifdef	CVISOFT
    628          		dipval = GetDipVal();
    629          		memcpy(&buf[datalen],(unsigned char *)&dipval,sizeof(dipval));
    630          		datalen += sizeof(dipval);
    631          		
    632          		addspeed = GetAddSpeed();
    633          		memcpy(&buf[datalen],(unsigned char *)&addspeed,sizeof(addspeed));
    634          		datalen += sizeof(addspeed);
    635          		
    636          		speed = GetSpeed();
    637          		memcpy(&buf[datalen],(unsigned char *)&speed,sizeof(speed));
    638          		datalen += sizeof(speed);
    639          		
    640          		locosta = GetMyLocoWorkState();
    641          		memcpy(&buf[datalen],(unsigned char *)&locosta,sizeof(locosta));
    642          		datalen += sizeof(locosta);
    643          
    644          		memcpy(&buf[datalen],tmpbuf,sizeof(tmpbuf));
    645          		datalen += sizeof(tmpbuf);
    646          #endif		
    647          		dipval = GetDipVal();
   \   0000004A   0x.... 0x....      BL       GetDipVal
   \   0000004E   0x0004             MOVS     R4,R0
    648          		//memcpy(&buf[datalen],(unsigned char *)&dipval,sizeof(dipval));
    649          		buf[datalen] 	= dipval>>24;
   \   00000050   0x0E20             LSRS     R0,R4,#+24
   \   00000052   0xA901             ADD      R1,SP,#+4
   \   00000054   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000056   0x5470             STRB     R0,[R6, R1]
    650          		buf[datalen+1] 	= dipval>>16;
   \   00000058   0x0C20             LSRS     R0,R4,#+16
   \   0000005A   0xA901             ADD      R1,SP,#+4
   \   0000005C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000005E   0x1871             ADDS     R1,R6,R1
   \   00000060   0x7048             STRB     R0,[R1, #+1]
    651          		buf[datalen+2] 	= dipval>>8;
   \   00000062   0x0A20             LSRS     R0,R4,#+8
   \   00000064   0xA901             ADD      R1,SP,#+4
   \   00000066   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000068   0x1871             ADDS     R1,R6,R1
   \   0000006A   0x7088             STRB     R0,[R1, #+2]
    652          		buf[datalen+3] 	= dipval>>0;
   \   0000006C   0xA801             ADD      R0,SP,#+4
   \   0000006E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000070   0x1830             ADDS     R0,R6,R0
   \   00000072   0x70C4             STRB     R4,[R0, #+3]
    653          
    654          		datalen += sizeof(dipval);
   \   00000074   0x1D36             ADDS     R6,R6,#+4
    655          		
    656          		addspeed = GetAddSpeed();
   \   00000076   0x.... 0x....      BL       GetAddSpeed
   \   0000007A   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    657          //		memcpy(&buf[datalen],(unsigned char *)&addspeed,sizeof(addspeed));
    658          		buf[datalen] 	= addspeed>>8;
   \   0000007E   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   00000082   0x1200             ASRS     R0,R0,#+8
   \   00000084   0xA901             ADD      R1,SP,#+4
   \   00000086   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000088   0x5470             STRB     R0,[R6, R1]
    659          		buf[datalen+1] 	= addspeed>>0;
   \   0000008A   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   0000008E   0xA901             ADD      R1,SP,#+4
   \   00000090   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000092   0x1871             ADDS     R1,R6,R1
   \   00000094   0x7048             STRB     R0,[R1, #+1]
    660          
    661          		datalen += sizeof(addspeed);
   \   00000096   0x1CB6             ADDS     R6,R6,#+2
    662          		
    663          		speed = GetSpeed();
   \   00000098   0x.... 0x....      BL       GetSpeed
   \   0000009C   0x0005             MOVS     R5,R0
    664          //		memcpy(&buf[datalen],(unsigned char *)&speed,sizeof(speed));
    665          		buf[datalen] 	= speed>>8;
   \   0000009E   0x0028             MOVS     R0,R5
   \   000000A0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000A2   0x0A00             LSRS     R0,R0,#+8
   \   000000A4   0xA901             ADD      R1,SP,#+4
   \   000000A6   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000A8   0x5470             STRB     R0,[R6, R1]
    666          		buf[datalen+1] 	= speed>>0;
   \   000000AA   0xA801             ADD      R0,SP,#+4
   \   000000AC   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000AE   0x1830             ADDS     R0,R6,R0
   \   000000B0   0x7045             STRB     R5,[R0, #+1]
    667          
    668          		datalen += sizeof(speed);
   \   000000B2   0x1CB6             ADDS     R6,R6,#+2
    669          		
    670          		locosta = GetMyLocoWorkState();
   \   000000B4   0x.... 0x....      BL       GetMyLocoWorkState
   \   000000B8   0xF88D 0x0002      STRB     R0,[SP, #+2]
    671          		memcpy(&buf[datalen],(unsigned char *)&locosta,sizeof(locosta));
   \   000000BC   0x2701             MOVS     R7,#+1
   \   000000BE   0xF10D 0x0802      ADD      R8,SP,#+2
   \   000000C2   0xA801             ADD      R0,SP,#+4
   \   000000C4   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000C6   0xEB16 0x0900      ADDS     R9,R6,R0
   \   000000CA   0x003A             MOVS     R2,R7
   \   000000CC   0x4641             MOV      R1,R8
   \   000000CE   0x4648             MOV      R0,R9
   \   000000D0   0x.... 0x....      BL       __aeabi_memcpy
    672          		datalen += sizeof(locosta);
   \   000000D4   0x1C76             ADDS     R6,R6,#+1
    673          
    674          		memcpy(&buf[datalen],tmpbuf,sizeof(tmpbuf));
   \   000000D6   0xF05F 0x0903      MOVS     R9,#+3
   \   000000DA   0xF10D 0x0A10      ADD      R10,SP,#+16
   \   000000DE   0xA801             ADD      R0,SP,#+4
   \   000000E0   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000E2   0xEB16 0x0B00      ADDS     R11,R6,R0
   \   000000E6   0x464A             MOV      R2,R9
   \   000000E8   0x4651             MOV      R1,R10
   \   000000EA   0x4658             MOV      R0,R11
   \   000000EC   0x.... 0x....      BL       __aeabi_memcpy
    675          		datalen += sizeof(tmpbuf);
   \   000000F0   0x1CF6             ADDS     R6,R6,#+3
    676          
    677          		DataSend_CSNR(0x80,ScanAddrList[tmp%4],(unsigned char *)&buf,datalen);
   \   000000F2   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000F4   0x0033             MOVS     R3,R6
   \   000000F6   0xAA01             ADD      R2,SP,#+4
   \   000000F8   0xA805             ADD      R0,SP,#+20
   \   000000FA   0x....             LDR.N    R1,??DataTable12_31
   \   000000FC   0x7809             LDRB     R1,[R1, #+0]
   \   000000FE   0xF05F 0x0C04      MOVS     R12,#+4
   \   00000102   0xFB91 0xFEFC      SDIV     LR,R1,R12
   \   00000106   0xFB0E 0x1E1C      MLS      LR,LR,R12,R1
   \   0000010A   0xF81E 0x1000      LDRB     R1,[LR, R0]
   \   0000010E   0x2080             MOVS     R0,#+128
   \   00000110   0x.... 0x....      BL       DataSend_CSNR
    678          
    679          		tmp++;
   \   00000114   0x....             LDR.N    R0,??DataTable12_31
   \   00000116   0x7800             LDRB     R0,[R0, #+0]
   \   00000118   0x1C40             ADDS     R0,R0,#+1
   \   0000011A   0x....             LDR.N    R1,??DataTable12_31
   \   0000011C   0x7008             STRB     R0,[R1, #+0]
    680          		sentendflgdip = 1;
   \   0000011E   0x2001             MOVS     R0,#+1
   \   00000120   0x....             LDR.N    R1,??DataTable12_32
   \   00000122   0x7008             STRB     R0,[R1, #+0]
    681          		l_recFlgdip 	= 0;
   \   00000124   0x2000             MOVS     R0,#+0
   \   00000126   0x....             LDR.N    R1,??DataTable12_33
   \   00000128   0x7008             STRB     R0,[R1, #+0]
    682          		DelayX10ms(1);
   \   0000012A   0x2001             MOVS     R0,#+1
   \   0000012C   0x.... 0x....      BL       DelayX10ms
    683          	}
    684          }
   \                     ??HostScanDip_1: (+1)
   \   00000130   0xB009             ADD      SP,SP,#+36
   \   00000132   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return

   \                                 In section .bss, align 1
   \                     ??tmp:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
   \                     ??time:
   \   00000000                      DS8 4
    685          
    686          

   \                                 In section .text, align 2, keep-with-next
    687          void  CSNR_RecDealDip(void)     												//主机
    688          {
   \                     CSNR_RecDealDip: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB0A2             SUB      SP,SP,#+136
    689          	unsigned char		RecBuf[64] = {0};								//接收缓冲区
   \   00000004   0xA811             ADD      R0,SP,#+68
   \   00000006   0x2140             MOVS     R1,#+64
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
    690          	unsigned char		DataBuf[64] = {0};								//
   \   0000000C   0xA801             ADD      R0,SP,#+4
   \   0000000E   0x2140             MOVS     R1,#+64
   \   00000010   0x.... 0x....      BL       __aeabi_memclr4
    691          	unsigned int		RecLen;		
    692          	unsigned int		DataLen = 16;
   \   00000014   0x2010             MOVS     R0,#+16
   \   00000016   0x9000             STR      R0,[SP, #+0]
    693          	static	uint32		rectime = 0;
    694          	static	uint8		errtimes;
    695          	static	uint32		errtime;		
    696          			
    697          	if( GetFramRecEndFlgDip() == 1 && sentendflgdip == 1)						//有新的帧尾，进行数据处理	  ////////////////////////
   \   00000018   0x.... 0x....      BL       GetFramRecEndFlgDip
   \   0000001C   0x2801             CMP      R0,#+1
   \   0000001E   0xD14A             BNE.N    ??CSNR_RecDealDip_0
   \   00000020   0x....             LDR.N    R0,??DataTable12_32
   \   00000022   0x7800             LDRB     R0,[R0, #+0]
   \   00000024   0x2801             CMP      R0,#+1
   \   00000026   0xD146             BNE.N    ??CSNR_RecDealDip_0
    698          	{
    699          		rectime = GetSysTime();
   \   00000028   0x.... 0x....      BL       GetSysTime
   \   0000002C   0x....             LDR.N    R1,??DataTable12_34
   \   0000002E   0x6008             STR      R0,[R1, #+0]
    700          		errtimes = 0;
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x....             LDR.N    R1,??DataTable12_35
   \   00000034   0x7008             STRB     R0,[R1, #+0]
    701          
    702          //		l_led0com1flg = COM_LED_REC;
    703          		l_recFlgdip = 1;
   \   00000036   0x2001             MOVS     R0,#+1
   \   00000038   0x....             LDR.N    R1,??DataTable11_2
   \   0000003A   0x7008             STRB     R0,[R1, #+0]
    704          		sentendflgdip = 0;  
   \   0000003C   0x2000             MOVS     R0,#+0
   \   0000003E   0x....             LDR.N    R1,??DataTable12_32
   \   00000040   0x7008             STRB     R0,[R1, #+0]
    705          																										//发送指令后，等待接收
    706          		RecLen 	= ReadRs485DataDip(RecBuf);
   \   00000042   0xA811             ADD      R0,SP,#+68
   \   00000044   0x.... 0x....      BL       ReadRs485DataDip
   \   00000048   0x0004             MOVS     R4,R0
    707          		
    708          		ClearFramRecEndFlgDip();												//清标志，可重新取数
   \   0000004A   0x.... 0x....      BL       ClearFramRecEndFlgDip
    709          		
    710          		if(RecLen < 10)
   \   0000004E   0x2C0A             CMP      R4,#+10
   \   00000050   0xD355             BCC.N    ??CSNR_RecDealDip_1
    711          			return ;
    712          		
    713          		l_recaddrdip = CSNR_GetData(RecBuf,RecLen,DataBuf,(unsigned char*)&DataLen); 
   \                     ??CSNR_RecDealDip_2: (+1)
   \   00000052   0x466B             MOV      R3,SP
   \   00000054   0xAA01             ADD      R2,SP,#+4
   \   00000056   0x0021             MOVS     R1,R4
   \   00000058   0xA811             ADD      R0,SP,#+68
   \   0000005A   0x.... 0x....      BL       CSNR_GetData
   \   0000005E   0x....             LDR.N    R1,??DataTable11
   \   00000060   0x7008             STRB     R0,[R1, #+0]
    714          	
    715          //	数据转发，如果数据未按通讯协议要求，则从串口2、3发出。		
    716          		if(l_recaddrdip == 0)
   \   00000062   0x....             LDR.N    R0,??DataTable11
   \   00000064   0x7800             LDRB     R0,[R0, #+0]
   \   00000066   0x2800             CMP      R0,#+0
   \   00000068   0xD108             BNE.N    ??CSNR_RecDealDip_3
    717          		{
    718          			SendCOM2(RecBuf,RecLen);
   \   0000006A   0x0021             MOVS     R1,R4
   \   0000006C   0xA811             ADD      R0,SP,#+68
   \   0000006E   0x.... 0x....      BL       SendCOM2
    719          			SendCOM3(RecBuf,RecLen);
   \   00000072   0x0021             MOVS     R1,R4
   \   00000074   0xA811             ADD      R0,SP,#+68
   \   00000076   0x.... 0x....      BL       SendCOM3
    720          			return	;
   \   0000007A   0xE040             B.N      ??CSNR_RecDealDip_1
    721          		}
    722          		
    723          		switch(l_recaddrdip)
   \                     ??CSNR_RecDealDip_3: (+1)
   \   0000007C   0x....             LDR.N    R0,??DataTable11
   \   0000007E   0x7800             LDRB     R0,[R0, #+0]
   \   00000080   0x28A1             CMP      R0,#+161
   \   00000082   0xD004             BEQ.N    ??CSNR_RecDealDip_4
   \   00000084   0x28A2             CMP      R0,#+162
   \   00000086   0xD00A             BEQ.N    ??CSNR_RecDealDip_5
   \   00000088   0x28A5             CMP      R0,#+165
   \   0000008A   0xD010             BEQ.N    ??CSNR_RecDealDip_6
   \   0000008C   0xE037             B.N      ??CSNR_RecDealDip_7
    724          		{
    725          			case 0xA1: 
    726          						l_led0com1flg =  COM_LED_DATA;
   \                     ??CSNR_RecDealDip_4: (+1)
   \   0000008E   0x2002             MOVS     R0,#+2
   \   00000090   0x....             LDR.N    R1,??DataTable12_36
   \   00000092   0x7008             STRB     R0,[R1, #+0]
    727          					   	DipComOperate(DataBuf,DataLen); 				//读卡器对接收的信息进行处理 
   \   00000094   0x9900             LDR      R1,[SP, #+0]
   \   00000096   0xA801             ADD      R0,SP,#+4
   \   00000098   0x.... 0x....      BL       DipComOperate
    728          				break;
   \   0000009C   0xE02F             B.N      ??CSNR_RecDealDip_7
    729          				
    730          			case 0xA2: 
    731          						l_led0com1flg =  COM_LED_DATA;
   \                     ??CSNR_RecDealDip_5: (+1)
   \   0000009E   0x2002             MOVS     R0,#+2
   \   000000A0   0x....             LDR.N    R1,??DataTable12_36
   \   000000A2   0x7008             STRB     R0,[R1, #+0]
    732          					   	DipComOperate(DataBuf,DataLen); 				//读卡器对接收的信息进行处理 
   \   000000A4   0x9900             LDR      R1,[SP, #+0]
   \   000000A6   0xA801             ADD      R0,SP,#+4
   \   000000A8   0x.... 0x....      BL       DipComOperate
    733          				break;
   \   000000AC   0xE027             B.N      ??CSNR_RecDealDip_7
    734          
    735          			case 0xA5: 
    736          						l_led0com1flg =  COM_LED_DATA;
   \                     ??CSNR_RecDealDip_6: (+1)
   \   000000AE   0x2002             MOVS     R0,#+2
   \   000000B0   0x....             LDR.N    R1,??DataTable12_36
   \   000000B2   0x7008             STRB     R0,[R1, #+0]
    737          					 //  	DipModelSet(DataBuf,DataLen); 				//读卡器对接收的信息进行处理 
    738          				break;
   \   000000B4   0xE023             B.N      ??CSNR_RecDealDip_7
    739          
    740          			default: ;
    741          		}
    742          	}
    743          	else
    744          	{
    745          		if(GetSysTime() - rectime > 100)
   \                     ??CSNR_RecDealDip_0: (+1)
   \   000000B6   0x.... 0x....      BL       GetSysTime
   \   000000BA   0x....             LDR.N    R1,??DataTable12_34
   \   000000BC   0x6809             LDR      R1,[R1, #+0]
   \   000000BE   0x1A40             SUBS     R0,R0,R1
   \   000000C0   0x2865             CMP      R0,#+101
   \   000000C2   0xD31C             BCC.N    ??CSNR_RecDealDip_7
    746          		{
    747          			if(GetSysTime() - errtime > 100 )
   \   000000C4   0x.... 0x....      BL       GetSysTime
   \   000000C8   0x....             LDR.N    R1,??DataTable12_37
   \   000000CA   0x6809             LDR      R1,[R1, #+0]
   \   000000CC   0x1A40             SUBS     R0,R0,R1
   \   000000CE   0x2865             CMP      R0,#+101
   \   000000D0   0xD308             BCC.N    ??CSNR_RecDealDip_8
    748          			{
    749          					errtimes++;
   \   000000D2   0x....             LDR.N    R0,??DataTable12_35
   \   000000D4   0x7800             LDRB     R0,[R0, #+0]
   \   000000D6   0x1C40             ADDS     R0,R0,#+1
   \   000000D8   0x....             LDR.N    R1,??DataTable12_35
   \   000000DA   0x7008             STRB     R0,[R1, #+0]
    750          			    errtime	= GetSysTime();
   \   000000DC   0x.... 0x....      BL       GetSysTime
   \   000000E0   0x....             LDR.N    R1,??DataTable12_37
   \   000000E2   0x6008             STR      R0,[R1, #+0]
    751          			}
    752          			if(errtimes	> 3)
   \                     ??CSNR_RecDealDip_8: (+1)
   \   000000E4   0x....             LDR.N    R0,??DataTable12_35
   \   000000E6   0x7800             LDRB     R0,[R0, #+0]
   \   000000E8   0x2804             CMP      R0,#+4
   \   000000EA   0xDB08             BLT.N    ??CSNR_RecDealDip_7
    753          			{
    754          				l_led0com1flg	= 0; 
   \   000000EC   0x2000             MOVS     R0,#+0
   \   000000EE   0x....             LDR.N    R1,??DataTable12_36
   \   000000F0   0x7008             STRB     R0,[R1, #+0]
    755          	
    756          				l_com1dip1Errflg = ERROR;
   \   000000F2   0x2000             MOVS     R0,#+0
   \   000000F4   0x....             LDR.N    R1,??DataTable12_38
   \   000000F6   0x7008             STRB     R0,[R1, #+0]
    757          				l_com1dip2Errflg = ERROR;
   \   000000F8   0x2000             MOVS     R0,#+0
   \   000000FA   0x....             LDR.N    R1,??DataTable11_1
   \   000000FC   0x7008             STRB     R0,[R1, #+0]
    758          			}
    759          		}
    760          	}
    761          }
   \                     ??CSNR_RecDealDip_7: (+1)
   \                     ??CSNR_RecDealDip_1: (+1)
   \   000000FE   0xB022             ADD      SP,SP,#+136
   \   00000100   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .bss, align 4
   \                     ??rectime:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
   \                     ??errtimes:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
   \                     ??errtime:
   \   00000000                      DS8 4
    762          

   \                                 In section .text, align 2, keep-with-next
    763          uint8	GetLed0Com1Flg(void)
    764          {
    765          	return	 l_led0com1flg;
   \                     GetLed0Com1Flg: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable12_36
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
    766          }
    767          
    768          
    769          extern  uint8  GetCOM1Data(void);
    770          

   \                                 In section .text, align 2, keep-with-next
    771          void Diptask(void)
    772          {
   \                     Diptask: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    773              static  int     time;
    774          
    775              HostScanDip();                  //读油量
   \   00000002   0x.... 0x....      BL       HostScanDip
    776              
    777              CSNR_RecDealDip();              //接收处理
   \   00000006   0x.... 0x....      BL       CSNR_RecDealDip
    778          
    779          //	if(GetSysTime() - time > 200)   //2s一次
    780          //    {
    781          //        SendReadPowerCode();        //读电量
    782          //        time = GetSysTime();
    783          //    }
    784              
    785              GetCOM1Data();                  //取电量数据
   \   0000000A   0x.... 0x....      BL       GetCOM1Data
    786              
    787          //    MathPower();                    //计算电量
    788          }
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   0x........         DC32     g_DipVal

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_1:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_2:
   \   00000000   0x........         DC32     l_com1dip1Errflg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_3:
   \   00000000   0x........         DC32     l_Dip1Prs

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_4:
   \   00000000   0x........         DC32     l_dip1den

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_5:
   \   00000000   0x........         DC32     l_Dip1ErrCod

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_6:
   \   00000000   0x........         DC32     l_Dip1Tmp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_7:
   \   00000000   0x........         DC32     ??dip1time

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_8:
   \   00000000   0x........         DC32     l_sDip1CommData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_9:
   \   00000000   0x........         DC32     l_Dip2Prs

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_10:
   \   00000000   0x........         DC32     l_dip2den

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_11:
   \   00000000   0x........         DC32     l_Dip2ErrCod

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_12:
   \   00000000   0x........         DC32     l_Dip2Tmp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x........         DC32     l_recaddrdip

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \   00000000   0x........         DC32     l_com1dip2Errflg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \   00000000   0x........         DC32     l_recFlgdip

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_3:
   \   00000000   0x........         DC32     l_sDip2CommData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   0x........         DC32     ??dip2time

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_1:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_2:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_3:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_4:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_5:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_6:
   \   00000000   0x........         DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_7:
   \   00000000   0x........         DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_8:
   \   00000000   0x........         DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_9:
   \   00000000   0x........         DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_10:
   \   00000000   0x........         DC32     l_setmodelflg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_11:
   \   00000000   0x........         DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_12:
   \   00000000   0x........         DC32     ??firstmodelsetval

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_13:
   \   00000000   0x........         DC32     ??firstaddval

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_14:
   \   00000000   0x........         DC32     ??addflg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_15:
   \   00000000   0x........         DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_16:
   \   00000000   0x........         DC32     ?_12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_17:
   \   00000000   0x........         DC32     l_sModel

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_18:
   \   00000000   0x........         DC32     ?_13

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_19:
   \   00000000   0x........         DC32     ?_14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_20:
   \   00000000   0x........         DC32     ?_15

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_21:
   \   00000000   0x........         DC32     ?_16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_22:
   \   00000000   0x........         DC32     ?_17

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_23:
   \   00000000   0x........         DC32     ?_18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_24:
   \   00000000   0x........         DC32     ??lstval

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_25:
   \   00000000   0x........         DC32     ??lsthig

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_26:
   \   00000000   0x........         DC32     ?_19

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_27:
   \   00000000   0x........         DC32     ?_20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_28:
   \   00000000   0x........         DC32     ?_21

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_29:
   \   00000000   0x........         DC32     ?_22

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_30:
   \   00000000   0x........         DC32     ??time

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_31:
   \   00000000   0x........         DC32     ??tmp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_32:
   \   00000000   0x........         DC32     sentendflgdip

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_33:
   \   00000000   0x........         DC32     l_recFlgdip

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_34:
   \   00000000   0x........         DC32     ??rectime

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_35:
   \   00000000   0x........         DC32     ??errtimes

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_36:
   \   00000000   0x........         DC32     l_led0com1flg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_37:
   \   00000000   0x........         DC32     ??errtime

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_38:
   \   00000000   0x........         DC32     l_com1dip1Errflg

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x0D 0x0A          DC8 "\015\012 addspeed %d"
   \              0x20 0x61    
   \              0x64 0x64    
   \              0x73 0x70    
   \              0x65 0x65    
   \              0x64 0x20    
   \              0x25 0x64    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x0D 0x0A          DC8 "\015\012\264\362\323\241\265\367\325\373\307\260\265\304\304\243\320\315,\262\273\266\257\265\343\316\252 %d"
   \              0xB4 0xF2    
   \              0xD3 0xA1    
   \              0xB5 0xF7    
   \              0xD5 0xFB    
   \              0xC7 0xB0    
   \              0xB5 0xC4    
   \              0xC4 0xA3    
   \              0xD0 0xCD    
   \              0x2C 0xB2    
   \              0xBB 0xB6    
   \              0xAF 0xB5    
   \              0xE3 0xCE    
   \              0xAA 0x20    
   \              0x25 0x64    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x0D 0x0A          DC8 "\015\012 \270\337\266\310 %d,\323\315\301\277 %d"
   \              0x20 0xB8    
   \              0xDF 0xB6    
   \              0xC8 0x20    
   \              0x25 0x64    
   \              0x2C 0xD3    
   \              0xCD 0xC1    
   \              0xBF 0x20    
   \              0x25 0x64    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x0D 0x0A          DC8 0DH, 0AH, 20H, 63H, 6FH, 6DH, 73H, 4DH
   \              0x20 0x63    
   \              0x6F 0x6D    
   \              0x73 0x4D    
   \   00000008   0x6F 0x64          DC8 6FH, 64H, 65H, 6CH, 2DH, 3EH, 73H, 4DH
   \              0x65 0x6C    
   \              0x2D 0x3E    
   \              0x73 0x4D    
   \   00000010   0x6F 0x64          DC8 6FH, 64H, 50H, 6FH, 74H, 5BH, 25H, 64H
   \              0x50 0x6F    
   \              0x74 0x5B    
   \              0x25 0x64    
   \   00000018   0x5D 0x2E          DC8 5DH, 2EH, 48H, 69H, 67H, 56H, 61H, 6CH
   \              0x48 0x69    
   \              0x67 0x56    
   \              0x61 0x6C    
   \   00000020   0x20 0x25          DC8 20H, 25H, 64H, 20H, 3DH, 3DH, 20H, 63H
   \              0x64 0x20    
   \              0x3D 0x3D    
   \              0x20 0x63    
   \   00000028   0x6F 0x6D          DC8 6FH, 6DH, 73H, 4DH, 6FH, 64H, 65H, 6CH
   \              0x73 0x4D    
   \              0x6F 0x64    
   \              0x65 0x6C    
   \   00000030   0x2D 0x3E          DC8 2DH, 3EH, 73H, 4DH, 6FH, 64H, 50H, 6FH
   \              0x73 0x4D    
   \              0x6F 0x64    
   \              0x50 0x6F    
   \   00000038   0x74 0x5B          DC8 74H, 5BH, 69H, 2BH, 31H, 5DH, 2EH, 48H
   \              0x69 0x2B    
   \              0x31 0x5D    
   \              0x2E 0x48    
   \   00000040   0x69 0x67          DC8 69H, 67H, 56H, 61H, 6CH, 20H, 25H, 64H
   \              0x56 0x61    
   \              0x6C 0x20    
   \              0x25 0x64    
   \   00000048   0x00               DC8 0
   \   00000049   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x0D 0x0A          DC8 "\015\012 z %d,i %d"
   \              0x20 0x7A    
   \              0x20 0x25    
   \              0x64 0x2C    
   \              0x69 0x20    
   \              0x25 0x64    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x0D 0x0A          DC8 0DH, 0AH, 20H, 63H, 6FH, 6DH, 73H, 4DH
   \              0x20 0x63    
   \              0x6F 0x6D    
   \              0x73 0x4D    
   \   00000008   0x6F 0x64          DC8 6FH, 64H, 65H, 6CH, 2DH, 3EH, 73H, 4DH
   \              0x65 0x6C    
   \              0x2D 0x3E    
   \              0x73 0x4D    
   \   00000010   0x6F 0x64          DC8 6FH, 64H, 50H, 6FH, 74H, 5BH, 25H, 64H
   \              0x50 0x6F    
   \              0x74 0x5B    
   \              0x25 0x64    
   \   00000018   0x5D 0x2E          DC8 5DH, 2EH, 48H, 69H, 67H, 56H, 61H, 6CH
   \              0x48 0x69    
   \              0x67 0x56    
   \              0x61 0x6C    
   \   00000020   0x20 0x25          DC8 20H, 25H, 64H, 20H, 3EH, 20H, 63H, 6FH
   \              0x64 0x20    
   \              0x3E 0x20    
   \              0x63 0x6F    
   \   00000028   0x6D 0x73          DC8 6DH, 73H, 4DH, 6FH, 64H, 65H, 6CH, 2DH
   \              0x4D 0x6F    
   \              0x64 0x65    
   \              0x6C 0x2D    
   \   00000030   0x3E 0x73          DC8 3EH, 73H, 4DH, 6FH, 64H, 50H, 6FH, 74H
   \              0x4D 0x6F    
   \              0x64 0x50    
   \              0x6F 0x74    
   \   00000038   0x5B 0x69          DC8 5BH, 69H, 2BH, 31H, 5DH, 2EH, 48H, 69H
   \              0x2B 0x31    
   \              0x5D 0x2E    
   \              0x48 0x69    
   \   00000040   0x67 0x56          DC8 67H, 56H, 61H, 6CH, 20H, 25H, 64H, 0
   \              0x61 0x6C    
   \              0x20 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x0D 0x0A          DC8 0DH, 0AH, 20H, 63H, 6FH, 6DH, 73H, 4DH
   \              0x20 0x63    
   \              0x6F 0x6D    
   \              0x73 0x4D    
   \   00000008   0x6F 0x64          DC8 6FH, 64H, 65H, 6CH, 2DH, 3EH, 73H, 4DH
   \              0x65 0x6C    
   \              0x2D 0x3E    
   \              0x73 0x4D    
   \   00000010   0x6F 0x64          DC8 6FH, 64H, 50H, 6FH, 74H, 5BH, 25H, 64H
   \              0x50 0x6F    
   \              0x74 0x5B    
   \              0x25 0x64    
   \   00000018   0x5D 0x2E          DC8 5DH, 2EH, 48H, 69H, 67H, 56H, 61H, 6CH
   \              0x48 0x69    
   \              0x67 0x56    
   \              0x61 0x6C    
   \   00000020   0x20 0x25          DC8 20H, 25H, 64H, 20H, 3CH, 20H, 63H, 6FH
   \              0x64 0x20    
   \              0x3C 0x20    
   \              0x63 0x6F    
   \   00000028   0x6D 0x73          DC8 6DH, 73H, 4DH, 6FH, 64H, 65H, 6CH, 2DH
   \              0x4D 0x6F    
   \              0x64 0x65    
   \              0x6C 0x2D    
   \   00000030   0x3E 0x73          DC8 3EH, 73H, 4DH, 6FH, 64H, 50H, 6FH, 74H
   \              0x4D 0x6F    
   \              0x64 0x50    
   \              0x6F 0x74    
   \   00000038   0x5B 0x69          DC8 5BH, 69H, 2BH, 31H, 5DH, 2EH, 48H, 69H
   \              0x2B 0x31    
   \              0x5D 0x2E    
   \              0x48 0x69    
   \   00000040   0x67 0x56          DC8 67H, 56H, 61H, 6CH, 20H, 25H, 64H, 0
   \              0x61 0x6C    
   \              0x20 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_7:
   \   00000000   0x0D 0x0A          DC8 0DH, 0AH, 20H, 63H, 6FH, 6DH, 73H, 4DH
   \              0x20 0x63    
   \              0x6F 0x6D    
   \              0x73 0x4D    
   \   00000008   0x6F 0x64          DC8 6FH, 64H, 65H, 6CH, 2DH, 3EH, 73H, 4DH
   \              0x65 0x6C    
   \              0x2D 0x3E    
   \              0x73 0x4D    
   \   00000010   0x6F 0x64          DC8 6FH, 64H, 50H, 6FH, 74H, 5BH, 25H, 64H
   \              0x50 0x6F    
   \              0x74 0x5B    
   \              0x25 0x64    
   \   00000018   0x5D 0x2E          DC8 5DH, 2EH, 44H, 69H, 70H, 56H, 61H, 6CH
   \              0x44 0x69    
   \              0x70 0x56    
   \              0x61 0x6C    
   \   00000020   0x20 0x25          DC8 20H, 25H, 64H, 20H, 3DH, 3DH, 20H, 63H
   \              0x64 0x20    
   \              0x3D 0x3D    
   \              0x20 0x63    
   \   00000028   0x6F 0x6D          DC8 6FH, 6DH, 73H, 4DH, 6FH, 64H, 65H, 6CH
   \              0x73 0x4D    
   \              0x6F 0x64    
   \              0x65 0x6C    
   \   00000030   0x2D 0x3E          DC8 2DH, 3EH, 73H, 4DH, 6FH, 64H, 50H, 6FH
   \              0x73 0x4D    
   \              0x6F 0x64    
   \              0x50 0x6F    
   \   00000038   0x74 0x5B          DC8 74H, 5BH, 69H, 2BH, 31H, 5DH, 2EH, 44H
   \              0x69 0x2B    
   \              0x31 0x5D    
   \              0x2E 0x44    
   \   00000040   0x69 0x70          DC8 69H, 70H, 56H, 61H, 6CH, 20H, 25H, 64H
   \              0x56 0x61    
   \              0x6C 0x20    
   \              0x25 0x64    
   \   00000048   0x00               DC8 0
   \   00000049   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_8:
   \   00000000   0x0D 0x0A          DC8 0DH, 0AH, 20H, 63H, 6FH, 6DH, 73H, 4DH
   \              0x20 0x63    
   \              0x6F 0x6D    
   \              0x73 0x4D    
   \   00000008   0x6F 0x64          DC8 6FH, 64H, 65H, 6CH, 2DH, 3EH, 73H, 4DH
   \              0x65 0x6C    
   \              0x2D 0x3E    
   \              0x73 0x4D    
   \   00000010   0x6F 0x64          DC8 6FH, 64H, 50H, 6FH, 74H, 5BH, 25H, 64H
   \              0x50 0x6F    
   \              0x74 0x5B    
   \              0x25 0x64    
   \   00000018   0x5D 0x2E          DC8 5DH, 2EH, 44H, 69H, 70H, 56H, 61H, 6CH
   \              0x44 0x69    
   \              0x70 0x56    
   \              0x61 0x6C    
   \   00000020   0x20 0x25          DC8 20H, 25H, 64H, 20H, 3CH, 20H, 63H, 6FH
   \              0x64 0x20    
   \              0x3C 0x20    
   \              0x63 0x6F    
   \   00000028   0x6D 0x73          DC8 6DH, 73H, 4DH, 6FH, 64H, 65H, 6CH, 2DH
   \              0x4D 0x6F    
   \              0x64 0x65    
   \              0x6C 0x2D    
   \   00000030   0x3E 0x73          DC8 3EH, 73H, 4DH, 6FH, 64H, 50H, 6FH, 74H
   \              0x4D 0x6F    
   \              0x64 0x50    
   \              0x6F 0x74    
   \   00000038   0x5B 0x69          DC8 5BH, 69H, 2BH, 31H, 5DH, 2EH, 44H, 69H
   \              0x2B 0x31    
   \              0x5D 0x2E    
   \              0x44 0x69    
   \   00000040   0x70 0x56          DC8 70H, 56H, 61H, 6CH, 20H, 25H, 64H, 0
   \              0x61 0x6C    
   \              0x20 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_9:
   \   00000000   0x0D 0x0A          DC8 0DH, 0AH, 0B4H, 0F2H, 0D3H, 0A1H, 0B5H, 0F7H
   \              0xB4 0xF2    
   \              0xD3 0xA1    
   \              0xB5 0xF7    
   \   00000008   0xD5 0xFB          DC8 0D5H, 0FBH, 0BAH, 0F3H, 0B5H, 0C4H, 0C4H, 0A3H
   \              0xBA 0xF3    
   \              0xB5 0xC4    
   \              0xC4 0xA3    
   \   00000010   0xD0 0xCD          DC8 0D0H, 0CDH, 2CH, 0B2H, 0BBH, 0B6H, 0AFH, 0B5H
   \              0x2C 0xB2    
   \              0xBB 0xB6    
   \              0xAF 0xB5    
   \   00000018   0xE3 0xCE          DC8 0E3H, 0CEH, 0AAH, 20H, 25H, 64H, 2CH, 63H
   \              0xAA 0x20    
   \              0x25 0x64    
   \              0x2C 0x63    
   \   00000020   0x6F 0x6D          DC8 6FH, 6DH, 73H, 4DH, 6FH, 64H, 65H, 6CH
   \              0x73 0x4D    
   \              0x6F 0x64    
   \              0x65 0x6C    
   \   00000028   0x2D 0x3E          DC8 2DH, 3EH, 50H, 6FH, 74H, 4EH, 75H, 6DH
   \              0x50 0x6F    
   \              0x74 0x4E    
   \              0x75 0x6D    
   \   00000030   0x20 0x25          DC8 20H, 25H, 64H, 0
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_10:
   \   00000000   0x0D 0x0A          DC8 "\015\012 Set %d, %d, %d, %d,l_com1dip1Errflg %x"
   \              0x20 0x53    
   \              0x65 0x74    
   \              0x20 0x25    
   \              0x64 0x2C    
   \              0x20 0x25    
   \              0x64 0x2C    
   \              0x20 0x25    
   \              0x64 0x2C    
   \              0x20 0x25    
   \              0x64 0x2C    
   \              0x6C 0x5F    
   \              0x63 0x6F    
   \              0x6D 0x31    
   \              0x64 0x69    
   \              0x70 0x31    
   \              0x45 0x72    
   \              0x72 0x66    
   \              0x6C 0x67    
   \              0x20 0x25    
   \              0x78 0x00    
   \   0000002A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_11:
   \   00000000   0x53 0x45          DC8 "SET_%d"
   \              0x54 0x5F    
   \              0x25 0x64    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_12:
   \   00000000   0x0D 0x0A          DC8 "\015\012 \320\243\327\274\301\343\265\343\320\243\327\274"
   \              0x20 0xD0    
   \              0xA3 0xD7    
   \              0xBC 0xC1    
   \              0xE3 0xB5    
   \              0xE3 0xD0    
   \              0xA3 0xD7    
   \              0xBC 0x00    

   \                                 In section .rodata, align 4
   \                     ?_13:
   \   00000000   0x0D 0x0A          DC8 "\015\012 portnum %d"
   \              0x20 0x70    
   \              0x6F 0x72    
   \              0x74 0x6E    
   \              0x75 0x6D    
   \              0x20 0x25    
   \              0x64 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_14:
   \   00000000   0x0D 0x0A          DC8 0DH, 0AH, 20H, 68H, 69H, 67H, 20H, 25H
   \              0x20 0x68    
   \              0x69 0x67    
   \              0x20 0x25    
   \   00000008   0x64 0x20          DC8 64H, 20H, 3CH, 20H, 6CH, 5FH, 73H, 4DH
   \              0x3C 0x20    
   \              0x6C 0x5F    
   \              0x73 0x4D    
   \   00000010   0x6F 0x64          DC8 6FH, 64H, 65H, 6CH, 2EH, 73H, 4DH, 6FH
   \              0x65 0x6C    
   \              0x2E 0x73    
   \              0x4D 0x6F    
   \   00000018   0x64 0x50          DC8 64H, 50H, 6FH, 74H, 5BH, 69H, 2DH, 31H
   \              0x6F 0x74    
   \              0x5B 0x69    
   \              0x2D 0x31    
   \   00000020   0x5D 0x2E          DC8 5DH, 2EH, 48H, 69H, 67H, 56H, 61H, 6CH
   \              0x48 0x69    
   \              0x67 0x56    
   \              0x61 0x6C    
   \   00000028   0x20 0x25          DC8 20H, 25H, 64H, 2CH, 6CH, 5FH, 73H, 4DH
   \              0x64 0x2C    
   \              0x6C 0x5F    
   \              0x73 0x4D    
   \   00000030   0x6F 0x64          DC8 6FH, 64H, 65H, 6CH, 2EH, 50H, 6FH, 74H
   \              0x65 0x6C    
   \              0x2E 0x50    
   \              0x6F 0x74    
   \   00000038   0x4E 0x75          DC8 4EH, 75H, 6DH, 20H, 25H, 64H, 0
   \              0x6D 0x20    
   \              0x25 0x64    
   \              0x00         
   \   0000003F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_15:
   \   00000000   0x0D 0x0A          DC8 "\015\012 i-1 %d"
   \              0x20 0x69    
   \              0x2D 0x31    
   \              0x20 0x25    
   \              0x64 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_16:
   \   00000000   0x0D 0x0A          DC8 0DH, 0AH, 20H, 68H, 69H, 67H, 20H, 25H
   \              0x20 0x68    
   \              0x69 0x67    
   \              0x20 0x25    
   \   00000008   0x64 0x20          DC8 64H, 20H, 3DH, 20H, 6CH, 5FH, 73H, 4DH
   \              0x3D 0x20    
   \              0x6C 0x5F    
   \              0x73 0x4D    
   \   00000010   0x6F 0x64          DC8 6FH, 64H, 65H, 6CH, 2EH, 73H, 4DH, 6FH
   \              0x65 0x6C    
   \              0x2E 0x73    
   \              0x4D 0x6F    
   \   00000018   0x64 0x50          DC8 64H, 50H, 6FH, 74H, 5BH, 69H, 2DH, 31H
   \              0x6F 0x74    
   \              0x5B 0x69    
   \              0x2D 0x31    
   \   00000020   0x5D 0x2E          DC8 5DH, 2EH, 48H, 69H, 67H, 56H, 61H, 6CH
   \              0x48 0x69    
   \              0x67 0x56    
   \              0x61 0x6C    
   \   00000028   0x20 0x25          DC8 20H, 25H, 64H, 2CH, 6CH, 5FH, 73H, 4DH
   \              0x64 0x2C    
   \              0x6C 0x5F    
   \              0x73 0x4D    
   \   00000030   0x6F 0x64          DC8 6FH, 64H, 65H, 6CH, 2EH, 50H, 6FH, 74H
   \              0x65 0x6C    
   \              0x2E 0x50    
   \              0x6F 0x74    
   \   00000038   0x4E 0x75          DC8 4EH, 75H, 6DH, 20H, 25H, 64H, 0
   \              0x6D 0x20    
   \              0x25 0x64    
   \              0x00         
   \   0000003F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_17:
   \   00000000   0x0D 0x0A          DC8 "\015\012 i %d"
   \              0x20 0x69    
   \              0x20 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_18:
   \   00000000   0x0D 0x0A          DC8 0DH, 0AH, 20H, 68H, 69H, 67H, 20H, 25H
   \              0x20 0x68    
   \              0x69 0x67    
   \              0x20 0x25    
   \   00000008   0x64 0x20          DC8 64H, 20H, 3EH, 20H, 6CH, 5FH, 73H, 4DH
   \              0x3E 0x20    
   \              0x6C 0x5F    
   \              0x73 0x4D    
   \   00000010   0x6F 0x64          DC8 6FH, 64H, 65H, 6CH, 2EH, 73H, 4DH, 6FH
   \              0x65 0x6C    
   \              0x2E 0x73    
   \              0x4D 0x6F    
   \   00000018   0x64 0x50          DC8 64H, 50H, 6FH, 74H, 5BH, 69H, 2DH, 31H
   \              0x6F 0x74    
   \              0x5B 0x69    
   \              0x2D 0x31    
   \   00000020   0x5D 0x2E          DC8 5DH, 2EH, 48H, 69H, 67H, 56H, 61H, 6CH
   \              0x48 0x69    
   \              0x67 0x56    
   \              0x61 0x6C    
   \   00000028   0x20 0x25          DC8 20H, 25H, 64H, 2CH, 6CH, 5FH, 73H, 4DH
   \              0x64 0x2C    
   \              0x6C 0x5F    
   \              0x73 0x4D    
   \   00000030   0x6F 0x64          DC8 6FH, 64H, 65H, 6CH, 2EH, 50H, 6FH, 74H
   \              0x65 0x6C    
   \              0x2E 0x50    
   \              0x6F 0x74    
   \   00000038   0x4E 0x75          DC8 4EH, 75H, 6DH, 20H, 25H, 64H, 0
   \              0x6D 0x20    
   \              0x25 0x64    
   \              0x00         
   \   0000003F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_19:
   \   00000000   0x0D 0x0A          DC8 "\015\012 \324\366\301\277\271\375\320\241 valadd %d,lstval %d,hig %d,lsthig %d"
   \              0x20 0xD4    
   \              0xF6 0xC1    
   \              0xBF 0xB9    
   \              0xFD 0xD0    
   \              0xA1 0x20    
   \              0x76 0x61    
   \              0x6C 0x61    
   \              0x64 0x64    
   \              0x20 0x25    
   \              0x64 0x2C    
   \              0x6C 0x73    
   \              0x74 0x76    
   \              0x61 0x6C    
   \              0x20 0x25    
   \              0x64 0x2C    
   \              0x68 0x69    
   \              0x67 0x20    
   \              0x25 0x64    
   \              0x2C 0x6C    
   \              0x73 0x74    
   \              0x68 0x69    
   \              0x67 0x20    
   \              0x25 0x64    
   \              0x00         
   \   00000031   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_20:
   \   00000000   0x0D 0x0A          DC8 "\015\012 \311\317\323\315\320\243\327\274"
   \              0x20 0xC9    
   \              0xCF 0xD3    
   \              0xCD 0xD0    
   \              0xA3 0xD7    
   \              0xBC 0x00    

   \                                 In section .rodata, align 4
   \                     ?_21:
   \   00000000   0x0D 0x0A          DC8 "\015\012 \320\266\323\315\320\243\327\274"
   \              0x20 0xD0    
   \              0xB6 0xD3    
   \              0xCD 0xD0    
   \              0xA3 0xD7    
   \              0xBC 0x00    

   \                                 In section .rodata, align 4
   \                     ?_22:
   \   00000000   0xA1 0xA2          DC8 161, 162, 163, 165, 0, 0, 0, 0, 0, 0, 0, 0
   \              0xA3 0xA5    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000017   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000002E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000017   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000002E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
     144   CSNR_RecDealDip
       144   -> CSNR_GetData
       144   -> ClearFramRecEndFlgDip
       144   -> DipComOperate
       144   -> GetFramRecEndFlgDip
       144   -> GetSysTime
       144   -> ReadRs485DataDip
       144   -> SendCOM2
       144   -> SendCOM3
       144   -> __aeabi_memclr4
       8   ClearFramRecEndFlgDip
         8   -> ClearCOM1EndFlg
      48   DipComOperate
        48   -> GetRecaddrDip
        48   -> GetSysTime
        48   -> __aeabi_memcpy
      48   DipModelSet
        48   -> DisplaySet
        48   -> GetMathModelPara
        48   -> GetRecaddrDip
        48   -> StoreSetModelVal
        48   -> abs
        48   -> printfcom0
       8   Diptask
         8   -> CSNR_RecDealDip
         8   -> GetCOM1Data
         8   -> HostScanDip
       8   GetAddSpeed
         8   -> GetMyAddSpeed1
         8   -> GetMyAddSpeed2
         8   -> abs
         8   -> printfcom0
       0   GetCom1Dip1ErrFlg
       0   GetCom1Dip2ErrFlg
       0   GetDipVal
       8   GetFramRecEndFlgDip
         8   -> GetCOM1EndFlg
       0   GetLed0Com1Flg
       0   GetRecFlgdip
       0   GetRecaddrDip
       0   GetSetModelFlg
      16   GetSpeed
        16   -> GetMySpeed1
        16   -> GetMySpeed2
      72   HostScanDip
        72   -> DataSend_CSNR
        72   -> DelayX10ms
        72   -> GetAddSpeed
        72   -> GetDipVal
        72   -> GetMyLocoWorkState
        72   -> GetRecFlgdip
        72   -> GetSpeed
        72   -> GetSysTime
        72   -> __aeabi_memcpy
       8   ReadRs485DataDip
         8   -> ReadCOM1
     248   StoreSetModelVal
       248   -> GetCrc16Check
       248   -> WriteFM24CL64
       248   -> __aeabi_memcpy
       248   -> printfcom0


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable10
       4  ??DataTable10_1
       4  ??DataTable10_10
       4  ??DataTable10_11
       4  ??DataTable10_12
       4  ??DataTable10_2
       4  ??DataTable10_3
       4  ??DataTable10_4
       4  ??DataTable10_5
       4  ??DataTable10_6
       4  ??DataTable10_7
       4  ??DataTable10_8
       4  ??DataTable10_9
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_2
       4  ??DataTable11_3
       4  ??DataTable12
       4  ??DataTable12_1
       4  ??DataTable12_10
       4  ??DataTable12_11
       4  ??DataTable12_12
       4  ??DataTable12_13
       4  ??DataTable12_14
       4  ??DataTable12_15
       4  ??DataTable12_16
       4  ??DataTable12_17
       4  ??DataTable12_18
       4  ??DataTable12_19
       4  ??DataTable12_2
       4  ??DataTable12_20
       4  ??DataTable12_21
       4  ??DataTable12_22
       4  ??DataTable12_23
       4  ??DataTable12_24
       4  ??DataTable12_25
       4  ??DataTable12_26
       4  ??DataTable12_27
       4  ??DataTable12_28
       4  ??DataTable12_29
       4  ??DataTable12_3
       4  ??DataTable12_30
       4  ??DataTable12_31
       4  ??DataTable12_32
       4  ??DataTable12_33
       4  ??DataTable12_34
       4  ??DataTable12_35
       4  ??DataTable12_36
       4  ??DataTable12_37
       4  ??DataTable12_38
       4  ??DataTable12_4
       4  ??DataTable12_5
       4  ??DataTable12_6
       4  ??DataTable12_7
       4  ??DataTable12_8
       4  ??DataTable12_9
      16  ?_0
      32  ?_1
      44  ?_10
       8  ?_11
      16  ?_12
      16  ?_13
      64  ?_14
      12  ?_15
      64  ?_16
       8  ?_17
      64  ?_18
      52  ?_19
      20  ?_2
      12  ?_20
      12  ?_21
      12  ?_22
       4  ?_23
      64  ?_24
      64  ?_25
      76  ?_3
      16  ?_4
      72  ?_5
      72  ?_6
      76  ?_7
      72  ?_8
      52  ?_9
     258  CSNR_RecDealDip
       8  ClearFramRecEndFlgDip
     318  DipComOperate
    1426  DipModelSet
      16  Diptask
      82  GetAddSpeed
       8  GetCom1Dip1ErrFlg
       8  GetCom1Dip2ErrFlg
      10  GetDipVal
      10  GetFramRecEndFlgDip
       6  GetLed0Com1Flg
       8  GetRecFlgdip
       8  GetRecaddrDip
       8  GetSetModelFlg
      82  GetSpeed
     310  HostScanDip
      16  ReadRs485DataDip
    1108  StoreSetModelVal
       1  addflg
       4  dip1time
       4  dip2time
       4  errtime
       1  errtimes
       2  firstaddval
       2  firstmodelsetval
       1  l_com1SetModelflg
       1  l_com1dip1Errflg
       1  l_com1dip2Errflg
       1  l_led0com1flg
       1  l_recFlgdip
       1  l_recaddrdip
      36  l_sDip1CommData
      36  l_sDip2CommData
       1  l_setmodelflg
       2  lsthig
       2  lstval
       4  rectime
       1  sentendflgdip
       4  time
       1  tmp

 
   111 bytes in section .bss
 1 020 bytes in section .rodata
 3 914 bytes in section .text
 
 3 914 bytes of CODE  memory
 1 020 bytes of CONST memory
   111 bytes of DATA  memory

Errors: none
Warnings: 14
