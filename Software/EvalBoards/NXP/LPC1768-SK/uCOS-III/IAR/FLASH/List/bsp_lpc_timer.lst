###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       30/Sep/2017  11:25:09
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC136B-310统计模块\Software\BSP\Driver\bsp_lpc_timer.c
#    Command line =  
#        F:\iar\NC136B-310统计模块\Software\BSP\Driver\bsp_lpc_timer.c -lCN
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List
#        --diag_suppress Pa050 -o
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\csnr_package_deal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\tax\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\bsp_lpc_timer.lst
#    Object file  =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\bsp_lpc_timer.o
#
###############################################################################

F:\iar\NC136B-310统计模块\Software\BSP\Driver\bsp_lpc_timer.c
      1          #include <includes.h>

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void NVIC_EnableIRQ(IRQn_Type)
   \                     NVIC_EnableIRQ: (+1)
   \   00000000   0x2101             MOVS     R1,#+1
   \   00000002   0xF010 0x021F      ANDS     R2,R0,#0x1F
   \   00000006   0x4091             LSLS     R1,R1,R2
   \   00000008   0x....             LDR.N    R2,??DataTable4  ;; 0xe000e100
   \   0000000A   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   0000000C   0x0943             LSRS     R3,R0,#+5
   \   0000000E   0xF842 0x1023      STR      R1,[R2, R3, LSL #+2]
   \   00000012   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void NVIC_SetPriority(IRQn_Type, uint32_t)
   \                     NVIC_SetPriority: (+1)
   \   00000000   0xB410             PUSH     {R4}
   \   00000002   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD508             BPL.N    ??NVIC_SetPriority_0
   \   00000008   0x00CA             LSLS     R2,R1,#+3
   \   0000000A   0x....             LDR.N    R3,??DataTable4_1  ;; 0xe000ed18
   \   0000000C   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   0000000E   0xF010 0x040F      ANDS     R4,R0,#0xF
   \   00000012   0x18E3             ADDS     R3,R4,R3
   \   00000014   0xF803 0x2C04      STRB     R2,[R3, #-4]
   \   00000018   0xE003             B.N      ??NVIC_SetPriority_1
   \                     ??NVIC_SetPriority_0: (+1)
   \   0000001A   0x00CA             LSLS     R2,R1,#+3
   \   0000001C   0x....             LDR.N    R3,??DataTable4_2  ;; 0xe000e400
   \   0000001E   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000020   0x54C2             STRB     R2,[R0, R3]
   \                     ??NVIC_SetPriority_1: (+1)
   \   00000022   0xBC10             POP      {R4}
   \   00000024   0x4770             BX       LR               ;; return
      2          #include <osal.h>
      3          #include <bsp_os.h>
      4          
      5          
      6          #define		CAP00	126
      7          #define		CAP10	118
      8          #define		CAP20	4
      9          
     10          /***********************************************
     11          * 描述： OS接口
     12          */
     13          #if (UCOS_EN == DEF_ENABLED ) && ( OS_VERSION > 30000U )

   \                                 In section .bss, align 4
     14          OS_SEM           time0_over_Sem;               // 信号量
   \                     time0_over_Sem:
   \   00000000                      DS8 40
     15          #endif
     16          
     17          /***********************************************
     18          * 描述： OS接口
     19          */
     20          #if (UCOS_EN == DEF_ENABLED ) && ( OS_VERSION > 30000U )

   \                                 In section .bss, align 4
     21          OS_SEM           time1_over_Sem;               // 信号量
   \                     time1_over_Sem:
   \   00000000                      DS8 40
     22          #endif
     23          
     24          /***********************************************
     25          * 描述： OS接口
     26          */
     27          #if (UCOS_EN == DEF_ENABLED ) && ( OS_VERSION > 30000U )

   \                                 In section .bss, align 4
     28          OS_SEM           time2_over_Sem;               // 信号量
   \                     time2_over_Sem:
   \   00000000                      DS8 40
     29          #endif
     30          
     31          
     32          /*********************************************************************************************************
     33          ** Function name:     	uartInit
     34          ** Descriptions:	    串口初始化，设置为8位数据位，1位停止位，无奇偶校验，波特率为115200
     35          ** input parameters:    无
     36          ** output parameters:   无
     37          ** Returned value:      无
     38          *********************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     39          void Time0Init (void)
     40          {
   \                     Time0Init: (+1)
   \   00000000   0xB5E0             PUSH     {R5-R7,LR}
     41          //	UART_CFG_Type		UART_ConfigStruct_Test;
     42          //	UART_FIFO_CFG_Type 	FIFOCfg_Test;
     43          //	UART_INT_Type 		UARTIntCfg_Test;
     44          	TIM_TIMERCFG_Type TIM_ConfigStruct;
     45          	TIM_CAPTURECFG_Type TIM_CaptureConfigStruct;
     46          
     47          //	CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCTIM0,ENABLE);
     48          
     49          
     50          	GPIO_PinselConfig(CAP00,3);
   \   00000002   0x2103             MOVS     R1,#+3
   \   00000004   0x207E             MOVS     R0,#+126
   \   00000006   0x.... 0x....      BL       GPIO_PinselConfig
     51          
     52          	// Initialize timer 0, prescale count time of 1000000uS = 1S
     53          	TIM_ConfigStruct.PrescaleOption = TIM_PRESCALE_USVAL;
   \   0000000A   0x2001             MOVS     R0,#+1
   \   0000000C   0xF88D 0x0004      STRB     R0,[SP, #+4]
     54          //	TIM_ConfigStruct.PrescaleValue	= 1000000;
     55          	TIM_ConfigStruct.PrescaleValue	= 1;
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0x9002             STR      R0,[SP, #+8]
     56          
     57          	// use channel 0, CAPn.0
     58          	TIM_CaptureConfigStruct.CaptureChannel = 0;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0xF88D 0x0000      STRB     R0,[SP, #+0]
     59          	// DISABLE capture on CAPn.0 rising edge
     60          	TIM_CaptureConfigStruct.RisingEdge = DISABLE;
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0xF88D 0x0001      STRB     R0,[SP, #+1]
     61          	// Enable capture on CAPn.0 falling edge
     62          	TIM_CaptureConfigStruct.FallingEdge = ENABLE;
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0xF88D 0x0002      STRB     R0,[SP, #+2]
     63          	// Generate capture interrupt
     64          	TIM_CaptureConfigStruct.IntOnCaption = ENABLE;
   \   00000026   0x2001             MOVS     R0,#+1
   \   00000028   0xF88D 0x0003      STRB     R0,[SP, #+3]
     65          
     66          
     67          	// Set configuration for Tim_config and Tim_MatchConfig
     68          	TIM_Init(LPC_TIM0, TIM_TIMER_MODE,&TIM_ConfigStruct);
   \   0000002C   0xAA01             ADD      R2,SP,#+4
   \   0000002E   0x2100             MOVS     R1,#+0
   \   00000030   0xF05F 0x2040      MOVS     R0,#+1073758208
   \   00000034   0x.... 0x....      BL       TIM_Init
     69          	TIM_ConfigCapture(LPC_TIM0, &TIM_CaptureConfigStruct);
   \   00000038   0x4669             MOV      R1,SP
   \   0000003A   0xF05F 0x2040      MOVS     R0,#+1073758208
   \   0000003E   0x.... 0x....      BL       TIM_ConfigCapture
     70          	TIM_ResetCounter(LPC_TIM0);
   \   00000042   0xF05F 0x2040      MOVS     R0,#+1073758208
   \   00000046   0x.... 0x....      BL       TIM_ResetCounter
     71          
     72          
     73          	/* preemption = 1, sub-priority = 1 */
     74          	NVIC_SetPriority(TIMER0_IRQn, TIMER0_IRQn);
   \   0000004A   0x2101             MOVS     R1,#+1
   \   0000004C   0x2001             MOVS     R0,#+1
   \   0000004E   0x.... 0x....      BL       NVIC_SetPriority
     75          	/* Enable interrupt for timer 0 */
     76          	NVIC_EnableIRQ(TIMER0_IRQn);
   \   00000052   0x2001             MOVS     R0,#+1
   \   00000054   0x.... 0x....      BL       NVIC_EnableIRQ
     77          	// To start timer 0
     78          	TIM_Cmd(LPC_TIM0,ENABLE);		
   \   00000058   0x2101             MOVS     R1,#+1
   \   0000005A   0xF05F 0x2040      MOVS     R0,#+1073758208
   \   0000005E   0x.... 0x....      BL       TIM_Cmd
     79              
     80              #if ( OS_VERSION > 30000U )
     81                  BSP_OS_SemCreate(&time0_over_Sem, 0, "time0 over Sem");
   \   00000062   0x....             LDR.N    R2,??DataTable4_3
   \   00000064   0x2100             MOVS     R1,#+0
   \   00000066   0x....             LDR.N    R0,??DataTable4_4
   \   00000068   0x.... 0x....      BL       BSP_OS_SemCreate
     82              #endif
     83          }
   \   0000006C   0xBD07             POP      {R0-R2,PC}       ;; return
     84          
     85          
     86          /*********************************************************************************************************
     87          ** Function name:     	uartInit
     88          ** Descriptions:	    串口初始化，设置为8位数据位，1位停止位，无奇偶校验，波特率为115200
     89          ** input parameters:    无
     90          ** output parameters:   无
     91          ** Returned value:      无
     92          *********************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     93          void Time1Init (void)
     94          {
   \                     Time1Init: (+1)
   \   00000000   0xB5E0             PUSH     {R5-R7,LR}
     95          //	UART_CFG_Type		UART_ConfigStruct_Test;
     96          //	UART_FIFO_CFG_Type 	FIFOCfg_Test;
     97          //	UART_INT_Type 		UARTIntCfg_Test;
     98          	TIM_TIMERCFG_Type TIM_ConfigStruct;
     99          	TIM_CAPTURECFG_Type TIM_CaptureConfigStruct;
    100          
    101          //	CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCTIM0,ENABLE);
    102          
    103          	GPIO_PinselConfig(CAP10,3);
   \   00000002   0x2103             MOVS     R1,#+3
   \   00000004   0x2076             MOVS     R0,#+118
   \   00000006   0x.... 0x....      BL       GPIO_PinselConfig
    104          
    105          	// Initialize timer 0, prescale count time of 1000000uS = 1S
    106          	TIM_ConfigStruct.PrescaleOption = TIM_PRESCALE_USVAL;
   \   0000000A   0x2001             MOVS     R0,#+1
   \   0000000C   0xF88D 0x0004      STRB     R0,[SP, #+4]
    107          //	TIM_ConfigStruct.PrescaleValue	= 1000000;
    108          	TIM_ConfigStruct.PrescaleValue	= 1;
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0x9002             STR      R0,[SP, #+8]
    109          
    110          	// use channel 0, CAPn.0
    111          	TIM_CaptureConfigStruct.CaptureChannel = 0;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0xF88D 0x0000      STRB     R0,[SP, #+0]
    112          	// DISABLE capture on CAPn.0 rising edge
    113          	TIM_CaptureConfigStruct.RisingEdge = DISABLE;
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0xF88D 0x0001      STRB     R0,[SP, #+1]
    114          	// Enable capture on CAPn.0 falling edge
    115          	TIM_CaptureConfigStruct.FallingEdge = ENABLE;
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0xF88D 0x0002      STRB     R0,[SP, #+2]
    116          	// Generate capture interrupt
    117          	TIM_CaptureConfigStruct.IntOnCaption = ENABLE;
   \   00000026   0x2001             MOVS     R0,#+1
   \   00000028   0xF88D 0x0003      STRB     R0,[SP, #+3]
    118          
    119          
    120          	// Set configuration for Tim_config and Tim_MatchConfig
    121          	TIM_Init(LPC_TIM1, TIM_TIMER_MODE,&TIM_ConfigStruct);
   \   0000002C   0xAA01             ADD      R2,SP,#+4
   \   0000002E   0x2100             MOVS     R1,#+0
   \   00000030   0x....             LDR.N    R0,??DataTable4_5  ;; 0x40008000
   \   00000032   0x.... 0x....      BL       TIM_Init
    122          	TIM_ConfigCapture(LPC_TIM1, &TIM_CaptureConfigStruct);
   \   00000036   0x4669             MOV      R1,SP
   \   00000038   0x....             LDR.N    R0,??DataTable4_5  ;; 0x40008000
   \   0000003A   0x.... 0x....      BL       TIM_ConfigCapture
    123          	TIM_ResetCounter(LPC_TIM1);
   \   0000003E   0x....             LDR.N    R0,??DataTable4_5  ;; 0x40008000
   \   00000040   0x.... 0x....      BL       TIM_ResetCounter
    124          
    125          
    126          	/* preemption = 1, sub-priority = 1 */
    127          	NVIC_SetPriority(TIMER1_IRQn, TIMER1_IRQn);
   \   00000044   0x2102             MOVS     R1,#+2
   \   00000046   0x2002             MOVS     R0,#+2
   \   00000048   0x.... 0x....      BL       NVIC_SetPriority
    128          	/* Enable interrupt for timer 0 */
    129          	NVIC_EnableIRQ(TIMER1_IRQn);
   \   0000004C   0x2002             MOVS     R0,#+2
   \   0000004E   0x.... 0x....      BL       NVIC_EnableIRQ
    130          	// To start timer 1
    131          	TIM_Cmd(LPC_TIM1,ENABLE);		
   \   00000052   0x2101             MOVS     R1,#+1
   \   00000054   0x....             LDR.N    R0,??DataTable4_5  ;; 0x40008000
   \   00000056   0x.... 0x....      BL       TIM_Cmd
    132              
    133              #if (OS_VERSION > 30000U )
    134                  BSP_OS_SemCreate(&time1_over_Sem, 0, "time1 over Sem");
   \   0000005A   0x....             LDR.N    R2,??DataTable4_6
   \   0000005C   0x2100             MOVS     R1,#+0
   \   0000005E   0x....             LDR.N    R0,??DataTable4_7
   \   00000060   0x.... 0x....      BL       BSP_OS_SemCreate
    135              #endif
    136          }
   \   00000064   0xBD07             POP      {R0-R2,PC}       ;; return
    137          
    138          
    139          /*********************************************************************************************************
    140          ** Function name:     	uartInit
    141          ** Descriptions:	    串口初始化，设置为8位数据位，1位停止位，无奇偶校验，波特率为115200
    142          ** input parameters:    无
    143          ** output parameters:   无
    144          ** Returned value:      无
    145          *********************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    146          void Time2Init (void)
    147          {
   \                     Time2Init: (+1)
   \   00000000   0xB5E0             PUSH     {R5-R7,LR}
    148          //	UART_CFG_Type		UART_ConfigStruct_Test;
    149          //	UART_FIFO_CFG_Type 	FIFOCfg_Test;
    150          //	UART_INT_Type 		UARTIntCfg_Test;
    151          	TIM_TIMERCFG_Type TIM_ConfigStruct;
    152          	TIM_CAPTURECFG_Type TIM_CaptureConfigStruct;
    153          
    154          //	CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCTIM0,ENABLE);
    155          
    156          
    157          	GPIO_PinselConfig(CAP20,3);
   \   00000002   0x2103             MOVS     R1,#+3
   \   00000004   0x2004             MOVS     R0,#+4
   \   00000006   0x.... 0x....      BL       GPIO_PinselConfig
    158          
    159          	// Initialize timer 0, prescale count time of 1000000uS = 1S
    160          	TIM_ConfigStruct.PrescaleOption = TIM_PRESCALE_USVAL;
   \   0000000A   0x2001             MOVS     R0,#+1
   \   0000000C   0xF88D 0x0004      STRB     R0,[SP, #+4]
    161          //	TIM_ConfigStruct.PrescaleValue	= 1000000;
    162          	TIM_ConfigStruct.PrescaleValue	= 1;
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0x9002             STR      R0,[SP, #+8]
    163          
    164          	// use channel 0, CAPn.0
    165          	TIM_CaptureConfigStruct.CaptureChannel = 0;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0xF88D 0x0000      STRB     R0,[SP, #+0]
    166          	// DISABLE capture on CAPn.0 rising edge
    167          	TIM_CaptureConfigStruct.RisingEdge = DISABLE;
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0xF88D 0x0001      STRB     R0,[SP, #+1]
    168          	//TIM_CaptureConfigStruct.RisingEdge = ENABLE;
    169          	// Enable capture on CAPn.0 falling edge
    170          	TIM_CaptureConfigStruct.FallingEdge = ENABLE;
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0xF88D 0x0002      STRB     R0,[SP, #+2]
    171          	//TIM_CaptureConfigStruct.FallingEdge = DISABLE;
    172          	// Generate capture interrupt
    173          	TIM_CaptureConfigStruct.IntOnCaption = ENABLE;
   \   00000026   0x2001             MOVS     R0,#+1
   \   00000028   0xF88D 0x0003      STRB     R0,[SP, #+3]
    174          
    175          
    176          	// Set configuration for Tim_config and Tim_MatchConfig
    177          	TIM_Init(LPC_TIM2, TIM_TIMER_MODE,&TIM_ConfigStruct);
   \   0000002C   0xAA01             ADD      R2,SP,#+4
   \   0000002E   0x2100             MOVS     R1,#+0
   \   00000030   0x....             LDR.N    R0,??DataTable4_8  ;; 0x40090000
   \   00000032   0x.... 0x....      BL       TIM_Init
    178          	TIM_ConfigCapture(LPC_TIM2, &TIM_CaptureConfigStruct);
   \   00000036   0x4669             MOV      R1,SP
   \   00000038   0x....             LDR.N    R0,??DataTable4_8  ;; 0x40090000
   \   0000003A   0x.... 0x....      BL       TIM_ConfigCapture
    179          	TIM_ResetCounter(LPC_TIM2);
   \   0000003E   0x....             LDR.N    R0,??DataTable4_8  ;; 0x40090000
   \   00000040   0x.... 0x....      BL       TIM_ResetCounter
    180          
    181          
    182          	/* preemption = 1, sub-priority = 1 */
    183          	NVIC_SetPriority(TIMER2_IRQn, TIMER2_IRQn);
   \   00000044   0x2103             MOVS     R1,#+3
   \   00000046   0x2003             MOVS     R0,#+3
   \   00000048   0x.... 0x....      BL       NVIC_SetPriority
    184          	/* Enable interrupt for timer 0 */
    185          	NVIC_EnableIRQ(TIMER2_IRQn);
   \   0000004C   0x2003             MOVS     R0,#+3
   \   0000004E   0x.... 0x....      BL       NVIC_EnableIRQ
    186          	// To start timer 1
    187          	TIM_Cmd(LPC_TIM2,ENABLE);	
   \   00000052   0x2101             MOVS     R1,#+1
   \   00000054   0x....             LDR.N    R0,??DataTable4_8  ;; 0x40090000
   \   00000056   0x.... 0x....      BL       TIM_Cmd
    188              
    189              #if ( OS_VERSION > 30000U )
    190                  BSP_OS_SemCreate(&time2_over_Sem, 0, "time2 over Sem");
   \   0000005A   0x....             LDR.N    R2,??DataTable4_9
   \   0000005C   0x2100             MOVS     R1,#+0
   \   0000005E   0x....             LDR.N    R0,??DataTable4_10
   \   00000060   0x.... 0x....      BL       BSP_OS_SemCreate
    191              #endif
    192          }
   \   00000064   0xBD07             POP      {R0-R2,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0xE000E100         DC32     0xe000e100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0xE000ED18         DC32     0xe000ed18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0xE000E400         DC32     0xe000e400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x........         DC32     time0_over_Sem

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x40008000         DC32     0x40008000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x........         DC32     time1_over_Sem

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x40090000         DC32     0x40090000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x........         DC32     time2_over_Sem

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x74 0x69          DC8 "time0 over Sem"
   \              0x6D 0x65    
   \              0x30 0x20    
   \              0x6F 0x76    
   \              0x65 0x72    
   \              0x20 0x53    
   \              0x65 0x6D    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x74 0x69          DC8 "time1 over Sem"
   \              0x6D 0x65    
   \              0x31 0x20    
   \              0x6F 0x76    
   \              0x65 0x72    
   \              0x20 0x53    
   \              0x65 0x6D    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x74 0x69          DC8 "time2 over Sem"
   \              0x6D 0x65    
   \              0x32 0x20    
   \              0x6F 0x76    
   \              0x65 0x72    
   \              0x20 0x53    
   \              0x65 0x6D    
   \              0x00         
   \   0000000F   0x00               DC8 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   NVIC_EnableIRQ
       4   NVIC_SetPriority
      16   Time0Init
        16   -> BSP_OS_SemCreate
        16   -> GPIO_PinselConfig
        16   -> NVIC_EnableIRQ
        16   -> NVIC_SetPriority
        16   -> TIM_Cmd
        16   -> TIM_ConfigCapture
        16   -> TIM_Init
        16   -> TIM_ResetCounter
      16   Time1Init
        16   -> BSP_OS_SemCreate
        16   -> GPIO_PinselConfig
        16   -> NVIC_EnableIRQ
        16   -> NVIC_SetPriority
        16   -> TIM_Cmd
        16   -> TIM_ConfigCapture
        16   -> TIM_Init
        16   -> TIM_ResetCounter
      16   Time2Init
        16   -> BSP_OS_SemCreate
        16   -> GPIO_PinselConfig
        16   -> NVIC_EnableIRQ
        16   -> NVIC_SetPriority
        16   -> TIM_Cmd
        16   -> TIM_ConfigCapture
        16   -> TIM_Init
        16   -> TIM_ResetCounter


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
      16  ?_0
      16  ?_1
      16  ?_2
      20  NVIC_EnableIRQ
      38  NVIC_SetPriority
     110  Time0Init
     102  Time1Init
     102  Time2Init
      40  time0_over_Sem
      40  time1_over_Sem
      40  time2_over_Sem

 
 120 bytes in section .bss
  48 bytes in section .rodata
 416 bytes in section .text
 
 416 bytes of CODE  memory
  48 bytes of CONST memory
 120 bytes of DATA  memory

Errors: none
Warnings: none
