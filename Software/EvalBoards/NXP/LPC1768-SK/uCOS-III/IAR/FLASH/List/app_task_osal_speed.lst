###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       26/Sep/2017  15:08:20
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC136B-310统计模块\Software\APP\Tasks\app_task_osal_speed.c
#    Command line =  
#        F:\iar\NC136B-310统计模块\Software\APP\Tasks\app_task_osal_speed.c
#        -lCN
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List
#        --diag_suppress Pa050 -o
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\csnr_package_deal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\tax\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\app_task_osal_speed.lst
#    Object file  =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\app_task_osal_speed.o
#
###############################################################################

F:\iar\NC136B-310统计模块\Software\APP\Tasks\app_task_osal_speed.c
      1          /*******************************************************************************
      2           *   Filename:       app_task_store.c
      3           *   Revised:        All copyrights reserved to redmorningcn.
      4           *   Revision:       v1.0
      5           *   Writer:	     redmorningcn.
      6           *
      7           *   Description:    双击选中 speed 按 Ctrl + H, 钩选 Match the case, Replace with
      8           *                   输入您要的名字，点击 Replace All
      9           *                   双击选中 Speed 按 Ctrl + H, 钩选 Match the case, Replace with
     10           *                   输入您要的名字，点击 Replace All
     11           *                   双击选中 SPEED 按 Ctrl + H, 钩选 Match the case, Replace with
     12           *                   输入您要的名字，点击 Replace All
     13           *                   在 app_cfg.h 中指定本任务的 优先级  （ APP_TASK_SPEED_PRIO ）
     14           *                                            和 任务堆栈（ APP_TASK_SPEED_STK_SIZE ）大小
     15           *                   在 app.h 中声明本任务的     创建函数（ void  App_TaskSpeedCreate(void) ）
     16           *                                            和 看门狗标志位 （ WDTFLAG_Speed ）
     17           *
     18           *   Notes:
     19           *     				E-mail: redmorningcn@qq.com
     20           *
     21           *******************************************************************************/
     22          
     23          /*******************************************************************************
     24           * INCLUDES
     25           */
     26          #define  SNL_APP_SOURCE
     27          #include <includes.h>
     28          #include <global.h>
     29          #include <app_ctrl.h>
     30          #include <cpu.h>
     31          
     32          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     33          const  CPU_CHAR  *app_task_speed__c = "$Id: $";
     34          #endif
     35          
     36          #define APP_TASK_SPEED_EN     DEF_ENABLED
     37          #if APP_TASK_SPEED_EN == DEF_ENABLED				//
     38          /*******************************************************************************
     39           * CONSTANTS
     40           */
     41          
     42          /*******************************************************************************
     43           * MACROS
     44           */
     45          
     46          /*******************************************************************************
     47           * TYPEDEFS
     48           */
     49          
     50          /*******************************************************************************
     51           * LOCAL VARIABLES
     52           */
     53          extern  uint16  l_speed1;
     54          extern  uint16  l_speed2;
     55          extern  uint16  l_speedcs;
     56          extern  uint8   l_locoworksta;
     57          
     58          
     59          #if ( OSAL_EN == DEF_ENABLED )
     60          #else
     61          /***********************************************
     62          * 描述： 任务控制块（TCB）
     63          */
     64          static  OS_TCB   AppTaskSpeedTCB;
     65          
     66          /***********************************************
     67          * 描述： 任务堆栈（STACKS）
     68          */
     69          static  CPU_STK  AppTaskSpeedStk[ APP_TASK_SPEED_STK_SIZE ];
     70          
     71          #endif
     72          /*******************************************************************************
     73           * GLOBAL VARIABLES
     74           */
     75          
     76          /*******************************************************************************
     77           * LOCAL FUNCTIONS
     78           */
     79          #if ( OSAL_EN == DEF_ENABLED )
     80          #else
     81          extern	void    BSP_SpeedInit(void);
     82          #endif
     83          
     84          /*******************************************************************************
     85           * GLOBAL FUNCTIONS
     86           */
     87          
     88          /*******************************************************************************
     89           * EXTERN VARIABLES
     90           */
     91          extern	stcSysCtrl       sCtrl;       	//	全局结构控制体
     92          /*******************************************************************************/
     93          
     94          
     95          
     96          /*******************************************************************************
     97           * 名    称：  TaskInitSpeed
     98           * 功    能：  任务初始化
     99           * 入口参数： 	无
    100           * 出口参数： 	无
    101           * 作　 　者： 	redmornigcn
    102           * 创建日期： 	2017-05-15
    103           * 修    改：
    104           * 修改日期：
    105           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    106          void    BSP_SpeedInit(void)
    107          {
   \                     BSP_SpeedInit: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    108          	
    109              Time0Init();        //初始化速度传感器1
   \   00000002   0x.... 0x....      BL       Time0Init
    110              
    111          	Time1Init();        //初始化速度传感器2
   \   00000006   0x.... 0x....      BL       Time1Init
    112              
    113          	Time2Init();        //初始化柴速检测
   \   0000000A   0x.... 0x....      BL       Time2Init
    114              
    115              InitLocoStaIO();    //初始化工况检测IO脚
   \   0000000E   0x.... 0x....      BL       InitLocoStaIO
    116          }
   \   00000012   0xBD01             POP      {R0,PC}          ;; return
    117          
    118          /*******************************************************************************
    119           * 名    称：  TaskInitSpeed
    120           * 功    能：  任务初始化
    121           * 入口参数： 	无
    122           * 出口参数： 	无
    123           * 作　 　者： 	redmornigcn
    124           * 创建日期： 	2017-05-15
    125           * 修    改：
    126           * 修改日期：
    127           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    128          void TaskInitSpeed(void)
    129          {    
   \                     TaskInitSpeed: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    130          //    /***********************************************
    131          //    * 描述： 初始化本任务用到的相关硬件
    132          //    */
    133              BSP_SpeedInit();			//初始化Flash底层相关函数
   \   00000002   0x.... 0x....      BL       BSP_SpeedInit
    134          
    135          //初始化定时器
    136              osal_start_timerEx( OS_TASK_ID_SPEED,
    137                                OS_EVT_SPEED_TICKS,
    138                                1000);
   \   00000006   0xF44F 0x727A      MOV      R2,#+1000
   \   0000000A   0x2101             MOVS     R1,#+1
   \   0000000C   0x2003             MOVS     R0,#+3
   \   0000000E   0x.... 0x....      BL       osal_start_timerEx
    139          }
   \   00000012   0xBD01             POP      {R0,PC}          ;; return
    140          
    141          extern  MODBUS_CH   *g_pch; 
    142          /*******************************************************************************
    143           * 名    称： 		AppTaskSpeed
    144           * 功    能： 		控制任务
    145           * 入口参数： 	p_arg - 由任务创建函数传入
    146           * 出口参数： 	无
    147           * 作　 　者： 	redmorningcn.
    148           * 创建日期： 	2017-05-15
    149           * 修    改：
    150           * 修改日期：
    151           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    152          osalEvt  TaskSpeedEvtProcess(INT8U task_id, osalEvt task_event)
    153          {
   \                     TaskSpeedEvtProcess: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    154              OS_ERR      err;
    155              INT32U      ticks;
    156              INT32S      dly;
    157              CPU_SR_ALLOC();
   \   00000006   0x2600             MOVS     R6,#+0
    158          
    159              if( task_event & OS_EVT_SPEED_TICKS ) {
   \   00000008   0x07E8             LSLS     R0,R5,#+31
   \   0000000A   0xD521             BPL.N    ??TaskSpeedEvtProcess_0
    160          
    161                      SpeedAndDistTast();         //速度计算，内定义了 l_speed1，l_speed2，l_speedcs，全局变量
   \   0000000C   0x.... 0x....      BL       SpeedAndDistTast
    162                      
    163                      CheckLocoStaTask();         //工况检测，定义了l_locoworksta全局变量
   \   00000010   0x.... 0x....      BL       CheckLocoStaTask
    164                      
    165                      //给速度、工况等赋值
    166                      sCtrl.sRec.Myspeed1         = l_speed1;
   \   00000014   0x....             LDR.N    R0,??DataTable0
   \   00000016   0x8800             LDRH     R0,[R0, #+0]
   \   00000018   0x....             LDR.N    R1,??DataTable0_1
   \   0000001A   0xF8A1 0x0050      STRH     R0,[R1, #+80]
    167                      sCtrl.sRec.Myspeed2         = l_speed2;
   \   0000001E   0x....             LDR.N    R0,??DataTable0_2
   \   00000020   0x8800             LDRH     R0,[R0, #+0]
   \   00000022   0x....             LDR.N    R1,??DataTable0_1
   \   00000024   0xF8A1 0x0052      STRH     R0,[R1, #+82]
    168                      sCtrl.sRec.MyEngRotSpd      = l_speedcs;
   \   00000028   0x....             LDR.N    R0,??DataTable0_3
   \   0000002A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000002E   0x....             LDR.N    R1,??DataTable0_1
   \   00000030   0xF8A1 0x0082      STRH     R0,[R1, #+130]
    169                      
    170                      sCtrl.sRec.MyLocoWorkState  = l_locoworksta;
   \   00000034   0x....             LDR.N    R0,??DataTable0_4
   \   00000036   0x7800             LDRB     R0,[R0, #+0]
   \   00000038   0x....             LDR.N    R1,??DataTable0_1
   \   0000003A   0xF881 0x0099      STRB     R0,[R1, #+153]
    171                      
    172                      osal_start_timerEx( OS_TASK_ID_SPEED,
    173                                          OS_EVT_SPEED_TICKS,
    174                                          1000);
   \   0000003E   0xF44F 0x727A      MOV      R2,#+1000
   \   00000042   0x2101             MOVS     R1,#+1
   \   00000044   0x2003             MOVS     R0,#+3
   \   00000046   0x.... 0x....      BL       osal_start_timerEx
    175                      
    176                      return ( task_event ^ OS_EVT_SPEED_TICKS );
   \   0000004A   0xF095 0x0001      EORS     R0,R5,#0x1
   \   0000004E   0xE7FF             B.N      ??TaskSpeedEvtProcess_1
    177                  }
    178          }
   \                     ??TaskSpeedEvtProcess_0: (+1)
   \                     ??TaskSpeedEvtProcess_1: (+1)
   \   00000050   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     l_speed1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x........         DC32     sCtrl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_2:
   \   00000000   0x........         DC32     l_speed2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_3:
   \   00000000   0x........         DC32     l_speedcs

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_4:
   \   00000000   0x........         DC32     l_locoworksta
    179          
    180          
    181          
    182          /*******************************************************************************
    183           * 				                    end of file                                *
    184           *******************************************************************************/
    185          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   BSP_SpeedInit
         8   -> InitLocoStaIO
         8   -> Time0Init
         8   -> Time1Init
         8   -> Time2Init
       8   TaskInitSpeed
         8   -> BSP_SpeedInit
         8   -> osal_start_timerEx
      16   TaskSpeedEvtProcess
        16   -> CheckLocoStaTask
        16   -> SpeedAndDistTast
        16   -> osal_start_timerEx


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable0_1
       4  ??DataTable0_2
       4  ??DataTable0_3
       4  ??DataTable0_4
      20  BSP_SpeedInit
      20  TaskInitSpeed
      82  TaskSpeedEvtProcess

 
 142 bytes in section .text
 
 142 bytes of CODE memory

Errors: none
Warnings: 11
