###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       06/Sep/2017  10:50:15
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC136B-310统计模块\Application\Library\SlaveConTask\cnsccomdeal.c
#    Command line =  
#        F:\iar\NC136B-310统计模块\Application\Library\SlaveConTask\cnsccomdeal.c
#        -lCN
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List
#        --diag_suppress Pa050 -o
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\csnr_package_deal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\iap\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\cnsccomdeal.lst
#    Object file  =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\cnsccomdeal.o
#
###############################################################################

F:\iar\NC136B-310统计模块\Application\Library\SlaveConTask\cnsccomdeal.c
      1          #include <includes.h>
      2          #include  "csnr_package_deal.h"
      3          
      4          

   \                                 In section .bss, align 4
      5          stcCsnrProtocolPara l_sendsprotocolpara;	
   \                     l_sendsprotocolpara:
   \   00000000                      DS8 12

   \                                 In section .bss, align 4
      6          stcCsnrProtocolPara l_recsprotocolpara;	
   \                     l_recsprotocolpara:
   \   00000000                      DS8 12
      7          

   \                                 In section .bss, align 1
      8          uint8	l_gprsrecflg = 0;
   \                     l_gprsrecflg:
   \   00000000                      DS8 1

   \                                 In section .text, align 2, keep-with-next
      9          uint8	GetGprsRecFlg(void)
     10          {
     11          	return	l_gprsrecflg;
   \                     GetGprsRecFlg: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable5
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
     12          }
     13          

   \                                 In section .text, align 2, keep-with-next
     14          void	SetGprsRecFlg(void)
     15          {
     16          	l_gprsrecflg = 1;
   \                     SetGprsRecFlg: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x....             LDR.N    R1,??DataTable5
   \   00000004   0x7008             STRB     R0,[R1, #+0]
     17          }
   \   00000006   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
     18          void	ClearGprsRecFlg(void)
     19          {
     20          	l_gprsrecflg = 0;
   \                     ClearGprsRecFlg: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x....             LDR.N    R1,??DataTable5
   \   00000004   0x7008             STRB     R0,[R1, #+0]
     21          }
   \   00000006   0x4770             BX       LR               ;; return
     22          
     23          

   \                                 In section .text, align 2, keep-with-next
     24          void	 GprsRecOperate(stcCsnrProtocolPara   recsprotocolpara)
     25          {
   \                     GprsRecOperate: (+1)
   \   00000000   0xB577             PUSH     {R0-R2,R4-R6,LR}
   \   00000002   0xB081             SUB      SP,SP,#+4
     26          //		printfcom0("\r\n接收内容：\r\n\r\n");
     27          		
     28          //		if(DataUnpack_CSNR((stcCsnrProtocolPara *)&l_recsprotocolpara,RecBuf,RecLen))	//接收数据
     29          		{
     30          				SetGprsRecFlg();
   \   00000004   0x.... 0x....      BL       SetGprsRecFlg
     31          				memcpy((uint8 *)&l_recsprotocolpara,(uint8 *)&recsprotocolpara,sizeof(stcCsnrProtocolPara));	
   \   00000008   0x240C             MOVS     R4,#+12
   \   0000000A   0xAD01             ADD      R5,SP,#+4
   \   0000000C   0x....             LDR.N    R6,??DataTable5_1
   \   0000000E   0x0022             MOVS     R2,R4
   \   00000010   0x0029             MOVS     R1,R5
   \   00000012   0x0030             MOVS     R0,R6
   \   00000014   0x.... 0x....      BL       __aeabi_memcpy
     32          		}
     33          }
   \   00000018   0xBD7F             POP      {R0-R6,PC}       ;; return
     34          
     35          
     36          

   \                                 In section .text, align 2, keep-with-next
     37          void	Gprs_Send_Ctrl(void)
     38          {
   \                     Gprs_Send_Ctrl: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB0E3             SUB      SP,SP,#+396
     39          	static	uint32	time = 0;
     40          	static	uint32	framnum = 1;
     41          	uint32	currecnum;
     42          	uint32	gprsrecnum;
     43          	uint8		sendbuf[256];
     44          	uint8		sendlen;
     45          	uint8		sFlshRecbuf[128];	
     46          	uint32	i;
     47          	stcFlshRec	 sFlshRec;
     48          				
     49          	l_sendsprotocolpara.sourceaddr = 0x80;
   \   00000004   0x2080             MOVS     R0,#+128
   \   00000006   0x....             LDR.N    R1,??DataTable5_2
   \   00000008   0x7008             STRB     R0,[R1, #+0]
     50          	l_sendsprotocolpara.destaddr   = 0xca;
   \   0000000A   0x20CA             MOVS     R0,#+202
   \   0000000C   0x....             LDR.N    R1,??DataTable5_2
   \   0000000E   0x7048             STRB     R0,[R1, #+1]
     51          	l_sendsprotocolpara.framcode   = 0x00;
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x....             LDR.N    R1,??DataTable5_2
   \   00000014   0x70C8             STRB     R0,[R1, #+3]
     52          	l_sendsprotocolpara.framnum    = framnum;
   \   00000016   0x....             LDR.N    R0,??DataTable5_3
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0x....             LDR.N    R1,??DataTable5_2
   \   0000001C   0x7088             STRB     R0,[R1, #+2]
     53          
     54          	if(
     55                      GetSysTime() - time > 100*10 
     56                  || 	(GetGprsRecFlg()  && (GetSysTime() - time > 100))
     57                  )	
   \   0000001E   0x.... 0x....      BL       GetSysTime
   \   00000022   0x....             LDR.N    R1,??DataTable5_4
   \   00000024   0x6809             LDR      R1,[R1, #+0]
   \   00000026   0x1A40             SUBS     R0,R0,R1
   \   00000028   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   0000002C   0xD80A             BHI.N    ??Gprs_Send_Ctrl_0
   \   0000002E   0x.... 0x....      BL       GetGprsRecFlg
   \   00000032   0x2800             CMP      R0,#+0
   \   00000034   0xD058             BEQ.N    ??Gprs_Send_Ctrl_1
   \   00000036   0x.... 0x....      BL       GetSysTime
   \   0000003A   0x....             LDR.N    R1,??DataTable5_4
   \   0000003C   0x6809             LDR      R1,[R1, #+0]
   \   0000003E   0x1A40             SUBS     R0,R0,R1
   \   00000040   0x2865             CMP      R0,#+101
   \   00000042   0xD351             BCC.N    ??Gprs_Send_Ctrl_1
     58          	{
     59          		time = GetSysTime();
   \                     ??Gprs_Send_Ctrl_0: (+1)
   \   00000044   0x.... 0x....      BL       GetSysTime
   \   00000048   0x....             LDR.N    R1,??DataTable5_4
   \   0000004A   0x6008             STR      R0,[R1, #+0]
     60          		ClearGprsRecFlg();	
   \   0000004C   0x.... 0x....      BL       ClearGprsRecFlg
     61          		
     62          		currecnum 	= GetCurFlshRecNum();									//当前流水号
   \   00000050   0x.... 0x....      BL       GetCurFlshRecNum
   \   00000054   0x0004             MOVS     R4,R0
     63          		gprsrecnum 	= GetLstFlshRecNum_gprs();
   \   00000056   0x.... 0x....      BL       GetLstFlshRecNum_gprs
   \   0000005A   0x0005             MOVS     R5,R0
     64          		
     65          		if(gprsrecnum > currecnum)												//出错处理
   \   0000005C   0x42AC             CMP      R4,R5
   \   0000005E   0xD203             BCS.N    ??Gprs_Send_Ctrl_2
     66          		{
     67          				gprsrecnum = currecnum;
   \   00000060   0x0025             MOVS     R5,R4
     68          				StoreLstRedFlshRecNum_gprs(gprsrecnum);
   \   00000062   0x0028             MOVS     R0,R5
   \   00000064   0x.... 0x....      BL       StoreLstRedFlshRecNum_gprs
     69          		}
     70          	
     71          		if(gprsrecnum < currecnum)
   \                     ??Gprs_Send_Ctrl_2: (+1)
   \   00000068   0x42A5             CMP      R5,R4
   \   0000006A   0xD23D             BCS.N    ??Gprs_Send_Ctrl_1
     72          		{
     73          			ReadFlshRec((stcFlshRec *)&sFlshRec,gprsrecnum);
   \   0000006C   0x0029             MOVS     R1,R5
   \   0000006E   0xA802             ADD      R0,SP,#+8
   \   00000070   0x.... 0x....      BL       ReadFlshRec
     74          			//ReadFileData(gprsrecnum*128,(uint8 *)&sFlshRec,128);
     75          
     76          			if(l_sendsprotocolpara.framnum == l_recsprotocolpara.framnum) //接收正确
   \   00000074   0x....             LDR.N    R0,??DataTable5_2
   \   00000076   0x7880             LDRB     R0,[R0, #+2]
   \   00000078   0x....             LDR.N    R1,??DataTable5_1
   \   0000007A   0x7889             LDRB     R1,[R1, #+2]
   \   0000007C   0x4288             CMP      R0,R1
   \   0000007E   0xD105             BNE.N    ??Gprs_Send_Ctrl_3
     77          			{
     78          				framnum++;
   \   00000080   0x....             LDR.N    R0,??DataTable5_3
   \   00000082   0x6800             LDR      R0,[R0, #+0]
   \   00000084   0x1C40             ADDS     R0,R0,#+1
   \   00000086   0x....             LDR.N    R1,??DataTable5_3
   \   00000088   0x6008             STR      R0,[R1, #+0]
     79          				gprsrecnum++;
   \   0000008A   0x1C6D             ADDS     R5,R5,#+1
     80          			}
     81          			
     82          			l_sendsprotocolpara.framnum    = framnum;
   \                     ??Gprs_Send_Ctrl_3: (+1)
   \   0000008C   0x....             LDR.N    R0,??DataTable5_3
   \   0000008E   0x6800             LDR      R0,[R0, #+0]
   \   00000090   0x....             LDR.N    R1,??DataTable5_2
   \   00000092   0x7088             STRB     R0,[R1, #+2]
     83          			l_sendsprotocolpara.databuf    = (uint8 *)&sFlshRec;
   \   00000094   0xA802             ADD      R0,SP,#+8
   \   00000096   0x....             LDR.N    R1,??DataTable5_2
   \   00000098   0x6048             STR      R0,[R1, #+4]
     84          			l_sendsprotocolpara.datalen    = sizeof(sFlshRec);
   \   0000009A   0x2080             MOVS     R0,#+128
   \   0000009C   0x....             LDR.N    R1,??DataTable5_2
   \   0000009E   0x7208             STRB     R0,[R1, #+8]
     85          			
     86          			DataPackage_CSNR(l_sendsprotocolpara,sendbuf,&sendlen);
   \   000000A0   0xA801             ADD      R0,SP,#+4
   \   000000A2   0x9000             STR      R0,[SP, #+0]
   \   000000A4   0xAB22             ADD      R3,SP,#+136
   \   000000A6   0x....             LDR.N    R0,??DataTable5_2
   \   000000A8   0xC807             LDM      R0,{R0-R2}
   \   000000AA   0x.... 0x....      BL       DataPackage_CSNR
     87          			
     88          			//SendCom0(sendbuf,sendlen);	
     89          			//地址判断
     90          			if((l_sendsprotocolpara.destaddr & 0xA0) == 0xA0)
   \   000000AE   0x....             LDR.N    R0,??DataTable5_2
   \   000000B0   0x7840             LDRB     R0,[R0, #+1]
   \   000000B2   0xF010 0x00A0      ANDS     R0,R0,#0xA0
   \   000000B6   0x28A0             CMP      R0,#+160
   \   000000B8   0xD105             BNE.N    ??Gprs_Send_Ctrl_4
     91          			{
     92          				SendCOM1(sendbuf,sendlen) ;
   \   000000BA   0xF89D 0x1004      LDRB     R1,[SP, #+4]
   \   000000BE   0xA822             ADD      R0,SP,#+136
   \   000000C0   0x.... 0x....      BL       SendCOM1
   \   000000C4   0xE00A             B.N      ??Gprs_Send_Ctrl_5
     93          			}
     94          			else if((l_sendsprotocolpara.destaddr & 0xC0) == 0xC0)
   \                     ??Gprs_Send_Ctrl_4: (+1)
   \   000000C6   0x....             LDR.N    R0,??DataTable5_2
   \   000000C8   0x7840             LDRB     R0,[R0, #+1]
   \   000000CA   0xF010 0x00C0      ANDS     R0,R0,#0xC0
   \   000000CE   0x28C0             CMP      R0,#+192
   \   000000D0   0xD104             BNE.N    ??Gprs_Send_Ctrl_5
     95          			{
     96          //				if(	GetPrintfFlg()== 0)
     97          //				{
     98          //					SendCOM2(sendbuf,sendlen) ; 
     99          //				}
    100          				SendCOM3(sendbuf,sendlen) ; 	
   \   000000D2   0xF89D 0x1004      LDRB     R1,[SP, #+4]
   \   000000D6   0xA822             ADD      R0,SP,#+136
   \   000000D8   0x.... 0x....      BL       SendCOM3
    101          			}
    102          			
    103          			printfcom0("\r\n\r\n GPRS发送\r\n\r\n");
   \                     ??Gprs_Send_Ctrl_5: (+1)
   \   000000DC   0x....             LDR.N    R0,??DataTable5_5
   \   000000DE   0x.... 0x....      BL       printfcom0
    104                      
    105          //			printftextbox("\r\n发送数据：",framnum); 
    106          //			for(i=0;i<sendlen;i++)
    107          //				printftextbox("%02x ",sendbuf[i]);	
    108          //			
    109          			StoreLstRedFlshRecNum_gprs(gprsrecnum);
   \   000000E2   0x0028             MOVS     R0,R5
   \   000000E4   0x.... 0x....      BL       StoreLstRedFlshRecNum_gprs
    110          //			printftextbox("\r\n数据发送：记录号：%d",framnum);  
    111          		}
    112          	}
    113          }
   \                     ??Gprs_Send_Ctrl_1: (+1)
   \   000000E8   0xB063             ADD      SP,SP,#+396
   \   000000EA   0xBD30             POP      {R4,R5,PC}       ;; return

   \                                 In section .bss, align 4
   \                     ??time:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
   \                     ??framnum:
   \   00000000   0x00000001         DC32 1
    114          
    115          

   \                                 In section .text, align 2, keep-with-next
    116          void	Gprs_Send_liveinfo(void)
    117          {
   \                     Gprs_Send_liveinfo: (+1)
   \   00000000   0xE92D 0x43F0      PUSH     {R4-R9,LR}
   \   00000004   0xB0C9             SUB      SP,SP,#+292
    118          	static	uint32	time = 0;
    119          	uint8		buf[8];
    120          	uint16	locotype,loconum;
    121          	uint8		len;
    122          	uint8		sendbuf[256];
    123          	uint8		sendlen;	
    124          	stcCsnrProtocolPara sendsprotocolpara;	
    125          
    126          	if(GetSysTime() - time > 100*60)
   \   00000006   0x.... 0x....      BL       GetSysTime
   \   0000000A   0x....             LDR.N    R1,??DataTable5_6
   \   0000000C   0x6809             LDR      R1,[R1, #+0]
   \   0000000E   0x1A40             SUBS     R0,R0,R1
   \   00000010   0xF241 0x7171      MOVW     R1,#+6001
   \   00000014   0x4288             CMP      R0,R1
   \   00000016   0xD360             BCC.N    ??Gprs_Send_liveinfo_0
    127          	{
    128          		time = GetSysTime();
   \   00000018   0x.... 0x....      BL       GetSysTime
   \   0000001C   0x....             LDR.N    R1,??DataTable5_6
   \   0000001E   0x6008             STR      R0,[R1, #+0]
    129          		
    130          		locotype = 	104;
   \   00000020   0x2068             MOVS     R0,#+104
   \   00000022   0xF8AD 0x0008      STRH     R0,[SP, #+8]
    131          		loconum = 	234;
   \   00000026   0x20EA             MOVS     R0,#+234
   \   00000028   0xF8AD 0x0006      STRH     R0,[SP, #+6]
    132          	
    133          //		printftextbox("\r\n生命信号：");  
    134          		
    135          		sendsprotocolpara.sourceaddr = 0x80;
   \   0000002C   0x2080             MOVS     R0,#+128
   \   0000002E   0xF88D 0x000C      STRB     R0,[SP, #+12]
    136          		sendsprotocolpara.destaddr   = 0xca;
   \   00000032   0x20CA             MOVS     R0,#+202
   \   00000034   0xF88D 0x000D      STRB     R0,[SP, #+13]
    137          		sendsprotocolpara.framcode   = 0x02;
   \   00000038   0x2002             MOVS     R0,#+2
   \   0000003A   0xF88D 0x000F      STRB     R0,[SP, #+15]
    138          		sendsprotocolpara.framnum    = 0;	
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0xF88D 0x000E      STRB     R0,[SP, #+14]
    139          	
    140          		len = 0;
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0x4680             MOV      R8,R0
    141          		memcpy(&buf[len],(uint8 *)&locotype,sizeof(locotype));
   \   00000048   0x2402             MOVS     R4,#+2
   \   0000004A   0xAD02             ADD      R5,SP,#+8
   \   0000004C   0xA806             ADD      R0,SP,#+24
   \   0000004E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000052   0xEB18 0x0600      ADDS     R6,R8,R0
   \   00000056   0x0022             MOVS     R2,R4
   \   00000058   0x0029             MOVS     R1,R5
   \   0000005A   0x0030             MOVS     R0,R6
   \   0000005C   0x.... 0x....      BL       __aeabi_memcpy
    142          		len += sizeof(locotype);
   \   00000060   0xF118 0x0802      ADDS     R8,R8,#+2
    143          		memcpy(&buf[len],(uint8 *)&loconum,sizeof(loconum));
   \   00000064   0x2602             MOVS     R6,#+2
   \   00000066   0xF10D 0x0706      ADD      R7,SP,#+6
   \   0000006A   0xA806             ADD      R0,SP,#+24
   \   0000006C   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000070   0xEB18 0x0900      ADDS     R9,R8,R0
   \   00000074   0x0032             MOVS     R2,R6
   \   00000076   0x0039             MOVS     R1,R7
   \   00000078   0x4648             MOV      R0,R9
   \   0000007A   0x.... 0x....      BL       __aeabi_memcpy
    144          		len += sizeof(loconum);
   \   0000007E   0xF118 0x0802      ADDS     R8,R8,#+2
    145          		
    146          		sendsprotocolpara.databuf    = buf;
   \   00000082   0xA806             ADD      R0,SP,#+24
   \   00000084   0x9004             STR      R0,[SP, #+16]
    147          		sendsprotocolpara.datalen    = sizeof(buf);	
   \   00000086   0x2008             MOVS     R0,#+8
   \   00000088   0xF88D 0x0014      STRB     R0,[SP, #+20]
    148          		
    149          		DataPackage_CSNR(sendsprotocolpara,sendbuf,&sendlen);
   \   0000008C   0xA801             ADD      R0,SP,#+4
   \   0000008E   0x9000             STR      R0,[SP, #+0]
   \   00000090   0xAB08             ADD      R3,SP,#+32
   \   00000092   0xA803             ADD      R0,SP,#+12
   \   00000094   0xC807             LDM      R0,{R0-R2}
   \   00000096   0x.... 0x....      BL       DataPackage_CSNR
    150          		
    151          //		SendCom0(sendbuf,sendlen);	
    152          		if((sendsprotocolpara.destaddr & 0xA0) == 0xA0)
   \   0000009A   0xF89D 0x000D      LDRB     R0,[SP, #+13]
   \   0000009E   0xF010 0x00A0      ANDS     R0,R0,#0xA0
   \   000000A2   0x28A0             CMP      R0,#+160
   \   000000A4   0xD105             BNE.N    ??Gprs_Send_liveinfo_1
    153          		{
    154          			SendCOM1(sendbuf,sendlen) ;
   \   000000A6   0xF89D 0x1004      LDRB     R1,[SP, #+4]
   \   000000AA   0xA808             ADD      R0,SP,#+32
   \   000000AC   0x.... 0x....      BL       SendCOM1
   \   000000B0   0xE013             B.N      ??Gprs_Send_liveinfo_0
    155          		}
    156          		else if((sendsprotocolpara.destaddr & 0xC0) == 0xC0)
   \                     ??Gprs_Send_liveinfo_1: (+1)
   \   000000B2   0xF89D 0x000D      LDRB     R0,[SP, #+13]
   \   000000B6   0xF010 0x00C0      ANDS     R0,R0,#0xC0
   \   000000BA   0x28C0             CMP      R0,#+192
   \   000000BC   0xD10D             BNE.N    ??Gprs_Send_liveinfo_0
    157          		{
    158          			if(	GetPrintfFlg()== 0)
   \   000000BE   0x.... 0x....      BL       GetPrintfFlg
   \   000000C2   0x2800             CMP      R0,#+0
   \   000000C4   0xD104             BNE.N    ??Gprs_Send_liveinfo_2
    159          			{
    160          				SendCOM2(sendbuf,sendlen) ; 
   \   000000C6   0xF89D 0x1004      LDRB     R1,[SP, #+4]
   \   000000CA   0xA808             ADD      R0,SP,#+32
   \   000000CC   0x.... 0x....      BL       SendCOM2
    161          			}
    162          			SendCOM3(sendbuf,sendlen) ; 	
   \                     ??Gprs_Send_liveinfo_2: (+1)
   \   000000D0   0xF89D 0x1004      LDRB     R1,[SP, #+4]
   \   000000D4   0xA808             ADD      R0,SP,#+32
   \   000000D6   0x.... 0x....      BL       SendCOM3
    163          		}
    164          	}
    165          }
   \                     ??Gprs_Send_liveinfo_0: (+1)
   \   000000DA   0xB049             ADD      SP,SP,#+292
   \   000000DC   0xE8BD 0x83F0      POP      {R4-R9,PC}       ;; return

   \                                 In section .bss, align 4
   \                     ??time_1:
   \   00000000                      DS8 4
    166          

   \                                 In section .text, align 2, keep-with-next
    167          void  GprsDataComDeal(void)
    168          {
   \                     GprsDataComDeal: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    169          //	Gprs_Rec_Ctrl();
    170          	Gprs_Send_Ctrl();
   \   00000002   0x.... 0x....      BL       Gprs_Send_Ctrl
    171          //	Gprs_Send_liveinfo();
    172          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x........         DC32     l_gprsrecflg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     l_recsprotocolpara

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x........         DC32     l_sendsprotocolpara

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x........         DC32     ??framnum

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x........         DC32     ??time

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x........         DC32     ??time_1

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x0D 0x0A          DC8 "\015\012\015\012 GPRS\267\242\313\315\015\012\015\012"
   \              0x0D 0x0A    
   \              0x20 0x47    
   \              0x50 0x52    
   \              0x53 0xB7    
   \              0xA2 0xCB    
   \              0xCD 0x0D    
   \              0x0A 0x0D    
   \              0x0A 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   ClearGprsRecFlg
       0   GetGprsRecFlg
       8   GprsDataComDeal
         8   -> Gprs_Send_Ctrl
      32   GprsRecOperate
        32   -> SetGprsRecFlg
        32   -> __aeabi_memcpy
     408   Gprs_Send_Ctrl
       408   -> ClearGprsRecFlg
       408   -> DataPackage_CSNR
       408   -> GetCurFlshRecNum
       408   -> GetGprsRecFlg
       408   -> GetLstFlshRecNum_gprs
       408   -> GetSysTime
       408   -> ReadFlshRec
       408   -> SendCOM1
       408   -> SendCOM3
       408   -> StoreLstRedFlshRecNum_gprs
       408   -> printfcom0
     320   Gprs_Send_liveinfo
       320   -> DataPackage_CSNR
       320   -> GetPrintfFlg
       320   -> GetSysTime
       320   -> SendCOM1
       320   -> SendCOM2
       320   -> SendCOM3
       320   -> __aeabi_memcpy
       0   SetGprsRecFlg


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
      20  ?_0
       8  ClearGprsRecFlg
       6  GetGprsRecFlg
       8  GprsDataComDeal
      26  GprsRecOperate
     236  Gprs_Send_Ctrl
     224  Gprs_Send_liveinfo
       8  SetGprsRecFlg
       4  framnum
       1  l_gprsrecflg
      12  l_recsprotocolpara
      12  l_sendsprotocolpara
       4  time
       4  time

 
  33 bytes in section .bss
   4 bytes in section .data
  20 bytes in section .rodata
 544 bytes in section .text
 
 544 bytes of CODE  memory
  20 bytes of CONST memory
  37 bytes of DATA  memory

Errors: none
Warnings: 6
