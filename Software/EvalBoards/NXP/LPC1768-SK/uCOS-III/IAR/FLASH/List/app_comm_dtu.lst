###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       14/Aug/2017  13:51:31
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC136B-310 统计模块\Software\APP\comm\app_comm_dtu.c
#    Command line =  
#        "F:\iar\NC136B-310 统计模块\Software\APP\comm\app_comm_dtu.c" -lCN
#        "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List"
#        --diag_suppress Pa050 -o "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\" -I
#        "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\"
#        -I "F:\iar\NC136B-310 统计模块\Application\Library\csnr_package_deal\"
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\app_comm_dtu.lst
#    Object file  =  
#        F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\app_comm_dtu.o
#
###############################################################################

F:\iar\NC136B-310 统计模块\Software\APP\comm\app_comm_dtu.c
      1          /*******************************************************************************
      2           *   Filename:       app_comm_dtu.c
      3           *   Revised:        All copyrights reserved to redmorningcn.
      4           *   Revision:       v1.0
      5           *   Writer:	     redmorningcn.
      6           *
      7           *   Description:    双击选中 dtu 按 Ctrl + H, 钩选 Match the case, Replace with
      8           *                   输入您要的名字，点击 Replace All
      9           *                   双击选中 Dtu 按 Ctrl + H, 钩选 Match the case, Replace with
     10           *                   输入您要的名字，点击 Replace All
     11           *                   双击选中 DTU 按 Ctrl + H, 钩选 Match the case, Replace with
     12           *                   输入您要的名字，点击 Replace All
     13           *                   在 app_cfg.h 中指定本任务的 优先级  （ APP_TASK_COMM_PRIO     ）
     14           *                                            和 任务堆栈（ APP_TASK_COMM_STK_SIZE ）大小
     15           *
     16           *   Notes:
     17           *     				E-mail: redmorningcn@qq.com
     18           *
     19           *******************************************************************************/
     20          
     21          /*******************************************************************************
     22           * INCLUDES
     23           */
     24          #define  SNL_APP_SOURCE
     25          #include <includes.h>
     26          #include <app_comm_protocol.h>
     27          #include <app_ctrl.h>
     28          #include <app.h>
     29          #include <os_cfg_app.h>
     30          
     31          
     32          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     33          const  CPU_CHAR  *app_comm_dtu__c = "$Id: $";
     34          #endif
     35          
     36          #define APP_TASK_COMM_EN     DEF_ENABLED
     37          #if APP_TASK_COMM_EN == DEF_ENABLED
     38          /*******************************************************************************
     39           * CONSTANTS
     40           */
     41          
     42          /*******************************************************************************
     43           * MACROS
     44           */
     45          #define CYCLE_TIME_TICKS            (OS_TICKS_PER_SEC * 1)
     46          
     47          /*******************************************************************************
     48           * TYPEDEFS
     49           */
     50          //IAP 下载帧控制字
     51          #define     IAP_FRAME_CODE      10      
     52          
     53          /*******************************************************************************
     54           * LOCAL VARIABLES
     55           */
     56          
     57          /*******************************************************************************
     58           * GLOBAL VARIABLES
     59           */
     60          
     61          /***********************************************
     62          * 描述： 软定时器声明
     63          */
     64          
     65          /***********************************************
     66          * 描述： 软定时器回调函数
     67          */
     68          
     69          
     70          /*******************************************************************************
     71           * LOCAL FUNCTIONS
     72           */
     73          
     74          
     75          
     76          
     77          /*******************************************************************************
     78           * GLOBAL FUNCTIONS
     79           */
     80          
     81          /*******************************************************************************
     82           * EXTERN VARIABLES
     83           */
     84          
     85           /*******************************************************************************
     86           * EXTERN FUNCTIONS
     87           */
     88          //uint8   FRAM_StoreRecNumMgr(StrRecNumMgr  *SRecNumMgr);
     89          //uint8   FRAM_StoreOilPara(StrOilPara  *SOilPara);
     90          //void    BSP_DispClrAll(void);
     91          //uint8   FRAM_StoreProductInfo(StrProductInfo  *sProductInfo);
     92          //uint8   ReadFM24CL64(uint16  Addr, uint8 *DataBuf, uint32 DataBufLen);            
     93          //uint8   WriteFM24CL64(uint16  Addr, uint8 *DataBuf, uint32 DataBufLen);            
     94          //void    GetOilPara(void);
     95          
     96          
     97          uint8   comm_record_send_one(StrDevDtu * sDtu,uint8 addrnum);
     98          void    comm_record_send(StrDevDtu * sDtu,uint8 addrnum);
     99          void    comm_para_flow(StrDevDtu * sDtu,uint8 addrnum);
    100          uint8   comm_tinyrec_send(StrDevOtr * sOtr,uint8    addrnum);
    101          int8    IAP_PragramDeal(uint8 *databuf,char datalen);
    102          
    103          /*******************************************************************************/
    104          
    105          extern  stcSysCtrl  sCtrl;
    106          
    107          /*******************************************************************************
    108           * 名    称： app_comm_dtu
    109           * 功    能： 调用无线通讯处理函数。
    110           *            如果是定时器超时，则对应地址的timeout计算加1，并判断
    111           *            值是否到满足该地址故障判断次数，是否执行通讯异常处理。
    112           *            如果是接收到数据事件，则根据接收数据进行处理。
    113           * 入口参数： 无
    114           * 出口参数： 无
    115           * 作　 　者： redmorningcn.
    116           * 创建日期： 2017-05-18
    117           * 修    改：
    118           * 修改日期：
    119           * 备    注： 任务创建函数需要在app.h文件中声明
    120           *******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    121          void    app_comm_dtu(void)
    122          {
   \                     app_comm_dtu: (+1)
   \   00000000   0xB53E             PUSH     {R1-R5,LR}
    123              //判断对应地址连接是否接收到数据
    124              uint8 i = 0;
   \   00000002   0x2400             MOVS     R4,#+0
    125              while(i < COMM_DEV_DTU_CONN_NUM){
   \                     ??app_comm_dtu_0: (+1)
   \   00000004   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000006   0x2C02             CMP      R4,#+2
   \   00000008   0xDA58             BGE.N    ??app_comm_dtu_1
    126                  if(sCtrl.Dtu.ConnCtrl[i].RecvEndFlg == 1)                   //如果地址i接收到数据，对数据进行处理
   \   0000000A   0x4859             LDR.N    R0,??app_comm_dtu_2
   \   0000000C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000E   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   00000012   0xF890 0x04F2      LDRB     R0,[R0, #+1266]
   \   00000016   0x2801             CMP      R0,#+1
   \   00000018   0xD14E             BNE.N    ??app_comm_dtu_3
    127                  {
    128                      /***********************************************
    129                      * 描述： 从接收的revcbuf中取数据
    130                      *        根据接收到的地址CA，进行无线  数据传输；
    131                      *        接收到地址C2，进行  设置模式。
    132                      */
    133                      
    134                      switch(sCtrl.Dtu.RxCtrl.Code)
   \   0000001A   0x4855             LDR.N    R0,??app_comm_dtu_2
   \   0000001C   0xF8D0 0x04ED      LDR      R0,[R0, #+1261]
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xD006             BEQ.N    ??app_comm_dtu_4
   \   00000024   0x2801             CMP      R0,#+1
   \   00000026   0xD019             BEQ.N    ??app_comm_dtu_5
   \   00000028   0x2802             CMP      R0,#+2
   \   0000002A   0xD018             BEQ.N    ??app_comm_dtu_6
   \   0000002C   0x280A             CMP      R0,#+10
   \   0000002E   0xD017             BEQ.N    ??app_comm_dtu_7
   \   00000030   0xE033             B.N      ??app_comm_dtu_8
    135                      {
    136                          case 0: //V1.0
    137                      
    138                              if(sCtrl.Dtu.RxCtrl.SourceAddr == SLAVE_ADDR_DTU)       //地址等于CA，无线数据传输。
   \                     ??app_comm_dtu_4: (+1)
   \   00000032   0x484F             LDR.N    R0,??app_comm_dtu_2
   \   00000034   0xF890 0x04EA      LDRB     R0,[R0, #+1258]
   \   00000038   0x28CA             CMP      R0,#+202
   \   0000003A   0xD104             BNE.N    ??app_comm_dtu_9
    139                              {
    140                                  comm_record_send((StrDevDtu *)&sCtrl.Dtu,i);        //数据的需要传递  dtu，明确 地址，pch等信息。
   \   0000003C   0x0021             MOVS     R1,R4
   \   0000003E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000040   0x484C             LDR.N    R0,??app_comm_dtu_2+0x4
   \   00000042   0x.... 0x....      BL       comm_record_send
    141                              }
    142                              
    143                              if(sCtrl.Dtu.RxCtrl.SourceAddr == SLAVE_ADDR_SET)       //地址等于C2，参数设置。
   \                     ??app_comm_dtu_9: (+1)
   \   00000046   0x484A             LDR.N    R0,??app_comm_dtu_2
   \   00000048   0xF890 0x04EA      LDRB     R0,[R0, #+1258]
   \   0000004C   0x28C2             CMP      R0,#+194
   \   0000004E   0xD104             BNE.N    ??app_comm_dtu_10
    144                              {
    145                                  comm_para_flow((StrDevDtu *)&sCtrl.Dtu,i);          //设置参数，或信息交互。依据code进行相应操作。
   \   00000050   0x0021             MOVS     R1,R4
   \   00000052   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000054   0x4847             LDR.N    R0,??app_comm_dtu_2+0x4
   \   00000056   0x.... 0x....      BL       comm_para_flow
    146                              }
    147                              break;
   \                     ??app_comm_dtu_10: (+1)
   \   0000005A   0xE01E             B.N      ??app_comm_dtu_8
    148                          case 1:     //V2.0
    149                              break;
   \                     ??app_comm_dtu_5: (+1)
   \   0000005C   0xE01D             B.N      ??app_comm_dtu_8
    150                          case 2:     //V2.0
    151                              break;
   \                     ??app_comm_dtu_6: (+1)
   \   0000005E   0xE01C             B.N      ??app_comm_dtu_8
    152                              
    153                          case IAP_FRAME_CODE:     //V2.0 IAP程序下载
    154                                  IAP_PragramDeal(sCtrl.Dtu.Rd.Buf , sCtrl.Dtu.RxCtrl.Len ); //调用程序下载函数   
   \                     ??app_comm_dtu_7: (+1)
   \   00000060   0x4843             LDR.N    R0,??app_comm_dtu_2
   \   00000062   0xF890 0x14EC      LDRB     R1,[R0, #+1260]
   \   00000066   0x4843             LDR.N    R0,??app_comm_dtu_2+0x4
   \   00000068   0x.... 0x....      BL       IAP_PragramDeal
    155                                  
    156                                  //应答数据
    157                                  CSNC_SendData(sCtrl.Dtu.pch,                        //DTU 的PCH：串口号，收发控制等底层信息
    158                                                sCtrl.Dtu.RxCtrl.DestAddr,            //源地址，
    159                                                sCtrl.Dtu.RxCtrl.SourceAddr,          //目标地址
    160                                                sCtrl.Dtu.RxCtrl.FramNum,             //帧序号 ，，在接收中累加
    161                                                sCtrl.Dtu.RxCtrl.Code,                //命令字
    162                                                sCtrl.Dtu.Rd.Buf,                     //数据区
    163                                                4                                     //发送长度
    164                                                    );
   \   0000006C   0x2004             MOVS     R0,#+4
   \   0000006E   0x9002             STR      R0,[SP, #+8]
   \   00000070   0x4840             LDR.N    R0,??app_comm_dtu_2+0x4
   \   00000072   0x9001             STR      R0,[SP, #+4]
   \   00000074   0x483E             LDR.N    R0,??app_comm_dtu_2
   \   00000076   0xF8D0 0x04ED      LDR      R0,[R0, #+1261]
   \   0000007A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000007C   0x9000             STR      R0,[SP, #+0]
   \   0000007E   0x483C             LDR.N    R0,??app_comm_dtu_2
   \   00000080   0xF890 0x34EB      LDRB     R3,[R0, #+1259]
   \   00000084   0x483A             LDR.N    R0,??app_comm_dtu_2
   \   00000086   0xF890 0x24EA      LDRB     R2,[R0, #+1258]
   \   0000008A   0x4839             LDR.N    R0,??app_comm_dtu_2
   \   0000008C   0xF890 0x14E9      LDRB     R1,[R0, #+1257]
   \   00000090   0x4837             LDR.N    R0,??app_comm_dtu_2
   \   00000092   0xF8D0 0x0501      LDR      R0,[R0, #+1281]
   \   00000096   0x.... 0x....      BL       CSNC_SendData
    165                                  
    166                              break;
    167                              
    168                          default:;  //V2.0
    169                      }
    170                      sCtrl.Dtu.ConnCtrl[i].RecvEndFlg = 0;                   //数据已处理。 接收数据置1
   \                     ??app_comm_dtu_8: (+1)
   \   0000009A   0x2000             MOVS     R0,#+0
   \   0000009C   0x4934             LDR.N    R1,??app_comm_dtu_2
   \   0000009E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000A0   0xEB11 0x01C4      ADDS     R1,R1,R4, LSL #+3
   \   000000A4   0xF881 0x04F2      STRB     R0,[R1, #+1266]
    171                      sCtrl.Dtu.ConnCtrl[i].TimeOut    = 0;                   //超时计数清零
   \   000000A8   0x2000             MOVS     R0,#+0
   \   000000AA   0x4931             LDR.N    R1,??app_comm_dtu_2
   \   000000AC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000AE   0xEB11 0x01C4      ADDS     R1,R1,R4, LSL #+3
   \   000000B2   0xF881 0x04F3      STRB     R0,[R1, #+1267]
    172          
    173                      return  ;
   \   000000B6   0xE059             B.N      ??app_comm_dtu_11
    174                  }
    175                  
    176                  i++;
   \                     ??app_comm_dtu_3: (+1)
   \   000000B8   0x1C64             ADDS     R4,R4,#+1
   \   000000BA   0xE7A3             B.N      ??app_comm_dtu_0
    177              }
    178           
    179              /***********************************************
    180              *   描述： 如果是超时。
    181              *1. 超时时，所有地址计算加1，对应计算器在收到数据时清零。
    182              *2. 10数据无应答，发送一次数据。
    183              */
    184              if( sCtrl.Os.CommEvtFlag |  COMM_EVT_FLAG_DTU_TIMEOUT){
    185                  uint8 i = 0;
   \                     ??app_comm_dtu_1: (+1)
   \   000000BC   0x2500             MOVS     R5,#+0
    186                  while( i < COMM_DEV_DTU_CONN_NUM){
   \                     ??app_comm_dtu_12: (+1)
   \   000000BE   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000C0   0x2D02             CMP      R5,#+2
   \   000000C2   0xDA2C             BGE.N    ??app_comm_dtu_13
    187                      sCtrl.Dtu.ConnCtrl[i].TimeOut++;
   \   000000C4   0x482A             LDR.N    R0,??app_comm_dtu_2
   \   000000C6   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000C8   0xEB10 0x00C5      ADDS     R0,R0,R5, LSL #+3
   \   000000CC   0xF890 0x04F3      LDRB     R0,[R0, #+1267]
   \   000000D0   0x1C40             ADDS     R0,R0,#+1
   \   000000D2   0x4927             LDR.N    R1,??app_comm_dtu_2
   \   000000D4   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000D6   0xEB11 0x01C5      ADDS     R1,R1,R5, LSL #+3
   \   000000DA   0xF881 0x04F3      STRB     R0,[R1, #+1267]
    188                      
    189                      if(sCtrl.Dtu.ConnCtrl[i].TimeOut > 10 * COMM_DEV_DTU_CONN_NUM){
   \   000000DE   0x4824             LDR.N    R0,??app_comm_dtu_2
   \   000000E0   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000E2   0xEB10 0x00C5      ADDS     R0,R0,R5, LSL #+3
   \   000000E6   0xF890 0x04F3      LDRB     R0,[R0, #+1267]
   \   000000EA   0x2815             CMP      R0,#+21
   \   000000EC   0xDB0E             BLT.N    ??app_comm_dtu_14
    190                          sCtrl.Dtu.ConnCtrl[i].TimeOut = 10 * COMM_DEV_DTU_CONN_NUM + 1;
   \   000000EE   0x2015             MOVS     R0,#+21
   \   000000F0   0x491F             LDR.N    R1,??app_comm_dtu_2
   \   000000F2   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000F4   0xEB11 0x01C5      ADDS     R1,R1,R5, LSL #+3
   \   000000F8   0xF881 0x04F3      STRB     R0,[R1, #+1267]
    191                          sCtrl.Dtu.ConnCtrl[i].ErrFlg = 1;               //超时数大于10次，5S，报通讯错误。
   \   000000FC   0x2001             MOVS     R0,#+1
   \   000000FE   0x491C             LDR.N    R1,??app_comm_dtu_2
   \   00000100   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000102   0xEB11 0x01C5      ADDS     R1,R1,R5, LSL #+3
   \   00000106   0xF881 0x04F4      STRB     R0,[R1, #+1268]
   \   0000010A   0xE006             B.N      ??app_comm_dtu_15
    192                          
    193                      }else{
    194                          sCtrl.Dtu.ConnCtrl[i].ErrFlg = 0;               //接收到数据，通讯清零
   \                     ??app_comm_dtu_14: (+1)
   \   0000010C   0x2000             MOVS     R0,#+0
   \   0000010E   0x4918             LDR.N    R1,??app_comm_dtu_2
   \   00000110   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000112   0xEB11 0x01C5      ADDS     R1,R1,R5, LSL #+3
   \   00000116   0xF881 0x04F4      STRB     R0,[R1, #+1268]
    195                      }
    196                      i++;
   \                     ??app_comm_dtu_15: (+1)
   \   0000011A   0x1C6D             ADDS     R5,R5,#+1
   \   0000011C   0xE7CF             B.N      ??app_comm_dtu_12
    197                  }
    198                  
    199                  /***********************************************
    200                  * 描述： 如果是超时。
    201                  * 发送数据
    202                  */ 
    203                  if( sCtrl.sRecNumMgr.Current == 0 )                     //记录号为0，还未发送数据。不做通讯状态判断
   \                     ??app_comm_dtu_13: (+1)
   \   0000011E   0x4814             LDR.N    R0,??app_comm_dtu_2
   \   00000120   0x6840             LDR      R0,[R0, #+4]
   \   00000122   0x2800             CMP      R0,#+0
   \   00000124   0xD10D             BNE.N    ??app_comm_dtu_16
    204                  {
    205                      uint8 i = 0;
   \   00000126   0x2000             MOVS     R0,#+0
    206                      while( i < COMM_DEV_DTU_CONN_NUM){
   \                     ??app_comm_dtu_17: (+1)
   \   00000128   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000012A   0x2802             CMP      R0,#+2
   \   0000012C   0xDA08             BGE.N    ??app_comm_dtu_18
    207                          sCtrl.Dtu.ConnCtrl[i].TimeOut = 0;
   \   0000012E   0x2100             MOVS     R1,#+0
   \   00000130   0x4A0F             LDR.N    R2,??app_comm_dtu_2
   \   00000132   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000134   0xEB12 0x02C0      ADDS     R2,R2,R0, LSL #+3
   \   00000138   0xF882 0x14F3      STRB     R1,[R2, #+1267]
    208                          i++;
   \   0000013C   0x1C40             ADDS     R0,R0,#+1
   \   0000013E   0xE7F3             B.N      ??app_comm_dtu_17
    209                      }
    210                      return;
   \                     ??app_comm_dtu_18: (+1)
   \   00000140   0xE014             B.N      ??app_comm_dtu_11
    211                  }
    212                          
    213                  //发送1条数据记录
    214                  i =0 ;
   \                     ??app_comm_dtu_16: (+1)
   \   00000142   0x2000             MOVS     R0,#+0
   \   00000144   0x0005             MOVS     R5,R0
    215                  while(i < COMM_DEV_DTU_CONN_NUM){
   \                     ??app_comm_dtu_19: (+1)
   \   00000146   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000148   0x2D02             CMP      R5,#+2
   \   0000014A   0xDA09             BGE.N    ??app_comm_dtu_20
    216                      if(sCtrl.Dtu.ConnCtrl[i].SlaveAddr == SLAVE_ADDR_DTU){
   \   0000014C   0x4808             LDR.N    R0,??app_comm_dtu_2
   \   0000014E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000150   0xEB10 0x00C5      ADDS     R0,R0,R5, LSL #+3
   \   00000154   0xF890 0x04F5      LDRB     R0,[R0, #+1269]
   \   00000158   0x28CA             CMP      R0,#+202
   \   0000015A   0xD001             BEQ.N    ??app_comm_dtu_20
    217                                                                          //对DTU地址发送数据        
    218           //20170812暂时               comm_record_send_one((StrDevDtu *)&sCtrl.Dtu,i);  
    219                          break;
    220                      }
    221                      i++;
   \                     ??app_comm_dtu_21: (+1)
   \   0000015C   0x1C6D             ADDS     R5,R5,#+1
   \   0000015E   0xE7F2             B.N      ??app_comm_dtu_19
    222                  }
    223                  
    224                  //重新给定时器给初值。osal_start_timerRl可以自动赋值，
    225                  osal_start_timerRl( OS_TASK_ID_TMR, 
    226                                      OS_EVT_TMR_DTU, 
    227                                      OS_TICKS_PER_SEC*10 );  //统计装置和无线发送模块定时器  10s
   \                     ??app_comm_dtu_20: (+1)
   \   00000160   0xF242 0x7210      MOVW     R2,#+10000
   \   00000164   0x2140             MOVS     R1,#+64
   \   00000166   0x2001             MOVS     R0,#+1
   \   00000168   0x.... 0x....      BL       osal_start_timerRl
    228          
    229              }
    230          }
   \                     ??app_comm_dtu_11: (+1)
   \   0000016C   0xBD37             POP      {R0-R2,R4,R5,PC}  ;; return
   \   0000016E   0xBF00             Nop      
   \                     ??app_comm_dtu_2:
   \   00000170   0x........         DC32     sCtrl
   \   00000174   0x........         DC32     sCtrl+0x3A9
    231          
    232          
    233          /*******************************************************************************
    234           * 				end of file
    235           *******************************************************************************/
    236          #endif
    237          
    238          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   app_comm_dtu
        24   -> CSNC_SendData
        24   -> IAP_PragramDeal
        24   -> comm_para_flow
        24   -> comm_record_send
        24   -> osal_start_timerRl


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     376  app_comm_dtu

 
 376 bytes in section .text
 
 376 bytes of CODE memory

Errors: none
Warnings: none
