###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       19/Sep/2017  19:02:33
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  F:\iar\NC136B-310统计模块\Software\APP\comm\app_comm_dtu.c
#    Command line =  
#        F:\iar\NC136B-310统计模块\Software\APP\comm\app_comm_dtu.c -lCN
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List
#        --diag_suppress Pa050 -o
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\csnr_package_deal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\tax\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\app_comm_dtu.lst
#    Object file  =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\app_comm_dtu.o
#
###############################################################################

F:\iar\NC136B-310统计模块\Software\APP\comm\app_comm_dtu.c
      1          /*******************************************************************************
      2           *   Filename:       app_comm_dtu.c
      3           *   Revised:        All copyrights reserved to redmorningcn.
      4           *   Revision:       v1.0
      5           *   Writer:	     redmorningcn.
      6           *
      7           *   Description:    双击选中 dtu 按 Ctrl + H, 钩选 Match the case, Replace with
      8           *                   输入您要的名字，点击 Replace All
      9           *                   双击选中 Dtu 按 Ctrl + H, 钩选 Match the case, Replace with
     10           *                   输入您要的名字，点击 Replace All
     11           *                   双击选中 DTU 按 Ctrl + H, 钩选 Match the case, Replace with
     12           *                   输入您要的名字，点击 Replace All
     13           *                   在 app_cfg.h 中指定本任务的 优先级  （ APP_TASK_COMM_PRIO     ）
     14           *                                            和 任务堆栈（ APP_TASK_COMM_STK_SIZE ）大小
     15           *
     16           *   Notes:
     17           *     				E-mail: redmorningcn@qq.com
     18           *
     19           *******************************************************************************/
     20          
     21          /*******************************************************************************
     22           * INCLUDES
     23           */
     24          #define  SNL_APP_SOURCE
     25          #include <includes.h>
     26          #include <app_comm_protocol.h>
     27          #include <app_ctrl.h>
     28          #include <app.h>
     29          #include <os_cfg_app.h>
     30          #include  "IAP_program_mcu.h"
     31          
     32          
     33          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     34          const  CPU_CHAR  *app_comm_dtu__c = "$Id: $";
     35          #endif
     36          
     37          #define APP_TASK_COMM_EN     DEF_ENABLED
     38          #if APP_TASK_COMM_EN == DEF_ENABLED
     39          /*******************************************************************************
     40           * CONSTANTS
     41           */
     42          
     43          /*******************************************************************************
     44           * MACROS
     45           */
     46          #define CYCLE_TIME_TICKS            (OS_TICKS_PER_SEC * 1)
     47          #define IAP_START_CODE              1
     48          #define IAP_DATA_CODE               2
     49          #define IAP_END_CODE                3
     50          
     51          /*******************************************************************************
     52           * TYPEDEFS
     53           */
     54          //IAP 下载帧控制字
     55          #define     IAP_FRAME_CODE          10 
     56          //SET 设置控制字
     57          #define     SET_FRAME_CODE          2      
     58          
     59          
     60          /*******************************************************************************
     61           * LOCAL VARIABLES
     62           */
     63          
     64          /*******************************************************************************
     65           * GLOBAL VARIABLES
     66           */
     67          
     68          /***********************************************
     69          * 描述： 软定时器声明
     70          */
     71          
     72          /***********************************************
     73          * 描述： 软定时器回调函数
     74          */
     75          
     76          
     77          /*******************************************************************************
     78           * LOCAL FUNCTIONS
     79           */
     80          
     81          
     82          
     83          
     84          /*******************************************************************************
     85           * GLOBAL FUNCTIONS
     86           */
     87          
     88          /*******************************************************************************
     89           * EXTERN VARIABLES
     90           */
     91          
     92           /*******************************************************************************
     93           * EXTERN FUNCTIONS
     94           */
     95          //uint8   FRAM_StoreRecNumMgr(StrRecNumMgr  *SRecNumMgr);
     96          //uint8   FRAM_StoreOilPara(StrOilPara  *SOilPara);
     97          //void    BSP_DispClrAll(void);
     98          //uint8   FRAM_StoreProductInfo(StrProductInfo  *sProductInfo);
     99          //uint8   ReadFM24CL64(uint16  Addr, uint8 *DataBuf, uint32 DataBufLen);            
    100          //uint8   WriteFM24CL64(uint16  Addr, uint8 *DataBuf, uint32 DataBufLen);            
    101          //void    GetOilPara(void);
    102          
    103          
    104          uint8   comm_record_send_one(StrDevDtu * sDtu,uint8 addrnum);
    105          void    comm_record_send(StrDevDtu * sDtu,uint8 addrnum);
    106          void    comm_para_flow(StrDevDtu * sDtu,uint8 addrnum);
    107          uint8   comm_tinyrec_send(StrDevOtr * sOtr,uint8    addrnum);
    108          int8    IAP_PragramDeal(uint8 *databuf,char datalen);
    109          
    110          /*******************************************************************************/
    111          
    112          extern  stcSysCtrl  sCtrl;
    113          
    114          /*******************************************************************************
    115           * 名    称： app_comm_dtu
    116           * 功    能： 调用无线通讯处理函数。
    117           *            如果是定时器超时，则对应地址的timeout计算加1，并判断
    118           *            值是否到满足该地址故障判断次数，是否执行通讯异常处理。
    119           *            如果是接收到数据事件，则根据接收数据进行处理。
    120           * 入口参数： 无
    121           * 出口参数： 无
    122           * 作　 　者： redmorningcn.
    123           * 创建日期： 2017-05-18
    124           * 修    改：
    125           * 修改日期：
    126           * 备    注： 任务创建函数需要在app.h文件中声明
    127           *******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    128          void    app_comm_dtu(void)
    129          {
   \                     app_comm_dtu: (+1)
   \   00000000   0xB5FE             PUSH     {R1-R7,LR}
    130              //判断对应地址连接是否接收到数据
    131              uint8   i = 0;
   \   00000002   0x2400             MOVS     R4,#+0
    132              uint8   status = 0;
   \   00000004   0x2500             MOVS     R5,#+0
    133              uint8   echolen = 0;
   \   00000006   0x2600             MOVS     R6,#+0
    134          
    135              while(i < COMM_DEV_DTU_CONN_NUM){
   \                     ??app_comm_dtu_0: (+1)
   \   00000008   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000A   0x2C02             CMP      R4,#+2
   \   0000000C   0xF280 0x8084      BGE.W    ??app_comm_dtu_1
    136                  if(sCtrl.Dtu.ConnCtrl[i].RecvEndFlg == 1)                   //如果地址i接收到数据，对数据进行处理
   \   00000010   0x4874             LDR.N    R0,??app_comm_dtu_2
   \   00000012   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000014   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   00000018   0xF890 0x04FA      LDRB     R0,[R0, #+1274]
   \   0000001C   0x2801             CMP      R0,#+1
   \   0000001E   0xD179             BNE.N    ??app_comm_dtu_3
    137                  {
    138                      /***********************************************
    139                      * 描述： 从接收的revcbuf中取数据
    140                      *        根据接收到的地址CA，进行无线  数据传输；
    141                      *        接收到地址C2，进行  设置模式。
    142                      */
    143                      switch(sCtrl.Dtu.RxCtrl.FrameCode)
   \   00000020   0x4870             LDR.N    R0,??app_comm_dtu_2
   \   00000022   0xF890 0x04F1      LDRB     R0,[R0, #+1265]
   \   00000026   0x2800             CMP      R0,#+0
   \   00000028   0xD006             BEQ.N    ??app_comm_dtu_4
   \   0000002A   0x2801             CMP      R0,#+1
   \   0000002C   0xD032             BEQ.N    ??app_comm_dtu_5
   \   0000002E   0x2802             CMP      R0,#+2
   \   00000030   0xD031             BEQ.N    ??app_comm_dtu_6
   \   00000032   0x280A             CMP      R0,#+10
   \   00000034   0xD030             BEQ.N    ??app_comm_dtu_7
   \   00000036   0xE05E             B.N      ??app_comm_dtu_8
    144                      {
    145                          case 0:     //V1.0
    146                      
    147                              if(sCtrl.Dtu.RxCtrl.SourceAddr == SLAVE_ADDR_DTU)       //地址等于CA，无线数据传输。
   \                     ??app_comm_dtu_4: (+1)
   \   00000038   0x486A             LDR.N    R0,??app_comm_dtu_2
   \   0000003A   0xF890 0x04EE      LDRB     R0,[R0, #+1262]
   \   0000003E   0x28CA             CMP      R0,#+202
   \   00000040   0xD104             BNE.N    ??app_comm_dtu_9
    148                              {
    149                                  comm_record_send((StrDevDtu *)&sCtrl.Dtu,i);        //数据的需要传递  dtu，明确 地址，pch等信息。
   \   00000042   0x0021             MOVS     R1,R4
   \   00000044   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000046   0x4868             LDR.N    R0,??app_comm_dtu_2+0x4
   \   00000048   0x.... 0x....      BL       comm_record_send
    150                              }
    151                              
    152                              if(sCtrl.Dtu.RxCtrl.SourceAddr == SLAVE_ADDR_SET)       //地址等于C2，参数设置。
   \                     ??app_comm_dtu_9: (+1)
   \   0000004C   0x4865             LDR.N    R0,??app_comm_dtu_2
   \   0000004E   0xF890 0x04EE      LDRB     R0,[R0, #+1262]
   \   00000052   0x28C2             CMP      R0,#+194
   \   00000054   0xD11D             BNE.N    ??app_comm_dtu_10
    153                              {
    154                                  comm_para_flow((StrDevDtu *)&sCtrl.Dtu,i);          //设置参数，或信息交互。依据code进行相应操作。
   \   00000056   0x0021             MOVS     R1,R4
   \   00000058   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000005A   0x4863             LDR.N    R0,??app_comm_dtu_2+0x4
   \   0000005C   0x.... 0x....      BL       comm_para_flow
    155                                  
    156                                  //参数设置，数据原路返回
    157                                  CSNC_SendData(  sCtrl.Dtu.pch,                        //DTU 的PCH：串口号，收发控制等底层信息
    158                                                  sCtrl.Dtu.RxCtrl.DestAddr,            //源地址，
    159                                                  sCtrl.Dtu.RxCtrl.SourceAddr,          //目标地址
    160                                                  sCtrl.Dtu.RxCtrl.FramNum,             //帧序号 
    161                                                  sCtrl.Dtu.RxCtrl.FrameCode,           //命令字
    162                                                  sCtrl.Dtu.Rd.Buf,                     //数据区
    163                                                  sCtrl.Dtu.RxCtrl.Len                  //发送长度
    164                                                );
   \   00000060   0x4860             LDR.N    R0,??app_comm_dtu_2
   \   00000062   0xF890 0x04F0      LDRB     R0,[R0, #+1264]
   \   00000066   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000068   0x9002             STR      R0,[SP, #+8]
   \   0000006A   0x485F             LDR.N    R0,??app_comm_dtu_2+0x4
   \   0000006C   0x9001             STR      R0,[SP, #+4]
   \   0000006E   0x485D             LDR.N    R0,??app_comm_dtu_2
   \   00000070   0xF890 0x04F1      LDRB     R0,[R0, #+1265]
   \   00000074   0x9000             STR      R0,[SP, #+0]
   \   00000076   0x485B             LDR.N    R0,??app_comm_dtu_2
   \   00000078   0xF890 0x34EF      LDRB     R3,[R0, #+1263]
   \   0000007C   0x4859             LDR.N    R0,??app_comm_dtu_2
   \   0000007E   0xF890 0x24EE      LDRB     R2,[R0, #+1262]
   \   00000082   0x4858             LDR.N    R0,??app_comm_dtu_2
   \   00000084   0xF890 0x14ED      LDRB     R1,[R0, #+1261]
   \   00000088   0x4856             LDR.N    R0,??app_comm_dtu_2
   \   0000008A   0xF8D0 0x0509      LDR      R0,[R0, #+1289]
   \   0000008E   0x.... 0x....      BL       CSNC_SendData
    165                              }
    166                              break;
   \                     ??app_comm_dtu_10: (+1)
   \   00000092   0xE030             B.N      ??app_comm_dtu_8
    167                          case 1:     //V2.0
    168                              break;
   \                     ??app_comm_dtu_5: (+1)
   \   00000094   0xE02F             B.N      ??app_comm_dtu_8
    169                          case SET_FRAME_CODE:        //V2.0 IAP参数设置
    170                              
    171                              break;
   \                     ??app_comm_dtu_6: (+1)
   \   00000096   0xE02E             B.N      ??app_comm_dtu_8
    172                              
    173                          case IAP_FRAME_CODE:        //V2.0 IAP程序下载
    174                                  status = IAP_PragramDeal(sCtrl.Dtu.Rd.Buf , sCtrl.Dtu.RxCtrl.Len ); //调用程序下载函数   
   \                     ??app_comm_dtu_7: (+1)
   \   00000098   0x4852             LDR.N    R0,??app_comm_dtu_2
   \   0000009A   0xF890 0x14F0      LDRB     R1,[R0, #+1264]
   \   0000009E   0x4852             LDR.N    R0,??app_comm_dtu_2+0x4
   \   000000A0   0x.... 0x....      BL       IAP_PragramDeal
   \   000000A4   0x0005             MOVS     R5,R0
    175                                  
    176                                  echolen = 4;
   \   000000A6   0x2004             MOVS     R0,#+4
   \   000000A8   0x0006             MOVS     R6,R0
    177                                  //应答数据          //如果是IAP传包帧，则传数据长度4，如果是开始、结束。返回长度为
    178                                  if(     sCtrl.Dtu.Rd.Buf[0] == IAP_START_CODE 
    179                                      ||  sCtrl.Dtu.Rd.Buf[0] == IAP_END_CODE )
   \   000000AA   0x484E             LDR.N    R0,??app_comm_dtu_2
   \   000000AC   0xF890 0x03AD      LDRB     R0,[R0, #+941]
   \   000000B0   0x2801             CMP      R0,#+1
   \   000000B2   0xD004             BEQ.N    ??app_comm_dtu_11
   \   000000B4   0x484B             LDR.N    R0,??app_comm_dtu_2
   \   000000B6   0xF890 0x03AD      LDRB     R0,[R0, #+941]
   \   000000BA   0x2803             CMP      R0,#+3
   \   000000BC   0xD103             BNE.N    ??app_comm_dtu_12
    180                                  {
    181                                      echolen = sCtrl.Dtu.RxCtrl.Len;   
   \                     ??app_comm_dtu_11: (+1)
   \   000000BE   0x4849             LDR.N    R0,??app_comm_dtu_2
   \   000000C0   0xF890 0x04F0      LDRB     R0,[R0, #+1264]
   \   000000C4   0x0006             MOVS     R6,R0
    182                                  }
    183                                  
    184                                  CSNC_SendData(  sCtrl.Dtu.pch,                        //DTU 的PCH：串口号，收发控制等底层信息
    185                                                  sCtrl.Dtu.RxCtrl.DestAddr,            //源地址，
    186                                                  sCtrl.Dtu.RxCtrl.SourceAddr,          //目标地址
    187                                                  sCtrl.Dtu.RxCtrl.FramNum,             //帧序号 ，，在接收中累加
    188                                                  sCtrl.Dtu.RxCtrl.FrameCode,           //命令字
    189                                                  sCtrl.Dtu.Rd.Buf,                     //数据区
    190                                                  echolen                               //发送长度
    191                                              );
   \                     ??app_comm_dtu_12: (+1)
   \   000000C6   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000C8   0x0030             MOVS     R0,R6
   \   000000CA   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000CC   0x9002             STR      R0,[SP, #+8]
   \   000000CE   0x4846             LDR.N    R0,??app_comm_dtu_2+0x4
   \   000000D0   0x9001             STR      R0,[SP, #+4]
   \   000000D2   0x4844             LDR.N    R0,??app_comm_dtu_2
   \   000000D4   0xF890 0x04F1      LDRB     R0,[R0, #+1265]
   \   000000D8   0x9000             STR      R0,[SP, #+0]
   \   000000DA   0x4842             LDR.N    R0,??app_comm_dtu_2
   \   000000DC   0xF890 0x34EF      LDRB     R3,[R0, #+1263]
   \   000000E0   0x4840             LDR.N    R0,??app_comm_dtu_2
   \   000000E2   0xF890 0x24EE      LDRB     R2,[R0, #+1262]
   \   000000E6   0x483F             LDR.N    R0,??app_comm_dtu_2
   \   000000E8   0xF890 0x14ED      LDRB     R1,[R0, #+1261]
   \   000000EC   0x483D             LDR.N    R0,??app_comm_dtu_2
   \   000000EE   0xF8D0 0x0509      LDR      R0,[R0, #+1289]
   \   000000F2   0x.... 0x....      BL       CSNC_SendData
    192                              break;
    193                              
    194                          default:;  //V2.0
    195                      }
    196                      sCtrl.Dtu.ConnCtrl[i].RecvEndFlg = 0;                   //数据已处理。 接收数据置1
   \                     ??app_comm_dtu_8: (+1)
   \   000000F6   0x2000             MOVS     R0,#+0
   \   000000F8   0x493A             LDR.N    R1,??app_comm_dtu_2
   \   000000FA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000FC   0xEB11 0x01C4      ADDS     R1,R1,R4, LSL #+3
   \   00000100   0xF881 0x04FA      STRB     R0,[R1, #+1274]
    197                      sCtrl.Dtu.ConnCtrl[i].TimeOut    = 0;                   //超时计数清零
   \   00000104   0x2000             MOVS     R0,#+0
   \   00000106   0x4937             LDR.N    R1,??app_comm_dtu_2
   \   00000108   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000010A   0xEB11 0x01C4      ADDS     R1,R1,R4, LSL #+3
   \   0000010E   0xF881 0x04FB      STRB     R0,[R1, #+1275]
    198          
    199                      return  ;
   \   00000112   0xE065             B.N      ??app_comm_dtu_13
    200                  }
    201                  
    202                  i++;
   \                     ??app_comm_dtu_3: (+1)
   \   00000114   0x1C64             ADDS     R4,R4,#+1
   \   00000116   0xE777             B.N      ??app_comm_dtu_0
    203              }
    204           
    205              /***********************************************
    206              *   描述： 如果是超时。
    207              *1. 超时时，所有地址计算加1，对应计算器在收到数据时清零。
    208              *2. 10数据无应答，发送一次数据。
    209              */
    210              if( sCtrl.Os.CommEvtFlag |  COMM_EVT_FLAG_DTU_TIMEOUT){
    211                  uint8 i = 0;
   \                     ??app_comm_dtu_1: (+1)
   \   00000118   0x2700             MOVS     R7,#+0
    212                  while( i < COMM_DEV_DTU_CONN_NUM){
   \                     ??app_comm_dtu_14: (+1)
   \   0000011A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000011C   0x2F02             CMP      R7,#+2
   \   0000011E   0xDA2C             BGE.N    ??app_comm_dtu_15
    213                      sCtrl.Dtu.ConnCtrl[i].TimeOut++;
   \   00000120   0x4830             LDR.N    R0,??app_comm_dtu_2
   \   00000122   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000124   0xEB10 0x00C7      ADDS     R0,R0,R7, LSL #+3
   \   00000128   0xF890 0x04FB      LDRB     R0,[R0, #+1275]
   \   0000012C   0x1C40             ADDS     R0,R0,#+1
   \   0000012E   0x492D             LDR.N    R1,??app_comm_dtu_2
   \   00000130   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000132   0xEB11 0x01C7      ADDS     R1,R1,R7, LSL #+3
   \   00000136   0xF881 0x04FB      STRB     R0,[R1, #+1275]
    214                      
    215                      if(sCtrl.Dtu.ConnCtrl[i].TimeOut > 10 * COMM_DEV_DTU_CONN_NUM){
   \   0000013A   0x482A             LDR.N    R0,??app_comm_dtu_2
   \   0000013C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000013E   0xEB10 0x00C7      ADDS     R0,R0,R7, LSL #+3
   \   00000142   0xF890 0x04FB      LDRB     R0,[R0, #+1275]
   \   00000146   0x2815             CMP      R0,#+21
   \   00000148   0xDB0E             BLT.N    ??app_comm_dtu_16
    216                          sCtrl.Dtu.ConnCtrl[i].TimeOut = 10 * COMM_DEV_DTU_CONN_NUM + 1;
   \   0000014A   0x2015             MOVS     R0,#+21
   \   0000014C   0x4925             LDR.N    R1,??app_comm_dtu_2
   \   0000014E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000150   0xEB11 0x01C7      ADDS     R1,R1,R7, LSL #+3
   \   00000154   0xF881 0x04FB      STRB     R0,[R1, #+1275]
    217                          sCtrl.Dtu.ConnCtrl[i].ErrFlg = 1;               //超时数大于10次，5S，报通讯错误。
   \   00000158   0x2001             MOVS     R0,#+1
   \   0000015A   0x4922             LDR.N    R1,??app_comm_dtu_2
   \   0000015C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000015E   0xEB11 0x01C7      ADDS     R1,R1,R7, LSL #+3
   \   00000162   0xF881 0x04FC      STRB     R0,[R1, #+1276]
   \   00000166   0xE006             B.N      ??app_comm_dtu_17
    218                          
    219                      }else{
    220                          sCtrl.Dtu.ConnCtrl[i].ErrFlg = 0;               //接收到数据，通讯清零
   \                     ??app_comm_dtu_16: (+1)
   \   00000168   0x2000             MOVS     R0,#+0
   \   0000016A   0x491E             LDR.N    R1,??app_comm_dtu_2
   \   0000016C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000016E   0xEB11 0x01C7      ADDS     R1,R1,R7, LSL #+3
   \   00000172   0xF881 0x04FC      STRB     R0,[R1, #+1276]
    221                      }
    222                      i++;
   \                     ??app_comm_dtu_17: (+1)
   \   00000176   0x1C7F             ADDS     R7,R7,#+1
   \   00000178   0xE7CF             B.N      ??app_comm_dtu_14
    223                  }
    224                  
    225                  /***********************************************
    226                  * 描述： 如果是超时。
    227                  * 发送数据
    228                  */ 
    229                  if( sCtrl.sRecNumMgr.Current == 0 )                                     //记录号为0，还未发送数据。不做通讯状态判断
   \                     ??app_comm_dtu_15: (+1)
   \   0000017A   0x481A             LDR.N    R0,??app_comm_dtu_2
   \   0000017C   0x6840             LDR      R0,[R0, #+4]
   \   0000017E   0x2800             CMP      R0,#+0
   \   00000180   0xD10D             BNE.N    ??app_comm_dtu_18
    230                  {
    231                      uint8 i = 0;
   \   00000182   0x2000             MOVS     R0,#+0
    232                      while( i < COMM_DEV_DTU_CONN_NUM){
   \                     ??app_comm_dtu_19: (+1)
   \   00000184   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000186   0x2802             CMP      R0,#+2
   \   00000188   0xDA08             BGE.N    ??app_comm_dtu_20
    233                          sCtrl.Dtu.ConnCtrl[i].TimeOut = 0;
   \   0000018A   0x2100             MOVS     R1,#+0
   \   0000018C   0x4A15             LDR.N    R2,??app_comm_dtu_2
   \   0000018E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000190   0xEB12 0x02C0      ADDS     R2,R2,R0, LSL #+3
   \   00000194   0xF882 0x14FB      STRB     R1,[R2, #+1275]
    234                          i++;
   \   00000198   0x1C40             ADDS     R0,R0,#+1
   \   0000019A   0xE7F3             B.N      ??app_comm_dtu_19
    235                      }
    236                      return;
   \                     ??app_comm_dtu_20: (+1)
   \   0000019C   0xE020             B.N      ??app_comm_dtu_13
    237                  }
    238                          
    239                  //发送1条数据记录
    240                  i =0 ;
   \                     ??app_comm_dtu_18: (+1)
   \   0000019E   0x2000             MOVS     R0,#+0
   \   000001A0   0x0007             MOVS     R7,R0
    241                  while(i < COMM_DEV_DTU_CONN_NUM){
   \                     ??app_comm_dtu_21: (+1)
   \   000001A2   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000001A4   0x2F02             CMP      R7,#+2
   \   000001A6   0xDA1B             BGE.N    ??app_comm_dtu_22
    242                      if(sCtrl.Dtu.ConnCtrl[i].SlaveAddr == SLAVE_ADDR_DTU){              //对DTU地址发送数据 
   \   000001A8   0x480E             LDR.N    R0,??app_comm_dtu_2
   \   000001AA   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000001AC   0xEB10 0x00C7      ADDS     R0,R0,R7, LSL #+3
   \   000001B0   0xF890 0x04FD      LDRB     R0,[R0, #+1277]
   \   000001B4   0x28CA             CMP      R0,#+202
   \   000001B6   0xD111             BNE.N    ??app_comm_dtu_23
    243                                                                                              
    244                          if(     sCtrl.sRecNumMgr.Current > sCtrl.sRecNumMgr.GrsRead      //数据未发完，10每次，否则，有新数据才发送
    245                             ||   sCtrl.sRecNumMgr.GrsRead >  sCtrl.sRecNumMgr.Current   ) //记录异常，也发送
   \   000001B8   0x480A             LDR.N    R0,??app_comm_dtu_2
   \   000001BA   0x68C0             LDR      R0,[R0, #+12]
   \   000001BC   0x4909             LDR.N    R1,??app_comm_dtu_2
   \   000001BE   0x6849             LDR      R1,[R1, #+4]
   \   000001C0   0x4288             CMP      R0,R1
   \   000001C2   0xD305             BCC.N    ??app_comm_dtu_24
   \   000001C4   0x4807             LDR.N    R0,??app_comm_dtu_2
   \   000001C6   0x6840             LDR      R0,[R0, #+4]
   \   000001C8   0x4906             LDR.N    R1,??app_comm_dtu_2
   \   000001CA   0x68C9             LDR      R1,[R1, #+12]
   \   000001CC   0x4288             CMP      R0,R1
   \   000001CE   0xD205             BCS.N    ??app_comm_dtu_23
    246                          {
    247                              comm_record_send_one((StrDevDtu *)&sCtrl.Dtu,i);  
   \                     ??app_comm_dtu_24: (+1)
   \   000001D0   0x0039             MOVS     R1,R7
   \   000001D2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001D4   0x4804             LDR.N    R0,??app_comm_dtu_2+0x4
   \   000001D6   0x.... 0x....      BL       comm_record_send_one
    248                              break;
   \   000001DA   0xE001             B.N      ??app_comm_dtu_22
    249                          }
    250                      }
    251                      i++;
   \                     ??app_comm_dtu_23: (+1)
   \   000001DC   0x1C7F             ADDS     R7,R7,#+1
   \   000001DE   0xE7E0             B.N      ??app_comm_dtu_21
    252                  }
    253              }
    254          }
   \                     ??app_comm_dtu_22: (+1)
   \                     ??app_comm_dtu_13: (+1)
   \   000001E0   0xBDF7             POP      {R0-R2,R4-R7,PC}  ;; return
   \   000001E2   0xBF00             Nop      
   \                     ??app_comm_dtu_2:
   \   000001E4   0x........         DC32     sCtrl
   \   000001E8   0x........         DC32     sCtrl+0x3AD
    255          
    256          
    257          /*******************************************************************************
    258           * 				end of file
    259           *******************************************************************************/
    260          #endif
    261          
    262          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   app_comm_dtu
        32   -> CSNC_SendData
        32   -> IAP_PragramDeal
        32   -> comm_para_flow
        32   -> comm_record_send
        32   -> comm_record_send_one


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     492  app_comm_dtu

 
 492 bytes in section .text
 
 492 bytes of CODE memory

Errors: none
Warnings: 1
