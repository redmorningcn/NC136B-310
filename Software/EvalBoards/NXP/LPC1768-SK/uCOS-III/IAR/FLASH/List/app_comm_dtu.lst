###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       04/Sep/2017  14:41:31
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  F:\iar\NC136B-310统计模块\Software\APP\comm\app_comm_dtu.c
#    Command line =  
#        F:\iar\NC136B-310统计模块\Software\APP\comm\app_comm_dtu.c -lCN
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List
#        --diag_suppress Pa050 -o
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\csnr_package_deal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\iap\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\app_comm_dtu.lst
#    Object file  =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\app_comm_dtu.o
#
###############################################################################

F:\iar\NC136B-310统计模块\Software\APP\comm\app_comm_dtu.c
      1          /*******************************************************************************
      2           *   Filename:       app_comm_dtu.c
      3           *   Revised:        All copyrights reserved to redmorningcn.
      4           *   Revision:       v1.0
      5           *   Writer:	     redmorningcn.
      6           *
      7           *   Description:    双击选中 dtu 按 Ctrl + H, 钩选 Match the case, Replace with
      8           *                   输入您要的名字，点击 Replace All
      9           *                   双击选中 Dtu 按 Ctrl + H, 钩选 Match the case, Replace with
     10           *                   输入您要的名字，点击 Replace All
     11           *                   双击选中 DTU 按 Ctrl + H, 钩选 Match the case, Replace with
     12           *                   输入您要的名字，点击 Replace All
     13           *                   在 app_cfg.h 中指定本任务的 优先级  （ APP_TASK_COMM_PRIO     ）
     14           *                                            和 任务堆栈（ APP_TASK_COMM_STK_SIZE ）大小
     15           *
     16           *   Notes:
     17           *     				E-mail: redmorningcn@qq.com
     18           *
     19           *******************************************************************************/
     20          
     21          /*******************************************************************************
     22           * INCLUDES
     23           */
     24          #define  SNL_APP_SOURCE
     25          #include <includes.h>
     26          #include <app_comm_protocol.h>
     27          #include <app_ctrl.h>
     28          #include <app.h>
     29          #include <os_cfg_app.h>
     30          #include  "IAP_program_mcu.h"
     31          
     32          
     33          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     34          const  CPU_CHAR  *app_comm_dtu__c = "$Id: $";
     35          #endif
     36          
     37          #define APP_TASK_COMM_EN     DEF_ENABLED
     38          #if APP_TASK_COMM_EN == DEF_ENABLED
     39          /*******************************************************************************
     40           * CONSTANTS
     41           */
     42          
     43          /*******************************************************************************
     44           * MACROS
     45           */
     46          #define CYCLE_TIME_TICKS            (OS_TICKS_PER_SEC * 1)
     47          #define IAP_START_CODE              1
     48          #define IAP_DATA_CODE               2
     49          #define IAP_END_CODE                3
     50          
     51          /*******************************************************************************
     52           * TYPEDEFS
     53           */
     54          //IAP 下载帧控制字
     55          #define     IAP_FRAME_CODE      10      
     56          
     57          /*******************************************************************************
     58           * LOCAL VARIABLES
     59           */
     60          
     61          /*******************************************************************************
     62           * GLOBAL VARIABLES
     63           */
     64          
     65          /***********************************************
     66          * 描述： 软定时器声明
     67          */
     68          
     69          /***********************************************
     70          * 描述： 软定时器回调函数
     71          */
     72          
     73          
     74          /*******************************************************************************
     75           * LOCAL FUNCTIONS
     76           */
     77          
     78          
     79          
     80          
     81          /*******************************************************************************
     82           * GLOBAL FUNCTIONS
     83           */
     84          
     85          /*******************************************************************************
     86           * EXTERN VARIABLES
     87           */
     88          
     89           /*******************************************************************************
     90           * EXTERN FUNCTIONS
     91           */
     92          //uint8   FRAM_StoreRecNumMgr(StrRecNumMgr  *SRecNumMgr);
     93          //uint8   FRAM_StoreOilPara(StrOilPara  *SOilPara);
     94          //void    BSP_DispClrAll(void);
     95          //uint8   FRAM_StoreProductInfo(StrProductInfo  *sProductInfo);
     96          //uint8   ReadFM24CL64(uint16  Addr, uint8 *DataBuf, uint32 DataBufLen);            
     97          //uint8   WriteFM24CL64(uint16  Addr, uint8 *DataBuf, uint32 DataBufLen);            
     98          //void    GetOilPara(void);
     99          
    100          
    101          uint8   comm_record_send_one(StrDevDtu * sDtu,uint8 addrnum);
    102          void    comm_record_send(StrDevDtu * sDtu,uint8 addrnum);
    103          void    comm_para_flow(StrDevDtu * sDtu,uint8 addrnum);
    104          uint8   comm_tinyrec_send(StrDevOtr * sOtr,uint8    addrnum);
    105          int8    IAP_PragramDeal(uint8 *databuf,char datalen);
    106          
    107          /*******************************************************************************/
    108          
    109          extern  stcSysCtrl  sCtrl;
    110          
    111          /*******************************************************************************
    112           * 名    称： app_comm_dtu
    113           * 功    能： 调用无线通讯处理函数。
    114           *            如果是定时器超时，则对应地址的timeout计算加1，并判断
    115           *            值是否到满足该地址故障判断次数，是否执行通讯异常处理。
    116           *            如果是接收到数据事件，则根据接收数据进行处理。
    117           * 入口参数： 无
    118           * 出口参数： 无
    119           * 作　 　者： redmorningcn.
    120           * 创建日期： 2017-05-18
    121           * 修    改：
    122           * 修改日期：
    123           * 备    注： 任务创建函数需要在app.h文件中声明
    124           *******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    125          void    app_comm_dtu(void)
    126          {
   \                     app_comm_dtu: (+1)
   \   00000000   0xB5FE             PUSH     {R1-R7,LR}
    127              //判断对应地址连接是否接收到数据
    128              uint8   i = 0;
   \   00000002   0x2400             MOVS     R4,#+0
    129              uint8   status = 0;
   \   00000004   0x2500             MOVS     R5,#+0
    130              uint8   echolen = 0;
   \   00000006   0x2600             MOVS     R6,#+0
    131          
    132              while(i < COMM_DEV_DTU_CONN_NUM){
   \                     ??app_comm_dtu_0: (+1)
   \   00000008   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000A   0x2C02             CMP      R4,#+2
   \   0000000C   0xDA6A             BGE.N    ??app_comm_dtu_1
    133                  if(sCtrl.Dtu.ConnCtrl[i].RecvEndFlg == 1)                   //如果地址i接收到数据，对数据进行处理
   \   0000000E   0x4862             LDR.N    R0,??app_comm_dtu_2
   \   00000010   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000012   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   00000016   0xF890 0x04FA      LDRB     R0,[R0, #+1274]
   \   0000001A   0x2801             CMP      R0,#+1
   \   0000001C   0xD160             BNE.N    ??app_comm_dtu_3
    134                  {
    135                      /***********************************************
    136                      * 描述： 从接收的revcbuf中取数据
    137                      *        根据接收到的地址CA，进行无线  数据传输；
    138                      *        接收到地址C2，进行  设置模式。
    139                      */
    140                      switch(sCtrl.Dtu.RxCtrl.FrameCode)
   \   0000001E   0x485E             LDR.N    R0,??app_comm_dtu_2
   \   00000020   0xF890 0x04F1      LDRB     R0,[R0, #+1265]
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD006             BEQ.N    ??app_comm_dtu_4
   \   00000028   0x2801             CMP      R0,#+1
   \   0000002A   0xD019             BEQ.N    ??app_comm_dtu_5
   \   0000002C   0x2802             CMP      R0,#+2
   \   0000002E   0xD018             BEQ.N    ??app_comm_dtu_6
   \   00000030   0x280A             CMP      R0,#+10
   \   00000032   0xD017             BEQ.N    ??app_comm_dtu_7
   \   00000034   0xE045             B.N      ??app_comm_dtu_8
    141                      {
    142                          case 0:     //V1.0
    143                      
    144                              if(sCtrl.Dtu.RxCtrl.SourceAddr == SLAVE_ADDR_DTU)       //地址等于CA，无线数据传输。
   \                     ??app_comm_dtu_4: (+1)
   \   00000036   0x4858             LDR.N    R0,??app_comm_dtu_2
   \   00000038   0xF890 0x04EE      LDRB     R0,[R0, #+1262]
   \   0000003C   0x28CA             CMP      R0,#+202
   \   0000003E   0xD104             BNE.N    ??app_comm_dtu_9
    145                              {
    146                                  comm_record_send((StrDevDtu *)&sCtrl.Dtu,i);        //数据的需要传递  dtu，明确 地址，pch等信息。
   \   00000040   0x0021             MOVS     R1,R4
   \   00000042   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000044   0x4855             LDR.N    R0,??app_comm_dtu_2+0x4
   \   00000046   0x.... 0x....      BL       comm_record_send
    147                              }
    148                              
    149                              if(sCtrl.Dtu.RxCtrl.SourceAddr == SLAVE_ADDR_SET)       //地址等于C2，参数设置。
   \                     ??app_comm_dtu_9: (+1)
   \   0000004A   0x4853             LDR.N    R0,??app_comm_dtu_2
   \   0000004C   0xF890 0x04EE      LDRB     R0,[R0, #+1262]
   \   00000050   0x28C2             CMP      R0,#+194
   \   00000052   0xD104             BNE.N    ??app_comm_dtu_10
    150                              {
    151                                  comm_para_flow((StrDevDtu *)&sCtrl.Dtu,i);          //设置参数，或信息交互。依据code进行相应操作。
   \   00000054   0x0021             MOVS     R1,R4
   \   00000056   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000058   0x4850             LDR.N    R0,??app_comm_dtu_2+0x4
   \   0000005A   0x.... 0x....      BL       comm_para_flow
    152                              }
    153                              break;
   \                     ??app_comm_dtu_10: (+1)
   \   0000005E   0xE030             B.N      ??app_comm_dtu_8
    154                          case 1:     //V2.0
    155                              break;
   \                     ??app_comm_dtu_5: (+1)
   \   00000060   0xE02F             B.N      ??app_comm_dtu_8
    156                          case 2:     //V2.0
    157                              break;
   \                     ??app_comm_dtu_6: (+1)
   \   00000062   0xE02E             B.N      ??app_comm_dtu_8
    158                              
    159                          case IAP_FRAME_CODE:        //V2.0 IAP程序下载
    160                                  status = IAP_PragramDeal(sCtrl.Dtu.Rd.Buf , sCtrl.Dtu.RxCtrl.Len ); //调用程序下载函数   
   \                     ??app_comm_dtu_7: (+1)
   \   00000064   0x484C             LDR.N    R0,??app_comm_dtu_2
   \   00000066   0xF890 0x14F0      LDRB     R1,[R0, #+1264]
   \   0000006A   0x484C             LDR.N    R0,??app_comm_dtu_2+0x4
   \   0000006C   0x.... 0x....      BL       IAP_PragramDeal
   \   00000070   0x0005             MOVS     R5,R0
    161                                  
    162                                  echolen = 4;
   \   00000072   0x2004             MOVS     R0,#+4
   \   00000074   0x0006             MOVS     R6,R0
    163                                  //应答数据          //如果是IAP传包帧，则传数据长度4，如果是开始、结束。返回长度为
    164                                  if(     sCtrl.Dtu.Rd.Buf[0] == IAP_START_CODE 
    165                                      ||  sCtrl.Dtu.Rd.Buf[0] == IAP_END_CODE )
   \   00000076   0x4848             LDR.N    R0,??app_comm_dtu_2
   \   00000078   0xF890 0x03AD      LDRB     R0,[R0, #+941]
   \   0000007C   0x2801             CMP      R0,#+1
   \   0000007E   0xD004             BEQ.N    ??app_comm_dtu_11
   \   00000080   0x4845             LDR.N    R0,??app_comm_dtu_2
   \   00000082   0xF890 0x03AD      LDRB     R0,[R0, #+941]
   \   00000086   0x2803             CMP      R0,#+3
   \   00000088   0xD103             BNE.N    ??app_comm_dtu_12
    166                                  {
    167                                      echolen = sCtrl.Dtu.RxCtrl.Len;   
   \                     ??app_comm_dtu_11: (+1)
   \   0000008A   0x4843             LDR.N    R0,??app_comm_dtu_2
   \   0000008C   0xF890 0x04F0      LDRB     R0,[R0, #+1264]
   \   00000090   0x0006             MOVS     R6,R0
    168                                  }
    169                                  
    170                                  CSNC_SendData(  sCtrl.Dtu.pch,                        //DTU 的PCH：串口号，收发控制等底层信息
    171                                                  sCtrl.Dtu.RxCtrl.DestAddr,            //源地址，
    172                                                  sCtrl.Dtu.RxCtrl.SourceAddr,          //目标地址
    173                                                  sCtrl.Dtu.RxCtrl.FramNum,             //帧序号 ，，在接收中累加
    174                                                  sCtrl.Dtu.RxCtrl.FrameCode,           //命令字
    175                                                  sCtrl.Dtu.Rd.Buf,                     //数据区
    176                                                  echolen                               //发送长度
    177                                              );
   \                     ??app_comm_dtu_12: (+1)
   \   00000092   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000094   0x0030             MOVS     R0,R6
   \   00000096   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000098   0x9002             STR      R0,[SP, #+8]
   \   0000009A   0x4840             LDR.N    R0,??app_comm_dtu_2+0x4
   \   0000009C   0x9001             STR      R0,[SP, #+4]
   \   0000009E   0x483E             LDR.N    R0,??app_comm_dtu_2
   \   000000A0   0xF890 0x04F1      LDRB     R0,[R0, #+1265]
   \   000000A4   0x9000             STR      R0,[SP, #+0]
   \   000000A6   0x483C             LDR.N    R0,??app_comm_dtu_2
   \   000000A8   0xF890 0x34EF      LDRB     R3,[R0, #+1263]
   \   000000AC   0x483A             LDR.N    R0,??app_comm_dtu_2
   \   000000AE   0xF890 0x24EE      LDRB     R2,[R0, #+1262]
   \   000000B2   0x4839             LDR.N    R0,??app_comm_dtu_2
   \   000000B4   0xF890 0x14ED      LDRB     R1,[R0, #+1261]
   \   000000B8   0x4837             LDR.N    R0,??app_comm_dtu_2
   \   000000BA   0xF8D0 0x0509      LDR      R0,[R0, #+1289]
   \   000000BE   0x.... 0x....      BL       CSNC_SendData
    178                              break;
    179                              
    180                          default:;  //V2.0
    181                      }
    182                      sCtrl.Dtu.ConnCtrl[i].RecvEndFlg = 0;                   //数据已处理。 接收数据置1
   \                     ??app_comm_dtu_8: (+1)
   \   000000C2   0x2000             MOVS     R0,#+0
   \   000000C4   0x4934             LDR.N    R1,??app_comm_dtu_2
   \   000000C6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000C8   0xEB11 0x01C4      ADDS     R1,R1,R4, LSL #+3
   \   000000CC   0xF881 0x04FA      STRB     R0,[R1, #+1274]
    183                      sCtrl.Dtu.ConnCtrl[i].TimeOut    = 0;                   //超时计数清零
   \   000000D0   0x2000             MOVS     R0,#+0
   \   000000D2   0x4931             LDR.N    R1,??app_comm_dtu_2
   \   000000D4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000D6   0xEB11 0x01C4      ADDS     R1,R1,R4, LSL #+3
   \   000000DA   0xF881 0x04FB      STRB     R0,[R1, #+1275]
    184          
    185                      return  ;
   \   000000DE   0xE059             B.N      ??app_comm_dtu_13
    186                  }
    187                  
    188                  i++;
   \                     ??app_comm_dtu_3: (+1)
   \   000000E0   0x1C64             ADDS     R4,R4,#+1
   \   000000E2   0xE791             B.N      ??app_comm_dtu_0
    189              }
    190           
    191              /***********************************************
    192              *   描述： 如果是超时。
    193              *1. 超时时，所有地址计算加1，对应计算器在收到数据时清零。
    194              *2. 10数据无应答，发送一次数据。
    195              */
    196              if( sCtrl.Os.CommEvtFlag |  COMM_EVT_FLAG_DTU_TIMEOUT){
    197                  uint8 i = 0;
   \                     ??app_comm_dtu_1: (+1)
   \   000000E4   0x2700             MOVS     R7,#+0
    198                  while( i < COMM_DEV_DTU_CONN_NUM){
   \                     ??app_comm_dtu_14: (+1)
   \   000000E6   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000E8   0x2F02             CMP      R7,#+2
   \   000000EA   0xDA2C             BGE.N    ??app_comm_dtu_15
    199                      sCtrl.Dtu.ConnCtrl[i].TimeOut++;
   \   000000EC   0x482A             LDR.N    R0,??app_comm_dtu_2
   \   000000EE   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000F0   0xEB10 0x00C7      ADDS     R0,R0,R7, LSL #+3
   \   000000F4   0xF890 0x04FB      LDRB     R0,[R0, #+1275]
   \   000000F8   0x1C40             ADDS     R0,R0,#+1
   \   000000FA   0x4927             LDR.N    R1,??app_comm_dtu_2
   \   000000FC   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000FE   0xEB11 0x01C7      ADDS     R1,R1,R7, LSL #+3
   \   00000102   0xF881 0x04FB      STRB     R0,[R1, #+1275]
    200                      
    201                      if(sCtrl.Dtu.ConnCtrl[i].TimeOut > 10 * COMM_DEV_DTU_CONN_NUM){
   \   00000106   0x4824             LDR.N    R0,??app_comm_dtu_2
   \   00000108   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000010A   0xEB10 0x00C7      ADDS     R0,R0,R7, LSL #+3
   \   0000010E   0xF890 0x04FB      LDRB     R0,[R0, #+1275]
   \   00000112   0x2815             CMP      R0,#+21
   \   00000114   0xDB0E             BLT.N    ??app_comm_dtu_16
    202                          sCtrl.Dtu.ConnCtrl[i].TimeOut = 10 * COMM_DEV_DTU_CONN_NUM + 1;
   \   00000116   0x2015             MOVS     R0,#+21
   \   00000118   0x491F             LDR.N    R1,??app_comm_dtu_2
   \   0000011A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000011C   0xEB11 0x01C7      ADDS     R1,R1,R7, LSL #+3
   \   00000120   0xF881 0x04FB      STRB     R0,[R1, #+1275]
    203                          sCtrl.Dtu.ConnCtrl[i].ErrFlg = 1;               //超时数大于10次，5S，报通讯错误。
   \   00000124   0x2001             MOVS     R0,#+1
   \   00000126   0x491C             LDR.N    R1,??app_comm_dtu_2
   \   00000128   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000012A   0xEB11 0x01C7      ADDS     R1,R1,R7, LSL #+3
   \   0000012E   0xF881 0x04FC      STRB     R0,[R1, #+1276]
   \   00000132   0xE006             B.N      ??app_comm_dtu_17
    204                          
    205                      }else{
    206                          sCtrl.Dtu.ConnCtrl[i].ErrFlg = 0;               //接收到数据，通讯清零
   \                     ??app_comm_dtu_16: (+1)
   \   00000134   0x2000             MOVS     R0,#+0
   \   00000136   0x4918             LDR.N    R1,??app_comm_dtu_2
   \   00000138   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000013A   0xEB11 0x01C7      ADDS     R1,R1,R7, LSL #+3
   \   0000013E   0xF881 0x04FC      STRB     R0,[R1, #+1276]
    207                      }
    208                      i++;
   \                     ??app_comm_dtu_17: (+1)
   \   00000142   0x1C7F             ADDS     R7,R7,#+1
   \   00000144   0xE7CF             B.N      ??app_comm_dtu_14
    209                  }
    210                  
    211                  /***********************************************
    212                  * 描述： 如果是超时。
    213                  * 发送数据
    214                  */ 
    215                  if( sCtrl.sRecNumMgr.Current == 0 )                     //记录号为0，还未发送数据。不做通讯状态判断
   \                     ??app_comm_dtu_15: (+1)
   \   00000146   0x4814             LDR.N    R0,??app_comm_dtu_2
   \   00000148   0x6840             LDR      R0,[R0, #+4]
   \   0000014A   0x2800             CMP      R0,#+0
   \   0000014C   0xD10D             BNE.N    ??app_comm_dtu_18
    216                  {
    217                      uint8 i = 0;
   \   0000014E   0x2000             MOVS     R0,#+0
    218                      while( i < COMM_DEV_DTU_CONN_NUM){
   \                     ??app_comm_dtu_19: (+1)
   \   00000150   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000152   0x2802             CMP      R0,#+2
   \   00000154   0xDA08             BGE.N    ??app_comm_dtu_20
    219                          sCtrl.Dtu.ConnCtrl[i].TimeOut = 0;
   \   00000156   0x2100             MOVS     R1,#+0
   \   00000158   0x4A0F             LDR.N    R2,??app_comm_dtu_2
   \   0000015A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000015C   0xEB12 0x02C0      ADDS     R2,R2,R0, LSL #+3
   \   00000160   0xF882 0x14FB      STRB     R1,[R2, #+1275]
    220                          i++;
   \   00000164   0x1C40             ADDS     R0,R0,#+1
   \   00000166   0xE7F3             B.N      ??app_comm_dtu_19
    221                      }
    222                      return;
   \                     ??app_comm_dtu_20: (+1)
   \   00000168   0xE014             B.N      ??app_comm_dtu_13
    223                  }
    224                          
    225                  //发送1条数据记录
    226                  i =0 ;
   \                     ??app_comm_dtu_18: (+1)
   \   0000016A   0x2000             MOVS     R0,#+0
   \   0000016C   0x0007             MOVS     R7,R0
    227                  while(i < COMM_DEV_DTU_CONN_NUM){
   \                     ??app_comm_dtu_21: (+1)
   \   0000016E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000170   0x2F02             CMP      R7,#+2
   \   00000172   0xDA09             BGE.N    ??app_comm_dtu_22
    228                      if(sCtrl.Dtu.ConnCtrl[i].SlaveAddr == SLAVE_ADDR_DTU){
   \   00000174   0x4808             LDR.N    R0,??app_comm_dtu_2
   \   00000176   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000178   0xEB10 0x00C7      ADDS     R0,R0,R7, LSL #+3
   \   0000017C   0xF890 0x04FD      LDRB     R0,[R0, #+1277]
   \   00000180   0x28CA             CMP      R0,#+202
   \   00000182   0xD001             BEQ.N    ??app_comm_dtu_22
    229                                                                          //对DTU地址发送数据        
    230                        //  comm_record_send_one((StrDevDtu *)&sCtrl.Dtu,i);  
    231                          break;
    232                      }
    233                      i++;
   \                     ??app_comm_dtu_23: (+1)
   \   00000184   0x1C7F             ADDS     R7,R7,#+1
   \   00000186   0xE7F2             B.N      ??app_comm_dtu_21
    234                  }
    235                  
    236                  //重新给定时器给初值。osal_start_timerRl可以自动赋值，
    237                  osal_start_timerRl( OS_TASK_ID_TMR, 
    238                                      OS_EVT_TMR_DTU, 
    239                                      OS_TICKS_PER_SEC*10 );  //统计装置和无线发送模块定时器  10s
   \                     ??app_comm_dtu_22: (+1)
   \   00000188   0xF242 0x7210      MOVW     R2,#+10000
   \   0000018C   0x2140             MOVS     R1,#+64
   \   0000018E   0x2001             MOVS     R0,#+1
   \   00000190   0x.... 0x....      BL       osal_start_timerRl
    240          
    241              }
    242          }
   \                     ??app_comm_dtu_13: (+1)
   \   00000194   0xBDF7             POP      {R0-R2,R4-R7,PC}  ;; return
   \   00000196   0xBF00             Nop      
   \                     ??app_comm_dtu_2:
   \   00000198   0x........         DC32     sCtrl
   \   0000019C   0x........         DC32     sCtrl+0x3AD
    243          
    244          
    245          /*******************************************************************************
    246           * 				end of file
    247           *******************************************************************************/
    248          #endif
    249          
    250          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   app_comm_dtu
        32   -> CSNC_SendData
        32   -> IAP_PragramDeal
        32   -> comm_para_flow
        32   -> comm_record_send
        32   -> osal_start_timerRl


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     416  app_comm_dtu

 
 416 bytes in section .text
 
 416 bytes of CODE memory

Errors: none
Warnings: 1
