###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       15/Aug/2017  16:25:18
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC136B-310统计模块\Software\uCOS-III\Ports\ARM-Cortex-M3\CSP\Generic\os_csp.c
#    Command line =  
#        F:\iar\NC136B-310统计模块\Software\uCOS-III\Ports\ARM-Cortex-M3\CSP\Generic\os_csp.c
#        -lCN
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List
#        --diag_suppress Pa050 -o
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\csnr_package_deal\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\os_csp.lst
#    Object file  =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\os_csp.o
#
###############################################################################

F:\iar\NC136B-310统计模块\Software\uCOS-III\Ports\ARM-Cortex-M3\CSP\Generic\os_csp.c
      1          /*
      2          ************************************************************************************************************************
      3          *                                                      uC/OS-III
      4          *                                                The Real-Time Kernel
      5          *
      6          *
      7          *                                      (c) Copyright 2009, Micrium, Weston, FL
      8          *                                                 All Rights Reserved
      9          *
     10          *                                            ARM Cortex M3 OS Chip Support
     11          *                                                      Generic
     12          * 
     13          * File      : OS_CPU.C
     14          * Version   : V3.01.1
     15          * By        : JJL
     16          *             FT
     17          * For       : ARMv7M Cortex-M3
     18          * Mode      : Thumb2
     19          ************************************************************************************************************************
     20          */
     21          
     22          #define  OS_CSP_GLOBALS
     23          #include <os.h>
     24          #include <csp.h>
     25          
     26          
     27          /*$PAGE*/
     28          /*
     29          *********************************************************************************************************
     30          *                                            LOCAL DEFINES
     31          *********************************************************************************************************
     32          */
     33          
     34          
     35          /*
     36          *********************************************************************************************************
     37          *                                           LOCAL CONSTANTS
     38          *********************************************************************************************************
     39          */
     40          
     41          
     42          /*
     43          *********************************************************************************************************
     44          *                                          LOCAL DATA TYPES
     45          *********************************************************************************************************
     46          */
     47          
     48          
     49          /*
     50          *********************************************************************************************************
     51          *                                            LOCAL TABLES
     52          *********************************************************************************************************
     53          */
     54          
     55          
     56          /*
     57          *********************************************************************************************************
     58          *                                       LOCAL GLOBAL VARIABLES
     59          *********************************************************************************************************
     60          */
     61          
     62          
     63          /*
     64          *********************************************************************************************************
     65          *                                      LOCAL FUNCTION PROTOTYPES
     66          *********************************************************************************************************
     67          */
     68          
     69          
     70          /*
     71          *********************************************************************************************************
     72          *                                     LOCAL CONFIGURATION ERRORS
     73          *********************************************************************************************************
     74          */
     75          
     76          
     77          
     78          /*$PAGE*/
     79          /*
     80          ************************************************************************************************************************
     81          *                                                INITIALIZE TICKER INTERRUPT
     82          *
     83          * Description: Initialize the the Tick Interrupt.
     84          *
     85          * Arguments  : none.
     86          *
     87          * Note(s)    : (1) This function MUST be called after OSStart() & after processor initialization.
     88          ************************************************************************************************************************
     89          */
     90          

   \                                 In section .text, align 2, keep-with-next
     91          void  OS_CSP_TickInit (void)
     92          {
   \                     OS_CSP_TickInit: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     93              CPU_INT32U  cnts;
     94              CPU_INT32U  cpu_freq;
     95              
     96              
     97              cpu_freq = CSP_PM_CPU_ClkFreqGet();                         /* Get the CPU clock                                    */
   \   00000002   0x.... 0x....      BL       CSP_PM_CPU_ClkFreqGet
   \   00000006   0x0005             MOVS     R5,R0
     98              cnts     = (cpu_freq / OSCfg_TickRate_Hz);                  /* Calculate the number of SysTick counts               */
   \   00000008   0x....             LDR.N    R0,??DataTable0
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0xFBB5 0xF0F0      UDIV     R0,R5,R0
   \   00000010   0x0004             MOVS     R4,R0
     99          
    100              OS_CPU_SysTickInit(cnts);                                   /* Call the Generic OS Systick initialization           */
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0x.... 0x....      BL       OS_CPU_SysTickInit
    101          }
   \   00000018   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    102          
    103          
    104          /*$PAGE*/
    105          /*
    106          ************************************************************************************************************************
    107          *                                               INTERRUPT CONTROLLER HANDLER
    108          *
    109          * Description: Handles all Cortex M3 NVIC's external sources interrupts
    110          *
    111          * Arguments  : none.
    112          *
    113          * Note(s)    : none.
    114          ************************************************************************************************************************
    115          */
    116          

   \                                 In section .text, align 2, keep-with-next
    117          void  OS_CPU_IntHandler (void) 
    118          {
   \                     OS_CPU_IntHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    119              CPU_SR_ALLOC();
   \   00000002   0x2400             MOVS     R4,#+0
    120              
    121              
    122              CPU_CRITICAL_ENTER();                                       /* Tell the OS that we are starting an ISR              */
   \   00000004   0x.... 0x....      BL       CPU_SR_Save
   \   00000008   0x0004             MOVS     R4,R0
   \   0000000A   0x.... 0x....      BL       CPU_IntDisMeasStart
    123          
    124              OSIntEnter();
   \   0000000E   0x.... 0x....      BL       OSIntEnter
    125          
    126              CPU_CRITICAL_EXIT();
   \   00000012   0x.... 0x....      BL       CPU_IntDisMeasStop
   \   00000016   0x0020             MOVS     R0,R4
   \   00000018   0x.... 0x....      BL       CPU_SR_Restore
    127              
    128              CSP_IntHandler();                                           /* Call the generic CSP interrupt handler.              */
   \   0000001C   0x.... 0x....      BL       CSP_IntHandler
    129              
    130              OSIntExit();                                                /* Tell the OS that we are leaving the ISR              */
   \   00000020   0x.... 0x....      BL       OSIntExit
    131          }
   \   00000024   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     OSCfg_TickRate_Hz
    132          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   OS_CPU_IntHandler
         8   -> CPU_IntDisMeasStart
         8   -> CPU_IntDisMeasStop
         8   -> CPU_SR_Restore
         8   -> CPU_SR_Save
         8   -> CSP_IntHandler
         8   -> OSIntEnter
         8   -> OSIntExit
      16   OS_CSP_TickInit
        16   -> CSP_PM_CPU_ClkFreqGet
        16   -> OS_CPU_SysTickInit


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
      38  OS_CPU_IntHandler
      26  OS_CSP_TickInit

 
 68 bytes in section .text
 
 68 bytes of CODE memory

Errors: none
Warnings: none
