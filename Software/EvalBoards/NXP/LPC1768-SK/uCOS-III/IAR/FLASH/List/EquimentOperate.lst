###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       30/Sep/2017  11:25:11
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC136B-310统计模块\Application\Library\EquipmentOperations\EquimentOperate.c
#    Command line =  
#        F:\iar\NC136B-310统计模块\Application\Library\EquipmentOperations\EquimentOperate.c
#        -lCN
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List
#        --diag_suppress Pa050 -o
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\csnr_package_deal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\tax\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\EquimentOperate.lst
#    Object file  =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\EquimentOperate.o
#
###############################################################################

F:\iar\NC136B-310统计模块\Application\Library\EquipmentOperations\EquimentOperate.c
      1          #include    "includes.h"
      2          
      3          

   \                                 In section .text, align 2, keep-with-next
      4          uint8	SetDen(short density)
      5          {
   \                     SetDen: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
   \   00000004   0x0004             MOVS     R4,R0
      6          	stcDensity	sDensity;						//密度
      7          	uint16		CrcCheck;
      8          
      9          	sDensity.Density = density ;
   \   00000006   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000008   0x9402             STR      R4,[SP, #+8]
     10          	
     11          	CrcCheck = GetCrc16Check((uint8 *)&sDensity,sizeof(sDensity) - 2);
   \   0000000A   0x2116             MOVS     R1,#+22
   \   0000000C   0x4668             MOV      R0,SP
   \   0000000E   0x.... 0x....      BL       GetCrc16Check
   \   00000012   0x0005             MOVS     R5,R0
     12          	
     13          	sDensity.CrcCheck = CrcCheck;
   \   00000014   0xF8AD 0x5016      STRH     R5,[SP, #+22]
     14          			
     15          	if(StoreDensity((stcDensity *)&sDensity))
   \   00000018   0x4668             MOV      R0,SP
   \   0000001A   0x.... 0x....      BL       StoreDensity
   \   0000001E   0x2800             CMP      R0,#+0
   \   00000020   0xD01B             BEQ.N    ??SetDen_0
     16          	{
     17          		DisplaySet(100,1,"         ");
   \   00000022   0x.... 0x....      LDR.W    R2,??DataTable9_4
   \   00000026   0x2101             MOVS     R1,#+1
   \   00000028   0x2064             MOVS     R0,#+100
   \   0000002A   0x.... 0x....      BL       DisplaySet
     18          		DisplaySet(250,1,"D-%d",sDensity.Density);
   \   0000002E   0x9B02             LDR      R3,[SP, #+8]
   \   00000030   0x.... 0x....      LDR.W    R2,??DataTable9_5
   \   00000034   0x2101             MOVS     R1,#+1
   \   00000036   0x20FA             MOVS     R0,#+250
   \   00000038   0x.... 0x....      BL       DisplaySet
     19          		DisplaySet(100,1,"         ");
   \   0000003C   0x.... 0x....      LDR.W    R2,??DataTable9_4
   \   00000040   0x2101             MOVS     R1,#+1
   \   00000042   0x2064             MOVS     R0,#+100
   \   00000044   0x.... 0x....      BL       DisplaySet
     20          		
     21          		printfcom0("\r\n 设置的密度值 %d",sDensity.Density);
   \   00000048   0x9902             LDR      R1,[SP, #+8]
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable9_6
   \   0000004E   0x.... 0x....      BL       printfcom0
     22          		SetSucceedIndicate();	
   \   00000052   0x.... 0x....      BL       SetSucceedIndicate
     23          		
     24          		return	1;
   \   00000056   0x2001             MOVS     R0,#+1
   \   00000058   0xE002             B.N      ??SetDen_1
     25          	}
     26          	else
     27          	{
     28          		StoreErrIndicate();	
   \                     ??SetDen_0: (+1)
   \   0000005A   0x.... 0x....      BL       StoreErrIndicate
     29          		
     30          		return	0;
   \   0000005E   0x2000             MOVS     R0,#+0
   \                     ??SetDen_1: (+1)
   \   00000060   0xB007             ADD      SP,SP,#+28
   \   00000062   0xBD30             POP      {R4,R5,PC}       ;; return
     31          	}
     32          } 
     33          

   \                                 In section .text, align 2, keep-with-next
     34          uint8	SetCalcPara(uint32 calcpara)
     35          {
   \                     SetCalcPara: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     36          	if(StoreCalcPara(calcpara))
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0x.... 0x....      BL       StoreCalcPara
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD016             BEQ.N    ??SetCalcPara_0
     37          	{
     38          		DisplaySet(100,1,"         ");
   \   0000000E   0x.... 0x....      LDR.W    R2,??DataTable9_4
   \   00000012   0x2101             MOVS     R1,#+1
   \   00000014   0x2064             MOVS     R0,#+100
   \   00000016   0x.... 0x....      BL       DisplaySet
     39          		DisplaySet(250,1,"C-%d",calcpara);
   \   0000001A   0x0023             MOVS     R3,R4
   \   0000001C   0x.... 0x....      LDR.W    R2,??DataTable9_7
   \   00000020   0x2101             MOVS     R1,#+1
   \   00000022   0x20FA             MOVS     R0,#+250
   \   00000024   0x.... 0x....      BL       DisplaySet
     40          		DisplaySet(100,1,"         ");
   \   00000028   0x.... 0x....      LDR.W    R2,??DataTable9_4
   \   0000002C   0x2101             MOVS     R1,#+1
   \   0000002E   0x2064             MOVS     R0,#+100
   \   00000030   0x.... 0x....      BL       DisplaySet
     41          		
     42          		SetSucceedIndicate();	
   \   00000034   0x.... 0x....      BL       SetSucceedIndicate
     43          		
     44          		return	1;
   \   00000038   0x2001             MOVS     R0,#+1
   \   0000003A   0xE002             B.N      ??SetCalcPara_1
     45          	}
     46          	else
     47          	{
     48          		StoreErrIndicate();	
   \                     ??SetCalcPara_0: (+1)
   \   0000003C   0x.... 0x....      BL       StoreErrIndicate
     49          		
     50          		return	0;
   \   00000040   0x2000             MOVS     R0,#+0
   \                     ??SetCalcPara_1: (+1)
   \   00000042   0xBD10             POP      {R4,PC}          ;; return
     51          	}
     52          } 
     53          

   \                                 In section .text, align 2, keep-with-next
     54          uint8	SetHight(short 	Hight)
     55          {
   \                     SetHight: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x0004             MOVS     R4,R0
     56          	stcReviseHight	sReviseHight;							//高度调整
     57          	uint16		CrcCheck;
     58          	short       StoreHight; 
     59          		
     60          	if(ReadReviseHight((stcReviseHight *)&sReviseHight))
   \   00000006   0x4668             MOV      R0,SP
   \   00000008   0x.... 0x....      BL       ReadReviseHight
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD003             BEQ.N    ??SetHight_0
     61          	{
     62          		StoreHight = sReviseHight.ReviseHight;
   \   00000010   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   00000014   0x0006             MOVS     R6,R0
   \   00000016   0xE001             B.N      ??SetHight_1
     63          	}
     64          	else
     65          	{
     66          		StoreHight = 0;
   \                     ??SetHight_0: (+1)
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x0006             MOVS     R6,R0
     67          	}
     68          	
     69          	sReviseHight.ReviseHight = Hight;
   \                     ??SetHight_1: (+1)
   \   0000001C   0xF8AD 0x4000      STRH     R4,[SP, #+0]
     70          	
     71          	StoreHight = StoreHight + sReviseHight.ReviseHight;
   \   00000020   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000024   0x1986             ADDS     R6,R0,R6
     72          	 	
     73          	if(StoreHight > 500 ||  StoreHight < -500)
   \   00000026   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   00000028   0xF5B6 0x7FFA      CMP      R6,#+500
   \   0000002C   0xDC03             BGT.N    ??SetHight_2
   \   0000002E   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   00000030   0xF516 0x7FFA      CMN      R6,#+500
   \   00000034   0xDA23             BGE.N    ??SetHight_3
     74          	{
     75          		if(StoreHight > 500)
   \                     ??SetHight_2: (+1)
   \   00000036   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   00000038   0xF5B6 0x7FFA      CMP      R6,#+500
   \   0000003C   0xDD1A             BLE.N    ??SetHight_4
     76          		{
     77          			sReviseHight.ReviseHight = 500;
   \   0000003E   0xF44F 0x70FA      MOV      R0,#+500
   \   00000042   0xF8AD 0x0000      STRH     R0,[SP, #+0]
     78          //			DisplaySet(60,2,"TO_H");
     79          //			DisplaySet(60,2,"    ");
     80                      if(g_DipDisVal)
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable9_8
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0x2800             CMP      R0,#+0
   \   0000004E   0xD018             BEQ.N    ??SetHight_5
     81                      {
     82                          DisplaySet(60,1,"%u",g_DipDisVal % 10000);	//显示油量值
   \   00000050   0xF242 0x7010      MOVW     R0,#+10000
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable9_8
   \   00000058   0x6809             LDR      R1,[R1, #+0]
   \   0000005A   0x.... 0x....      LDR.W    R2,??DataTable9_8
   \   0000005E   0x6812             LDR      R2,[R2, #+0]
   \   00000060   0xFBB2 0xF2F0      UDIV     R2,R2,R0
   \   00000064   0xFB00 0x1312      MLS      R3,R0,R2,R1
   \   00000068   0x....             ADR.N    R2,??DataTable6  ;; 0x25, 0x75, 0x00, 0x00
   \   0000006A   0x2101             MOVS     R1,#+1
   \   0000006C   0x203C             MOVS     R0,#+60
   \   0000006E   0x.... 0x....      BL       DisplaySet
   \   00000072   0xE006             B.N      ??SetHight_5
     83                      }	
     84          //			DelayX10ms(60);
     85          		}
     86          		else
     87          		{
     88          			sReviseHight.ReviseHight = -500;
   \                     ??SetHight_4: (+1)
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable9_9  ;; 0xfffffe0c
   \   00000078   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   \   0000007C   0xE001             B.N      ??SetHight_5
     89          //			DisplaySet(60,2,"TO_L");
     90          //			DisplaySet(60,2,"    ");
     91          //			DelayX10ms(250);					
     92          		}
     93          	}
     94          	else
     95          	{
     96          		sReviseHight.ReviseHight = StoreHight;
   \                     ??SetHight_3: (+1)
   \   0000007E   0xF8AD 0x6000      STRH     R6,[SP, #+0]
     97          	}
     98          
     99          	CrcCheck = GetCrc16Check((uint8 *)&sReviseHight,sizeof(sReviseHight) - 2);
   \                     ??SetHight_5: (+1)
   \   00000082   0x2102             MOVS     R1,#+2
   \   00000084   0x4668             MOV      R0,SP
   \   00000086   0x.... 0x....      BL       GetCrc16Check
   \   0000008A   0x0005             MOVS     R5,R0
    100          	
    101          	sReviseHight.CrcCheck = CrcCheck;
   \   0000008C   0xF8AD 0x5002      STRH     R5,[SP, #+2]
    102          
    103          	if(StoreReviseHight((stcReviseHight *)&sReviseHight))
   \   00000090   0x4668             MOV      R0,SP
   \   00000092   0x.... 0x....      BL       StoreReviseHight
   \   00000096   0x2800             CMP      R0,#+0
   \   00000098   0xD009             BEQ.N    ??SetHight_6
    104          	{
    105          //		DisplaySet(100,1,"         ");
    106          //		DisplaySet(250,1,"H %d.",sReviseHight.ReviseHight);
    107          //		DisplaySet(100,1,"         ");
    108                  
    109                  
    110                  printfcom0("\r\n 设置的高度值 %d",sReviseHight.ReviseHight);
   \   0000009A   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \   0000009E   0x.... 0x....      LDR.W    R0,??DataTable9_10
   \   000000A2   0x.... 0x....      BL       printfcom0
    111          
    112          		SetSucceedIndicate();	
   \   000000A6   0x.... 0x....      BL       SetSucceedIndicate
    113          		
    114          		return	1;
   \   000000AA   0x2001             MOVS     R0,#+1
   \   000000AC   0xE002             B.N      ??SetHight_7
    115          	}
    116          	else
    117          	{
    118          		StoreErrIndicate();	
   \                     ??SetHight_6: (+1)
   \   000000AE   0x.... 0x....      BL       StoreErrIndicate
    119          		
    120          		return	0;
   \   000000B2   0x2000             MOVS     R0,#+0
   \                     ??SetHight_7: (+1)
   \   000000B4   0xBD76             POP      {R1,R2,R4-R6,PC}  ;; return
    121          	}
    122          } 
    123          

   \                                 In section .text, align 2, keep-with-next
    124          uint8	SetSel(uint8	ModelNum)
    125          {						
   \                     SetSel: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    126          	if(StoreSelectModel(ModelNum))
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x.... 0x....      BL       StoreSelectModel
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD017             BEQ.N    ??SetSel_0
    127          	{
    128          		DisplaySet(100,1,"         ");
   \   00000010   0x.... 0x....      LDR.W    R2,??DataTable9_4
   \   00000014   0x2101             MOVS     R1,#+1
   \   00000016   0x2064             MOVS     R0,#+100
   \   00000018   0x.... 0x....      BL       DisplaySet
    129          		DisplaySet(250,1,"S-%d.",ModelNum);
   \   0000001C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001E   0x0023             MOVS     R3,R4
   \   00000020   0x.... 0x....      LDR.W    R2,??DataTable9_11
   \   00000024   0x2101             MOVS     R1,#+1
   \   00000026   0x20FA             MOVS     R0,#+250
   \   00000028   0x.... 0x....      BL       DisplaySet
    130          		DisplaySet(100,1,"         ");					
   \   0000002C   0x.... 0x....      LDR.W    R2,??DataTable9_4
   \   00000030   0x2101             MOVS     R1,#+1
   \   00000032   0x2064             MOVS     R0,#+100
   \   00000034   0x.... 0x....      BL       DisplaySet
    131          		SetSucceedIndicate();	
   \   00000038   0x.... 0x....      BL       SetSucceedIndicate
    132          		
    133          		return	1;
   \   0000003C   0x2001             MOVS     R0,#+1
   \   0000003E   0xE002             B.N      ??SetSel_1
    134          	}
    135          	else
    136          	{
    137          		StoreErrIndicate();	
   \                     ??SetSel_0: (+1)
   \   00000040   0x.... 0x....      BL       StoreErrIndicate
    138          		
    139          		return	0;
   \   00000044   0x2000             MOVS     R0,#+0
   \                     ??SetSel_1: (+1)
   \   00000046   0xBD10             POP      {R4,PC}          ;; return
    140          	}
    141          }
    142          
    143          

   \                                 In section .text, align 2, keep-with-next
    144          uint8	SetFix(unsigned short 	locotype,unsigned short 	loconum)
    145          {
   \                     SetFix: (+1)
   \   00000000   0xE92D 0x43F3      PUSH     {R0,R1,R4-R9,LR}
   \   00000004   0xB089             SUB      SP,SP,#+36
    146          	stcFixInfo	sFixInfo;							//高度调整
    147          	uint16		CrcCheck;
    148          		
    149          	memcpy((uint8 *)&sFixInfo.LocoTyp,(uint8 *)&locotype,sizeof(locotype));
   \   00000006   0x2502             MOVS     R5,#+2
   \   00000008   0xAE09             ADD      R6,SP,#+36
   \   0000000A   0xAF01             ADD      R7,SP,#+4
   \   0000000C   0x002A             MOVS     R2,R5
   \   0000000E   0x0031             MOVS     R1,R6
   \   00000010   0x0038             MOVS     R0,R7
   \   00000012   0x.... 0x....      BL       __aeabi_memcpy
    150          	memcpy((uint8 *)&sFixInfo.LocoNum,(uint8 *)&loconum,sizeof(loconum));
   \   00000016   0x2702             MOVS     R7,#+2
   \   00000018   0xF10D 0x0828      ADD      R8,SP,#+40
   \   0000001C   0xF10D 0x0906      ADD      R9,SP,#+6
   \   00000020   0x003A             MOVS     R2,R7
   \   00000022   0x4641             MOV      R1,R8
   \   00000024   0x4648             MOV      R0,R9
   \   00000026   0x.... 0x....      BL       __aeabi_memcpy
    151          
    152          	DisplaySet(100,1,"         ");
   \   0000002A   0x....             LDR.N    R2,??DataTable9_4
   \   0000002C   0x2101             MOVS     R1,#+1
   \   0000002E   0x2064             MOVS     R0,#+100
   \   00000030   0x.... 0x....      BL       DisplaySet
    153          	DisplaySet(250,1,"%4d.%4d",locotype,loconum);
   \   00000034   0xF8BD 0x0028      LDRH     R0,[SP, #+40]
   \   00000038   0x9000             STR      R0,[SP, #+0]
   \   0000003A   0xF8BD 0x3024      LDRH     R3,[SP, #+36]
   \   0000003E   0x....             LDR.N    R2,??DataTable9_12
   \   00000040   0x2101             MOVS     R1,#+1
   \   00000042   0x20FA             MOVS     R0,#+250
   \   00000044   0x.... 0x....      BL       DisplaySet
    154          	DisplaySet(100,1,"         ");
   \   00000048   0x....             LDR.N    R2,??DataTable9_4
   \   0000004A   0x2101             MOVS     R1,#+1
   \   0000004C   0x2064             MOVS     R0,#+100
   \   0000004E   0x.... 0x....      BL       DisplaySet
    155          
    156          	CrcCheck = GetCrc16Check((uint8 *)&sFixInfo,sizeof(sFixInfo) - 2);
   \   00000052   0x211A             MOVS     R1,#+26
   \   00000054   0xA801             ADD      R0,SP,#+4
   \   00000056   0x.... 0x....      BL       GetCrc16Check
   \   0000005A   0x0004             MOVS     R4,R0
    157          	sFixInfo.CrcCheck = CrcCheck;
   \   0000005C   0xF8AD 0x401E      STRH     R4,[SP, #+30]
    158          
    159          	if(StoreFixInfo((stcFixInfo *)&sFixInfo))
   \   00000060   0xA801             ADD      R0,SP,#+4
   \   00000062   0x.... 0x....      BL       StoreFixInfo
   \   00000066   0x2800             CMP      R0,#+0
   \   00000068   0xD003             BEQ.N    ??SetFix_0
    160          	{
    161          		SetSucceedIndicate();	
   \   0000006A   0x.... 0x....      BL       SetSucceedIndicate
    162          		return	1;
   \   0000006E   0x2001             MOVS     R0,#+1
   \   00000070   0xE002             B.N      ??SetFix_1
    163          	}
    164          	else
    165          	{
    166          		StoreErrIndicate();	
   \                     ??SetFix_0: (+1)
   \   00000072   0x.... 0x....      BL       StoreErrIndicate
    167          		return	0;
   \   00000076   0x2000             MOVS     R0,#+0
   \                     ??SetFix_1: (+1)
   \   00000078   0xB00B             ADD      SP,SP,#+44
   \   0000007A   0xE8BD 0x83F0      POP      {R4-R9,PC}       ;; return
    168          	}
    169          } 
    170          
    171          

   \                                 In section .bss, align 1
    172          unsigned char l_modelcardflg = 0;
   \                     l_modelcardflg:
   \   00000000                      DS8 1
    173          

   \                                 In section .text, align 2, keep-with-next
    174          unsigned char GetModelCardFlg(void)
    175          {
    176          	return	l_modelcardflg;
   \                     GetModelCardFlg: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable9_13
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
    177          }
    178          

   \                                 In section .text, align 2, keep-with-next
    179          void ClearModelCardFlg(void)
    180          {
    181          	l_modelcardflg = 0;
   \                     ClearModelCardFlg: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x....             LDR.N    R1,??DataTable9_13
   \   00000004   0x7008             STRB     R0,[R1, #+0]
    182          }
   \   00000006   0x4770             BX       LR               ;; return
    183          
    184          extern stcModelCard  m_sModelCard;
    185          
    186          #define		OIL_BOX_MODEL_ADDR				2000	//油箱模型地址

   \                                 In section .text, align 2, keep-with-next
    187          void	SetModel(unsigned char *buf,unsigned int Len)
    188          {
   \                     SetModel: (+1)
   \   00000000   0xE92D 0x4FFE      PUSH     {R1-R11,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
    189           	static	unsigned char *pmodel;
    190          
    191           	unsigned int   modeldatanum = 0;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x9000             STR      R0,[SP, #+0]
    192          	unsigned int   readsize;	
    193          	unsigned int   datalen = 0;
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
    194          	unsigned int   i;
    195          	uint32		ModelNumAdd;
    196          	uint8		ModelNum;	
    197          
    198          	datalen = 0;
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x4680             MOV      R8,R0
    199          			
    200          	memcpy((unsigned char *)&modeldatanum,&buf[datalen],sizeof(modeldatanum));
   \   00000014   0xF05F 0x0904      MOVS     R9,#+4
   \   00000018   0xEB18 0x0004      ADDS     R0,R8,R4
   \   0000001C   0x9002             STR      R0,[SP, #+8]
   \   0000001E   0x46EA             MOV      R10,SP
   \   00000020   0x464A             MOV      R2,R9
   \   00000022   0x9902             LDR      R1,[SP, #+8]
   \   00000024   0x4650             MOV      R0,R10
   \   00000026   0x.... 0x....      BL       __aeabi_memcpy
    201          	datalen += sizeof(modeldatanum);
   \   0000002A   0xF118 0x0804      ADDS     R8,R8,#+4
    202          	
    203          	DisplaySet(50,1,"o..",modeldatanum);
   \   0000002E   0x9B00             LDR      R3,[SP, #+0]
   \   00000030   0x....             ADR.N    R2,??DataTable9  ;; "o.."
   \   00000032   0x2101             MOVS     R1,#+1
   \   00000034   0x2032             MOVS     R0,#+50
   \   00000036   0x.... 0x....      BL       DisplaySet
    204          	DisplaySet(50,1,"...",modeldatanum);
   \   0000003A   0x9B00             LDR      R3,[SP, #+0]
   \   0000003C   0x....             ADR.N    R2,??DataTable9_1  ;; "..."
   \   0000003E   0x2101             MOVS     R1,#+1
   \   00000040   0x2032             MOVS     R0,#+50
   \   00000042   0x.... 0x....      BL       DisplaySet
    205          
    206          	if(modeldatanum == 0)
   \   00000046   0x9800             LDR      R0,[SP, #+0]
   \   00000048   0x2800             CMP      R0,#+0
   \   0000004A   0xD10C             BNE.N    ??SetModel_0
    207          	{
    208          	   pmodel = (unsigned char *)&m_sModelCard;
   \   0000004C   0x....             LDR.N    R0,??DataTable9_14
   \   0000004E   0x....             LDR.N    R1,??DataTable9_15
   \   00000050   0x6008             STR      R0,[R1, #+0]
    209          	   printfcom0("\r\n 指针设值 pmodel %x,sizeof(m_sModelCard) %d",pmodel,sizeof(m_sModelCard));
   \   00000052   0xF241 0x7244      MOVW     R2,#+5956
   \   00000056   0x....             LDR.N    R0,??DataTable9_15
   \   00000058   0x6801             LDR      R1,[R0, #+0]
   \   0000005A   0x....             LDR.N    R0,??DataTable9_16
   \   0000005C   0x.... 0x....      BL       printfcom0
    210          	   l_modelcardflg = 1;
   \   00000060   0x2001             MOVS     R0,#+1
   \   00000062   0x....             LDR.N    R1,??DataTable9_13
   \   00000064   0x7008             STRB     R0,[R1, #+0]
    211          	}
    212          	
    213          	readsize	= 128<(Len-datalen)?128:(Len-datalen);
   \                     ??SetModel_0: (+1)
   \   00000066   0xEBB5 0x0008      SUBS     R0,R5,R8
   \   0000006A   0x2881             CMP      R0,#+129
   \   0000006C   0xD302             BCC.N    ??SetModel_1
   \   0000006E   0xF05F 0x0B80      MOVS     R11,#+128
   \   00000072   0xE001             B.N      ??SetModel_2
   \                     ??SetModel_1: (+1)
   \   00000074   0xEBB5 0x0B08      SUBS     R11,R5,R8
    214          	memcpy(pmodel,&buf[datalen],readsize);
   \                     ??SetModel_2: (+1)
   \   00000078   0xEB18 0x0904      ADDS     R9,R8,R4
   \   0000007C   0x....             LDR.N    R0,??DataTable9_15
   \   0000007E   0xF8D0 0xA000      LDR      R10,[R0, #+0]
   \   00000082   0x465A             MOV      R2,R11
   \   00000084   0x4649             MOV      R1,R9
   \   00000086   0x4650             MOV      R0,R10
   \   00000088   0x.... 0x....      BL       __aeabi_memcpy
    215          	
    216          	StoreOilBoxModel(pmodel - (unsigned char *)&m_sModelCard,&buf[datalen],readsize);
   \   0000008C   0x465A             MOV      R2,R11
   \   0000008E   0xEB18 0x0104      ADDS     R1,R8,R4
   \   00000092   0x....             LDR.N    R0,??DataTable9_15
   \   00000094   0x6800             LDR      R0,[R0, #+0]
   \   00000096   0x....             LDR.N    R3,??DataTable9_14
   \   00000098   0x1AC0             SUBS     R0,R0,R3
   \   0000009A   0x.... 0x....      BL       StoreOilBoxModel
    217          	pmodel += readsize;
   \   0000009E   0x....             LDR.N    R0,??DataTable9_15
   \   000000A0   0x6800             LDR      R0,[R0, #+0]
   \   000000A2   0xEB1B 0x0000      ADDS     R0,R11,R0
   \   000000A6   0x....             LDR.N    R1,??DataTable9_15
   \   000000A8   0x6008             STR      R0,[R1, #+0]
    218          
    219          	printfcom0("\r\n pmodel - (unsigned char *)&m_sModelCard %d",pmodel - (unsigned char *)&m_sModelCard);
   \   000000AA   0x....             LDR.N    R0,??DataTable9_15
   \   000000AC   0x6800             LDR      R0,[R0, #+0]
   \   000000AE   0x....             LDR.N    R1,??DataTable9_14
   \   000000B0   0x1A41             SUBS     R1,R0,R1
   \   000000B2   0x....             LDR.N    R0,??DataTable9_17
   \   000000B4   0x.... 0x....      BL       printfcom0
    220          	
    221          	if(modeldatanum == 0xffffffff)
   \   000000B8   0x9800             LDR      R0,[SP, #+0]
   \   000000BA   0xF110 0x0F01      CMN      R0,#+1
   \   000000BE   0xD16A             BNE.N    ??SetModel_3
    222          	{
    223          		DisplaySet(5,1,"         ");
   \   000000C0   0x....             LDR.N    R2,??DataTable9_4
   \   000000C2   0x2101             MOVS     R1,#+1
   \   000000C4   0x2005             MOVS     R0,#+5
   \   000000C6   0x.... 0x....      BL       DisplaySet
    224          		DisplaySet(50,1,"boX");		
   \   000000CA   0x....             ADR.N    R2,??DataTable9_2  ;; "boX"
   \   000000CC   0x2101             MOVS     R1,#+1
   \   000000CE   0x2032             MOVS     R0,#+50
   \   000000D0   0x.... 0x....      BL       DisplaySet
    225          		
    226          		l_modelcardflg = 0;
   \   000000D4   0x2000             MOVS     R0,#+0
   \   000000D6   0x....             LDR.N    R1,??DataTable9_13
   \   000000D8   0x7008             STRB     R0,[R1, #+0]
    227          		
    228          		printfcom0("\r\n 模型结束 sModel 点数，编号 %d,%d",m_sModelCard.sModelSemple[1].PotNum,m_sModelCard.sModelSemple[1].ModelNum );
   \   000000DA   0x....             LDR.N    R0,??DataTable9_14
   \   000000DC   0xF890 0x2EFC      LDRB     R2,[R0, #+3836]
   \   000000E0   0x....             LDR.N    R0,??DataTable9_14
   \   000000E2   0xF8B0 0x1EF8      LDRH     R1,[R0, #+3832]
   \   000000E6   0x....             LDR.N    R0,??DataTable9_18
   \   000000E8   0x.... 0x....      BL       printfcom0
    229          		for(i = 0; i< m_sModelCard.sModelSemple[1].PotNum;i++)
   \   000000EC   0x2000             MOVS     R0,#+0
   \   000000EE   0x0006             MOVS     R6,R0
   \                     ??SetModel_4: (+1)
   \   000000F0   0x....             LDR.N    R0,??DataTable9_14
   \   000000F2   0xF8B0 0x0EF8      LDRH     R0,[R0, #+3832]
   \   000000F6   0x4286             CMP      R6,R0
   \   000000F8   0xD20E             BCS.N    ??SetModel_5
    230          		{
    231          			printfcom0("\r\n 高度，油量 %d,%d",m_sModelCard.sModelSemple[1].sModPot[i].HigVal,m_sModelCard.sModelSemple[1].sModPot[i].DipVal ); 
   \   000000FA   0x....             LDR.N    R0,??DataTable9_14
   \   000000FC   0xEB10 0x0086      ADDS     R0,R0,R6, LSL #+2
   \   00000100   0xF8B0 0x2ED2      LDRH     R2,[R0, #+3794]
   \   00000104   0x....             LDR.N    R0,??DataTable9_14
   \   00000106   0xEB10 0x0086      ADDS     R0,R0,R6, LSL #+2
   \   0000010A   0xF8B0 0x1ED0      LDRH     R1,[R0, #+3792]
   \   0000010E   0x....             LDR.N    R0,??DataTable9_19
   \   00000110   0x.... 0x....      BL       printfcom0
    232          		}
   \   00000114   0x1C76             ADDS     R6,R6,#+1
   \   00000116   0xE7EB             B.N      ??SetModel_4
    233          
    234          		for( i = 0;i < 64;i++)
   \                     ??SetModel_5: (+1)
   \   00000118   0x2000             MOVS     R0,#+0
   \   0000011A   0x0006             MOVS     R6,R0
   \                     ??SetModel_6: (+1)
   \   0000011C   0x2E40             CMP      R6,#+64
   \   0000011E   0xD210             BCS.N    ??SetModel_7
    235          		{
    236          			printfcom0("\r\n 编号 %d,%d",m_sModelCard.sModelSemple[i].ModelNum ,m_sModelCard.sModelSemple[i].PotNum); 
   \   00000120   0x....             LDR.N    R0,??DataTable9_14
   \   00000122   0x2130             MOVS     R1,#+48
   \   00000124   0xFB01 0x0006      MLA      R0,R1,R6,R0
   \   00000128   0xF8B0 0x2EC8      LDRH     R2,[R0, #+3784]
   \   0000012C   0x....             LDR.N    R0,??DataTable9_14
   \   0000012E   0x2130             MOVS     R1,#+48
   \   00000130   0xFB01 0x0006      MLA      R0,R1,R6,R0
   \   00000134   0xF890 0x1ECC      LDRB     R1,[R0, #+3788]
   \   00000138   0x....             LDR.N    R0,??DataTable9_20
   \   0000013A   0x.... 0x....      BL       printfcom0
    237          		}
   \   0000013E   0x1C76             ADDS     R6,R6,#+1
   \   00000140   0xE7EC             B.N      ??SetModel_6
    238          
    239          	  for(i = 0; i < 46;i++)
   \                     ??SetModel_7: (+1)
   \   00000142   0x2000             MOVS     R0,#+0
   \   00000144   0x0006             MOVS     R6,R0
   \                     ??SetModel_8: (+1)
   \   00000146   0x2E2E             CMP      R6,#+46
   \   00000148   0xD211             BCS.N    ??SetModel_9
    240          	  {
    241          		  ModelNumAdd =  OIL_BOX_MODEL_ADDR + sizeof(stcModel)*18 
    242          		  				+ sizeof(stcModelSemple)*i + sizeof(stcModPot)*10 + 2 + 2;
   \   0000014A   0x2030             MOVS     R0,#+48
   \   0000014C   0xF241 0x619C      MOVW     R1,#+5788
   \   00000150   0xFB00 0x1006      MLA      R0,R0,R6,R1
   \   00000154   0x0007             MOVS     R7,R0
    243          
    244          		  ReadFM24CL64(ModelNumAdd,(uint8 *)&ModelNum, sizeof(ModelNum));
   \   00000156   0x2201             MOVS     R2,#+1
   \   00000158   0xA901             ADD      R1,SP,#+4
   \   0000015A   0x0038             MOVS     R0,R7
   \   0000015C   0x.... 0x....      BL       ReadFM24CL64
    245          
    246          	      printfcom0("\r\n ModelNum %d",ModelNum); 
   \   00000160   0xF89D 0x1004      LDRB     R1,[SP, #+4]
   \   00000164   0x....             LDR.N    R0,??DataTable9_21
   \   00000166   0x.... 0x....      BL       printfcom0
    247          	  }
   \   0000016A   0x1C76             ADDS     R6,R6,#+1
   \   0000016C   0xE7EB             B.N      ??SetModel_8
    248          		ClaerDisplaySetWithoutStore();
   \                     ??SetModel_9: (+1)
   \   0000016E   0x.... 0x....      BL       ClaerDisplaySetWithoutStore
    249          
    250          		printfcom0("\r\n modeldatanum %d",modeldatanum);
   \   00000172   0x9900             LDR      R1,[SP, #+0]
   \   00000174   0x....             LDR.N    R0,??DataTable9_22
   \   00000176   0x.... 0x....      BL       printfcom0
    251          		DisplaySet(20,1,"         ");
   \   0000017A   0x....             LDR.N    R2,??DataTable9_4
   \   0000017C   0x2101             MOVS     R1,#+1
   \   0000017E   0x2014             MOVS     R0,#+20
   \   00000180   0x.... 0x....      BL       DisplaySet
    252          		DisplaySet(50,1,"BOX");
   \   00000184   0x....             ADR.N    R2,??DataTable9_3  ;; "BOX"
   \   00000186   0x2101             MOVS     R1,#+1
   \   00000188   0x2032             MOVS     R0,#+50
   \   0000018A   0x.... 0x....      BL       DisplaySet
    253          		
    254          		DelayX10ms(300);
   \   0000018E   0xF44F 0x7096      MOV      R0,#+300
   \   00000192   0x.... 0x....      BL       DelayX10ms
    255          	}
    256          }
   \                     ??SetModel_3: (+1)
   \   00000196   0xE8BD 0x8FF7      POP      {R0-R2,R4-R11,PC}  ;; return

   \                                 In section .bss, align 4
   \                     ??pmodel:
   \   00000000                      DS8 4
    257          

   \                                 In section .text, align 2, keep-with-next
    258          uint8	ComSendData(unsigned int startnum, unsigned int endnum)
    259          {
   \                     ComSendData: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0xB0A0             SUB      SP,SP,#+128
   \   00000006   0x0004             MOVS     R4,R0
   \   00000008   0x000D             MOVS     R5,R1
    260          	uint32	FlshStartRecNum;
    261          //	uint32	CardMaxRecNum;
    262          	uint32	NoReadRecNum;
    263          	uint32	lstrecnum = 0;
   \   0000000A   0xF05F 0x0800      MOVS     R8,#+0
    264          
    265          	stcFlshRec		sFlshRec;
    266          
    267          	unsigned int startrec;
    268          	unsigned int endrec;
    269          
    270          	g_LshRedFlshRecNum 		= ReadLstRedFlshRecNum();
   \   0000000E   0x.... 0x....      BL       ReadLstRedFlshRecNum
   \   00000012   0x....             LDR.N    R1,??DataTable9_23
   \   00000014   0x6008             STR      R0,[R1, #+0]
    271          //	g_LshRedFlshRecNum_gprs = ReadLstRedFlshRecNum_gprs();
    272          
    273          //	if(GetRecaddr() == 0xC1)
    274          	{
    275          		lstrecnum = g_LshRedFlshRecNum;
   \   00000016   0x....             LDR.N    R0,??DataTable9_23
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0x4680             MOV      R8,R0
    276          	}
    277          
    278          //	if(GetRecaddr() == 0xC2)
    279          //	{
    280          //		lstrecnum = g_LshRedFlshRecNum_gprs;
    281          //	}
    282          //	
    283          //	printfcom0("\r\n 11 startnum %d,endnum %d",startnum,endnum);
    284          	
    285          	startrec = lstrecnum > startnum?startnum:lstrecnum;
   \   0000001C   0x4544             CMP      R4,R8
   \   0000001E   0xD201             BCS.N    ??ComSendData_0
   \   00000020   0x46A1             MOV      R9,R4
   \   00000022   0xE000             B.N      ??ComSendData_1
   \                     ??ComSendData_0: (+1)
   \   00000024   0x46C1             MOV      R9,R8
    286          	endrec   = g_CurFlshRecNum > endnum?endnum:g_CurFlshRecNum;
   \                     ??ComSendData_1: (+1)
   \   00000026   0x....             LDR.N    R0,??DataTable9_24
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0x4285             CMP      R5,R0
   \   0000002C   0xD201             BCS.N    ??ComSendData_2
   \   0000002E   0x46AA             MOV      R10,R5
   \   00000030   0xE002             B.N      ??ComSendData_3
   \                     ??ComSendData_2: (+1)
   \   00000032   0x....             LDR.N    R0,??DataTable9_24
   \   00000034   0xF8D0 0xA000      LDR      R10,[R0, #+0]
    287          
    288          
    289          //	printfcom0("\r\n startrec %d, g_LshRedFlshRecNum %d, startnum %d  ",startrec,g_LshRedFlshRecNum,startnum);
    290          //	printfcom0("\r\n endrec %d, g_CurFlshRecNum %d, endnum %d  ",endrec,g_CurFlshRecNum,endnum);
    291          	
    292          
    293          //	printfcom0("\r\n 22 startnum %d,endnum %d",startnum,endnum);
    294          
    295          	if(endrec > startrec)
   \                     ??ComSendData_3: (+1)
   \   00000038   0x45D1             CMP      R9,R10
   \   0000003A   0xD22A             BCS.N    ??ComSendData_4
    296          	{
    297          		if(g_CurFlshRecNum > (FLSH_MAX_SIZE)/(sizeof(stcFlshRec)) )
   \   0000003C   0x....             LDR.N    R0,??DataTable9_24
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0xF1B0 0x1F01      CMP      R0,#+65537
   \   00000044   0xD306             BCC.N    ??ComSendData_5
    298          		{
    299          			startrec = g_CurFlshRecNum -  (FLSH_MAX_SIZE)/(sizeof(stcFlshRec));
   \   00000046   0x....             LDR.N    R0,??DataTable9_24
   \   00000048   0x6800             LDR      R0,[R0, #+0]
   \   0000004A   0xF100 0x407F      ADD      R0,R0,#-16777216
   \   0000004E   0xF510 0x007F      ADDS     R0,R0,#+16711680
   \   00000052   0x4681             MOV      R9,R0
    300          		}
    301          		if(endrec > startrec)
   \                     ??ComSendData_5: (+1)
   \   00000054   0x45D1             CMP      R9,R10
   \   00000056   0xD203             BCS.N    ??ComSendData_6
    302          		{
    303          			NoReadRecNum	= (endrec - startrec);							//Flsh的未读记录长度
   \   00000058   0xEBBA 0x0009      SUBS     R0,R10,R9
   \   0000005C   0x0007             MOVS     R7,R0
   \   0000005E   0xE001             B.N      ??ComSendData_7
    304          		}
    305          		else
    306          		{
    307          			NoReadRecNum = 1;				
   \                     ??ComSendData_6: (+1)
   \   00000060   0x2001             MOVS     R0,#+1
   \   00000062   0x0007             MOVS     R7,R0
    308          		}
    309          	}
    310          	else
    311          	{
    312          		NoReadRecNum = 0;
    313          //		if(GetRecaddr() == 0xC1)
    314          		{
    315          			StoreLstRedFlshRecNum(g_CurFlshRecNum);				//存最新的已读记录流水号
    316          		}
    317          
    318          //		if(GetRecaddr() == 0xC2)
    319          //		{
    320          //			StoreLstRedFlshRecNum_gprs(g_CurFlshRecNum);				//存最新的已读记录流水号
    321          //		}
    322          		return 0;
    323          	}
    324          	
    325          	
    326          //	CardMaxRecNum = 0xffffffff;		
    327          //	NoReadRecNum  = GetReadFlshRecCnt(NoReadRecNum,CardMaxRecNum);	//要写数据长度
    328          	
    329          //	FlshStartRecNum = endrec  - NoReadRecNum ;
    330          	FlshStartRecNum = startrec;
   \                     ??ComSendData_7: (+1)
   \   00000064   0x464E             MOV      R6,R9
    331          		
    332          	printfcom0("\r\n FlshStartRecNum %d,%d",FlshStartRecNum,NoReadRecNum);
   \   00000066   0x003A             MOVS     R2,R7
   \   00000068   0x0031             MOVS     R1,R6
   \   0000006A   0x....             LDR.N    R0,??DataTable9_25
   \   0000006C   0x.... 0x....      BL       printfcom0
    333          				
    334          //	while( NoReadRecNum--)
    335          	{
    336          		ReadFlshRec((stcFlshRec *)&sFlshRec,FlshStartRecNum);
   \   00000070   0x0031             MOVS     R1,R6
   \   00000072   0x4668             MOV      R0,SP
   \   00000074   0x.... 0x....      BL       ReadFlshRec
    337          
    338          		DataSend_CSNR(0x80,GetRecaddr(),(stcFlshRec *)&sFlshRec,sizeof(sFlshRec));	
   \   00000078   0x.... 0x....      BL       GetRecaddr
   \   0000007C   0x2380             MOVS     R3,#+128
   \   0000007E   0x466A             MOV      R2,SP
   \   00000080   0x0001             MOVS     R1,R0
   \   00000082   0x2080             MOVS     R0,#+128
   \   00000084   0x.... 0x....      BL       DataSend_CSNR
    339          		
    340          //		DelayX10ms(2);				
    341          //    ReadCardDisplay(0);										//指示正在读卡
    342          	}
    343          
    344          //   	printfcom0("\r\n GetRecaddr() %x",GetRecaddr());
    345          	if(GetRecaddr() == 0xC1)
   \   00000088   0x.... 0x....      BL       GetRecaddr
   \   0000008C   0x28C1             CMP      R0,#+193
   \   0000008E   0xD111             BNE.N    ??ComSendData_8
   \   00000090   0xE007             B.N      ??ComSendData_9
   \                     ??ComSendData_4: (+1)
   \   00000092   0x2000             MOVS     R0,#+0
   \   00000094   0x0007             MOVS     R7,R0
   \   00000096   0x....             LDR.N    R0,??DataTable9_24
   \   00000098   0x6800             LDR      R0,[R0, #+0]
   \   0000009A   0x.... 0x....      BL       StoreLstRedFlshRecNum
   \   0000009E   0x2000             MOVS     R0,#+0
   \   000000A0   0xE009             B.N      ??ComSendData_10
    346          	{
    347          		g_LshRedFlshRecNum++;				//
   \                     ??ComSendData_9: (+1)
   \   000000A2   0x....             LDR.N    R0,??DataTable9_23
   \   000000A4   0x6800             LDR      R0,[R0, #+0]
   \   000000A6   0x1C40             ADDS     R0,R0,#+1
   \   000000A8   0x....             LDR.N    R1,??DataTable9_23
   \   000000AA   0x6008             STR      R0,[R1, #+0]
    348          		StoreLstRedFlshRecNum(g_LshRedFlshRecNum);
   \   000000AC   0x....             LDR.N    R0,??DataTable9_23
   \   000000AE   0x6800             LDR      R0,[R0, #+0]
   \   000000B0   0x.... 0x....      BL       StoreLstRedFlshRecNum
    349          	}
    350          //	if(GetRecaddr() == 0xC2)
    351          //	{
    352          //		g_LshRedFlshRecNum_gprs++;				//
    353          //		StoreLstRedFlshRecNum(g_LshRedFlshRecNum_gprs);
    354          //	}
    355          
    356          	return 1;
   \                     ??ComSendData_8: (+1)
   \   000000B4   0x2001             MOVS     R0,#+1
   \                     ??ComSendData_10: (+1)
   \   000000B6   0xB020             ADD      SP,SP,#+128
   \   000000B8   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    357          } 
    358          

   \                                 In section .text, align 2, keep-with-next
    359          void  printfcom2flshrec(void)
    360          {
   \                     printfcom2flshrec: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB0A7             SUB      SP,SP,#+156
    361          	static	uint32	FlshStartRecNum = 0;
    362          	stcFlshRec		sFlshRec;
    363          
    364          	ReadFlshRec((stcFlshRec *)&sFlshRec,FlshStartRecNum++);
   \   00000004   0x....             LDR.N    R0,??DataTable9_26
   \   00000006   0x6801             LDR      R1,[R0, #+0]
   \   00000008   0x1C48             ADDS     R0,R1,#+1
   \   0000000A   0x....             LDR.N    R2,??DataTable9_26
   \   0000000C   0x6010             STR      R0,[R2, #+0]
   \   0000000E   0xA806             ADD      R0,SP,#+24
   \   00000010   0x.... 0x....      BL       ReadFlshRec
    365          	
    366          	printfcom2("\r\n %02d-%02d-%02d %02d:%02d:%02d,%d,%d,%d\r\n ",sFlshRec.MyYear,sFlshRec.MyMonth,sFlshRec.MyData,sFlshRec.MyHour,sFlshRec.MyMinute,
    367          	sFlshRec.MySecond,sFlshRec.Myhig1,sFlshRec.Myhig2,sFlshRec.MstDip);
   \   00000014   0x9813             LDR      R0,[SP, #+76]
   \   00000016   0x9005             STR      R0,[SP, #+20]
   \   00000018   0xF9BD 0x005E      LDRSH    R0,[SP, #+94]
   \   0000001C   0x9004             STR      R0,[SP, #+16]
   \   0000001E   0xF9BD 0x005C      LDRSH    R0,[SP, #+92]
   \   00000022   0x9003             STR      R0,[SP, #+12]
   \   00000024   0xF89D 0x0069      LDRB     R0,[SP, #+105]
   \   00000028   0x9002             STR      R0,[SP, #+8]
   \   0000002A   0xF89D 0x0068      LDRB     R0,[SP, #+104]
   \   0000002E   0x9001             STR      R0,[SP, #+4]
   \   00000030   0xF89D 0x0067      LDRB     R0,[SP, #+103]
   \   00000034   0x9000             STR      R0,[SP, #+0]
   \   00000036   0xF89D 0x3066      LDRB     R3,[SP, #+102]
   \   0000003A   0xF89D 0x2065      LDRB     R2,[SP, #+101]
   \   0000003E   0xF89D 0x1064      LDRB     R1,[SP, #+100]
   \   00000042   0x....             LDR.N    R0,??DataTable9_27
   \   00000044   0x.... 0x....      BL       printfcom2
    368          }
   \   00000048   0xB027             ADD      SP,SP,#+156
   \   0000004A   0xBD00             POP      {PC}             ;; return

   \                                 In section .bss, align 4
   \                     ??FlshStartRecNum:
   \   00000000                      DS8 4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x25 0x75          DC8      0x25, 0x75, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x6F 0x2E          DC8      "o.."
   \              0x2E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   0x2E 0x2E          DC8      "..."
   \              0x2E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \   00000000   0x62 0x6F          DC8      "boX"
   \              0x58 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_3:
   \   00000000   0x42 0x4F          DC8      "BOX"
   \              0x58 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_4:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_5:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_6:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_7:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_8:
   \   00000000   0x........         DC32     g_DipDisVal

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_9:
   \   00000000   0xFFFFFE0C         DC32     0xfffffe0c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_10:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_11:
   \   00000000   0x........         DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_12:
   \   00000000   0x........         DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_13:
   \   00000000   0x........         DC32     l_modelcardflg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_14:
   \   00000000   0x........         DC32     m_sModelCard

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_15:
   \   00000000   0x........         DC32     ??pmodel

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_16:
   \   00000000   0x........         DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_17:
   \   00000000   0x........         DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_18:
   \   00000000   0x........         DC32     ?_13

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_19:
   \   00000000   0x........         DC32     ?_14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_20:
   \   00000000   0x........         DC32     ?_15

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_21:
   \   00000000   0x........         DC32     ?_16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_22:
   \   00000000   0x........         DC32     ?_17

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_23:
   \   00000000   0x........         DC32     g_LshRedFlshRecNum

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_24:
   \   00000000   0x........         DC32     g_CurFlshRecNum

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_25:
   \   00000000   0x........         DC32     ?_19

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_26:
   \   00000000   0x........         DC32     ??FlshStartRecNum

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_27:
   \   00000000   0x........         DC32     ?_20

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x20 0x20          DC8 "         "
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x44 0x2D          DC8 "D-%d"
   \              0x25 0x64    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x0D 0x0A          DC8 "\015\012 \311\350\326\303\265\304\303\334\266\310\326\265 %d"
   \              0x20 0xC9    
   \              0xE8 0xD6    
   \              0xC3 0xB5    
   \              0xC4 0xC3    
   \              0xDC 0xB6    
   \              0xC8 0xD6    
   \              0xB5 0x20    
   \              0x25 0x64    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x43 0x2D          DC8 "C-%d"
   \              0x25 0x64    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x25 0x75          DC8 "%u"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x0D 0x0A          DC8 "\015\012 \311\350\326\303\265\304\270\337\266\310\326\265 %d"
   \              0x20 0xC9    
   \              0xE8 0xD6    
   \              0xC3 0xB5    
   \              0xC4 0xB8    
   \              0xDF 0xB6    
   \              0xC8 0xD6    
   \              0xB5 0x20    
   \              0x25 0x64    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x53 0x2D          DC8 "S-%d."
   \              0x25 0x64    
   \              0x2E 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_7:
   \   00000000   0x25 0x34          DC8 "%4d.%4d"
   \              0x64 0x2E    
   \              0x25 0x34    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x6F 0x2E          DC8 "o.."
   \              0x2E 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x2E 0x2E          DC8 "..."
   \              0x2E 0x00    

   \                                 In section .rodata, align 4
   \                     ?_10:
   \   00000000   0x0D 0x0A          DC8 "\015\012 \326\270\325\353\311\350\326\265 pmodel %x,sizeof(m_sModelCard) %d"
   \              0x20 0xD6    
   \              0xB8 0xD5    
   \              0xEB 0xC9    
   \              0xE8 0xD6    
   \              0xB5 0x20    
   \              0x70 0x6D    
   \              0x6F 0x64    
   \              0x65 0x6C    
   \              0x20 0x25    
   \              0x78 0x2C    
   \              0x73 0x69    
   \              0x7A 0x65    
   \              0x6F 0x66    
   \              0x28 0x6D    
   \              0x5F 0x73    
   \              0x4D 0x6F    
   \              0x64 0x65    
   \              0x6C 0x43    
   \              0x61 0x72    
   \              0x64 0x29    
   \              0x20 0x25    
   \              0x64 0x00    
   \   0000002E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_11:
   \   00000000   0x0D 0x0A          DC8 "\015\012 pmodel - (unsigned char *)&m_sModelCard %d"
   \              0x20 0x70    
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x6C 0x20    
   \              0x2D 0x20    
   \              0x28 0x75    
   \              0x6E 0x73    
   \              0x69 0x67    
   \              0x6E 0x65    
   \              0x64 0x20    
   \              0x63 0x68    
   \              0x61 0x72    
   \              0x20 0x2A    
   \              0x29 0x26    
   \              0x6D 0x5F    
   \              0x73 0x4D    
   \              0x6F 0x64    
   \              0x65 0x6C    
   \              0x43 0x61    
   \              0x72 0x64    
   \              0x20 0x25    
   \              0x64 0x00    
   \   0000002E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   0x62 0x6F          DC8 "boX"
   \              0x58 0x00    

   \                                 In section .rodata, align 4
   \                     ?_13:
   \   00000000   0x0D 0x0A          DC8 "\015\012 \304\243\320\315\275\341\312\370 sModel \265\343\312\375\243\254\261\340\272\305 %d,%d"
   \              0x20 0xC4    
   \              0xA3 0xD0    
   \              0xCD 0xBD    
   \              0xE1 0xCA    
   \              0xF8 0x20    
   \              0x73 0x4D    
   \              0x6F 0x64    
   \              0x65 0x6C    
   \              0x20 0xB5    
   \              0xE3 0xCA    
   \              0xFD 0xA3    
   \              0xAC 0xB1    
   \              0xE0 0xBA    
   \              0xC5 0x20    
   \              0x25 0x64    
   \              0x2C 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_14:
   \   00000000   0x0D 0x0A          DC8 "\015\012 \270\337\266\310\243\254\323\315\301\277 %d,%d"
   \              0x20 0xB8    
   \              0xDF 0xB6    
   \              0xC8 0xA3    
   \              0xAC 0xD3    
   \              0xCD 0xC1    
   \              0xBF 0x20    
   \              0x25 0x64    
   \              0x2C 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_15:
   \   00000000   0x0D 0x0A          DC8 "\015\012 \261\340\272\305 %d,%d"
   \              0x20 0xB1    
   \              0xE0 0xBA    
   \              0xC5 0x20    
   \              0x25 0x64    
   \              0x2C 0x25    
   \              0x64 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_16:
   \   00000000   0x0D 0x0A          DC8 "\015\012 ModelNum %d"
   \              0x20 0x4D    
   \              0x6F 0x64    
   \              0x65 0x6C    
   \              0x4E 0x75    
   \              0x6D 0x20    
   \              0x25 0x64    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_17:
   \   00000000   0x0D 0x0A          DC8 "\015\012 modeldatanum %d"
   \              0x20 0x6D    
   \              0x6F 0x64    
   \              0x65 0x6C    
   \              0x64 0x61    
   \              0x74 0x61    
   \              0x6E 0x75    
   \              0x6D 0x20    
   \              0x25 0x64    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x42 0x4F          DC8 "BOX"
   \              0x58 0x00    

   \                                 In section .rodata, align 4
   \                     ?_19:
   \   00000000   0x0D 0x0A          DC8 "\015\012 FlshStartRecNum %d,%d"
   \              0x20 0x46    
   \              0x6C 0x73    
   \              0x68 0x53    
   \              0x74 0x61    
   \              0x72 0x74    
   \              0x52 0x65    
   \              0x63 0x4E    
   \              0x75 0x6D    
   \              0x20 0x25    
   \              0x64 0x2C    
   \              0x25 0x64    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_20:
   \   00000000   0x0D 0x0A          DC8 "\015\012 %02d-%02d-%02d %02d:%02d:%02d,%d,%d,%d\015\012 "
   \              0x20 0x25    
   \              0x30 0x32    
   \              0x64 0x2D    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x2D 0x25    
   \              0x30 0x32    
   \              0x64 0x20    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x3A 0x25    
   \              0x30 0x32    
   \              0x64 0x3A    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x2C 0x25    
   \              0x64 0x2C    
   \              0x25 0x64    
   \              0x2C 0x25    
   \              0x64 0x0D    
   \              0x0A 0x20    
   \              0x00         
   \   0000002D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   ClearModelCardFlg
     160   ComSendData
       160   -> DataSend_CSNR
       160   -> GetRecaddr
       160   -> ReadFlshRec
       160   -> ReadLstRedFlshRecNum
       160   -> StoreLstRedFlshRecNum
       160   -> printfcom0
       0   GetModelCardFlg
       8   SetCalcPara
         8   -> DisplaySet
         8   -> SetSucceedIndicate
         8   -> StoreCalcPara
         8   -> StoreErrIndicate
      40   SetDen
        40   -> DisplaySet
        40   -> GetCrc16Check
        40   -> SetSucceedIndicate
        40   -> StoreDensity
        40   -> StoreErrIndicate
        40   -> printfcom0
      72   SetFix
        72   -> DisplaySet
        72   -> GetCrc16Check
        72   -> SetSucceedIndicate
        72   -> StoreErrIndicate
        72   -> StoreFixInfo
        72   -> __aeabi_memcpy
      24   SetHight
        24   -> DisplaySet
        24   -> GetCrc16Check
        24   -> ReadReviseHight
        24   -> SetSucceedIndicate
        24   -> StoreErrIndicate
        24   -> StoreReviseHight
        24   -> printfcom0
      48   SetModel
        48   -> ClaerDisplaySetWithoutStore
        48   -> DelayX10ms
        48   -> DisplaySet
        48   -> ReadFM24CL64
        48   -> StoreOilBoxModel
        48   -> __aeabi_memcpy
        48   -> printfcom0
       8   SetSel
         8   -> DisplaySet
         8   -> SetSucceedIndicate
         8   -> StoreErrIndicate
         8   -> StoreSelectModel
     160   printfcom2flshrec
       160   -> ReadFlshRec
       160   -> printfcom2


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable6
       4  ??DataTable9
       4  ??DataTable9_1
       4  ??DataTable9_10
       4  ??DataTable9_11
       4  ??DataTable9_12
       4  ??DataTable9_13
       4  ??DataTable9_14
       4  ??DataTable9_15
       4  ??DataTable9_16
       4  ??DataTable9_17
       4  ??DataTable9_18
       4  ??DataTable9_19
       4  ??DataTable9_2
       4  ??DataTable9_20
       4  ??DataTable9_21
       4  ??DataTable9_22
       4  ??DataTable9_23
       4  ??DataTable9_24
       4  ??DataTable9_25
       4  ??DataTable9_26
       4  ??DataTable9_27
       4  ??DataTable9_3
       4  ??DataTable9_4
       4  ??DataTable9_5
       4  ??DataTable9_6
       4  ??DataTable9_7
       4  ??DataTable9_8
       4  ??DataTable9_9
      12  ?_0
       8  ?_1
      48  ?_10
      48  ?_11
       4  ?_12
      36  ?_13
      20  ?_14
      16  ?_15
      16  ?_16
      20  ?_17
       4  ?_18
      28  ?_19
      20  ?_2
      48  ?_20
       8  ?_3
       4  ?_4
      20  ?_5
       8  ?_6
       8  ?_7
       4  ?_8
       4  ?_9
       8  ClearModelCardFlg
     188  ComSendData
       4  FlshStartRecNum
       6  GetModelCardFlg
      68  SetCalcPara
     100  SetDen
     126  SetFix
     182  SetHight
     410  SetModel
      72  SetSel
       1  l_modelcardflg
       4  pmodel
      76  printfcom2flshrec

 
     9 bytes in section .bss
   384 bytes in section .rodata
 1 352 bytes in section .text
 
 1 352 bytes of CODE  memory
   384 bytes of CONST memory
     9 bytes of DATA  memory

Errors: none
Warnings: 18
