###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       06/Sep/2017  11:31:35
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC136B-310统计模块\Software\APP\Tasks\app_task_osal_disp.c
#    Command line =  
#        F:\iar\NC136B-310统计模块\Software\APP\Tasks\app_task_osal_disp.c -lCN
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List
#        --diag_suppress Pa050 -o
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\csnr_package_deal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\iap\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\app_task_osal_disp.lst
#    Object file  =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\app_task_osal_disp.o
#
###############################################################################

F:\iar\NC136B-310统计模块\Software\APP\Tasks\app_task_osal_disp.c
      1          /*******************************************************************************
      2           *   Filename:       app_task_disp.c
      3           *   Revised:        All copyrights reserved to wumingshen.
      4           *   Revision:       v1.0
      5           *   Writer:	     wumingshen.
      6           *
      7           *   Description:    双击选中 disp 按 Ctrl + H, 钩选 Match the case, Replace with
      8           *                   输入您要的名字，点击 Replace All
      9           *                   双击选中 Disp 按 Ctrl + H, 钩选 Match the case, Replace with
     10           *                   输入您要的名字，点击 Replace All
     11           *                   双击选中 DISP 按 Ctrl + H, 钩选 Match the case, Replace with
     12           *                   输入您要的名字，点击 Replace All
     13           *                   在 app_cfg.h 中指定本任务的 优先级  （ APP_TASK_DISP_PRIO ）
     14           *                                            和 任务堆栈（ APP_TASK_DISP_STK_SIZE ）大小
     15           *                   在 app.h 中声明本任务的     创建函数（ void  App_TaskDispCreate(void) ）
     16           *                                            和 看门狗标志位 （ WDTFLAG_Disp ）
     17           *
     18           *   Notes:
     19           *     				E-mail: shenchangwei945@163.com
     20           *
     21           *******************************************************************************/
     22          
     23          /*******************************************************************************
     24           * INCLUDES
     25           */
     26          #define  SNL_APP_SOURCE
     27          #include <includes.h>
     28          #include <global.h>
     29          #include <app_ctrl.h>
     30          #include <bsp_max7219.h>
     31          //#include <iap.h>
     32          
     33          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     34          const  CPU_CHAR  *app_task_disp__c = "$Id: $";
     35          #endif
     36          
     37          #define APP_TASK_DISP_EN     DEF_ENABLED
     38          #if APP_TASK_DISP_EN == DEF_ENABLED
     39          /*******************************************************************************
     40           * CONSTANTS
     41           */
     42          #define CYCLE_TIME_TICKS     (OS_CFG_TICK_RATE_HZ * 2u)
     43          
     44          /*******************************************************************************
     45           * MACROS
     46           */
     47          
     48          /*******************************************************************************
     49           * TYPEDEFS
     50           */
     51          
     52          /*******************************************************************************
     53           * LOCAL VARIABLES
     54           */
     55          
     56          #if ( OSAL_EN == DEF_ENABLED )
     57          #else
     58          /***********************************************
     59          * 描述： 任务控制块（TCB）
     60          */
     61          static  OS_TCB   AppTaskDispTCB;
     62          
     63          /***********************************************
     64          * 描述： 任务堆栈（STACKS）
     65          */
     66          //static  CPU_STK  AppTaskDispStk[ APP_TASK_DISP_STK_SIZE ];
     67          
     68          #endif
     69          /*******************************************************************************
     70           * GLOBAL VARIABLES
     71           */
     72          /*******************************************************************************
     73           * LOCAL FUNCTIONS
     74           */
     75          void    comm_mtr_err_judye(void);
     76          
     77               
     78          #if ( OSAL_EN == DEF_ENABLED )
     79          #else
     80          static  void    AppTaskDisp           (void *p_arg);
     81          #endif
     82          
     83          /*******************************************************************************
     84           * GLOBAL FUNCTIONS
     85           */
     86          uint8 JudgeFlashIDErrFlg(void) ;  
     87          
     88          /*******************************************************************************
     89           * EXTERN VARIABLES
     90           */
     91          extern  stcSysCtrl  sCtrl;
     92          
     93          
     94          /*******************************************************************************/

   \                                 In section .bss, align 1
     95          static  uint8   dis_mode    = 0;
   \                     dis_mode:
   \   00000000                      DS8 1
     96          

   \                                 In section .text, align 2, keep-with-next
     97          void    SetDispNow(void)
     98          {
   \                     SetDispNow: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     99              BSP_DispEvtProcess();
   \   00000002   0x.... 0x....      BL       BSP_DispEvtProcess
    100              dis_mode = 13*2;
   \   00000006   0x201A             MOVS     R0,#+26
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable3_1
   \   0000000C   0x7008             STRB     R0,[R1, #+0]
    101          }
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return
    102          
    103          /*******************************************************************************
    104           * 名    称： AppTaskDisp
    105           * 功    能： 控制任务
    106           * 入口参数： p_arg - 由任务创建函数传入
    107           * 出口参数： 无
    108           * 作　 　者： wumingshen.
    109           * 创建日期： 2015-02-05
    110           * 修    改：
    111           * 修改日期：
    112           *******************************************************************************/
    113          extern  MODBUS_CH   *g_pch; 
    114          
    115          //#if ( OSAL_EN == DEF_ENABLED )

   \                                 In section .text, align 2, keep-with-next
    116          osalEvt  TaskDispEvtProcess(INT8U task_id, osalEvt task_event)
    117          //#else
    118          //static  void  AppTaskDisp (void *p_arg)
    119          //#endif
    120          {
   \                     TaskDispEvtProcess: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
   \   00000004   0x0005             MOVS     R5,R0
   \   00000006   0x000E             MOVS     R6,R1
    121          //    OS_ERR      err;
    122          //    INT32U      ticks;
    123          //    INT32S      dly;
    124          //    CPU_SR_ALLOC();
    125          //    
    126          //    /***********************************************
    127          //    * 描述：Task body, always written as an infinite loop.
    128          //    */
    129          //#if ( OSAL_EN == DEF_ENABLED )
    130          //#else
    131          //    TaskInitDisp();
    132          //    
    133          //    while (DEF_TRUE) {
    134          //#endif
    135          //        /***********************************************
    136          //        * 描述： 本任务看门狗标志置位
    137          //        */
    138          //        OS_FlagPost ((OS_FLAG_GRP *)&WdtFlagGRP,
    139          //                     (OS_FLAGS     ) WDT_FLAG_DISP,
    140          //                     (OS_OPT       ) OS_OPT_POST_FLAG_SET,
    141          //                     (CPU_TS       ) 0,
    142          //                     (OS_ERR      *) &err);
    143          //        /***********************************************
    144          //        * 描述： 得到系统当前时间
    145          //        */
    146          //        ticks = OSTimeGet(&err);
    147          //        
    148          //#if ( OSAL_EN == DEF_ENABLED )
    149          
    150                  if( task_event & OS_EVT_DISP_TICKS ) {
   \   00000008   0x07F0             LSLS     R0,R6,#+31
   \   0000000A   0xF140 0x8122      BPL.W    ??TaskDispEvtProcess_0
    151          //#else
    152          //#endif
    153                      static  uint8   times   = 0;
    154                      static  uint8   disflg  = 0;
    155                      uint8            delay  = 4;      //油量显示最大时间间隔
   \   0000000E   0x2704             MOVS     R7,#+4
    156          
    157                      stcTime         sTime;
    158          
    159                      /***********************************************
    160                      * 描述： 根据显示模式显示
    161                      */
    162                      switch(dis_mode/2) {
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable3_1
   \   00000014   0x7800             LDRB     R0,[R0, #+0]
   \   00000016   0x2102             MOVS     R1,#+2
   \   00000018   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD01A             BEQ.N    ??TaskDispEvtProcess_1
   \   00000020   0x2802             CMP      R0,#+2
   \   00000022   0xD042             BEQ.N    ??TaskDispEvtProcess_2
   \   00000024   0xD32C             BCC.N    ??TaskDispEvtProcess_3
   \   00000026   0x2804             CMP      R0,#+4
   \   00000028   0xD05D             BEQ.N    ??TaskDispEvtProcess_4
   \   0000002A   0xD353             BCC.N    ??TaskDispEvtProcess_5
   \   0000002C   0x2806             CMP      R0,#+6
   \   0000002E   0xD072             BEQ.N    ??TaskDispEvtProcess_6
   \   00000030   0xD365             BCC.N    ??TaskDispEvtProcess_7
   \   00000032   0x2808             CMP      R0,#+8
   \   00000034   0xF000 0x8088      BEQ.W    ??TaskDispEvtProcess_8
   \   00000038   0xD379             BCC.N    ??TaskDispEvtProcess_9
   \   0000003A   0x280A             CMP      R0,#+10
   \   0000003C   0xF000 0x809C      BEQ.W    ??TaskDispEvtProcess_10
   \   00000040   0xF0C0 0x808B      BCC.W    ??TaskDispEvtProcess_11
   \   00000044   0x280C             CMP      R0,#+12
   \   00000046   0xF000 0x80AF      BEQ.W    ??TaskDispEvtProcess_12
   \   0000004A   0xF0C0 0x80A1      BCC.W    ??TaskDispEvtProcess_13
   \   0000004E   0x280D             CMP      R0,#+13
   \   00000050   0xF000 0x80BF      BEQ.W    ??TaskDispEvtProcess_14
   \   00000054   0xE0C3             B.N      ??TaskDispEvtProcess_15
    163                      /*******************************************************************
    164                      * 描述： 显示装置时间
    165                      */
    166                      case 0: 
    167                              dis_mode++;
   \                     ??TaskDispEvtProcess_1: (+1)
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable3_1
   \   0000005A   0x7800             LDRB     R0,[R0, #+0]
   \   0000005C   0x1C40             ADDS     R0,R0,#+1
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable3_1
   \   00000062   0x7008             STRB     R0,[R1, #+0]
    168                              ReadTime((stcTime * )& sTime);
   \   00000064   0x4668             MOV      R0,SP
   \   00000066   0x.... 0x....      BL       ReadTime
    169                              uprintf("%02d-%02d-%02d",sTime.Year
    170                                                      ,sTime.Month
    171                                                      ,sTime.Date
    172                                      );     
   \   0000006A   0xF89D 0x3003      LDRB     R3,[SP, #+3]
   \   0000006E   0xF89D 0x2004      LDRB     R2,[SP, #+4]
   \   00000072   0xF89D 0x1005      LDRB     R1,[SP, #+5]
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   0000007A   0x.... 0x....      BL       uprintf
    173                              break;
   \   0000007E   0xE0DB             B.N      ??TaskDispEvtProcess_16
    174                      case 1: 
    175                              dis_mode++;
   \                     ??TaskDispEvtProcess_3: (+1)
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable3_1
   \   00000084   0x7800             LDRB     R0,[R0, #+0]
   \   00000086   0x1C40             ADDS     R0,R0,#+1
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable3_1
   \   0000008C   0x7008             STRB     R0,[R1, #+0]
    176                              ReadTime((stcTime * )& sTime);     
   \   0000008E   0x4668             MOV      R0,SP
   \   00000090   0x.... 0x....      BL       ReadTime
    177                              uprintf("%02d-%02d-%02d",sTime.Hour
    178                                                      ,sTime.Min
    179                                                      ,sTime.Sec
    180                                      );    
   \   00000094   0xF89D 0x3000      LDRB     R3,[SP, #+0]
   \   00000098   0xF89D 0x2001      LDRB     R2,[SP, #+1]
   \   0000009C   0xF89D 0x1002      LDRB     R1,[SP, #+2]
   \   000000A0   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   000000A4   0x.... 0x....      BL       uprintf
    181                              break;
   \   000000A8   0xE0C6             B.N      ??TaskDispEvtProcess_16
    182          
    183                      /*******************************************************************
    184                      * 描述： 显示软件版本
    185                      *        时间：开机显示一次，显示2s；
    186                      */
    187                      case 2: 
    188                          dis_mode++;
   \                     ??TaskDispEvtProcess_2: (+1)
   \   000000AA   0x.... 0x....      LDR.W    R0,??DataTable3_1
   \   000000AE   0x7800             LDRB     R0,[R0, #+0]
   \   000000B0   0x1C40             ADDS     R0,R0,#+1
   \   000000B2   0x....             LDR.N    R1,??DataTable3_1
   \   000000B4   0x7008             STRB     R0,[R1, #+0]
    189                          sCtrl.SoftWareID = 0x0202;
   \   000000B6   0xF240 0x2002      MOVW     R0,#+514
   \   000000BA   0x....             LDR.N    R1,??DataTable3_3
   \   000000BC   0x8048             STRH     R0,[R1, #+2]
    190                          uprintf("SV_%02X.%02X",(uint8)(sCtrl.SoftWareID>>8),(uint8)sCtrl.SoftWareID);
   \   000000BE   0x....             LDR.N    R0,??DataTable3_3
   \   000000C0   0x7882             LDRB     R2,[R0, #+2]
   \   000000C2   0x....             LDR.N    R0,??DataTable3_3
   \   000000C4   0x8840             LDRH     R0,[R0, #+2]
   \   000000C6   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000C8   0x0A01             LSRS     R1,R0,#+8
   \   000000CA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000CC   0x....             LDR.N    R0,??DataTable3_4
   \   000000CE   0x.... 0x....      BL       uprintf
    191                          
    192                          break;
   \   000000D2   0xE0B1             B.N      ??TaskDispEvtProcess_16
    193                      /*******************************************************************
    194                      * 描述： 显示硬件版本
    195                      *        第三版硬件    
    196                      */
    197                      case 3: 
    198                          dis_mode++;
   \                     ??TaskDispEvtProcess_5: (+1)
   \   000000D4   0x....             LDR.N    R0,??DataTable3_1
   \   000000D6   0x7800             LDRB     R0,[R0, #+0]
   \   000000D8   0x1C40             ADDS     R0,R0,#+1
   \   000000DA   0x....             LDR.N    R1,??DataTable3_1
   \   000000DC   0x7008             STRB     R0,[R1, #+0]
    199                          uprintf("SV31");
   \   000000DE   0x....             LDR.N    R0,??DataTable3_5
   \   000000E0   0x.... 0x....      BL       uprintf
    200                          
    201                          break;
   \   000000E4   0xE0A8             B.N      ??TaskDispEvtProcess_16
    202                      /*******************************************************************
    203                      * 描述： 显示油箱模型编号
    204                      */
    205                      case 4: 
    206                          dis_mode++;
   \                     ??TaskDispEvtProcess_4: (+1)
   \   000000E6   0x....             LDR.N    R0,??DataTable3_1
   \   000000E8   0x7800             LDRB     R0,[R0, #+0]
   \   000000EA   0x1C40             ADDS     R0,R0,#+1
   \   000000EC   0x....             LDR.N    R1,??DataTable3_1
   \   000000EE   0x7008             STRB     R0,[R1, #+0]
    207                          
    208                          uprintf("C_%d",sCtrl.SOilPara.ModelNum);                
   \   000000F0   0x....             LDR.N    R0,??DataTable3_3
   \   000000F2   0xF890 0x10A0      LDRB     R1,[R0, #+160]
   \   000000F6   0x....             LDR.N    R0,??DataTable3_6
   \   000000F8   0x.... 0x....      BL       uprintf
    209                          break;
   \   000000FC   0xE09C             B.N      ??TaskDispEvtProcess_16
    210                      /*******************************************************************
    211                      * 描述： 高度
    212                      */
    213                      case 5:  
    214                          dis_mode++;
   \                     ??TaskDispEvtProcess_7: (+1)
   \   000000FE   0x....             LDR.N    R0,??DataTable3_1
   \   00000100   0x7800             LDRB     R0,[R0, #+0]
   \   00000102   0x1C40             ADDS     R0,R0,#+1
   \   00000104   0x....             LDR.N    R1,??DataTable3_1
   \   00000106   0x7008             STRB     R0,[R1, #+0]
    215                          uprintf("H_%d",sCtrl.SOilPara.Hig);                
   \   00000108   0x....             LDR.N    R0,??DataTable3_3
   \   0000010A   0xF9B0 0x10A2      LDRSH    R1,[R0, #+162]
   \   0000010E   0x....             LDR.N    R0,??DataTable3_7
   \   00000110   0x.... 0x....      BL       uprintf
    216                          break;  
   \   00000114   0xE090             B.N      ??TaskDispEvtProcess_16
    217                      /*******************************************************************
    218                      * 描述： 线性
    219                      */
    220                      case 6:  
    221                          dis_mode++;
   \                     ??TaskDispEvtProcess_6: (+1)
   \   00000116   0x....             LDR.N    R0,??DataTable3_1
   \   00000118   0x7800             LDRB     R0,[R0, #+0]
   \   0000011A   0x1C40             ADDS     R0,R0,#+1
   \   0000011C   0x....             LDR.N    R1,??DataTable3_1
   \   0000011E   0x7008             STRB     R0,[R1, #+0]
    222                          uprintf("L_%d",sCtrl.SOilPara.Hig);                
   \   00000120   0x....             LDR.N    R0,??DataTable3_3
   \   00000122   0xF9B0 0x10A2      LDRSH    R1,[R0, #+162]
   \   00000126   0x....             LDR.N    R0,??DataTable3_8
   \   00000128   0x.... 0x....      BL       uprintf
    223                          break; 
   \   0000012C   0xE084             B.N      ??TaskDispEvtProcess_16
    224                      /*******************************************************************
    225                      * 描述： 车型车号
    226                      */
    227                      case 7:  
    228                          dis_mode++;
   \                     ??TaskDispEvtProcess_9: (+1)
   \   0000012E   0x....             LDR.N    R0,??DataTable3_1
   \   00000130   0x7800             LDRB     R0,[R0, #+0]
   \   00000132   0x1C40             ADDS     R0,R0,#+1
   \   00000134   0x....             LDR.N    R1,??DataTable3_1
   \   00000136   0x7008             STRB     R0,[R1, #+0]
    229                          uprintf("%4d.%4d",   sCtrl.sProductInfo.sLocoId.Type,
    230                                              sCtrl.sProductInfo.sLocoId.Num);                
   \   00000138   0x....             LDR.N    R0,??DataTable3_3
   \   0000013A   0x8BC2             LDRH     R2,[R0, #+30]
   \   0000013C   0x....             LDR.N    R0,??DataTable3_3
   \   0000013E   0x8B81             LDRH     R1,[R0, #+28]
   \   00000140   0x....             LDR.N    R0,??DataTable3_9
   \   00000142   0x.... 0x....      BL       uprintf
    231                          break; 
   \   00000146   0xE077             B.N      ??TaskDispEvtProcess_16
    232                      /*******************************************************************
    233                      * 描述： 全灭
    234                      */
    235                      case 8:  
    236                          dis_mode++;
   \                     ??TaskDispEvtProcess_8: (+1)
   \   00000148   0x....             LDR.N    R0,??DataTable3_1
   \   0000014A   0x7800             LDRB     R0,[R0, #+0]
   \   0000014C   0x1C40             ADDS     R0,R0,#+1
   \   0000014E   0x....             LDR.N    R1,??DataTable3_1
   \   00000150   0x7008             STRB     R0,[R1, #+0]
    237          //                dis_mode++;
    238                          uprintf("      ");                
   \   00000152   0x....             LDR.N    R0,??DataTable3_10
   \   00000154   0x.... 0x....      BL       uprintf
    239                          break;   
   \   00000158   0xE06E             B.N      ??TaskDispEvtProcess_16
    240                      /*******************************************************************
    241                      * 描述： 高度值
    242                      */
    243                      case 9:  
    244                          dis_mode++;
   \                     ??TaskDispEvtProcess_11: (+1)
   \   0000015A   0x....             LDR.N    R0,??DataTable3_1
   \   0000015C   0x7800             LDRB     R0,[R0, #+0]
   \   0000015E   0x1C40             ADDS     R0,R0,#+1
   \   00000160   0x....             LDR.N    R1,??DataTable3_1
   \   00000162   0x7008             STRB     R0,[R1, #+0]
    245                          uprintf("%4d.%4d",sCtrl.sRec.Myhig1,sCtrl.sRec.Myhig2);                
   \   00000164   0x....             LDR.N    R0,??DataTable3_3
   \   00000166   0xF9B0 0x2066      LDRSH    R2,[R0, #+102]
   \   0000016A   0x....             LDR.N    R0,??DataTable3_3
   \   0000016C   0xF9B0 0x1064      LDRSH    R1,[R0, #+100]
   \   00000170   0x....             LDR.N    R0,??DataTable3_9
   \   00000172   0x.... 0x....      BL       uprintf
    246                          break;  
   \   00000176   0xE05F             B.N      ??TaskDispEvtProcess_16
    247                      /*******************************************************************
    248                      * 描述： 速度1
    249                      */
    250                      case 10:  
    251                          dis_mode++;
   \                     ??TaskDispEvtProcess_10: (+1)
   \   00000178   0x....             LDR.N    R0,??DataTable3_1
   \   0000017A   0x7800             LDRB     R0,[R0, #+0]
   \   0000017C   0x1C40             ADDS     R0,R0,#+1
   \   0000017E   0x....             LDR.N    R1,??DataTable3_1
   \   00000180   0x7008             STRB     R0,[R1, #+0]
    252                          uprintf("S1_%d",sCtrl.sRec.Myspeed1);                
   \   00000182   0x....             LDR.N    R0,??DataTable3_3
   \   00000184   0xF8B0 0x1050      LDRH     R1,[R0, #+80]
   \   00000188   0x....             LDR.N    R0,??DataTable3_11
   \   0000018A   0x.... 0x....      BL       uprintf
    253                          break;   
   \   0000018E   0xE053             B.N      ??TaskDispEvtProcess_16
    254                          
    255                      /*******************************************************************
    256                      * 描述： 速度1
    257                      */
    258                      case 11:  
    259                          dis_mode++;
   \                     ??TaskDispEvtProcess_13: (+1)
   \   00000190   0x....             LDR.N    R0,??DataTable3_1
   \   00000192   0x7800             LDRB     R0,[R0, #+0]
   \   00000194   0x1C40             ADDS     R0,R0,#+1
   \   00000196   0x....             LDR.N    R1,??DataTable3_1
   \   00000198   0x7008             STRB     R0,[R1, #+0]
    260                          uprintf("CS_%d",sCtrl.sRec.Myspeed1);                
   \   0000019A   0x....             LDR.N    R0,??DataTable3_3
   \   0000019C   0xF8B0 0x1050      LDRH     R1,[R0, #+80]
   \   000001A0   0x....             LDR.N    R0,??DataTable3_12
   \   000001A2   0x.... 0x....      BL       uprintf
    261                          break;   
   \   000001A6   0xE047             B.N      ??TaskDispEvtProcess_16
    262                      /*******************************************************************
    263                      * 描述： 故障判断。---铁电，flash。如果异常。显示异常代码。
    264                      */
    265                      case 12:  
    266                          dis_mode++;
   \                     ??TaskDispEvtProcess_12: (+1)
   \   000001A8   0x....             LDR.N    R0,??DataTable3_1
   \   000001AA   0x7800             LDRB     R0,[R0, #+0]
   \   000001AC   0x1C40             ADDS     R0,R0,#+1
   \   000001AE   0x....             LDR.N    R1,??DataTable3_1
   \   000001B0   0x7008             STRB     R0,[R1, #+0]
    267                          //uprintf("CS_%d",sCtrl.sRec.Myspeed1);   
    268                          uint8   ErrFlg;
    269                          //FLASH故障判断。
    270                          ErrFlg  = JudgeFlashIDErrFlg();  
   \   000001B2   0x.... 0x....      BL       JudgeFlashIDErrFlg
   \   000001B6   0x0004             MOVS     R4,R0
    271                          if(ErrFlg != 0xff)
   \   000001B8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000001BA   0x2CFF             CMP      R4,#+255
   \   000001BC   0xD005             BEQ.N    ??TaskDispEvtProcess_17
    272                              uprintf("E-%d",ErrFlg); 
   \   000001BE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000001C0   0x0021             MOVS     R1,R4
   \   000001C2   0x....             LDR.N    R0,??DataTable3_13
   \   000001C4   0x.... 0x....      BL       uprintf
   \   000001C8   0xE002             B.N      ??TaskDispEvtProcess_18
    273                          else
    274                              uprintf("88888888"); 
   \                     ??TaskDispEvtProcess_17: (+1)
   \   000001CA   0x....             LDR.N    R0,??DataTable3_14
   \   000001CC   0x.... 0x....      BL       uprintf
    275          
    276                          //铁电故障判断。参数读取错误，装置异常。
    277                          break;   
   \                     ??TaskDispEvtProcess_18: (+1)
   \   000001D0   0xE032             B.N      ??TaskDispEvtProcess_16
    278                      case 13:  
    279                          dis_mode++;
   \                     ??TaskDispEvtProcess_14: (+1)
   \   000001D2   0x....             LDR.N    R0,??DataTable3_1
   \   000001D4   0x7800             LDRB     R0,[R0, #+0]
   \   000001D6   0x1C40             ADDS     R0,R0,#+1
   \   000001D8   0x....             LDR.N    R1,??DataTable3_1
   \   000001DA   0x7008             STRB     R0,[R1, #+0]
    280                          //不赋值，只显示
    281                          //disflg = BSP_DispEvtProcess();  //执行显示操作，有内容显示，不赋值。否者油量赋值
    282          
    283                          break;   
   \   000001DC   0xE02C             B.N      ??TaskDispEvtProcess_16
    284          //            case 14:  
    285          //               dis_mode++;
    286          //                //不赋值，只显示
    287          //                //disflg = BSP_DispEvtProcess();  //执行显示操作，有内容显示，不赋值。否者油量赋值
    288          //                break;   
    289          //            case 15:  
    290          //                dis_mode++;
    291          //                //disflg = BSP_DispEvtProcess();  //执行显示操作，有内容显示，不赋值。否者油量赋值
    292          //                //不赋值，只显示
    293          //                times = 0;
    294          //                break;   
    295                      /*******************************************************************
    296                      * 描述： 开机后，显示油量，通讯故障判断及故障代码
    297                      */
    298                      default:
    299                          times++;
   \                     ??TaskDispEvtProcess_15: (+1)
   \   000001DE   0x....             LDR.N    R0,??DataTable3_15
   \   000001E0   0x7800             LDRB     R0,[R0, #+0]
   \   000001E2   0x1C40             ADDS     R0,R0,#+1
   \   000001E4   0x....             LDR.N    R1,??DataTable3_15
   \   000001E6   0x7008             STRB     R0,[R1, #+0]
    300                          if(disflg == 0 || (times % delay == 0))  //如果无内容显示，显示油量值
   \   000001E8   0x....             LDR.N    R0,??DataTable3_16
   \   000001EA   0x7800             LDRB     R0,[R0, #+0]
   \   000001EC   0x2800             CMP      R0,#+0
   \   000001EE   0xD008             BEQ.N    ??TaskDispEvtProcess_19
   \   000001F0   0x....             LDR.N    R0,??DataTable3_15
   \   000001F2   0x7800             LDRB     R0,[R0, #+0]
   \   000001F4   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000001F6   0xFB90 0xF1F7      SDIV     R1,R0,R7
   \   000001FA   0xFB07 0x0011      MLS      R0,R7,R1,R0
   \   000001FE   0x2800             CMP      R0,#+0
   \   00000200   0xD118             BNE.N    ??TaskDispEvtProcess_20
    301                          {
    302                              uprintf("%8d",sCtrl.sRec.MstDip);   //显示油量
   \                     ??TaskDispEvtProcess_19: (+1)
   \   00000202   0x....             LDR.N    R0,??DataTable3_3
   \   00000204   0x6D41             LDR      R1,[R0, #+84]
   \   00000206   0x....             ADR.N    R0,??DataTable3  ;; "%8d"
   \   00000208   0x.... 0x....      BL       uprintf
    303                              
    304                              if( sCtrl.sRunPara.SysSta && times % delay == 0)
   \   0000020C   0x....             LDR.N    R0,??DataTable3_3
   \   0000020E   0xF890 0x00B0      LDRB     R0,[R0, #+176]
   \   00000212   0x2800             CMP      R0,#+0
   \   00000214   0xD00E             BEQ.N    ??TaskDispEvtProcess_20
   \   00000216   0x....             LDR.N    R0,??DataTable3_15
   \   00000218   0x7800             LDRB     R0,[R0, #+0]
   \   0000021A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000021C   0xFB90 0xF1F7      SDIV     R1,R0,R7
   \   00000220   0xFB07 0x0011      MLS      R0,R7,R1,R0
   \   00000224   0x2800             CMP      R0,#+0
   \   00000226   0xD105             BNE.N    ??TaskDispEvtProcess_20
    305                                  uprintf("E-%d",sCtrl.sRunPara.SysSta);   //显示故障代码
   \   00000228   0x....             LDR.N    R0,??DataTable3_3
   \   0000022A   0xF890 0x10B0      LDRB     R1,[R0, #+176]
   \   0000022E   0x....             LDR.N    R0,??DataTable3_13
   \   00000230   0x.... 0x....      BL       uprintf
    306                          }
    307                          
    308                          comm_mtr_err_judye();           //油尺通讯故障判断
   \                     ??TaskDispEvtProcess_20: (+1)
   \   00000234   0x.... 0x....      BL       comm_mtr_err_judye
    309                          break;
    310                      }
    311                      
    312                      disflg = BSP_DispEvtProcess();  //执行显示操作，有内容显示，不赋值。否者油量赋值
   \                     ??TaskDispEvtProcess_16: (+1)
   \   00000238   0x.... 0x....      BL       BSP_DispEvtProcess
   \   0000023C   0x....             LDR.N    R1,??DataTable3_16
   \   0000023E   0x7008             STRB     R0,[R1, #+0]
    313                      
    314                      osal_start_timerEx( OS_TASK_ID_DISP,
    315                                          OS_EVT_DISP_TICKS,
    316                                          500);
   \   00000240   0xF44F 0x72FA      MOV      R2,#+500
   \   00000244   0x2101             MOVS     R1,#+1
   \   00000246   0x2000             MOVS     R0,#+0
   \   00000248   0x.... 0x....      BL       osal_start_timerEx
    317                      return ( task_event ^ OS_EVT_DISP_TICKS );
   \   0000024C   0xF096 0x0001      EORS     R0,R6,#0x1
   \   00000250   0xE000             B.N      ??TaskDispEvtProcess_21
    318                  }
    319              return  task_event;
   \                     ??TaskDispEvtProcess_0: (+1)
   \   00000252   0x0030             MOVS     R0,R6
   \                     ??TaskDispEvtProcess_21: (+1)
   \   00000254   0xBDFE             POP      {R1-R7,PC}       ;; return
    320          }

   \                                 In section .bss, align 1
   \                     ??times:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     ??disflg:
   \   00000000                      DS8 1
    321          
    322          
    323          /*******************************************************************************
    324           * 名    称： APP_DispInit
    325           * 功    能： 任务初始化
    326           * 入口参数： 无
    327           * 出口参数： 无
    328           * 作　 　者： wumingshen.
    329           * 创建日期： 2015-12-08
    330           * 修    改：
    331           * 修改日期：
    332           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    333          void TaskInitDisp(void)
    334          {    
   \                     TaskInitDisp: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    335          //    /***********************************************
    336          //    * 描述： 初始化本任务用到的相关硬件
    337          //    */
    338              BSP_DispInit();
   \   00000002   0x.... 0x....      BL       BSP_DispInit
    339          
    340              BSP_DispOff();
   \   00000006   0x.... 0x....      BL       BSP_DispOff
    341              
    342              BSP_DispSetBrightness(10);
   \   0000000A   0x200A             MOVS     R0,#+10
   \   0000000C   0x.... 0x....      BL       BSP_DispSetBrightness
    343              BSP_DispClrAll();
   \   00000010   0x.... 0x....      BL       BSP_DispClrAll
    344              uprintf("88888888");
   \   00000014   0x....             LDR.N    R0,??DataTable3_14
   \   00000016   0x.... 0x....      BL       uprintf
    345              BSP_DispEvtProcess();
   \   0000001A   0x.... 0x....      BL       BSP_DispEvtProcess
    346              
    347          
    348              /***********************************************
    349              * 描述： 在看门狗标志组注册本任务的看门狗标志
    350              */
    351              WdtFlags |= WDT_FLAG_DISP;
   \   0000001E   0x....             LDR.N    R0,??DataTable3_17
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   00000026   0x....             LDR.N    R1,??DataTable3_17
   \   00000028   0x6008             STR      R0,[R1, #+0]
    352              /*************************************************
    353              * 描述：启动事件查询
    354              */
    355              osal_start_timerEx( OS_TASK_ID_DISP,
    356                                  OS_EVT_DISP_TICKS,
    357                                  100);
   \   0000002A   0x2264             MOVS     R2,#+100
   \   0000002C   0x2101             MOVS     R1,#+1
   \   0000002E   0x2000             MOVS     R0,#+0
   \   00000030   0x.... 0x....      BL       osal_start_timerEx
    358          }
   \   00000034   0xBD01             POP      {R0,PC}          ;; return
    359          

   \                                 In section .text, align 2, keep-with-next
    360          void    comm_mtr_err_judye(void)
    361          {
   \                     comm_mtr_err_judye: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    362              /*******************************************************************
    363              * 描述：油尺串口通讯故障判断
    364              */
    365              static  uint32  comm_mtr_err_times = 0;
    366              
    367              if(         sCtrl.Mtr.ConnCtrl[0].ErrFlg == 1 
    368                 &&       sCtrl.Mtr.ConnCtrl[1].ErrFlg == 1){
   \   00000002   0x....             LDR.N    R0,??DataTable3_3
   \   00000004   0xF890 0x039B      LDRB     R0,[R0, #+923]
   \   00000008   0x2801             CMP      R0,#+1
   \   0000000A   0xD11D             BNE.N    ??comm_mtr_err_judye_0
   \   0000000C   0x....             LDR.N    R0,??DataTable3_3
   \   0000000E   0xF890 0x03A3      LDRB     R0,[R0, #+931]
   \   00000012   0x2801             CMP      R0,#+1
   \   00000014   0xD118             BNE.N    ??comm_mtr_err_judye_0
    369          
    370                  comm_mtr_err_times++;                   //错误次数
   \   00000016   0x....             LDR.N    R0,??DataTable3_18
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0x1C40             ADDS     R0,R0,#+1
   \   0000001C   0x....             LDR.N    R1,??DataTable3_18
   \   0000001E   0x6008             STR      R0,[R1, #+0]
    371                  
    372                  if(comm_mtr_err_times > 4 && sCtrl.sRunPara.SysSta == 0 ){
   \   00000020   0x....             LDR.N    R0,??DataTable3_18
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0x2805             CMP      R0,#+5
   \   00000026   0xD370             BCC.N    ??comm_mtr_err_judye_1
   \   00000028   0x....             LDR.N    R0,??DataTable3_3
   \   0000002A   0xF890 0x00B0      LDRB     R0,[R0, #+176]
   \   0000002E   0x2800             CMP      R0,#+0
   \   00000030   0xD16B             BNE.N    ??comm_mtr_err_judye_1
    373                      sCtrl.sRunPara.SysSta   = 83;       //测量装置1、测量装置2均有故障
   \   00000032   0x2053             MOVS     R0,#+83
   \   00000034   0x....             LDR.N    R1,??DataTable3_3
   \   00000036   0xF881 0x00B0      STRB     R0,[R1, #+176]
    374                      
    375                      sCtrl.sRec.ErrorCode    = sCtrl.sRunPara.SysSta;    //错误代码赋值
   \   0000003A   0x....             LDR.N    R0,??DataTable3_3
   \   0000003C   0xF890 0x00B0      LDRB     R0,[R0, #+176]
   \   00000040   0x....             LDR.N    R1,??DataTable3_3
   \   00000042   0xF881 0x0098      STRB     R0,[R1, #+152]
   \   00000046   0xE060             B.N      ??comm_mtr_err_judye_1
    376                  }
    377              }else if(   sCtrl.Mtr.ConnCtrl[0].ErrFlg == 1){
   \                     ??comm_mtr_err_judye_0: (+1)
   \   00000048   0x....             LDR.N    R0,??DataTable3_3
   \   0000004A   0xF890 0x039B      LDRB     R0,[R0, #+923]
   \   0000004E   0x2801             CMP      R0,#+1
   \   00000050   0xD118             BNE.N    ??comm_mtr_err_judye_2
    378                  comm_mtr_err_times++;                   //错误次数
   \   00000052   0x....             LDR.N    R0,??DataTable3_18
   \   00000054   0x6800             LDR      R0,[R0, #+0]
   \   00000056   0x1C40             ADDS     R0,R0,#+1
   \   00000058   0x....             LDR.N    R1,??DataTable3_18
   \   0000005A   0x6008             STR      R0,[R1, #+0]
    379                  
    380                  if(comm_mtr_err_times > 8 && sCtrl.sRunPara.SysSta == 0 ){
   \   0000005C   0x....             LDR.N    R0,??DataTable3_18
   \   0000005E   0x6800             LDR      R0,[R0, #+0]
   \   00000060   0x2809             CMP      R0,#+9
   \   00000062   0xD352             BCC.N    ??comm_mtr_err_judye_1
   \   00000064   0x....             LDR.N    R0,??DataTable3_3
   \   00000066   0xF890 0x00B0      LDRB     R0,[R0, #+176]
   \   0000006A   0x2800             CMP      R0,#+0
   \   0000006C   0xD14D             BNE.N    ??comm_mtr_err_judye_1
    381                      sCtrl.sRunPara.SysSta   = 71;       //测量装置1故障
   \   0000006E   0x2047             MOVS     R0,#+71
   \   00000070   0x....             LDR.N    R1,??DataTable3_3
   \   00000072   0xF881 0x00B0      STRB     R0,[R1, #+176]
    382                      
    383                      sCtrl.sRec.ErrorCode    = sCtrl.sRunPara.SysSta;    //错误代码赋值
   \   00000076   0x....             LDR.N    R0,??DataTable3_3
   \   00000078   0xF890 0x00B0      LDRB     R0,[R0, #+176]
   \   0000007C   0x....             LDR.N    R1,??DataTable3_3
   \   0000007E   0xF881 0x0098      STRB     R0,[R1, #+152]
   \   00000082   0xE042             B.N      ??comm_mtr_err_judye_1
    384                  }
    385                  
    386              }else if(   sCtrl.Mtr.ConnCtrl[1].ErrFlg == 1){
   \                     ??comm_mtr_err_judye_2: (+1)
   \   00000084   0x....             LDR.N    R0,??DataTable3_3
   \   00000086   0xF890 0x03A3      LDRB     R0,[R0, #+931]
   \   0000008A   0x2801             CMP      R0,#+1
   \   0000008C   0xD118             BNE.N    ??comm_mtr_err_judye_3
    387                  comm_mtr_err_times++;                   //错误次数
   \   0000008E   0x....             LDR.N    R0,??DataTable3_18
   \   00000090   0x6800             LDR      R0,[R0, #+0]
   \   00000092   0x1C40             ADDS     R0,R0,#+1
   \   00000094   0x....             LDR.N    R1,??DataTable3_18
   \   00000096   0x6008             STR      R0,[R1, #+0]
    388                  
    389                  if(comm_mtr_err_times > 8 && sCtrl.sRunPara.SysSta == 0 )
   \   00000098   0x....             LDR.N    R0,??DataTable3_18
   \   0000009A   0x6800             LDR      R0,[R0, #+0]
   \   0000009C   0x2809             CMP      R0,#+9
   \   0000009E   0xD308             BCC.N    ??comm_mtr_err_judye_4
   \   000000A0   0x....             LDR.N    R0,??DataTable3_3
   \   000000A2   0xF890 0x00B0      LDRB     R0,[R0, #+176]
   \   000000A6   0x2800             CMP      R0,#+0
   \   000000A8   0xD103             BNE.N    ??comm_mtr_err_judye_4
    390                      sCtrl.sRunPara.SysSta   = 81;       //测量装置2故障
   \   000000AA   0x2051             MOVS     R0,#+81
   \   000000AC   0x....             LDR.N    R1,??DataTable3_3
   \   000000AE   0xF881 0x00B0      STRB     R0,[R1, #+176]
    391                  
    392                      sCtrl.sRec.ErrorCode    = sCtrl.sRunPara.SysSta;    //错误代码赋值
   \                     ??comm_mtr_err_judye_4: (+1)
   \   000000B2   0x....             LDR.N    R0,??DataTable3_3
   \   000000B4   0xF890 0x00B0      LDRB     R0,[R0, #+176]
   \   000000B8   0x....             LDR.N    R1,??DataTable3_3
   \   000000BA   0xF881 0x0098      STRB     R0,[R1, #+152]
   \   000000BE   0xE024             B.N      ??comm_mtr_err_judye_1
    393              }else {
    394                  comm_mtr_err_times = 0;                 //错误次数
   \                     ??comm_mtr_err_judye_3: (+1)
   \   000000C0   0x2000             MOVS     R0,#+0
   \   000000C2   0x....             LDR.N    R1,??DataTable3_18
   \   000000C4   0x6008             STR      R0,[R1, #+0]
    395          
    396                  if(     sCtrl.sRunPara.SysSta == 81
    397                      ||  sCtrl.sRunPara.SysSta == 71
    398                      ||  sCtrl.sRunPara.SysSta == 83){
   \   000000C6   0x....             LDR.N    R0,??DataTable3_3
   \   000000C8   0xF890 0x00B0      LDRB     R0,[R0, #+176]
   \   000000CC   0x2851             CMP      R0,#+81
   \   000000CE   0xD009             BEQ.N    ??comm_mtr_err_judye_5
   \   000000D0   0x....             LDR.N    R0,??DataTable3_3
   \   000000D2   0xF890 0x00B0      LDRB     R0,[R0, #+176]
   \   000000D6   0x2847             CMP      R0,#+71
   \   000000D8   0xD004             BEQ.N    ??comm_mtr_err_judye_5
   \   000000DA   0x....             LDR.N    R0,??DataTable3_3
   \   000000DC   0xF890 0x00B0      LDRB     R0,[R0, #+176]
   \   000000E0   0x2853             CMP      R0,#+83
   \   000000E2   0xD112             BNE.N    ??comm_mtr_err_judye_1
    399                      uprintf("E-%d",sCtrl.sRunPara.SysSta+100);  //显示故障代码+100
   \                     ??comm_mtr_err_judye_5: (+1)
   \   000000E4   0x....             LDR.N    R0,??DataTable3_3
   \   000000E6   0xF890 0x00B0      LDRB     R0,[R0, #+176]
   \   000000EA   0xF110 0x0164      ADDS     R1,R0,#+100
   \   000000EE   0x....             LDR.N    R0,??DataTable3_13
   \   000000F0   0x.... 0x....      BL       uprintf
    400                      
    401                      sCtrl.sRec.ErrorCode    = sCtrl.sRunPara.SysSta+100;//错误代码赋值
   \   000000F4   0x....             LDR.N    R0,??DataTable3_3
   \   000000F6   0xF890 0x00B0      LDRB     R0,[R0, #+176]
   \   000000FA   0x3064             ADDS     R0,R0,#+100
   \   000000FC   0x....             LDR.N    R1,??DataTable3_3
   \   000000FE   0xF881 0x0098      STRB     R0,[R1, #+152]
    402                      sCtrl.sRunPara.SysSta   = 0;        //清除故障代码
   \   00000102   0x2000             MOVS     R0,#+0
   \   00000104   0x....             LDR.N    R1,??DataTable3_3
   \   00000106   0xF881 0x00B0      STRB     R0,[R1, #+176]
    403                  }
    404              }
    405          }
   \                     ??comm_mtr_err_judye_1: (+1)
   \   0000010A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 4
   \                     ??comm_mtr_err_times:
   \   00000000                      DS8 4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x25 0x38          DC8      "%8d"
   \              0x64 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     dis_mode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     sCtrl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x........         DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x........         DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x........         DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x........         DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \   00000000   0x........         DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \   00000000   0x........         DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_15:
   \   00000000   0x........         DC32     ??times

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_16:
   \   00000000   0x........         DC32     ??disflg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_17:
   \   00000000   0x........         DC32     WdtFlags

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_18:
   \   00000000   0x........         DC32     ??comm_mtr_err_times

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x25 0x30          DC8 "%02d-%02d-%02d"
   \              0x32 0x64    
   \              0x2D 0x25    
   \              0x30 0x32    
   \              0x64 0x2D    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x53 0x56          DC8 "SV_%02X.%02X"
   \              0x5F 0x25    
   \              0x30 0x32    
   \              0x58 0x2E    
   \              0x25 0x30    
   \              0x32 0x58    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x53 0x56          DC8 "SV31"
   \              0x33 0x31    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x43 0x5F          DC8 "C_%d"
   \              0x25 0x64    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x48 0x5F          DC8 "H_%d"
   \              0x25 0x64    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x4C 0x5F          DC8 "L_%d"
   \              0x25 0x64    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x25 0x34          DC8 "%4d.%4d"
   \              0x64 0x2E    
   \              0x25 0x34    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_7:
   \   00000000   0x20 0x20          DC8 "      "
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_8:
   \   00000000   0x53 0x31          DC8 "S1_%d"
   \              0x5F 0x25    
   \              0x64 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_9:
   \   00000000   0x43 0x53          DC8 "CS_%d"
   \              0x5F 0x25    
   \              0x64 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_10:
   \   00000000   0x45 0x2D          DC8 "E-%d"
   \              0x25 0x64    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_11:
   \   00000000   0x38 0x38          DC8 "88888888"
   \              0x38 0x38    
   \              0x38 0x38    
   \              0x38 0x38    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x25 0x38          DC8 "%8d"
   \              0x64 0x00    
    406          /*******************************************************************************
    407           * 				                    end of file                                *
    408           *******************************************************************************/
    409          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   SetDispNow
         8   -> BSP_DispEvtProcess
      32   TaskDispEvtProcess
        32   -> BSP_DispEvtProcess
        32   -> JudgeFlashIDErrFlg
        32   -> ReadTime
        32   -> comm_mtr_err_judye
        32   -> osal_start_timerEx
        32   -> uprintf
       8   TaskInitDisp
         8   -> BSP_DispClrAll
         8   -> BSP_DispEvtProcess
         8   -> BSP_DispInit
         8   -> BSP_DispOff
         8   -> BSP_DispSetBrightness
         8   -> osal_start_timerEx
         8   -> uprintf
       8   comm_mtr_err_judye
         8   -> uprintf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_14
       4  ??DataTable3_15
       4  ??DataTable3_16
       4  ??DataTable3_17
       4  ??DataTable3_18
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
      16  ?_0
      16  ?_1
       8  ?_10
      12  ?_11
       4  ?_12
       8  ?_2
       8  ?_3
       8  ?_4
       8  ?_5
       8  ?_6
       8  ?_7
       8  ?_8
       8  ?_9
      16  SetDispNow
     598  TaskDispEvtProcess
      54  TaskInitDisp
     268  comm_mtr_err_judye
       4  comm_mtr_err_times
       1  dis_mode
       1  disflg
       1  times

 
     7 bytes in section .bss
   120 bytes in section .rodata
 1 012 bytes in section .text
 
 1 012 bytes of CODE  memory
   120 bytes of CONST memory
     7 bytes of DATA  memory

Errors: none
Warnings: none
