###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       21/Aug/2017  10:05:25
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC136B-310统计模块\Software\CSB\source\lpc17xx_pinsel.c
#    Command line =  
#        F:\iar\NC136B-310统计模块\Software\CSB\source\lpc17xx_pinsel.c -lCN
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List
#        --diag_suppress Pa050 -o
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\csnr_package_deal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\iap\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\lpc17xx_pinsel.lst
#    Object file  =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\lpc17xx_pinsel.o
#
###############################################################################

F:\iar\NC136B-310统计模块\Software\CSB\source\lpc17xx_pinsel.c
      1          /**********************************************************************
      2          * $Id$		lpc17xx_pinsel.c				2010-05-21
      3          *//**
      4          * @file		lpc17xx_pinsel.c
      5          * @brief	Contains all functions support for Pin connect block firmware
      6          * 			library on LPC17xx
      7          * @version	2.0
      8          * @date		21. May. 2010
      9          * @author	NXP MCU SW Application Team
     10          *
     11          * Copyright(C) 2010, NXP Semiconductor
     12          * All rights reserved.
     13          *
     14          ***********************************************************************
     15          * Software that is described herein is for illustrative purposes only
     16          * which provides customers with programming information regarding the
     17          * products. This software is supplied "AS IS" without any warranties.
     18          * NXP Semiconductors assumes no responsibility or liability for the
     19          * use of the software, conveys no license or title under any patent,
     20          * copyright, or mask work right to the product. NXP Semiconductors
     21          * reserves the right to make changes in the software without
     22          * notification. NXP Semiconductors also make no representation or
     23          * warranty that such application will be suitable for the specified
     24          * use without further testing or modification.
     25          * Permission to use, copy, modify, and distribute this software and its
     26          * documentation is hereby granted, under NXP Semiconductors'
     27          * relevant copyright in the software, without fee, provided that it
     28          * is used in conjunction with NXP Semiconductors microcontrollers.  This
     29          * copyright, permission, and disclaimer notice must appear in all copies of
     30          * this code.
     31          **********************************************************************/
     32          
     33          /* Peripheral group ----------------------------------------------------------- */
     34          /** @addtogroup PINSEL
     35           * @{
     36           */
     37          
     38          /* Includes ------------------------------------------------------------------- */
     39          #include "lpc17xx_pinsel.h"
     40          
     41          /* Public Functions ----------------------------------------------------------- */
     42          
     43          static void set_PinFunc ( uint8_t portnum, uint8_t pinnum, uint8_t funcnum);
     44          static void set_ResistorMode ( uint8_t portnum, uint8_t pinnum, uint8_t modenum);
     45          static void set_OpenDrainMode( uint8_t portnum, uint8_t pinnum, uint8_t modenum);
     46          
     47          /*********************************************************************//**
     48           * @brief 		Setup the pin selection function
     49           * @param[in]	portnum PORT number,
     50           * 				should be one of the following:
     51           * 				- PINSEL_PORT_0	: Port 0
     52           * 				- PINSEL_PORT_1	: Port 1
     53           * 				- PINSEL_PORT_2	: Port 2
     54           * 				- PINSEL_PORT_3	: Port 3
     55           *
     56           * @param[in]	pinnum	Pin number,
     57           * 				should be one of the following:
     58          				- PINSEL_PIN_0 : Pin 0
     59          				- PINSEL_PIN_1 : Pin 1
     60          				- PINSEL_PIN_2 : Pin 2
     61          				- PINSEL_PIN_3 : Pin 3
     62          				- PINSEL_PIN_4 : Pin 4
     63          				- PINSEL_PIN_5 : Pin 5
     64          				- PINSEL_PIN_6 : Pin 6
     65          				- PINSEL_PIN_7 : Pin 7
     66          				- PINSEL_PIN_8 : Pin 8
     67          				- PINSEL_PIN_9 : Pin 9
     68          				- PINSEL_PIN_10 : Pin 10
     69          				- PINSEL_PIN_11 : Pin 11
     70          				- PINSEL_PIN_12 : Pin 12
     71          				- PINSEL_PIN_13 : Pin 13
     72          				- PINSEL_PIN_14 : Pin 14
     73          				- PINSEL_PIN_15 : Pin 15
     74          				- PINSEL_PIN_16 : Pin 16
     75          				- PINSEL_PIN_17 : Pin 17
     76          				- PINSEL_PIN_18 : Pin 18
     77          				- PINSEL_PIN_19 : Pin 19
     78          				- PINSEL_PIN_20 : Pin 20
     79          				- PINSEL_PIN_21 : Pin 21
     80          				- PINSEL_PIN_22 : Pin 22
     81          				- PINSEL_PIN_23 : Pin 23
     82          				- PINSEL_PIN_24 : Pin 24
     83          				- PINSEL_PIN_25 : Pin 25
     84          				- PINSEL_PIN_26 : Pin 26
     85          				- PINSEL_PIN_27 : Pin 27
     86          				- PINSEL_PIN_28 : Pin 28
     87          				- PINSEL_PIN_29 : Pin 29
     88          				- PINSEL_PIN_30 : Pin 30
     89          				- PINSEL_PIN_31 : Pin 31
     90          
     91           * @param[in] 	funcnum Function number,
     92           * 				should be one of the following:
     93           *				- PINSEL_FUNC_0 : default function
     94           *				- PINSEL_FUNC_1 : first alternate function
     95           *				- PINSEL_FUNC_2 : second alternate function
     96           *				- PINSEL_FUNC_3 : third alternate function
     97           *
     98           * @return 		None
     99           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    100          static void set_PinFunc ( uint8_t portnum, uint8_t pinnum, uint8_t funcnum)
    101          {
   \                     set_PinFunc: (+1)
   \   00000000   0xB4F0             PUSH     {R4-R7}
    102          	uint32_t pinnum_t = pinnum;
   \   00000002   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000004   0x000C             MOVS     R4,R1
    103          	uint32_t pinselreg_idx = 2 * portnum;
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x0045             LSLS     R5,R0,#+1
    104          	uint32_t *pPinCon = (uint32_t *)&LPC_PINCON->PINSEL0;
   \   0000000A   0x....             LDR.N    R3,??DataTable4  ;; 0x4002c000
    105          
    106          	if (pinnum_t >= 16) {
   \   0000000C   0x2C10             CMP      R4,#+16
   \   0000000E   0xD301             BCC.N    ??set_PinFunc_0
    107          		pinnum_t -= 16;
   \   00000010   0x3C10             SUBS     R4,R4,#+16
    108          		pinselreg_idx++;
   \   00000012   0x1C6D             ADDS     R5,R5,#+1
    109          	}
    110          	*(uint32_t *)(pPinCon + pinselreg_idx) &= ~(0x03UL << (pinnum_t * 2));
   \                     ??set_PinFunc_0: (+1)
   \   00000014   0xF853 0x6025      LDR      R6,[R3, R5, LSL #+2]
   \   00000018   0x2703             MOVS     R7,#+3
   \   0000001A   0x46A4             MOV      R12,R4
   \   0000001C   0xFA5F 0xFC8C      UXTB     R12,R12          ;; ZeroExt  R12,R12,#+24,#+24
   \   00000020   0xEA5F 0x0C4C      LSLS     R12,R12,#+1
   \   00000024   0xFA17 0xF70C      LSLS     R7,R7,R12
   \   00000028   0x43BE             BICS     R6,R6,R7
   \   0000002A   0xF843 0x6025      STR      R6,[R3, R5, LSL #+2]
    111          	*(uint32_t *)(pPinCon + pinselreg_idx) |= ((uint32_t)funcnum) << (pinnum_t * 2);
   \   0000002E   0xF853 0x6025      LDR      R6,[R3, R5, LSL #+2]
   \   00000032   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000034   0x0027             MOVS     R7,R4
   \   00000036   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000038   0x007F             LSLS     R7,R7,#+1
   \   0000003A   0xFA12 0xF707      LSLS     R7,R2,R7
   \   0000003E   0x433E             ORRS     R6,R7,R6
   \   00000040   0xF843 0x6025      STR      R6,[R3, R5, LSL #+2]
    112          }
   \   00000044   0xBCF0             POP      {R4-R7}
   \   00000046   0x4770             BX       LR               ;; return
    113          
    114          /*********************************************************************//**
    115           * @brief 		Setup resistor mode for each pin
    116           * @param[in]	portnum PORT number,
    117           * 				should be one of the following:
    118           * 				- PINSEL_PORT_0	: Port 0
    119           * 				- PINSEL_PORT_1	: Port 1
    120           * 				- PINSEL_PORT_2	: Port 2
    121           * 				- PINSEL_PORT_3	: Port 3
    122           * @param[in]	pinnum	Pin number,
    123           * 				should be one of the following:
    124          				- PINSEL_PIN_0 : Pin 0
    125          				- PINSEL_PIN_1 : Pin 1
    126          				- PINSEL_PIN_2 : Pin 2
    127          				- PINSEL_PIN_3 : Pin 3
    128          				- PINSEL_PIN_4 : Pin 4
    129          				- PINSEL_PIN_5 : Pin 5
    130          				- PINSEL_PIN_6 : Pin 6
    131          				- PINSEL_PIN_7 : Pin 7
    132          				- PINSEL_PIN_8 : Pin 8
    133          				- PINSEL_PIN_9 : Pin 9
    134          				- PINSEL_PIN_10 : Pin 10
    135          				- PINSEL_PIN_11 : Pin 11
    136          				- PINSEL_PIN_12 : Pin 12
    137          				- PINSEL_PIN_13 : Pin 13
    138          				- PINSEL_PIN_14 : Pin 14
    139          				- PINSEL_PIN_15 : Pin 15
    140          				- PINSEL_PIN_16 : Pin 16
    141          				- PINSEL_PIN_17 : Pin 17
    142          				- PINSEL_PIN_18 : Pin 18
    143          				- PINSEL_PIN_19 : Pin 19
    144          				- PINSEL_PIN_20 : Pin 20
    145          				- PINSEL_PIN_21 : Pin 21
    146          				- PINSEL_PIN_22 : Pin 22
    147          				- PINSEL_PIN_23 : Pin 23
    148          				- PINSEL_PIN_24 : Pin 24
    149          				- PINSEL_PIN_25 : Pin 25
    150          				- PINSEL_PIN_26 : Pin 26
    151          				- PINSEL_PIN_27 : Pin 27
    152          				- PINSEL_PIN_28 : Pin 28
    153          				- PINSEL_PIN_29 : Pin 29
    154          				- PINSEL_PIN_30 : Pin 30
    155          				- PINSEL_PIN_31 : Pin 31
    156          
    157           * @param[in] 	modenum: Mode number,
    158           * 				should be one of the following:
    159          				- PINSEL_PINMODE_PULLUP	: Internal pull-up resistor
    160          				- PINSEL_PINMODE_TRISTATE : Tri-state
    161          				- PINSEL_PINMODE_PULLDOWN : Internal pull-down resistor
    162          
    163           * @return 		None
    164           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    165          void set_ResistorMode ( uint8_t portnum, uint8_t pinnum, uint8_t modenum)
    166          {
   \                     set_ResistorMode: (+1)
   \   00000000   0xB4F0             PUSH     {R4-R7}
    167          	uint32_t pinnum_t = pinnum;
   \   00000002   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000004   0x000C             MOVS     R4,R1
    168          	uint32_t pinmodereg_idx = 2 * portnum;
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x0045             LSLS     R5,R0,#+1
    169          	uint32_t *pPinCon = (uint32_t *)&LPC_PINCON->PINMODE0;
   \   0000000A   0x....             LDR.N    R3,??DataTable4_1  ;; 0x4002c040
    170          
    171          	if (pinnum_t >= 16) {
   \   0000000C   0x2C10             CMP      R4,#+16
   \   0000000E   0xD301             BCC.N    ??set_ResistorMode_0
    172          		pinnum_t -= 16;
   \   00000010   0x3C10             SUBS     R4,R4,#+16
    173          		pinmodereg_idx++ ;
   \   00000012   0x1C6D             ADDS     R5,R5,#+1
    174          	}
    175          
    176          	*(uint32_t *)(pPinCon + pinmodereg_idx) &= ~(0x03UL << (pinnum_t * 2));
   \                     ??set_ResistorMode_0: (+1)
   \   00000014   0xF853 0x6025      LDR      R6,[R3, R5, LSL #+2]
   \   00000018   0x2703             MOVS     R7,#+3
   \   0000001A   0x46A4             MOV      R12,R4
   \   0000001C   0xFA5F 0xFC8C      UXTB     R12,R12          ;; ZeroExt  R12,R12,#+24,#+24
   \   00000020   0xEA5F 0x0C4C      LSLS     R12,R12,#+1
   \   00000024   0xFA17 0xF70C      LSLS     R7,R7,R12
   \   00000028   0x43BE             BICS     R6,R6,R7
   \   0000002A   0xF843 0x6025      STR      R6,[R3, R5, LSL #+2]
    177          	*(uint32_t *)(pPinCon + pinmodereg_idx) |= ((uint32_t)modenum) << (pinnum_t * 2);
   \   0000002E   0xF853 0x6025      LDR      R6,[R3, R5, LSL #+2]
   \   00000032   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000034   0x0027             MOVS     R7,R4
   \   00000036   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000038   0x007F             LSLS     R7,R7,#+1
   \   0000003A   0xFA12 0xF707      LSLS     R7,R2,R7
   \   0000003E   0x433E             ORRS     R6,R7,R6
   \   00000040   0xF843 0x6025      STR      R6,[R3, R5, LSL #+2]
    178          }
   \   00000044   0xBCF0             POP      {R4-R7}
   \   00000046   0x4770             BX       LR               ;; return
    179          
    180          /*********************************************************************//**
    181           * @brief 		Setup Open drain mode for each pin
    182           * @param[in]	portnum PORT number,
    183           * 				should be one of the following:
    184           * 				- PINSEL_PORT_0	: Port 0
    185           * 				- PINSEL_PORT_1	: Port 1
    186           * 				- PINSEL_PORT_2	: Port 2
    187           * 				- PINSEL_PORT_3	: Port 3
    188           *
    189           * @param[in]	pinnum	Pin number,
    190           * 				should be one of the following:
    191          				- PINSEL_PIN_0 : Pin 0
    192          				- PINSEL_PIN_1 : Pin 1
    193          				- PINSEL_PIN_2 : Pin 2
    194          				- PINSEL_PIN_3 : Pin 3
    195          				- PINSEL_PIN_4 : Pin 4
    196          				- PINSEL_PIN_5 : Pin 5
    197          				- PINSEL_PIN_6 : Pin 6
    198          				- PINSEL_PIN_7 : Pin 7
    199          				- PINSEL_PIN_8 : Pin 8
    200          				- PINSEL_PIN_9 : Pin 9
    201          				- PINSEL_PIN_10 : Pin 10
    202          				- PINSEL_PIN_11 : Pin 11
    203          				- PINSEL_PIN_12 : Pin 12
    204          				- PINSEL_PIN_13 : Pin 13
    205          				- PINSEL_PIN_14 : Pin 14
    206          				- PINSEL_PIN_15 : Pin 15
    207          				- PINSEL_PIN_16 : Pin 16
    208          				- PINSEL_PIN_17 : Pin 17
    209          				- PINSEL_PIN_18 : Pin 18
    210          				- PINSEL_PIN_19 : Pin 19
    211          				- PINSEL_PIN_20 : Pin 20
    212          				- PINSEL_PIN_21 : Pin 21
    213          				- PINSEL_PIN_22 : Pin 22
    214          				- PINSEL_PIN_23 : Pin 23
    215          				- PINSEL_PIN_24 : Pin 24
    216          				- PINSEL_PIN_25 : Pin 25
    217          				- PINSEL_PIN_26 : Pin 26
    218          				- PINSEL_PIN_27 : Pin 27
    219          				- PINSEL_PIN_28 : Pin 28
    220          				- PINSEL_PIN_29 : Pin 29
    221          				- PINSEL_PIN_30 : Pin 30
    222          				- PINSEL_PIN_31 : Pin 31
    223          
    224           * @param[in]	modenum  Open drain mode number,
    225           * 				should be one of the following:
    226           * 				- PINSEL_PINMODE_NORMAL : Pin is in the normal (not open drain) mode
    227           * 				- PINSEL_PINMODE_OPENDRAIN : Pin is in the open drain mode
    228           *
    229           * @return 		None
    230           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    231          void set_OpenDrainMode( uint8_t portnum, uint8_t pinnum, uint8_t modenum)
    232          {
   \                     set_OpenDrainMode: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
    233          	uint32_t *pPinCon = (uint32_t *)&LPC_PINCON->PINMODE_OD0;
   \   00000002   0x....             LDR.N    R3,??DataTable4_2  ;; 0x4002c068
    234          
    235          	if (modenum == PINSEL_PINMODE_OPENDRAIN){
   \   00000004   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000006   0x2A01             CMP      R2,#+1
   \   00000008   0xD109             BNE.N    ??set_OpenDrainMode_0
    236          		*(uint32_t *)(pPinCon + portnum) |= (0x01UL << pinnum);
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0xF853 0x4020      LDR      R4,[R3, R0, LSL #+2]
   \   00000010   0x2501             MOVS     R5,#+1
   \   00000012   0x408D             LSLS     R5,R5,R1
   \   00000014   0x432C             ORRS     R4,R5,R4
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0xF843 0x4020      STR      R4,[R3, R0, LSL #+2]
   \   0000001C   0xE008             B.N      ??set_OpenDrainMode_1
    237          	} else {
    238          		*(uint32_t *)(pPinCon + portnum) &= ~(0x01UL << pinnum);
   \                     ??set_OpenDrainMode_0: (+1)
   \   0000001E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000020   0xF853 0x4020      LDR      R4,[R3, R0, LSL #+2]
   \   00000024   0x2501             MOVS     R5,#+1
   \   00000026   0x408D             LSLS     R5,R5,R1
   \   00000028   0x43AC             BICS     R4,R4,R5
   \   0000002A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002C   0xF843 0x4020      STR      R4,[R3, R0, LSL #+2]
    239          	}
    240          }
   \                     ??set_OpenDrainMode_1: (+1)
   \   00000030   0xBC30             POP      {R4,R5}
   \   00000032   0x4770             BX       LR               ;; return
    241          
    242          /* End of Public Functions ---------------------------------------------------- */
    243          
    244          /* Public Functions ----------------------------------------------------------- */
    245          /** @addtogroup PINSEL_Public_Functions
    246           * @{
    247           */
    248          /*********************************************************************//**
    249           * @brief 		Configure trace function
    250           * @param[in] 	NewState State of the Trace function configuration,
    251           * 				should be one of the following:
    252           * 				- ENABLE : Enable Trace Function
    253           * 				- DISABLE : Disable Trace Function
    254           *
    255           * @return 		None
    256           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    257          void PINSEL_ConfigTraceFunc(FunctionalState NewState)
    258          {
    259          	if (NewState == ENABLE) {
   \                     PINSEL_ConfigTraceFunc: (+1)
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x2801             CMP      R0,#+1
   \   00000004   0xD106             BNE.N    ??PINSEL_ConfigTraceFunc_0
    260          		LPC_PINCON->PINSEL10 |= (0x01UL << 3);
   \   00000006   0x....             LDR.N    R1,??DataTable4_3  ;; 0x4002c028
   \   00000008   0x6809             LDR      R1,[R1, #+0]
   \   0000000A   0xF051 0x0108      ORRS     R1,R1,#0x8
   \   0000000E   0x....             LDR.N    R2,??DataTable4_3  ;; 0x4002c028
   \   00000010   0x6011             STR      R1,[R2, #+0]
   \   00000012   0xE008             B.N      ??PINSEL_ConfigTraceFunc_1
    261          	} else if (NewState == DISABLE) {
   \                     ??PINSEL_ConfigTraceFunc_0: (+1)
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD105             BNE.N    ??PINSEL_ConfigTraceFunc_1
    262          		LPC_PINCON->PINSEL10 &= ~(0x01UL << 3);
   \   0000001A   0x....             LDR.N    R1,??DataTable4_3  ;; 0x4002c028
   \   0000001C   0x6809             LDR      R1,[R1, #+0]
   \   0000001E   0xF031 0x0108      BICS     R1,R1,#0x8
   \   00000022   0x....             LDR.N    R2,??DataTable4_3  ;; 0x4002c028
   \   00000024   0x6011             STR      R1,[R2, #+0]
    263          	}
    264          }
   \                     ??PINSEL_ConfigTraceFunc_1: (+1)
   \   00000026   0x4770             BX       LR               ;; return
    265          
    266          /*********************************************************************//**
    267           * @brief 		Setup I2C0 pins
    268           * @param[in]	i2cPinMode I2C pin mode,
    269           * 				should be one of the following:
    270           * 				- PINSEL_I2C_Normal_Mode : The standard drive mode
    271           * 				- PINSEL_I2C_Fast_Mode : Fast Mode Plus drive mode
    272           *
    273           * @param[in]	filterSlewRateEnable  should be:
    274           * 				- ENABLE: Enable filter and slew rate.
    275           * 				- DISABLE: Disable filter and slew rate.
    276           *
    277           * @return 		None
    278           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    279          void PINSEL_SetI2C0Pins(uint8_t i2cPinMode, FunctionalState filterSlewRateEnable)
    280          {
    281          	uint32_t regVal;
    282          
    283          	if (i2cPinMode == PINSEL_I2C_Fast_Mode){
   \                     PINSEL_SetI2C0Pins: (+1)
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x2801             CMP      R0,#+1
   \   00000004   0xD101             BNE.N    ??PINSEL_SetI2C0Pins_0
    284          		regVal = PINSEL_I2CPADCFG_SCLDRV0 | PINSEL_I2CPADCFG_SDADRV0;
   \   00000006   0x2305             MOVS     R3,#+5
   \   00000008   0x001A             MOVS     R2,R3
    285          	}
    286          
    287          	if (filterSlewRateEnable == DISABLE){
   \                     ??PINSEL_SetI2C0Pins_0: (+1)
   \   0000000A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000000C   0x2900             CMP      R1,#+0
   \   0000000E   0xD101             BNE.N    ??PINSEL_SetI2C0Pins_1
    288          		regVal = PINSEL_I2CPADCFG_SCLI2C0 | PINSEL_I2CPADCFG_SDAI2C0;
   \   00000010   0x230A             MOVS     R3,#+10
   \   00000012   0x001A             MOVS     R2,R3
    289          	}
    290          	LPC_PINCON->I2CPADCFG = regVal;
   \                     ??PINSEL_SetI2C0Pins_1: (+1)
   \   00000014   0x....             LDR.N    R3,??DataTable4_4  ;; 0x4002c07c
   \   00000016   0x601A             STR      R2,[R3, #+0]
    291          }
   \   00000018   0x4770             BX       LR               ;; return
    292          
    293          
    294          /*********************************************************************//**
    295           * @brief 		Configure Pin corresponding to specified parameters passed
    296           * 				in the PinCfg
    297           * @param[in]	PinCfg	Pointer to a PINSEL_CFG_Type structure
    298           *                    that contains the configuration information for the
    299           *                    specified pin.
    300           * @return 		None
    301           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    302          void PINSEL_ConfigPin(PINSEL_CFG_Type *PinCfg)
    303          {
   \                     PINSEL_ConfigPin: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    304          	set_PinFunc(PinCfg->Portnum, PinCfg->Pinnum, PinCfg->Funcnum);
   \   00000004   0x78A2             LDRB     R2,[R4, #+2]
   \   00000006   0x7861             LDRB     R1,[R4, #+1]
   \   00000008   0x7820             LDRB     R0,[R4, #+0]
   \   0000000A   0x.... 0x....      BL       set_PinFunc
    305          	set_ResistorMode(PinCfg->Portnum, PinCfg->Pinnum, PinCfg->Pinmode);
   \   0000000E   0x78E2             LDRB     R2,[R4, #+3]
   \   00000010   0x7861             LDRB     R1,[R4, #+1]
   \   00000012   0x7820             LDRB     R0,[R4, #+0]
   \   00000014   0x.... 0x....      BL       set_ResistorMode
    306          	set_OpenDrainMode(PinCfg->Portnum, PinCfg->Pinnum, PinCfg->OpenDrain);
   \   00000018   0x7922             LDRB     R2,[R4, #+4]
   \   0000001A   0x7861             LDRB     R1,[R4, #+1]
   \   0000001C   0x7820             LDRB     R0,[R4, #+0]
   \   0000001E   0x.... 0x....      BL       set_OpenDrainMode
    307          }
   \   00000022   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x4002C000         DC32     0x4002c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x4002C040         DC32     0x4002c040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x4002C068         DC32     0x4002c068

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x4002C028         DC32     0x4002c028

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x4002C07C         DC32     0x4002c07c
    308          
    309          
    310          /**
    311           * @}
    312           */
    313          
    314          /**
    315           * @}
    316           */
    317          
    318          /* --------------------------------- End Of File ------------------------------ */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   PINSEL_ConfigPin
         8   -> set_OpenDrainMode
         8   -> set_PinFunc
         8   -> set_ResistorMode
       0   PINSEL_ConfigTraceFunc
       0   PINSEL_SetI2C0Pins
       8   set_OpenDrainMode
      16   set_PinFunc
      16   set_ResistorMode


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
      36  PINSEL_ConfigPin
      40  PINSEL_ConfigTraceFunc
      26  PINSEL_SetI2C0Pins
      52  set_OpenDrainMode
      72  set_PinFunc
      72  set_ResistorMode

 
 318 bytes in section .text
 
 318 bytes of CODE memory

Errors: none
Warnings: none
