###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       21/Aug/2017  11:49:41
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC136B-310统计模块\Software\APP\comm\app_comm_dtu_otr_deal.c
#    Command line =  
#        F:\iar\NC136B-310统计模块\Software\APP\comm\app_comm_dtu_otr_deal.c
#        -lCN
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List
#        --diag_suppress Pa050 -o
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\csnr_package_deal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\iap\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\app_comm_dtu_otr_deal.lst
#    Object file  =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\app_comm_dtu_otr_deal.o
#
###############################################################################

F:\iar\NC136B-310统计模块\Software\APP\comm\app_comm_dtu_otr_deal.c
      1          /*******************************************************************************
      2          *   Filename:       app_comm_dtu_otr_deal.c
      3          *   Revised:        All copyrights reserved to redmorningcn.
      4          *   Revision:       v1.0
      5          *   Writer:	        redmorningcn.
      6          *
      7          *   Description:    双击选中 dtu 按 Ctrl + H, 钩选 Match the case, Replace with
      8          *                   输入您要的名字，点击 Replace All
      9          *                   双击选中 Dtu 按 Ctrl + H, 钩选 Match the case, Replace with
     10          *                   输入您要的名字，点击 Replace All
     11          *                   双击选中 DTU 按 Ctrl + H, 钩选 Match the case, Replace with
     12          *                   输入您要的名字，点击 Replace All
     13          *                   在 app_cfg.h 中指定本任务的 优先级  （ APP_TASK_COMM_PRIO     ）
     14          *                                            和 任务堆栈（ APP_TASK_COMM_STK_SIZE ）大小
     15          *
     16          *   Notes:
     17          *     				E-mail: redmorningcn@qq.com
     18          *
     19          *******************************************************************************/
     20          
     21          /*******************************************************************************
     22          * INCLUDES
     23          */
     24          #define  SNL_APP_SOURCE
     25          #include <includes.h>
     26          #include <app_comm_protocol.h>
     27          #include <app_ctrl.h>
     28          #include <app.h>
     29          #include <os_cfg_app.h>
     30          
     31          
     32          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     33          const  CPU_CHAR  *app_comm_dtu_otr__c = "$Id: $";
     34          #endif
     35          
     36          #define APP_TASK_COMM_EN     DEF_ENABLED
     37          #if APP_TASK_COMM_EN == DEF_ENABLED
     38          /*******************************************************************************
     39          * CONSTANTS
     40          */
     41          
     42          /*******************************************************************************
     43          * MACROS
     44          */
     45          #define CYCLE_TIME_TICKS            (OS_TICKS_PER_SEC * 1)
     46          
     47          /*******************************************************************************
     48          * TYPEDEFS
     49          */
     50          
     51          #define		DATA_CARD           0x0001			//数据卡-----暂时未用
     52          #define		DENSITY_CARD		0x0020			//密度卡
     53          #define		MODEL_CARD			0x0040			//模型卡-----暂时未用
     54          #define		TIME_CARD           0x0100			//时间卡-----
     55          #define		COM_MODEL_CARD	    0x0100		    //串口模型卡-暂时未用
     56          #define		HIGHT_CARD			0x0200			//高度卡-----
     57          #define		COPY_CARD           0x0400			//复制卡-----暂时未用
     58          #define		MODEL_SELECT_CARD	0x1000			//模型选择卡-
     59          #define		FIX_CARD            0x2000			//装车卡-----
     60          #define		COPY_FRAM_CARD	    0x4000			//铁电复制卡-暂时未用
     61          #define		SET_DATA_CARD		0x0080			//置数卡-----按时未用
     62          #define		DEBUG_CARD			0x0800			//调试卡-----暂时未用
     63          
     64          #define		EXPAND_CARD			0x8000			//扩展卡-----暂时未用
     65          
     66          #define		DATA_CARD_DIS		0x10000			//数据卡指示
     67          #define		DATA_CARD_FIN		0x20000			//数据卡结束
     68          #define		SYS_RUN_PARA		0x40000			//系统参数卡--暂未使用
     69          #define		CLEAR_ALL			0x80000			//清零卡，数据记录清零
     70          
     71          #define		RST_SYS				0x100000		//复位指令
     72          #define		CALC_PARA           0x200000		//计算斜率
     73          
     74          #define    OIL_BOX_MODEL_ADDR				2000    //油箱模型存储地址
     75          /*******************************************************************************
     76          * LOCAL VARIABLES
     77          */
     78          
     79          /*******************************************************************************
     80          * GLOBAL VARIABLES
     81          */
     82          
     83          /***********************************************
     84          * 描述： 软定时器声明
     85          */
     86          
     87          /***********************************************
     88          * 描述： 软定时器回调函数
     89          */
     90          
     91          
     92          /*******************************************************************************
     93          * LOCAL FUNCTIONS
     94          */
     95          uint8   comm_record_send_one(StrDevDtu * sDtu,uint8 addrnum);
     96          void    comm_record_send(StrDevDtu * sDtu,uint8 addrnum);
     97          void    comm_para_flow(StrDevDtu * sDtu,uint8 addrnum);
     98          void    Restart(void);
     99          
    100          
    101          
    102          /*******************************************************************************
    103          * GLOBAL FUNCTIONS
    104          */
    105          
    106          /*******************************************************************************
    107          * EXTERN VARIABLES
    108          */
    109          
    110          /*******************************************************************************
    111          * EXTERN FUNCTIONS
    112          */
    113          uint8   FRAM_StoreRecNumMgr(StrRecNumMgr  *SRecNumMgr);
    114          uint8   FRAM_StoreOilPara(StrOilPara  *SOilPara);
    115          void    BSP_DispClrAll(void);
    116          uint8   FRAM_StoreProductInfo(StrProductInfo  *sProductInfo);
    117          uint8   ReadFM24CL64(uint16  Addr, uint8 *DataBuf, uint32 DataBufLen);            
    118          uint8   WriteFM24CL64(uint16  Addr, uint8 *DataBuf, uint32 DataBufLen);            
    119          void    GetOilPara(void);
    120          void    SetDispNow(void);
    121          uint8   comm_tinyrec_send(StrDevOtr * sOtr,uint8    addrnum);
    122          
    123          /*******************************************************************************/
    124          
    125          extern  stcSysCtrl  sCtrl;
    126          
    127          /*******************************************************************************
    128          * 名    称： comm_para_flow
    129          * 功    能： 参数流。根据具体参数进行操作
    130          *            
    131          * 入口参数： 无线设备数据结构
    132          * 出口参数： 无
    133          * 作　 　者： redmorningcn.
    134          * 创建日期： 2017-05-19
    135          * 修    改：
    136          * 修改日期：
    137          * 备    注： 任务创建函数需要在app.h文件中声明
    138          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    139          void    comm_para_flow(StrDevDtu * sDtu,uint8 addrnum)
    140          {
   \                     comm_para_flow: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0xB086             SUB      SP,SP,#+24
   \   00000006   0x0004             MOVS     R4,R0
   \   00000008   0x000D             MOVS     R5,R1
    141              stcTime     sTime;
    142              uint8       i = 0;
   \   0000000A   0x2600             MOVS     R6,#+0
    143              uint32      modelrecvnum =0;
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x9001             STR      R0,[SP, #+4]
    144              uint32      tmp32;
    145              static     uint32      modelstoreaddr = 0;
    146              
    147              BSP_DispClrAll();                               //清原显示值，立即显示设定值                 
   \   00000010   0x.... 0x....      BL       BSP_DispClrAll
    148              
    149              switch (sDtu->RxCtrl.DataCode)  
   \   00000014   0xF8D4 0x0148      LDR      R0,[R4, #+328]
   \   00000018   0x2801             CMP      R0,#+1
   \   0000001A   0xF000 0x8162      BEQ.W    ??comm_para_flow_0
   \   0000001E   0x2820             CMP      R0,#+32
   \   00000020   0xD024             BEQ.N    ??comm_para_flow_1
   \   00000022   0x2840             CMP      R0,#+64
   \   00000024   0xF000 0x810A      BEQ.W    ??comm_para_flow_2
   \   00000028   0xF5B0 0x7F80      CMP      R0,#+256
   \   0000002C   0xD02F             BEQ.N    ??comm_para_flow_3
   \   0000002E   0xF5B0 0x7F00      CMP      R0,#+512
   \   00000032   0xD04F             BEQ.N    ??comm_para_flow_4
   \   00000034   0xF5B0 0x5F80      CMP      R0,#+4096
   \   00000038   0xD07C             BEQ.N    ??comm_para_flow_5
   \   0000003A   0xF5B0 0x5F00      CMP      R0,#+8192
   \   0000003E   0xF000 0x808A      BEQ.W    ??comm_para_flow_6
   \   00000042   0xF5B0 0x3F80      CMP      R0,#+65536
   \   00000046   0xF000 0x809D      BEQ.W    ??comm_para_flow_7
   \   0000004A   0xF5B0 0x3F00      CMP      R0,#+131072
   \   0000004E   0xF000 0x80A6      BEQ.W    ??comm_para_flow_8
   \   00000052   0xF5B0 0x2F00      CMP      R0,#+524288
   \   00000056   0xF000 0x80B2      BEQ.W    ??comm_para_flow_9
   \   0000005A   0xF5B0 0x1F80      CMP      R0,#+1048576
   \   0000005E   0xF000 0x80C2      BEQ.W    ??comm_para_flow_10
   \   00000062   0xF5B0 0x1F00      CMP      R0,#+2097152
   \   00000066   0xF000 0x80C1      BEQ.W    ??comm_para_flow_11
   \   0000006A   0xE180             B.N      ??comm_para_flow_12
    150              {
    151                  //设置密度
    152              case    DENSITY_CARD: 
    153                  sCtrl.SOilPara.Density = sDtu->Rd.Density;          
   \                     ??comm_para_flow_1: (+1)
   \   0000006C   0x8820             LDRH     R0,[R4, #+0]
   \   0000006E   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   00000072   0xF8A1 0x00A4      STRH     R0,[R1, #+164]
    154                  
    155                  FRAM_StoreOilPara((StrOilPara *)&sCtrl.SOilPara);   //存数据。关键数据存储时保护
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   0000007A   0x.... 0x....      BL       FRAM_StoreOilPara
    156                  
    157                  uprintf("%8d",sCtrl.SOilPara.Density);   //立即显示设定值 
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   00000082   0xF9B0 0x10A4      LDRSH    R1,[R0, #+164]
   \   00000086   0x....             ADR.N    R0,??DataTable0  ;; "%8d"
   \   00000088   0x.... 0x....      BL       uprintf
    158                  
    159                  break;
   \   0000008C   0xE16F             B.N      ??comm_para_flow_12
    160                  
    161                  //设置时间
    162              case    TIME_CARD:                
    163                  
    164                  WriteTime(sDtu->Rd.sTime);          
   \                     ??comm_para_flow_3: (+1)
   \   0000008E   0x2000             MOVS     R0,#+0
   \                     ??comm_para_flow_13: (+1)
   \   00000090   0x5D01             LDRB     R1,[R0, R4]
   \   00000092   0xAA04             ADD      R2,SP,#+16
   \   00000094   0x5481             STRB     R1,[R0, R2]
   \   00000096   0x1C40             ADDS     R0,R0,#+1
   \   00000098   0x2808             CMP      R0,#+8
   \   0000009A   0xD3F9             BCC.N    ??comm_para_flow_13
   \   0000009C   0xE9DD 0x0104      LDRD     R0,R1,[SP, #+16]
   \   000000A0   0x.... 0x....      BL       WriteTime
    165                  ReadTime((stcTime *)&sTime);
   \   000000A4   0xA802             ADD      R0,SP,#+8
   \   000000A6   0x.... 0x....      BL       ReadTime
    166                  
    167                  uprintf("%02d-%02d-%02d",sTime.Year
    168                          ,sTime.Month
    169                              ,sTime.Date
    170                                  );     
   \   000000AA   0xF89D 0x300B      LDRB     R3,[SP, #+11]
   \   000000AE   0xF89D 0x200C      LDRB     R2,[SP, #+12]
   \   000000B2   0xF89D 0x100D      LDRB     R1,[SP, #+13]
   \   000000B6   0x.... 0x....      LDR.W    R0,??DataTable2_5
   \   000000BA   0x.... 0x....      BL       uprintf
    171                  uprintf("%02d-%02d-%02d",sTime.Hour
    172                          ,sTime.Min
    173                              ,sTime.Sec
    174                                  );               
   \   000000BE   0xF89D 0x3008      LDRB     R3,[SP, #+8]
   \   000000C2   0xF89D 0x2009      LDRB     R2,[SP, #+9]
   \   000000C6   0xF89D 0x100A      LDRB     R1,[SP, #+10]
   \   000000CA   0x.... 0x....      LDR.W    R0,??DataTable2_5
   \   000000CE   0x.... 0x....      BL       uprintf
    175                  break;
   \   000000D2   0xE14C             B.N      ??comm_para_flow_12
    176                  
    177                  //高度卡
    178              case    HIGHT_CARD:  
    179                  //高度值可以累计
    180                  sCtrl.SOilPara.Hig += sDtu->Rd.Hig;
   \                     ??comm_para_flow_4: (+1)
   \   000000D4   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   000000D8   0xF8B0 0x00A2      LDRH     R0,[R0, #+162]
   \   000000DC   0x8821             LDRH     R1,[R4, #+0]
   \   000000DE   0x1808             ADDS     R0,R1,R0
   \   000000E0   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   000000E4   0xF8A1 0x00A2      STRH     R0,[R1, #+162]
    181                  if(sCtrl.SOilPara.Hig  > 500)
   \   000000E8   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   000000EC   0xF9B0 0x00A2      LDRSH    R0,[R0, #+162]
   \   000000F0   0xF5B0 0x7FFA      CMP      R0,#+500
   \   000000F4   0xDD05             BLE.N    ??comm_para_flow_14
    182                      sCtrl.SOilPara.Hig = 500;
   \   000000F6   0xF44F 0x70FA      MOV      R0,#+500
   \   000000FA   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   000000FE   0xF8A1 0x00A2      STRH     R0,[R1, #+162]
    183                  
    184                  if(sCtrl.SOilPara.Hig  < -500)
   \                     ??comm_para_flow_14: (+1)
   \   00000102   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   00000106   0xF9B0 0x00A2      LDRSH    R0,[R0, #+162]
   \   0000010A   0xF510 0x7FFA      CMN      R0,#+500
   \   0000010E   0xDA05             BGE.N    ??comm_para_flow_15
    185                      sCtrl.SOilPara.Hig = -500;
   \   00000110   0x.... 0x....      LDR.W    R0,??DataTable2_6  ;; 0xfffffe0c
   \   00000114   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   00000118   0xF8A1 0x00A2      STRH     R0,[R1, #+162]
    186                  
    187                  FRAM_StoreOilPara((StrOilPara *)&sCtrl.SOilPara);   //存数据。关键数据存储时保护
   \                     ??comm_para_flow_15: (+1)
   \   0000011C   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   00000120   0x.... 0x....      BL       FRAM_StoreOilPara
    188                  
    189                  uprintf("%8d",sCtrl.SOilPara.Hig);     
   \   00000124   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   00000128   0xF9B0 0x10A2      LDRSH    R1,[R0, #+162]
   \   0000012C   0x....             ADR.N    R0,??DataTable0  ;; "%8d"
   \   0000012E   0x.... 0x....      BL       uprintf
    190                  
    191                  break;
   \   00000132   0xE11C             B.N      ??comm_para_flow_12
    192                  
    193                  //模型选择卡
    194              case    MODEL_SELECT_CARD:   
    195                  sCtrl.SOilPara.ModelNum = sDtu->Rd.ModelNum;//选择的模型编号
   \                     ??comm_para_flow_5: (+1)
   \   00000134   0x7820             LDRB     R0,[R4, #+0]
   \   00000136   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   0000013A   0xF881 0x00A0      STRB     R0,[R1, #+160]
    196                  
    197                  FRAM_StoreOilPara((StrOilPara *)&sCtrl.SOilPara);   //存数据。关键数据存储时保护
   \   0000013E   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   00000142   0x.... 0x....      BL       FRAM_StoreOilPara
    198                  
    199                  uprintf("%8d",sCtrl.SOilPara.ModelNum);      //立即显示设定值 
   \   00000146   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   0000014A   0xF890 0x10A0      LDRB     R1,[R0, #+160]
   \   0000014E   0x....             ADR.N    R0,??DataTable0  ;; "%8d"
   \   00000150   0x.... 0x....      BL       uprintf
    200                  break;
   \   00000154   0xE10B             B.N      ??comm_para_flow_12
    201                  
    202                  //车型车号
    203              case    FIX_CARD: 
    204                  sCtrl.sProductInfo.sLocoId.Num = sDtu->Rd.sLocoId.Num;
   \                     ??comm_para_flow_6: (+1)
   \   00000156   0x8860             LDRH     R0,[R4, #+2]
   \   00000158   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   0000015C   0x83C8             STRH     R0,[R1, #+30]
    205                  sCtrl.sProductInfo.sLocoId.Type = sDtu->Rd.sLocoId.Type;
   \   0000015E   0x8820             LDRH     R0,[R4, #+0]
   \   00000160   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   00000164   0x8388             STRH     R0,[R1, #+28]
    206                  
    207                  FRAM_StoreProductInfo((StrProductInfo *)&sCtrl.sProductInfo);
   \   00000166   0x.... 0x....      LDR.W    R0,??DataTable2_7
   \   0000016A   0x.... 0x....      BL       FRAM_StoreProductInfo
    208                  
    209                  uprintf("%4d%4d"   ,sCtrl.sProductInfo.sLocoId.Type
    210                          ,sCtrl.sProductInfo.sLocoId.Num
    211                              );      
   \   0000016E   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   00000172   0x8BC2             LDRH     R2,[R0, #+30]
   \   00000174   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   00000178   0x8B81             LDRH     R1,[R0, #+28]
   \   0000017A   0x.... 0x....      LDR.W    R0,??DataTable2_8
   \   0000017E   0x.... 0x....      BL       uprintf
    212                  break;
   \   00000182   0xE0F4             B.N      ??comm_para_flow_12
    213                  
    214                  //读数据指示
    215              case    DATA_CARD_DIS: 
    216                  i=0;
   \                     ??comm_para_flow_7: (+1)
   \   00000184   0x2000             MOVS     R0,#+0
   \   00000186   0x0006             MOVS     R6,R0
    217                  while(i < 4)
   \                     ??comm_para_flow_16: (+1)
   \   00000188   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000018A   0x2E04             CMP      R6,#+4
   \   0000018C   0xDA06             BGE.N    ??comm_para_flow_17
    218                  {
    219                      uprintf("%8d",i); 
   \   0000018E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000190   0x0031             MOVS     R1,R6
   \   00000192   0x....             ADR.N    R0,??DataTable0  ;; "%8d"
   \   00000194   0x.... 0x....      BL       uprintf
    220                      i++;
   \   00000198   0x1C76             ADDS     R6,R6,#+1
   \   0000019A   0xE7F5             B.N      ??comm_para_flow_16
    221                  }
    222                  break;
   \                     ??comm_para_flow_17: (+1)
   \   0000019C   0xE0E7             B.N      ??comm_para_flow_12
    223                  
    224                  //读数据指示结束
    225              case    DATA_CARD_FIN: 
    226                  i=0;
   \                     ??comm_para_flow_8: (+1)
   \   0000019E   0x2000             MOVS     R0,#+0
   \   000001A0   0x0006             MOVS     R6,R0
    227                  while(i < 4)
   \                     ??comm_para_flow_18: (+1)
   \   000001A2   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000001A4   0x2E04             CMP      R6,#+4
   \   000001A6   0xDA09             BGE.N    ??comm_para_flow_19
    228                  {
    229                      uprintf("    good");  
   \   000001A8   0x.... 0x....      LDR.W    R0,??DataTable2_9
   \   000001AC   0x.... 0x....      BL       uprintf
    230                      uprintf("         ");  
   \   000001B0   0x.... 0x....      LDR.W    R0,??DataTable2_10
   \   000001B4   0x.... 0x....      BL       uprintf
    231                      i++;
   \   000001B8   0x1C76             ADDS     R6,R6,#+1
   \   000001BA   0xE7F2             B.N      ??comm_para_flow_18
    232                  }
    233                  break;
   \                     ??comm_para_flow_19: (+1)
   \   000001BC   0xE0D7             B.N      ??comm_para_flow_12
    234                  
    235                  //数据清零
    236              case    CLEAR_ALL: 
    237                  sCtrl.sRecNumMgr.Current = 0;
   \                     ??comm_para_flow_9: (+1)
   \   000001BE   0x2000             MOVS     R0,#+0
   \   000001C0   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   000001C4   0x6048             STR      R0,[R1, #+4]
    238                  sCtrl.sRecNumMgr.GrsRead = 0;
   \   000001C6   0x2000             MOVS     R0,#+0
   \   000001C8   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   000001CC   0x60C8             STR      R0,[R1, #+12]
    239                  sCtrl.sRecNumMgr.IcRead  = 0;
   \   000001CE   0x2000             MOVS     R0,#+0
   \   000001D0   0x....             LDR.N    R1,??DataTable2_3
   \   000001D2   0x6088             STR      R0,[R1, #+8]
    240                  
    241                  FRAM_StoreRecNumMgr((StrRecNumMgr *)&sCtrl.sRecNumMgr);
   \   000001D4   0x.... 0x....      LDR.W    R0,??DataTable2_11
   \   000001D8   0x.... 0x....      BL       FRAM_StoreRecNumMgr
    242                  
    243                  uprintf("    CALL");  
   \   000001DC   0x.... 0x....      LDR.W    R0,??DataTable2_12
   \   000001E0   0x.... 0x....      BL       uprintf
    244                  
    245                  break;
   \   000001E4   0xE0C3             B.N      ??comm_para_flow_12
    246                  
    247                  //装置复位
    248              case    RST_SYS: 
    249                  Restart();                      //重启系统
   \                     ??comm_para_flow_10: (+1)
   \   000001E6   0x.... 0x....      BL       Restart
    250                  break;
   \   000001EA   0xE0C0             B.N      ??comm_para_flow_12
    251                  
    252                  //设置斜率
    253              case    CALC_PARA: 
    254                  //斜率具有镭计的效果
    255                  sCtrl.SOilPara.Slope = (sCtrl.SOilPara.Slope  * sDtu->Rd.Slope)/10000;
   \                     ??comm_para_flow_11: (+1)
   \   000001EC   0x....             LDR.N    R0,??DataTable2_3
   \   000001EE   0xF8D0 0x00A8      LDR      R0,[R0, #+168]
   \   000001F2   0x6821             LDR      R1,[R4, #+0]
   \   000001F4   0x4348             MULS     R0,R1,R0
   \   000001F6   0xF242 0x7110      MOVW     R1,#+10000
   \   000001FA   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   000001FE   0x....             LDR.N    R1,??DataTable2_3
   \   00000200   0xF8C1 0x00A8      STR      R0,[R1, #+168]
    256                  
    257                  //0.1~2
    258                  if(sCtrl.SOilPara.Slope >20000 || sCtrl.SOilPara.Slope < 1000)
   \   00000204   0x....             LDR.N    R0,??DataTable2_3
   \   00000206   0xF8D0 0x00A8      LDR      R0,[R0, #+168]
   \   0000020A   0xF644 0x6121      MOVW     R1,#+20001
   \   0000020E   0x4288             CMP      R0,R1
   \   00000210   0xD205             BCS.N    ??comm_para_flow_20
   \   00000212   0x....             LDR.N    R0,??DataTable2_3
   \   00000214   0xF8D0 0x00A8      LDR      R0,[R0, #+168]
   \   00000218   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   0000021C   0xD204             BCS.N    ??comm_para_flow_21
    259                      sCtrl.SOilPara.Slope = 10000;
   \                     ??comm_para_flow_20: (+1)
   \   0000021E   0xF242 0x7010      MOVW     R0,#+10000
   \   00000222   0x....             LDR.N    R1,??DataTable2_3
   \   00000224   0xF8C1 0x00A8      STR      R0,[R1, #+168]
    260                  
    261                  FRAM_StoreOilPara((StrOilPara *)&sCtrl.SOilPara);   //存数据。关键数据存储时保护
   \                     ??comm_para_flow_21: (+1)
   \   00000228   0x....             LDR.N    R0,??DataTable2_4
   \   0000022A   0x.... 0x....      BL       FRAM_StoreOilPara
    262                  
    263                  uprintf("%d",sCtrl.SOilPara.Slope);         //立即显示设定值 
   \   0000022E   0x....             LDR.N    R0,??DataTable2_3
   \   00000230   0xF8D0 0x10A8      LDR      R1,[R0, #+168]
   \   00000234   0x....             ADR.N    R0,??DataTable2  ;; 0x25, 0x64, 0x00, 0x00
   \   00000236   0x.... 0x....      BL       uprintf
    264                  break;
   \   0000023A   0xE098             B.N      ??comm_para_flow_12
    265                  
    266                  /***********************************************
    267                  * 描述： 设置油箱模型。
    268                  *   IC 卡模块插入IC卡后，IC卡主动应答模型。  
    269                  *   后续每200ms发送数据，序号从0开始累加。
    270                  数据发送完成后，序号为0xffffffff。
    271                  */    
    272                  
    273              case    MODEL_CARD: 
    274                  //模型数据接收序号
    275                  memcpy((uint8  *)&modelrecvnum,(uint8 *)&sDtu->Rd.Buf[0],sizeof(modelrecvnum));
   \                     ??comm_para_flow_2: (+1)
   \   0000023C   0x2704             MOVS     R7,#+4
   \   0000023E   0xF10D 0x0804      ADD      R8,SP,#+4
   \   00000242   0x003A             MOVS     R2,R7
   \   00000244   0x0021             MOVS     R1,R4
   \   00000246   0x4640             MOV      R0,R8
   \   00000248   0x.... 0x....      BL       __aeabi_memcpy
    276                  
    277                  if( modelrecvnum == 0 )                 //开始    
   \   0000024C   0x9801             LDR      R0,[SP, #+4]
   \   0000024E   0x2800             CMP      R0,#+0
   \   00000250   0xD102             BNE.N    ??comm_para_flow_22
    278                      modelstoreaddr = 0;
   \   00000252   0x2000             MOVS     R0,#+0
   \   00000254   0x....             LDR.N    R1,??DataTable2_13
   \   00000256   0x6008             STR      R0,[R1, #+0]
    279                  
    280                  if(sDtu->RxCtrl.Len < sizeof(modelrecvnum))
   \                     ??comm_para_flow_22: (+1)
   \   00000258   0xF894 0x0143      LDRB     R0,[R4, #+323]
   \   0000025C   0x2804             CMP      R0,#+4
   \   0000025E   0xF0C0 0x8086      BCC.W    ??comm_para_flow_12
    281                      break;
    282                  //保存接收到的数据
    283                  WriteFM24CL64(   OIL_BOX_MODEL_ADDR+modelstoreaddr,
    284                                (uint8 *)&sDtu->Rd.Buf[sizeof(modelrecvnum)], 
    285                                sDtu->RxCtrl.Len - sizeof(modelrecvnum));
   \                     ??comm_para_flow_23: (+1)
   \   00000262   0xF894 0x0143      LDRB     R0,[R4, #+323]
   \   00000266   0x1F02             SUBS     R2,R0,#+4
   \   00000268   0x1D21             ADDS     R1,R4,#+4
   \   0000026A   0x....             LDR.N    R0,??DataTable2_13
   \   0000026C   0x6800             LDR      R0,[R0, #+0]
   \   0000026E   0xF510 0x60FA      ADDS     R0,R0,#+2000
   \   00000272   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000274   0x.... 0x....      BL       WriteFM24CL64
    286                  //存地址累加
    287                  modelstoreaddr += (sDtu->RxCtrl.Len - sizeof(modelrecvnum));
   \   00000278   0x....             LDR.N    R0,??DataTable2_13
   \   0000027A   0x6800             LDR      R0,[R0, #+0]
   \   0000027C   0xF894 0x1143      LDRB     R1,[R4, #+323]
   \   00000280   0x1F09             SUBS     R1,R1,#+4
   \   00000282   0x1808             ADDS     R0,R1,R0
   \   00000284   0x....             LDR.N    R1,??DataTable2_13
   \   00000286   0x6008             STR      R0,[R1, #+0]
    288                  
    289                  //指示操作
    290                  //uprintf("   ...");
    291                  if(modelrecvnum == 0xffffffff)  //结束，指示
   \   00000288   0x9801             LDR      R0,[SP, #+4]
   \   0000028A   0xF110 0x0F01      CMN      R0,#+1
   \   0000028E   0xD10B             BNE.N    ??comm_para_flow_24
    292                  {
    293                      uprintf("");
   \   00000290   0x....             ADR.N    R0,??DataTable2_1  ;; ""
   \   00000292   0x.... 0x....      BL       uprintf
    294                      uprintf("boX");	
   \   00000296   0x....             ADR.N    R0,??DataTable2_2  ;; "boX"
   \   00000298   0x.... 0x....      BL       uprintf
    295                      uprintf("boX");		
   \   0000029C   0x....             ADR.N    R0,??DataTable2_2  ;; "boX"
   \   0000029E   0x.... 0x....      BL       uprintf
    296                      GetOilPara();
   \   000002A2   0x.... 0x....      BL       GetOilPara
   \   000002A6   0xE003             B.N      ??comm_para_flow_25
    297                  }else
    298                  {
    299                      uprintf("o..%2d",modelrecvnum);
   \                     ??comm_para_flow_24: (+1)
   \   000002A8   0x9901             LDR      R1,[SP, #+4]
   \   000002AA   0x....             LDR.N    R0,??DataTable2_14
   \   000002AC   0x.... 0x....      BL       uprintf
    300                  }
    301                  
    302                  SetDispNow(); //马上显示
   \                     ??comm_para_flow_25: (+1)
   \   000002B0   0x.... 0x....      BL       SetDispNow
    303                  
    304                  
    305                  if(sDtu->pch->PortNbr == 2)
   \   000002B4   0xF8D4 0x015C      LDR      R0,[R4, #+348]
   \   000002B8   0x7A40             LDRB     R0,[R0, #+9]
   \   000002BA   0x2802             CMP      R0,#+2
   \   000002BC   0xD105             BNE.N    ??comm_para_flow_26
    306                  {
    307                      osal_start_timerRl( OS_TASK_ID_TMR, 
    308                                         OS_EVT_TMR_OTR, 
    309                                         OS_TICKS_PER_SEC*10 );          //统计装置和无线发送模块定时器  10s
   \   000002BE   0xF242 0x7210      MOVW     R2,#+10000
   \   000002C2   0x2180             MOVS     R1,#+128
   \   000002C4   0x2001             MOVS     R0,#+1
   \   000002C6   0x.... 0x....      BL       osal_start_timerRl
    310                  }
    311                  
    312                  if(sDtu->pch->PortNbr == 3)
   \                     ??comm_para_flow_26: (+1)
   \   000002CA   0xF8D4 0x015C      LDR      R0,[R4, #+348]
   \   000002CE   0x7A40             LDRB     R0,[R0, #+9]
   \   000002D0   0x2803             CMP      R0,#+3
   \   000002D2   0xD105             BNE.N    ??comm_para_flow_27
    313                  {
    314                      osal_start_timerRl( OS_TASK_ID_TMR, 
    315                                         OS_EVT_TMR_DTU, 
    316                                         OS_TICKS_PER_SEC*10 );          //统计装置和无线发送模块定时器  10s
   \   000002D4   0xF242 0x7210      MOVW     R2,#+10000
   \   000002D8   0x2140             MOVS     R1,#+64
   \   000002DA   0x2001             MOVS     R0,#+1
   \   000002DC   0x.... 0x....      BL       osal_start_timerRl
    317                  }
    318                  break;
   \                     ??comm_para_flow_27: (+1)
   \   000002E0   0xE045             B.N      ??comm_para_flow_12
    319                  
    320                  //数据
    321              case    DATA_CARD: 
    322                  
    323                  memcpy((uint8 *)&tmp32,sDtu->Rd.Buf,sizeof(tmp32));     //请求流水号
   \                     ??comm_para_flow_0: (+1)
   \   000002E2   0x2704             MOVS     R7,#+4
   \   000002E4   0x46E8             MOV      R8,SP
   \   000002E6   0x003A             MOVS     R2,R7
   \   000002E8   0x0021             MOVS     R1,R4
   \   000002EA   0x4640             MOV      R0,R8
   \   000002EC   0x.... 0x....      BL       __aeabi_memcpy
    324                  if(sDtu->RxCtrl.SourceAddr == SLAVE_ADDR_DTU)           //无线通道请求的
   \   000002F0   0xF894 0x0141      LDRB     R0,[R4, #+321]
   \   000002F4   0x28CA             CMP      R0,#+202
   \   000002F6   0xD115             BNE.N    ??comm_para_flow_28
    325                  {
    326                      if(sCtrl.sRecNumMgr.GrsRead  > tmp32){
   \   000002F8   0x9800             LDR      R0,[SP, #+0]
   \   000002FA   0x....             LDR.N    R1,??DataTable2_3
   \   000002FC   0x68C9             LDR      R1,[R1, #+12]
   \   000002FE   0x4288             CMP      R0,R1
   \   00000300   0xD202             BCS.N    ??comm_para_flow_29
    327                          sCtrl.sRecNumMgr.GrsRead = tmp32;               //指定位置取数据
   \   00000302   0x9800             LDR      R0,[SP, #+0]
   \   00000304   0x....             LDR.N    R1,??DataTable2_3
   \   00000306   0x60C8             STR      R0,[R1, #+12]
    328                      }
    329                      
    330                      comm_record_send_one(sDtu,addrnum);                 
   \                     ??comm_para_flow_29: (+1)
   \   00000308   0x0029             MOVS     R1,R5
   \   0000030A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000030C   0x0020             MOVS     R0,R4
   \   0000030E   0x.... 0x....      BL       comm_record_send_one
    331                      
    332                      FRAM_StoreRecNumMgr((StrRecNumMgr *)&sCtrl.sRecNumMgr);         //保存记录号
   \   00000312   0x....             LDR.N    R0,??DataTable2_11
   \   00000314   0x.... 0x....      BL       FRAM_StoreRecNumMgr
    333                      
    334                      sCtrl.sRecNumMgr.GrsRead++;
   \   00000318   0x....             LDR.N    R0,??DataTable2_3
   \   0000031A   0x68C0             LDR      R0,[R0, #+12]
   \   0000031C   0x1C40             ADDS     R0,R0,#+1
   \   0000031E   0x....             LDR.N    R1,??DataTable2_3
   \   00000320   0x60C8             STR      R0,[R1, #+12]
   \   00000322   0xE024             B.N      ??comm_para_flow_30
    335                      
    336                  }else if(sDtu->RxCtrl.SourceAddr == SLAVE_ADDR_OTR)     //IC卡
   \                     ??comm_para_flow_28: (+1)
   \   00000324   0xF894 0x0141      LDRB     R0,[R4, #+321]
   \   00000328   0x28C1             CMP      R0,#+193
   \   0000032A   0xD120             BNE.N    ??comm_para_flow_30
    337                  {
    338                      if(sCtrl.sRecNumMgr.IcRead  > tmp32){
   \   0000032C   0x9800             LDR      R0,[SP, #+0]
   \   0000032E   0x....             LDR.N    R1,??DataTable2_3
   \   00000330   0x6889             LDR      R1,[R1, #+8]
   \   00000332   0x4288             CMP      R0,R1
   \   00000334   0xD202             BCS.N    ??comm_para_flow_31
    339                          sCtrl.sRecNumMgr.IcRead = tmp32;                //指定位置取数据
   \   00000336   0x9800             LDR      R0,[SP, #+0]
   \   00000338   0x....             LDR.N    R1,??DataTable2_3
   \   0000033A   0x6088             STR      R0,[R1, #+8]
    340                      }
    341                      
    342                      comm_record_send_one(sDtu,addrnum);                 //指定位置取数据   
   \                     ??comm_para_flow_31: (+1)
   \   0000033C   0x0029             MOVS     R1,R5
   \   0000033E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000340   0x0020             MOVS     R0,R4
   \   00000342   0x.... 0x....      BL       comm_record_send_one
    343                      
    344                      FRAM_StoreRecNumMgr((StrRecNumMgr *)&sCtrl.sRecNumMgr); //保存记录号
   \   00000346   0x....             LDR.N    R0,??DataTable2_11
   \   00000348   0x.... 0x....      BL       FRAM_StoreRecNumMgr
    345                      
    346                      sCtrl.sRecNumMgr.IcRead++;           
   \   0000034C   0x....             LDR.N    R0,??DataTable2_3
   \   0000034E   0x6880             LDR      R0,[R0, #+8]
   \   00000350   0x1C40             ADDS     R0,R0,#+1
   \   00000352   0x....             LDR.N    R1,??DataTable2_3
   \   00000354   0x6088             STR      R0,[R1, #+8]
    347                      
    348                      //快速启动定时器
    349                      if(sCtrl.sRecNumMgr.IcRead < sCtrl.sRecNumMgr.Current ){
   \   00000356   0x....             LDR.N    R0,??DataTable2_3
   \   00000358   0x6880             LDR      R0,[R0, #+8]
   \   0000035A   0x....             LDR.N    R1,??DataTable2_3
   \   0000035C   0x6849             LDR      R1,[R1, #+4]
   \   0000035E   0x4288             CMP      R0,R1
   \   00000360   0xD205             BCS.N    ??comm_para_flow_30
    350                          osal_start_timerRl( OS_TASK_ID_TMR, 
    351                                             OS_EVT_TMR_OTR, 
    352                                             OS_TICKS_PER_SEC/2 );          //统计装置和无线发送模块定时器  10s
   \   00000362   0xF44F 0x72FA      MOV      R2,#+500
   \   00000366   0x2180             MOVS     R1,#+128
   \   00000368   0x2001             MOVS     R0,#+1
   \   0000036A   0x.... 0x....      BL       osal_start_timerRl
    353                      }
    354                      
    355                  }
    356              }
    357          }
   \                     ??comm_para_flow_30: (+1)
   \                     ??comm_para_flow_12: (+1)
   \   0000036E   0xB006             ADD      SP,SP,#+24
   \   00000370   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return

   \                                 In section .bss, align 4
   \                     ??modelstoreaddr:
   \   00000000                      DS8 4
    358          
    359          /*******************************************************************************
    360          * 名    称： comm_record_send_one
    361          * 功    能： 发送one条数据记录
    362          * 入口参数： 无线设备数据结构
    363          * 出口参数： 无
    364          * 作　 　者： redmorningcn.
    365          * 创建日期： 2017-05-19
    366          * 修    改：
    367          * 修改日期：
    368          * 备    注： 任务创建函数需要在app.h文件中声明
    369          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    370          uint8    comm_record_send_one(StrDevDtu * sDtu,uint8    addrnum)
    371          {
   \                     comm_record_send_one: (+1)
   \   00000000   0xB53E             PUSH     {R1-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    372              
    373              //记录号为0，还未发送数据。不做通讯状态判断
    374              if( sCtrl.sRecNumMgr.Current == 0 )                                   
   \   00000006   0x....             LDR.N    R0,??DataTable2_3
   \   00000008   0x6840             LDR      R0,[R0, #+4]
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD101             BNE.N    ??comm_record_send_one_0
    375              {
    376                  return 0;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0xE084             B.N      ??comm_record_send_one_1
    377              }
    378              /***********************************************
    379              * 描述： 记录号合理性判断。已发数据<当前数据 发送数据
    380              * 
    381              */ 
    382              if(sDtu->ConnCtrl[addrnum].SlaveAddr == SLAVE_ADDR_DTU)
   \                     ??comm_record_send_one_0: (+1)
   \   00000012   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000014   0xEB14 0x00C5      ADDS     R0,R4,R5, LSL #+3
   \   00000018   0xF890 0x0150      LDRB     R0,[R0, #+336]
   \   0000001C   0x28CA             CMP      R0,#+202
   \   0000001E   0xD12D             BNE.N    ??comm_record_send_one_2
    383              {
    384                  if(sCtrl.sRecNumMgr.Current <= sCtrl.sRecNumMgr.GrsRead )           //已发送记录号比当前记录号大，进行异常处理
   \   00000020   0x....             LDR.N    R0,??DataTable2_3
   \   00000022   0x68C0             LDR      R0,[R0, #+12]
   \   00000024   0x....             LDR.N    R1,??DataTable2_3
   \   00000026   0x6849             LDR      R1,[R1, #+4]
   \   00000028   0x4288             CMP      R0,R1
   \   0000002A   0xD30E             BCC.N    ??comm_record_send_one_3
    385                  {
    386                      sCtrl.sRecNumMgr.GrsRead = 0;
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x....             LDR.N    R1,??DataTable2_3
   \   00000030   0x60C8             STR      R0,[R1, #+12]
    387                      if(sCtrl.sRecNumMgr.Current)
   \   00000032   0x....             LDR.N    R0,??DataTable2_3
   \   00000034   0x6840             LDR      R0,[R0, #+4]
   \   00000036   0x2800             CMP      R0,#+0
   \   00000038   0xD004             BEQ.N    ??comm_record_send_one_4
    388                          sCtrl.sRecNumMgr.GrsRead = sCtrl.sRecNumMgr.Current - 1;    //最后有效记录赋值     
   \   0000003A   0x....             LDR.N    R0,??DataTable2_3
   \   0000003C   0x6840             LDR      R0,[R0, #+4]
   \   0000003E   0x1E40             SUBS     R0,R0,#+1
   \   00000040   0x....             LDR.N    R1,??DataTable2_3
   \   00000042   0x60C8             STR      R0,[R1, #+12]
    389                      
    390                      FRAM_StoreRecNumMgr((StrRecNumMgr *)&sCtrl.sRecNumMgr);         //保存记录号
   \                     ??comm_record_send_one_4: (+1)
   \   00000044   0x....             LDR.N    R0,??DataTable2_11
   \   00000046   0x.... 0x....      BL       FRAM_StoreRecNumMgr
    391                  }
    392                  
    393                  sCtrl.Dtu.ConnCtrl[addrnum].SendFramNum++;
   \                     ??comm_record_send_one_3: (+1)
   \   0000004A   0x....             LDR.N    R0,??DataTable2_3
   \   0000004C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000004E   0xEB10 0x00C5      ADDS     R0,R0,R5, LSL #+3
   \   00000052   0xF890 0x04FF      LDRB     R0,[R0, #+1279]
   \   00000056   0x1C40             ADDS     R0,R0,#+1
   \   00000058   0x....             LDR.N    R1,??DataTable2_3
   \   0000005A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000005C   0xEB11 0x01C5      ADDS     R1,R1,R5, LSL #+3
   \   00000060   0xF881 0x04FF      STRB     R0,[R1, #+1279]
    394                  
    395                  /***********************************************
    396                  * 描述： 数据记录准备,根据记录号取数据记录。
    397                  * 
    398                  */ 
    399                  ReadFlshRec((stcFlshRec *)&sDtu->Wr.sRec,
    400                              sCtrl.sRecNumMgr.GrsRead);
   \   00000064   0x....             LDR.N    R0,??DataTable2_3
   \   00000066   0x68C1             LDR      R1,[R0, #+12]
   \   00000068   0xF114 0x00A0      ADDS     R0,R4,#+160
   \   0000006C   0x.... 0x....      BL       ReadFlshRec
    401                  
    402                  //重新给定时器给初值。osal_start_timerRl可以自动赋值，
    403                  osal_start_timerRl( OS_TASK_ID_TMR, 
    404                                     OS_EVT_TMR_DTU, 
    405                                     OS_TICKS_PER_SEC*10 );  //统计装置和无线发送模块定时器  10s
   \   00000070   0xF242 0x7210      MOVW     R2,#+10000
   \   00000074   0x2140             MOVS     R1,#+64
   \   00000076   0x2001             MOVS     R0,#+1
   \   00000078   0x.... 0x....      BL       osal_start_timerRl
    406              }
    407              
    408              if(sDtu->ConnCtrl[addrnum].SlaveAddr == SLAVE_ADDR_OTR)
   \                     ??comm_record_send_one_2: (+1)
   \   0000007C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000007E   0xEB14 0x00C5      ADDS     R0,R4,R5, LSL #+3
   \   00000082   0xF890 0x0150      LDRB     R0,[R0, #+336]
   \   00000086   0x28C1             CMP      R0,#+193
   \   00000088   0xD12D             BNE.N    ??comm_record_send_one_5
    409              {
    410                  if(sCtrl.sRecNumMgr.Current <= sCtrl.sRecNumMgr.IcRead )           //已发送记录号比当前记录号大，进行异常处理
   \   0000008A   0x....             LDR.N    R0,??DataTable2_3
   \   0000008C   0x6880             LDR      R0,[R0, #+8]
   \   0000008E   0x....             LDR.N    R1,??DataTable2_3
   \   00000090   0x6849             LDR      R1,[R1, #+4]
   \   00000092   0x4288             CMP      R0,R1
   \   00000094   0xD31B             BCC.N    ??comm_record_send_one_6
    411                  {
    412                      sCtrl.sRecNumMgr.IcRead = 0;
   \   00000096   0x2000             MOVS     R0,#+0
   \   00000098   0x....             LDR.N    R1,??DataTable2_3
   \   0000009A   0x6088             STR      R0,[R1, #+8]
    413                      if(sCtrl.sRecNumMgr.Current)
   \   0000009C   0x....             LDR.N    R0,??DataTable2_3
   \   0000009E   0x6840             LDR      R0,[R0, #+4]
   \   000000A0   0x2800             CMP      R0,#+0
   \   000000A2   0xD004             BEQ.N    ??comm_record_send_one_7
    414                          sCtrl.sRecNumMgr.IcRead = sCtrl.sRecNumMgr.Current - 1;    //最后有效记录赋值     
   \   000000A4   0x....             LDR.N    R0,??DataTable2_3
   \   000000A6   0x6840             LDR      R0,[R0, #+4]
   \   000000A8   0x1E40             SUBS     R0,R0,#+1
   \   000000AA   0x....             LDR.N    R1,??DataTable2_3
   \   000000AC   0x6088             STR      R0,[R1, #+8]
    415                      
    416                      sCtrl.Otr.ConnCtrl[addrnum].SendFramNum++;
   \                     ??comm_record_send_one_7: (+1)
   \   000000AE   0x....             LDR.N    R0,??DataTable2_3
   \   000000B0   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000B2   0xEB10 0x00C5      ADDS     R0,R0,R5, LSL #+3
   \   000000B6   0xF890 0x0660      LDRB     R0,[R0, #+1632]
   \   000000BA   0x1C40             ADDS     R0,R0,#+1
   \   000000BC   0x....             LDR.N    R1,??DataTable2_3
   \   000000BE   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000C0   0xEB11 0x01C5      ADDS     R1,R1,R5, LSL #+3
   \   000000C4   0xF881 0x0660      STRB     R0,[R1, #+1632]
    417                      FRAM_StoreRecNumMgr((StrRecNumMgr *)&sCtrl.sRecNumMgr);         //保存记录号
   \   000000C8   0x....             LDR.N    R0,??DataTable2_11
   \   000000CA   0x.... 0x....      BL       FRAM_StoreRecNumMgr
    418                  }
    419                  
    420                  /***********************************************
    421                  * 描述： 数据记录准备,根据记录号取数据记录。
    422                  * 
    423                  */ 
    424                  ReadFlshRec((stcFlshRec *)&sDtu->Wr.sRec,
    425                              sCtrl.sRecNumMgr.IcRead);
   \                     ??comm_record_send_one_6: (+1)
   \   000000CE   0x....             LDR.N    R0,??DataTable2_3
   \   000000D0   0x6881             LDR      R1,[R0, #+8]
   \   000000D2   0xF114 0x00A0      ADDS     R0,R4,#+160
   \   000000D6   0x.... 0x....      BL       ReadFlshRec
    426                  
    427                  osal_start_timerRl( OS_TASK_ID_TMR, 
    428                                     OS_EVT_TMR_OTR, 
    429                                     OS_TICKS_PER_SEC*10 );  //统计装置和无线发送模块定时器  10s
   \   000000DA   0xF242 0x7210      MOVW     R2,#+10000
   \   000000DE   0x2180             MOVS     R1,#+128
   \   000000E0   0x2001             MOVS     R0,#+1
   \   000000E2   0x.... 0x....      BL       osal_start_timerRl
    430              }
    431              
    432              
    433              //超时值发送SLAVE_ADDR_DTU 的数据
    434              CSNC_SendData(sDtu->pch,                                    //DTU 的PCH：串口号，收发控制等底层信息
    435                            sDtu->ConnCtrl[addrnum].MasterAddr,           //源地址，
    436                            sDtu->ConnCtrl[addrnum].SlaveAddr,            //目标地址
    437                            sDtu->ConnCtrl[addrnum].SendFramNum,          //帧序号 ，，在接收中累加
    438                            0,                                            //命令字
    439                            (uint8 *)&sDtu->Wr.sRec,                      //数据区
    440                            sizeof(sDtu->Wr.sRec)                         //发送长度
    441                                );
   \                     ??comm_record_send_one_5: (+1)
   \   000000E6   0x2080             MOVS     R0,#+128
   \   000000E8   0x9002             STR      R0,[SP, #+8]
   \   000000EA   0xF114 0x00A0      ADDS     R0,R4,#+160
   \   000000EE   0x9001             STR      R0,[SP, #+4]
   \   000000F0   0x2000             MOVS     R0,#+0
   \   000000F2   0x9000             STR      R0,[SP, #+0]
   \   000000F4   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000F6   0xEB14 0x00C5      ADDS     R0,R4,R5, LSL #+3
   \   000000FA   0xF890 0x3152      LDRB     R3,[R0, #+338]
   \   000000FE   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000100   0xEB14 0x00C5      ADDS     R0,R4,R5, LSL #+3
   \   00000104   0xF890 0x2150      LDRB     R2,[R0, #+336]
   \   00000108   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000010A   0xEB14 0x00C5      ADDS     R0,R4,R5, LSL #+3
   \   0000010E   0xF890 0x1151      LDRB     R1,[R0, #+337]
   \   00000112   0xF8D4 0x015C      LDR      R0,[R4, #+348]
   \   00000116   0x.... 0x....      BL       CSNC_SendData
    442              
    443              
    444              
    445              return 1;
   \   0000011A   0x2001             MOVS     R0,#+1
   \                     ??comm_record_send_one_1: (+1)
   \   0000011C   0xBD3E             POP      {R1-R5,PC}       ;; return
    446          }
    447          
    448          
    449          /*******************************************************************************
    450          * 名    称： comm_record_send
    451          * 功    能： 通讯数据传输
    452          *            先查询已发送记录，然后发送该记录。记录号加1，帧号加1。起始记录号
    453          从1开始。  
    454          *              （通过帧号判断通讯是否结束正确）
    455          * 入口参数： 无线设备数据结构
    456          * 出口参数： 无
    457          * 作　 　者： redmorningcn.
    458          * 创建日期： 2017-05-19
    459          * 修    改：
    460          * 修改日期：
    461          * 备    注： 任务创建函数需要在app.h文件中声明
    462          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    463          void    comm_record_send(StrDevDtu * sDtu,uint8 addrnum)
    464          {
   \                     comm_record_send: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    465              /***********************************************
    466              * 描述： 发送和接收的记录号相符，发送流水号加1
    467              *       再根据数据量，发送数据。
    468              * 
    469              */                         
    470              if(sDtu->RxCtrl.FramNum == sDtu->ConnCtrl[addrnum].SendFramNum){
   \   00000006   0xF894 0x0142      LDRB     R0,[R4, #+322]
   \   0000000A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000000C   0xEB14 0x01C5      ADDS     R1,R4,R5, LSL #+3
   \   00000010   0xF891 0x1152      LDRB     R1,[R1, #+338]
   \   00000014   0x4288             CMP      R0,R1
   \   00000016   0xD12D             BNE.N    ??comm_record_send_0
    471                  sDtu->ConnCtrl[addrnum].SendFramNum++;    //数据正确，序号加1
   \   00000018   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001A   0xEB14 0x00C5      ADDS     R0,R4,R5, LSL #+3
   \   0000001E   0xF890 0x0152      LDRB     R0,[R0, #+338]
   \   00000022   0x1C40             ADDS     R0,R0,#+1
   \   00000024   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000026   0xEB14 0x01C5      ADDS     R1,R4,R5, LSL #+3
   \   0000002A   0xF881 0x0152      STRB     R0,[R1, #+338]
    472                  sCtrl.sRecNumMgr.GrsRead++;
   \   0000002E   0x....             LDR.N    R0,??DataTable2_3
   \   00000030   0x68C0             LDR      R0,[R0, #+12]
   \   00000032   0x1C40             ADDS     R0,R0,#+1
   \   00000034   0x....             LDR.N    R1,??DataTable2_3
   \   00000036   0x60C8             STR      R0,[R1, #+12]
    473                  
    474                  CPU_SR  cpu_sr;
    475                  CPU_CRITICAL_ENTER() ;
   \   00000038   0x.... 0x....      BL       CPU_SR_Save
   \   0000003C   0x0006             MOVS     R6,R0
   \   0000003E   0x.... 0x....      BL       CPU_IntDisMeasStart
    476                  FRAM_StoreRecNumMgr((StrRecNumMgr *)&sCtrl.sRecNumMgr); //保存记录号
   \   00000042   0x....             LDR.N    R0,??DataTable2_11
   \   00000044   0x.... 0x....      BL       FRAM_StoreRecNumMgr
    477                  CPU_CRITICAL_EXIT() ;
   \   00000048   0x.... 0x....      BL       CPU_IntDisMeasStop
   \   0000004C   0x0030             MOVS     R0,R6
   \   0000004E   0x.... 0x....      BL       CPU_SR_Restore
    478                  
    479                  if(sCtrl.sRecNumMgr.GrsRead < sCtrl.sRecNumMgr.Current) //数据还未发送完成。收到数据及发送。
   \   00000052   0x....             LDR.N    R0,??DataTable2_3
   \   00000054   0x68C0             LDR      R0,[R0, #+12]
   \   00000056   0x....             LDR.N    R1,??DataTable2_3
   \   00000058   0x6849             LDR      R1,[R1, #+4]
   \   0000005A   0x4288             CMP      R0,R1
   \   0000005C   0xD20A             BCS.N    ??comm_record_send_0
    480                  {
    481                      comm_record_send_one(sDtu,addrnum);                 //发送数据记录。
   \   0000005E   0x0029             MOVS     R1,R5
   \   00000060   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000062   0x0020             MOVS     R0,R4
   \   00000064   0x.... 0x....      BL       comm_record_send_one
    482                      //重新启动超时定时器
    483                      osal_start_timerRl( OS_TASK_ID_TMR, 
    484                                         OS_EVT_TMR_DTU, 
    485                                         OS_TICKS_PER_SEC*10 );          //统计装置和无线发送模块定时器  10s
   \   00000068   0xF242 0x7210      MOVW     R2,#+10000
   \   0000006C   0x2140             MOVS     R1,#+64
   \   0000006E   0x2001             MOVS     R0,#+1
   \   00000070   0x.... 0x....      BL       osal_start_timerRl
    486                  }
    487                  
    488              }
    489          }
   \                     ??comm_record_send_0: (+1)
   \   00000074   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x25 0x38          DC8      "%8d"
   \              0x64 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x25 0x64          DC8      0x25, 0x64, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x00 0x00          DC8      "",0x0,0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x62 0x6F          DC8      "boX"
   \              0x58 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     sCtrl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     sCtrl+0xA0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0xFFFFFE0C         DC32     0xfffffe0c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x........         DC32     sCtrl+0x14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_11:
   \   00000000   0x........         DC32     sCtrl+0x4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_12:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_13:
   \   00000000   0x........         DC32     ??modelstoreaddr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_14:
   \   00000000   0x........         DC32     ?_9

   \                                 In section .rodata, align 4
   \   00000000   0x25 0x38          DC8 "%8d"
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x25 0x30          DC8 "%02d-%02d-%02d"
   \              0x32 0x64    
   \              0x2D 0x25    
   \              0x30 0x32    
   \              0x64 0x2D    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x25 0x34          DC8 "%4d%4d"
   \              0x64 0x25    
   \              0x34 0x64    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x20 0x20          DC8 "    good"
   \              0x20 0x20    
   \              0x67 0x6F    
   \              0x6F 0x64    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x20 0x20          DC8 "         "
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x20 0x20          DC8 "    CALL"
   \              0x20 0x20    
   \              0x43 0x41    
   \              0x4C 0x4C    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x25 0x64          DC8 "%d"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 1
   \   00000000   0x00               DC8 ""

   \                                 In section .rodata, align 4
   \   00000000   0x62 0x6F          DC8 "boX"
   \              0x58 0x00    

   \                                 In section .rodata, align 4
   \                     ?_9:
   \   00000000   0x6F 0x2E          DC8 "o..%2d"
   \              0x2E 0x25    
   \              0x32 0x64    
   \              0x00         
   \   00000007   0x00               DC8 0
    490          
    491          
    492          /*******************************************************************************
    493          * 				end of file
    494          *******************************************************************************/
    495          #endif
    496          
    497          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      48   comm_para_flow
        48   -> BSP_DispClrAll
        48   -> FRAM_StoreOilPara
        48   -> FRAM_StoreProductInfo
        48   -> FRAM_StoreRecNumMgr
        48   -> GetOilPara
        48   -> ReadTime
        48   -> Restart
        48   -> SetDispNow
        48   -> WriteFM24CL64
        48   -> WriteTime
        48   -> __aeabi_memcpy
        48   -> comm_record_send_one
        48   -> osal_start_timerRl
        48   -> uprintf
      16   comm_record_send
        16   -> CPU_IntDisMeasStart
        16   -> CPU_IntDisMeasStop
        16   -> CPU_SR_Restore
        16   -> CPU_SR_Save
        16   -> FRAM_StoreRecNumMgr
        16   -> comm_record_send_one
        16   -> osal_start_timerRl
      24   comm_record_send_one
        24   -> CSNC_SendData
        24   -> FRAM_StoreRecNumMgr
        24   -> ReadFlshRec
        24   -> osal_start_timerRl


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_11
       4  ??DataTable2_12
       4  ??DataTable2_13
       4  ??DataTable2_14
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
       4  ?_0
      16  ?_1
       8  ?_2
      12  ?_3
      12  ?_4
      12  ?_5
       4  ?_6
       1  ?_7
       4  ?_8
       8  ?_9
     884  comm_para_flow
     118  comm_record_send
     286  comm_record_send_one
       4  modelstoreaddr

 
     4 bytes in section .bss
    81 bytes in section .rodata
 1 352 bytes in section .text
 
 1 352 bytes of CODE  memory
    81 bytes of CONST memory
     4 bytes of DATA  memory

Errors: none
Warnings: none
