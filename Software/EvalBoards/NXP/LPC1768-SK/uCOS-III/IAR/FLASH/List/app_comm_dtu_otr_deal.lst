###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       22/Sep/2017  00:13:11
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC136B-310统计模块\Software\APP\comm\app_comm_dtu_otr_deal.c
#    Command line =  
#        F:\iar\NC136B-310统计模块\Software\APP\comm\app_comm_dtu_otr_deal.c
#        -lCN
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List
#        --diag_suppress Pa050 -o
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\csnr_package_deal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\tax\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\app_comm_dtu_otr_deal.lst
#    Object file  =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\app_comm_dtu_otr_deal.o
#
###############################################################################

F:\iar\NC136B-310统计模块\Software\APP\comm\app_comm_dtu_otr_deal.c
      1          /*******************************************************************************
      2          *   Filename:       app_comm_dtu_otr_deal.c
      3          *   Revised:        All copyrights reserved to redmorningcn.
      4          *   Revision:       v1.0
      5          *   Writer:	        redmorningcn.
      6          *
      7          *   Description:    双击选中 dtu 按 Ctrl + H, 钩选 Match the case, Replace with
      8          *                   输入您要的名字，点击 Replace All
      9          *                   双击选中 Dtu 按 Ctrl + H, 钩选 Match the case, Replace with
     10          *                   输入您要的名字，点击 Replace All
     11          *                   双击选中 DTU 按 Ctrl + H, 钩选 Match the case, Replace with
     12          *                   输入您要的名字，点击 Replace All
     13          *                   在 app_cfg.h 中指定本任务的 优先级  （ APP_TASK_COMM_PRIO     ）
     14          *                                            和 任务堆栈（ APP_TASK_COMM_STK_SIZE ）大小
     15          *
     16          *   Notes:
     17          *     				E-mail: redmorningcn@qq.com
     18          *
     19          *******************************************************************************/
     20          
     21          /*******************************************************************************
     22          * INCLUDES
     23          */
     24          #define  SNL_APP_SOURCE
     25          #include <includes.h>
     26          #include <app_comm_protocol.h>
     27          #include <app_ctrl.h>
     28          #include <app.h>
     29          #include <os_cfg_app.h>
     30          #include <OperateCard.h>
     31          
     32          
     33          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     34          const  CPU_CHAR  *app_comm_dtu_otr__c = "$Id: $";
     35          #endif
     36          
     37          #define APP_TASK_COMM_EN     DEF_ENABLED
     38          #if APP_TASK_COMM_EN == DEF_ENABLED
     39          /*******************************************************************************
     40          * CONSTANTS
     41          */
     42          
     43          /*******************************************************************************
     44          * MACROS
     45          */
     46          #define CYCLE_TIME_TICKS            (OS_TICKS_PER_SEC * 1)
     47          
     48          /*******************************************************************************
     49          * TYPEDEFS
     50          */
     51          
     52          #define		DATA_CARD           0x0001			//数据卡-----暂时未用
     53          #define		DENSITY_CARD		0x0020			//密度卡
     54          #define		MODEL_CARD			0x0040			//模型卡-----暂时未用
     55          #define		TIME_CARD           0x0100			//时间卡-----
     56          #define		COM_MODEL_CARD	    0x0100		    //串口模型卡-暂时未用
     57          #define		HIGHT_CARD			0x0200			//高度卡-----
     58          #define		COPY_CARD           0x0400			//复制卡-----暂时未用
     59          #define		MODEL_SELECT_CARD	0x1000			//模型选择卡-
     60          #define		FIX_CARD            0x2000			//装车卡-----
     61          #define		COPY_FRAM_CARD	    0x4000			//铁电复制卡-暂时未用
     62          #define		SET_DATA_CARD		0x0080			//置数卡-----按时未用
     63          #define		DEBUG_CARD			0x0800			//调试卡-----暂时未用
     64          
     65          #define		EXPAND_CARD			0x8000			//扩展卡-----暂时未用
     66          
     67          #define		DATA_CARD_DIS		0x10000			//数据卡指示
     68          #define		DATA_CARD_FIN		0x20000			//数据卡结束
     69          #define		SYS_RUN_PARA		0x40000			//系统参数卡--暂未使用
     70          #define		CLEAR_ALL			0x80000			//清零卡，数据记录清零
     71          
     72          #define		RST_SYS				0x100000		//复位指令
     73          #define		CALC_PARA           0x200000		//计算斜率
     74          
     75          #define    OIL_BOX_MODEL_ADDR				2000    //油箱模型存储地址
     76          /*******************************************************************************
     77          * LOCAL VARIABLES
     78          */
     79          
     80          /*******************************************************************************
     81          * GLOBAL VARIABLES
     82          */
     83          
     84          /***********************************************
     85          * 描述： 软定时器声明
     86          */
     87          
     88          /***********************************************
     89          * 描述： 软定时器回调函数
     90          */
     91          
     92          
     93          /*******************************************************************************
     94          * LOCAL FUNCTIONS
     95          */
     96          uint8   comm_record_send_one(StrDevDtu * sDtu,uint8 addrnum);
     97          void    comm_record_send(StrDevDtu * sDtu,uint8 addrnum);
     98          void    comm_para_flow(StrDevDtu * sDtu,uint8 addrnum);
     99          void    Restart(void);
    100          
    101          
    102          
    103          /*******************************************************************************
    104          * GLOBAL FUNCTIONS
    105          */
    106          
    107          /*******************************************************************************
    108          * EXTERN VARIABLES
    109          */
    110          
    111          /*******************************************************************************
    112          * EXTERN FUNCTIONS
    113          */
    114          uint8   FRAM_StoreRecNumMgr(StrRecNumMgr  *SRecNumMgr);
    115          uint8   FRAM_StoreOilPara(StrOilPara  *SOilPara);
    116          void    BSP_DispClrAll(void);
    117          uint8   FRAM_StoreProductInfo(StrProductInfo  *sProductInfo);
    118          uint8   ReadFM24CL64(uint16  Addr, uint8 *DataBuf, uint32 DataBufLen);            
    119          uint8   WriteFM24CL64(uint16  Addr, uint8 *DataBuf, uint32 DataBufLen);            
    120          void    GetOilPara(void);
    121          void    SetDispNow(void);
    122          uint8   comm_tinyrec_send(StrDevOtr * sOtr,uint8    addrnum);
    123          
    124          /*******************************************************************************/
    125          
    126          extern  stcSysCtrl  sCtrl;
    127          
    128          extern  stcCalcModel    l_sCalcModel;       //临时采用的油箱模型
    129          /*******************************************************************************
    130          * 名    称： comm_para_flow
    131          * 功    能： 参数流。根据具体参数进行操作
    132          *            
    133          * 入口参数： 无线设备数据结构
    134          * 出口参数： 无
    135          * 作　 　者： redmorningcn.
    136          * 创建日期： 2017-05-19
    137          * 修    改：
    138          * 修改日期：
    139          * 备    注： 任务创建函数需要在app.h文件中声明
    140          *******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    141          void    comm_para_flow(StrDevDtu * sDtu,uint8 addrnum)
    142          {
   \                     comm_para_flow: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB087             SUB      SP,SP,#+28
   \   00000006   0x4680             MOV      R8,R0
   \   00000008   0x000C             MOVS     R4,R1
    143              stcTime     sTime;
    144              uint8       i = 0;
   \   0000000A   0x2700             MOVS     R7,#+0
    145              uint32      modelrecvnum =0;
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x9004             STR      R0,[SP, #+16]
    146              uint32      tmp32;
    147              static     uint32      modelstoreaddr = 0;
    148              uint16      crc16;
    149              uint8       *p;
    150              
    151              BSP_DispClrAll();                               //清原显示值，立即显示设定值                 
   \   00000010   0x.... 0x....      BL       BSP_DispClrAll
    152              
    153              switch (sDtu->RxCtrl.DataCode)  
   \   00000014   0xF8D8 0x0148      LDR      R0,[R8, #+328]
   \   00000018   0x2801             CMP      R0,#+1
   \   0000001A   0xF000 0x8199      BEQ.W    ??comm_para_flow_0
   \   0000001E   0x2820             CMP      R0,#+32
   \   00000020   0xD029             BEQ.N    ??comm_para_flow_1
   \   00000022   0x2840             CMP      R0,#+64
   \   00000024   0xF000 0x8145      BEQ.W    ??comm_para_flow_2
   \   00000028   0xF5B0 0x7F80      CMP      R0,#+256
   \   0000002C   0xD035             BEQ.N    ??comm_para_flow_3
   \   0000002E   0xF5B0 0x7F00      CMP      R0,#+512
   \   00000032   0xD056             BEQ.N    ??comm_para_flow_4
   \   00000034   0xF5B0 0x5F80      CMP      R0,#+4096
   \   00000038   0xF000 0x8084      BEQ.W    ??comm_para_flow_5
   \   0000003C   0xF5B0 0x5F00      CMP      R0,#+8192
   \   00000040   0xF000 0x8092      BEQ.W    ??comm_para_flow_6
   \   00000044   0xF5B0 0x3F80      CMP      R0,#+65536
   \   00000048   0xF000 0x80A7      BEQ.W    ??comm_para_flow_7
   \   0000004C   0xF5B0 0x3F00      CMP      R0,#+131072
   \   00000050   0xF000 0x80B0      BEQ.W    ??comm_para_flow_8
   \   00000054   0xF5B0 0x2F00      CMP      R0,#+524288
   \   00000058   0xF000 0x80BC      BEQ.W    ??comm_para_flow_9
   \   0000005C   0xF5B0 0x1F80      CMP      R0,#+1048576
   \   00000060   0xF000 0x80CD      BEQ.W    ??comm_para_flow_10
   \   00000064   0xF5B0 0x1F00      CMP      R0,#+2097152
   \   00000068   0xF000 0x80F3      BEQ.W    ??comm_para_flow_11
   \   0000006C   0xF5B0 0x0F80      CMP      R0,#+4194304
   \   00000070   0xF000 0x81B7      BEQ.W    ??comm_para_flow_12
   \   00000074   0xE212             B.N      ??comm_para_flow_13
    154              {
    155                  //设置密度
    156              case    DENSITY_CARD: 
    157                  sCtrl.SOilPara.Density = sDtu->Rd.Density;          
   \                     ??comm_para_flow_1: (+1)
   \   00000076   0xF8B8 0x0000      LDRH     R0,[R8, #+0]
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable2
   \   0000007E   0xF8A1 0x00A4      STRH     R0,[R1, #+164]
    158                  
    159                  FRAM_StoreOilPara((StrOilPara *)&sCtrl.SOilPara);   //存数据。关键数据存储时保护
   \   00000082   0x.... 0x....      LDR.W    R0,??DataTable2_1
   \   00000086   0x.... 0x....      BL       FRAM_StoreOilPara
    160                  
    161                  uprintf("%8d",sCtrl.SOilPara.Density);   //立即显示设定值 
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable2
   \   0000008E   0xF9B0 0x10A4      LDRSH    R1,[R0, #+164]
   \   00000092   0xA0AE             ADR.N    R0,??comm_para_flow_14  ;; "%8d"
   \   00000094   0x.... 0x....      BL       uprintf
    162                  
    163                  break;
   \   00000098   0xE200             B.N      ??comm_para_flow_15
    164                  
    165                  //设置时间
    166              case    TIME_CARD:                
    167                  
    168                  WriteTime(sDtu->Rd.sTime);          
   \                     ??comm_para_flow_3: (+1)
   \   0000009A   0x2000             MOVS     R0,#+0
   \                     ??comm_para_flow_16: (+1)
   \   0000009C   0xF810 0x1008      LDRB     R1,[R0, R8]
   \   000000A0   0x466A             MOV      R2,SP
   \   000000A2   0x5481             STRB     R1,[R0, R2]
   \   000000A4   0x1C40             ADDS     R0,R0,#+1
   \   000000A6   0x2808             CMP      R0,#+8
   \   000000A8   0xD3F8             BCC.N    ??comm_para_flow_16
   \   000000AA   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \   000000AE   0x.... 0x....      BL       WriteTime
    169                  ReadTime((stcTime *)&sTime);
   \   000000B2   0xA805             ADD      R0,SP,#+20
   \   000000B4   0x.... 0x....      BL       ReadTime
    170                  
    171                  uprintf("%02d-%02d-%02d",sTime.Year
    172                          ,sTime.Month
    173                              ,sTime.Date
    174                                  );     
   \   000000B8   0xF89D 0x3017      LDRB     R3,[SP, #+23]
   \   000000BC   0xF89D 0x2018      LDRB     R2,[SP, #+24]
   \   000000C0   0xF89D 0x1019      LDRB     R1,[SP, #+25]
   \   000000C4   0x.... 0x....      LDR.W    R0,??DataTable2_2
   \   000000C8   0x.... 0x....      BL       uprintf
    175                  uprintf("%02d-%02d-%02d",sTime.Hour
    176                          ,sTime.Min
    177                              ,sTime.Sec
    178                                  );               
   \   000000CC   0xF89D 0x3014      LDRB     R3,[SP, #+20]
   \   000000D0   0xF89D 0x2015      LDRB     R2,[SP, #+21]
   \   000000D4   0xF89D 0x1016      LDRB     R1,[SP, #+22]
   \   000000D8   0x.... 0x....      LDR.W    R0,??DataTable2_2
   \   000000DC   0x.... 0x....      BL       uprintf
    179                  break;
   \   000000E0   0xE1DC             B.N      ??comm_para_flow_15
    180                  
    181                  //高度卡
    182              case    HIGHT_CARD:  
    183                  //高度值可以累计
    184                  sCtrl.SOilPara.Hig += sDtu->Rd.Hig;
   \                     ??comm_para_flow_4: (+1)
   \   000000E2   0x.... 0x....      LDR.W    R0,??DataTable2
   \   000000E6   0xF8B0 0x00A2      LDRH     R0,[R0, #+162]
   \   000000EA   0xF8B8 0x1000      LDRH     R1,[R8, #+0]
   \   000000EE   0x1808             ADDS     R0,R1,R0
   \   000000F0   0x.... 0x....      LDR.W    R1,??DataTable2
   \   000000F4   0xF8A1 0x00A2      STRH     R0,[R1, #+162]
    185                  if(sCtrl.SOilPara.Hig  > 500)
   \   000000F8   0x.... 0x....      LDR.W    R0,??DataTable2
   \   000000FC   0xF9B0 0x00A2      LDRSH    R0,[R0, #+162]
   \   00000100   0xF5B0 0x7FFA      CMP      R0,#+500
   \   00000104   0xDD05             BLE.N    ??comm_para_flow_17
    186                      sCtrl.SOilPara.Hig = 500;
   \   00000106   0xF44F 0x70FA      MOV      R0,#+500
   \   0000010A   0x.... 0x....      LDR.W    R1,??DataTable2
   \   0000010E   0xF8A1 0x00A2      STRH     R0,[R1, #+162]
    187                  
    188                  if(sCtrl.SOilPara.Hig  < -500)
   \                     ??comm_para_flow_17: (+1)
   \   00000112   0x.... 0x....      LDR.W    R0,??DataTable2
   \   00000116   0xF9B0 0x00A2      LDRSH    R0,[R0, #+162]
   \   0000011A   0xF510 0x7FFA      CMN      R0,#+500
   \   0000011E   0xDA05             BGE.N    ??comm_para_flow_18
    189                      sCtrl.SOilPara.Hig = -500;
   \   00000120   0x.... 0x....      LDR.W    R0,??DataTable2_3  ;; 0xfffffe0c
   \   00000124   0x.... 0x....      LDR.W    R1,??DataTable2
   \   00000128   0xF8A1 0x00A2      STRH     R0,[R1, #+162]
    190                  
    191                  FRAM_StoreOilPara((StrOilPara *)&sCtrl.SOilPara);   //存数据。关键数据存储时保护
   \                     ??comm_para_flow_18: (+1)
   \   0000012C   0x.... 0x....      LDR.W    R0,??DataTable2_1
   \   00000130   0x.... 0x....      BL       FRAM_StoreOilPara
    192                  
    193                  uprintf("%8d",sCtrl.SOilPara.Hig);     
   \   00000134   0x.... 0x....      LDR.W    R0,??DataTable2
   \   00000138   0xF9B0 0x10A2      LDRSH    R1,[R0, #+162]
   \   0000013C   0xA083             ADR.N    R0,??comm_para_flow_14  ;; "%8d"
   \   0000013E   0x.... 0x....      BL       uprintf
    194                  
    195                  break;
   \   00000142   0xE1AB             B.N      ??comm_para_flow_15
    196                  
    197                  //模型选择卡
    198              case    MODEL_SELECT_CARD:   
    199                  sCtrl.SOilPara.ModelNum = sDtu->Rd.ModelNum;//选择的模型编号
   \                     ??comm_para_flow_5: (+1)
   \   00000144   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \   00000148   0x.... 0x....      LDR.W    R1,??DataTable2
   \   0000014C   0xF881 0x00A0      STRB     R0,[R1, #+160]
    200                  
    201                  FRAM_StoreOilPara((StrOilPara *)&sCtrl.SOilPara);   //存数据。关键数据存储时保护
   \   00000150   0x.... 0x....      LDR.W    R0,??DataTable2_1
   \   00000154   0x.... 0x....      BL       FRAM_StoreOilPara
    202                  
    203                  uprintf("%8d",sCtrl.SOilPara.ModelNum);      //立即显示设定值 
   \   00000158   0x.... 0x....      LDR.W    R0,??DataTable2
   \   0000015C   0xF890 0x10A0      LDRB     R1,[R0, #+160]
   \   00000160   0xA07A             ADR.N    R0,??comm_para_flow_14  ;; "%8d"
   \   00000162   0x.... 0x....      BL       uprintf
    204                  break;
   \   00000166   0xE199             B.N      ??comm_para_flow_15
    205                  
    206                  //车型车号
    207              case    FIX_CARD: 
    208                  sCtrl.sProductInfo.sLocoId.Num = sDtu->Rd.sLocoId.Num;
   \                     ??comm_para_flow_6: (+1)
   \   00000168   0xF8B8 0x0002      LDRH     R0,[R8, #+2]
   \   0000016C   0x.... 0x....      LDR.W    R1,??DataTable2
   \   00000170   0x83C8             STRH     R0,[R1, #+30]
    209                  sCtrl.sProductInfo.sLocoId.Type = sDtu->Rd.sLocoId.Type;
   \   00000172   0xF8B8 0x0000      LDRH     R0,[R8, #+0]
   \   00000176   0x.... 0x....      LDR.W    R1,??DataTable2
   \   0000017A   0x8388             STRH     R0,[R1, #+28]
    210                  
    211                  FRAM_StoreProductInfo((StrProductInfo *)&sCtrl.sProductInfo);
   \   0000017C   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   00000180   0x.... 0x....      BL       FRAM_StoreProductInfo
    212                  
    213                  uprintf("%4d%4d"   ,sCtrl.sProductInfo.sLocoId.Type
    214                          ,sCtrl.sProductInfo.sLocoId.Num
    215                              );      
   \   00000184   0x.... 0x....      LDR.W    R0,??DataTable2
   \   00000188   0x8BC2             LDRH     R2,[R0, #+30]
   \   0000018A   0x.... 0x....      LDR.W    R0,??DataTable2
   \   0000018E   0x8B81             LDRH     R1,[R0, #+28]
   \   00000190   0x.... 0x....      LDR.W    R0,??DataTable2_5
   \   00000194   0x.... 0x....      BL       uprintf
    216                  break;
   \   00000198   0xE180             B.N      ??comm_para_flow_15
    217                  
    218                  //读数据指示
    219              case    DATA_CARD_DIS: 
    220                  i=0;
   \                     ??comm_para_flow_7: (+1)
   \   0000019A   0x2000             MOVS     R0,#+0
   \   0000019C   0x0007             MOVS     R7,R0
    221                  while(i < 4)
   \                     ??comm_para_flow_19: (+1)
   \   0000019E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000001A0   0x2F04             CMP      R7,#+4
   \   000001A2   0xDA06             BGE.N    ??comm_para_flow_20
    222                  {
    223                      uprintf("%8d",i); 
   \   000001A4   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000001A6   0x0039             MOVS     R1,R7
   \   000001A8   0xA068             ADR.N    R0,??comm_para_flow_14  ;; "%8d"
   \   000001AA   0x.... 0x....      BL       uprintf
    224                      i++;
   \   000001AE   0x1C7F             ADDS     R7,R7,#+1
   \   000001B0   0xE7F5             B.N      ??comm_para_flow_19
    225                  }
    226                  break;
   \                     ??comm_para_flow_20: (+1)
   \   000001B2   0xE173             B.N      ??comm_para_flow_15
    227                  
    228                  //读数据指示结束
    229              case    DATA_CARD_FIN: 
    230                  i=0;
   \                     ??comm_para_flow_8: (+1)
   \   000001B4   0x2000             MOVS     R0,#+0
   \   000001B6   0x0007             MOVS     R7,R0
    231                  while(i < 4)
   \                     ??comm_para_flow_21: (+1)
   \   000001B8   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000001BA   0x2F04             CMP      R7,#+4
   \   000001BC   0xDA09             BGE.N    ??comm_para_flow_22
    232                  {
    233                      uprintf("    good");  
   \   000001BE   0x.... 0x....      LDR.W    R0,??DataTable2_6
   \   000001C2   0x.... 0x....      BL       uprintf
    234                      uprintf("         ");  
   \   000001C6   0x.... 0x....      LDR.W    R0,??DataTable2_7
   \   000001CA   0x.... 0x....      BL       uprintf
    235                      i++;
   \   000001CE   0x1C7F             ADDS     R7,R7,#+1
   \   000001D0   0xE7F2             B.N      ??comm_para_flow_21
    236                  }
    237                  break;
   \                     ??comm_para_flow_22: (+1)
   \   000001D2   0xE163             B.N      ??comm_para_flow_15
    238                  
    239                  //数据清零
    240              case    CLEAR_ALL: 
    241                  sCtrl.sRecNumMgr.Current = 0;
   \                     ??comm_para_flow_9: (+1)
   \   000001D4   0x2000             MOVS     R0,#+0
   \   000001D6   0x.... 0x....      LDR.W    R1,??DataTable2
   \   000001DA   0x6048             STR      R0,[R1, #+4]
    242                  sCtrl.sRecNumMgr.GrsRead = 0;
   \   000001DC   0x2000             MOVS     R0,#+0
   \   000001DE   0x.... 0x....      LDR.W    R1,??DataTable2
   \   000001E2   0x60C8             STR      R0,[R1, #+12]
    243                  sCtrl.sRecNumMgr.IcRead  = 0;
   \   000001E4   0x2000             MOVS     R0,#+0
   \   000001E6   0x.... 0x....      LDR.W    R1,??DataTable2
   \   000001EA   0x6088             STR      R0,[R1, #+8]
    244                  
    245                  FRAM_StoreRecNumMgr((StrRecNumMgr *)&sCtrl.sRecNumMgr);
   \   000001EC   0x.... 0x....      LDR.W    R0,??DataTable2_8
   \   000001F0   0x.... 0x....      BL       FRAM_StoreRecNumMgr
    246                  
    247                  uprintf("    CALL");  
   \   000001F4   0x.... 0x....      LDR.W    R0,??DataTable2_9
   \   000001F8   0x.... 0x....      BL       uprintf
    248                  
    249                  break;
   \   000001FC   0xE14E             B.N      ??comm_para_flow_15
    250                  
    251                  //装置复位，先应答消息，再
    252              case    RST_SYS:
    253                  
    254                  //参数设置，数据原路返回
    255                  CSNC_SendData(  sCtrl.Dtu.pch,                      //DTU 的PCH：串口号，收发控制等底层信息
    256                                  sCtrl.Dtu.RxCtrl.DestAddr,          //源地址，
    257                                  sCtrl.Dtu.RxCtrl.SourceAddr,        //目标地址
    258                                  sCtrl.Dtu.RxCtrl.FramNum,           //帧序号 
    259                                  sCtrl.Dtu.RxCtrl.FrameCode,         //命令字
    260                                  sCtrl.Dtu.Rd.Buf,                   //数据区
    261                                  sCtrl.Dtu.RxCtrl.Len                //发送长度
    262                                );
   \                     ??comm_para_flow_10: (+1)
   \   000001FE   0x.... 0x....      LDR.W    R0,??DataTable2
   \   00000202   0xF890 0x04F0      LDRB     R0,[R0, #+1264]
   \   00000206   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000208   0x9002             STR      R0,[SP, #+8]
   \   0000020A   0x.... 0x....      LDR.W    R0,??DataTable2_10
   \   0000020E   0x9001             STR      R0,[SP, #+4]
   \   00000210   0x.... 0x....      LDR.W    R0,??DataTable2
   \   00000214   0xF890 0x04F1      LDRB     R0,[R0, #+1265]
   \   00000218   0x9000             STR      R0,[SP, #+0]
   \   0000021A   0x.... 0x....      LDR.W    R0,??DataTable2
   \   0000021E   0xF890 0x34EF      LDRB     R3,[R0, #+1263]
   \   00000222   0x.... 0x....      LDR.W    R0,??DataTable2
   \   00000226   0xF890 0x24EE      LDRB     R2,[R0, #+1262]
   \   0000022A   0x.... 0x....      LDR.W    R0,??DataTable2
   \   0000022E   0xF890 0x14ED      LDRB     R1,[R0, #+1261]
   \   00000232   0x.... 0x....      LDR.W    R0,??DataTable2
   \   00000236   0xF8D0 0x0509      LDR      R0,[R0, #+1289]
   \   0000023A   0x.... 0x....      BL       CSNC_SendData
    263                  i = 100000;
   \   0000023E   0x20A0             MOVS     R0,#+160
   \   00000240   0x0007             MOVS     R7,R0
    264                  while(i--);
   \                     ??comm_para_flow_23: (+1)
   \   00000242   0x0038             MOVS     R0,R7
   \   00000244   0x1E47             SUBS     R7,R0,#+1
   \   00000246   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000248   0x2800             CMP      R0,#+0
   \   0000024A   0xD1FA             BNE.N    ??comm_para_flow_23
    265                  
    266                  Restart();                                          //重启系统
   \   0000024C   0x.... 0x....      BL       Restart
    267                  break;
   \   00000250   0xE124             B.N      ??comm_para_flow_15
    268                  
    269                  //设置斜率
    270              case    CALC_PARA: 
    271                  //斜率具有镭计的效果
    272                  sCtrl.SOilPara.Slope = (sCtrl.SOilPara.Slope  * sDtu->Rd.Slope)/10000;
   \                     ??comm_para_flow_11: (+1)
   \   00000252   0x.... 0x....      LDR.W    R0,??DataTable2
   \   00000256   0xF8D0 0x00A8      LDR      R0,[R0, #+168]
   \   0000025A   0xF8D8 0x1000      LDR      R1,[R8, #+0]
   \   0000025E   0x4348             MULS     R0,R1,R0
   \   00000260   0xF242 0x7110      MOVW     R1,#+10000
   \   00000264   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000268   0x.... 0x....      LDR.W    R1,??DataTable2
   \   0000026C   0xF8C1 0x00A8      STR      R0,[R1, #+168]
    273                  
    274                  //0.1~2
    275                  if(sCtrl.SOilPara.Slope >20000 || sCtrl.SOilPara.Slope < 1000)
   \   00000270   0x.... 0x....      LDR.W    R0,??DataTable2
   \   00000274   0xF8D0 0x00A8      LDR      R0,[R0, #+168]
   \   00000278   0xF644 0x6121      MOVW     R1,#+20001
   \   0000027C   0x4288             CMP      R0,R1
   \   0000027E   0xD206             BCS.N    ??comm_para_flow_24
   \   00000280   0x.... 0x....      LDR.W    R0,??DataTable2
   \   00000284   0xF8D0 0x00A8      LDR      R0,[R0, #+168]
   \   00000288   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   0000028C   0xD205             BCS.N    ??comm_para_flow_25
    276                      sCtrl.SOilPara.Slope = 10000;
   \                     ??comm_para_flow_24: (+1)
   \   0000028E   0xF242 0x7010      MOVW     R0,#+10000
   \   00000292   0x.... 0x....      LDR.W    R1,??DataTable2
   \   00000296   0xF8C1 0x00A8      STR      R0,[R1, #+168]
    277                  
    278                  FRAM_StoreOilPara((StrOilPara *)&sCtrl.SOilPara);   //存数据。关键数据存储时保护
   \                     ??comm_para_flow_25: (+1)
   \   0000029A   0x.... 0x....      LDR.W    R0,??DataTable2_1
   \   0000029E   0x.... 0x....      BL       FRAM_StoreOilPara
    279                  
    280                  uprintf("%d",sCtrl.SOilPara.Slope);         //立即显示设定值 
   \   000002A2   0x.... 0x....      LDR.W    R0,??DataTable2
   \   000002A6   0xF8D0 0x10A8      LDR      R1,[R0, #+168]
   \   000002AA   0x....             ADR.N    R0,??DataTable0  ;; 0x25, 0x64, 0x00, 0x00
   \   000002AC   0x.... 0x....      BL       uprintf
    281                  break;
   \   000002B0   0xE0F4             B.N      ??comm_para_flow_15
    282                  
    283                  /***********************************************
    284                  * 描述： 设置油箱模型。
    285                  *   IC 卡模块插入IC卡后，IC卡主动应答模型。  
    286                  *   后续每200ms发送数据，序号从0开始累加。
    287                  数据发送完成后，序号为0xffffffff。
    288                  */    
    289                  
    290              case    MODEL_CARD: 
    291                  //模型数据接收序号
    292                  memcpy((uint8  *)&modelrecvnum,(uint8 *)&sDtu->Rd.Buf[0],sizeof(modelrecvnum));
   \                     ??comm_para_flow_2: (+1)
   \   000002B2   0xF05F 0x0904      MOVS     R9,#+4
   \   000002B6   0xF10D 0x0A10      ADD      R10,SP,#+16
   \   000002BA   0x464A             MOV      R2,R9
   \   000002BC   0x4641             MOV      R1,R8
   \   000002BE   0x4650             MOV      R0,R10
   \   000002C0   0x.... 0x....      BL       __aeabi_memcpy
    293                  
    294                  if( modelrecvnum == 0 )                 //开始    
   \   000002C4   0x9804             LDR      R0,[SP, #+16]
   \   000002C6   0x2800             CMP      R0,#+0
   \   000002C8   0xD103             BNE.N    ??comm_para_flow_26
    295                      modelstoreaddr = 0;
   \   000002CA   0x2000             MOVS     R0,#+0
   \   000002CC   0x.... 0x....      LDR.W    R1,??DataTable2_11
   \   000002D0   0x6008             STR      R0,[R1, #+0]
    296                  
    297                  if(sDtu->RxCtrl.Len < sizeof(modelrecvnum))
   \                     ??comm_para_flow_26: (+1)
   \   000002D2   0xF898 0x0143      LDRB     R0,[R8, #+323]
   \   000002D6   0x2804             CMP      R0,#+4
   \   000002D8   0xF0C0 0x80E0      BCC.W    ??comm_para_flow_15
    298                      break;
    299                  //保存接收到的数据
    300                  WriteFM24CL64(   OIL_BOX_MODEL_ADDR+modelstoreaddr,
    301                                (uint8 *)&sDtu->Rd.Buf[sizeof(modelrecvnum)], 
    302                                sDtu->RxCtrl.Len - sizeof(modelrecvnum));
   \                     ??comm_para_flow_27: (+1)
   \   000002DC   0xF898 0x0143      LDRB     R0,[R8, #+323]
   \   000002E0   0x1F02             SUBS     R2,R0,#+4
   \   000002E2   0xF118 0x0104      ADDS     R1,R8,#+4
   \   000002E6   0x.... 0x....      LDR.W    R0,??DataTable2_11
   \   000002EA   0x6800             LDR      R0,[R0, #+0]
   \   000002EC   0xF510 0x60FA      ADDS     R0,R0,#+2000
   \   000002F0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000002F2   0x.... 0x....      BL       WriteFM24CL64
    303                  //存地址累加
    304                  modelstoreaddr += (sDtu->RxCtrl.Len - sizeof(modelrecvnum));
   \   000002F6   0x.... 0x....      LDR.W    R0,??DataTable2_11
   \   000002FA   0x6800             LDR      R0,[R0, #+0]
   \   000002FC   0xF898 0x1143      LDRB     R1,[R8, #+323]
   \   00000300   0x1F09             SUBS     R1,R1,#+4
   \   00000302   0x1808             ADDS     R0,R1,R0
   \   00000304   0x.... 0x....      LDR.W    R1,??DataTable2_11
   \   00000308   0x6008             STR      R0,[R1, #+0]
    305                  
    306                  //指示操作
    307                  //uprintf("   ...");
    308                  if(modelrecvnum == 0xffffffff)  //结束，指示
   \   0000030A   0x9804             LDR      R0,[SP, #+16]
   \   0000030C   0xF110 0x0F01      CMN      R0,#+1
   \   00000310   0xD114             BNE.N    ??comm_para_flow_28
    309                  {
    310                      uprintf("");
   \   00000312   0x....             ADR.N    R0,??DataTable1  ;; ""
   \   00000314   0x.... 0x....      BL       uprintf
    311                      uprintf("boX");	
   \   00000318   0x....             ADR.N    R0,??DataTable1_1  ;; "boX"
   \   0000031A   0x.... 0x....      BL       uprintf
    312                      uprintf("boX");		
   \   0000031E   0x....             ADR.N    R0,??DataTable1_1  ;; "boX"
   \   00000320   0x.... 0x....      BL       uprintf
    313                      GetOilPara();
   \   00000324   0x.... 0x....      BL       GetOilPara
    314                      
    315                      //与单独设置油量模型兼容，写卡成功后，应将单设模型置为无效,并保存。，再重新调用初始化函数
    316                      l_sCalcModel.valid = 0;
   \   00000328   0x2000             MOVS     R0,#+0
   \   0000032A   0x....             LDR.N    R1,??DataTable2_12
   \   0000032C   0xF881 0x0195      STRB     R0,[R1, #+405]
    317                      FRAM_StoreCalcModel(&sCtrl.sCalcModel);             //数据油量存储
   \   00000330   0x....             LDR.N    R0,??DataTable2_13
   \   00000332   0x.... 0x....      BL       FRAM_StoreCalcModel
    318                      
    319                      GetOilPara();                                       //重新取计算参数
   \   00000336   0x.... 0x....      BL       GetOilPara
   \   0000033A   0xE003             B.N      ??comm_para_flow_29
    320                  }else{
    321                      uprintf("o..%2d",modelrecvnum);
   \                     ??comm_para_flow_28: (+1)
   \   0000033C   0x9904             LDR      R1,[SP, #+16]
   \   0000033E   0x....             LDR.N    R0,??DataTable2_14
   \   00000340   0x.... 0x....      BL       uprintf
    322                  }
    323                  
    324                  SetDispNow();               //马上显示
   \                     ??comm_para_flow_29: (+1)
   \   00000344   0x.... 0x....      BL       SetDispNow
    325                  
    326                  
    327          //        if(sDtu->pch->PortNbr == 2)
    328          //        {
    329          //            osal_start_timerEx( OS_TASK_ID_TMR, 
    330          //                               OS_EVT_TMR_OTR, 
    331          //                               OS_TICKS_PER_SEC*10 );          //统计装置和无线发送模块定时器  10s
    332          //        }
    333          //        
    334          //        if(sDtu->pch->PortNbr == 3)
    335          //        {
    336          //            osal_start_timerEx( OS_TASK_ID_TMR, 
    337          //                               OS_EVT_TMR_DTU, 
    338          //                               OS_TICKS_PER_SEC*10 );          //统计装置和无线发送模块定时器  10s
    339          //        }
    340                  break;
   \   00000348   0xE0A8             B.N      ??comm_para_flow_15
   \   0000034A   0xBF00             Nop      
   \                     ??comm_para_flow_14:
   \   0000034C   0x25 0x38          DC8      "%8d"
   \              0x64 0x00    
    341                  
    342                  //数据
    343              case    DATA_CARD: 
    344                  
    345                  memcpy((uint8 *)&tmp32,sDtu->Rd.Buf,sizeof(tmp32));     //请求流水号
   \                     ??comm_para_flow_0: (+1)
   \   00000350   0xF05F 0x0904      MOVS     R9,#+4
   \   00000354   0xF10D 0x0A0C      ADD      R10,SP,#+12
   \   00000358   0x464A             MOV      R2,R9
   \   0000035A   0x4641             MOV      R1,R8
   \   0000035C   0x4650             MOV      R0,R10
   \   0000035E   0x.... 0x....      BL       __aeabi_memcpy
    346                  if(sDtu->RxCtrl.SourceAddr == SLAVE_ADDR_DTU)           //无线通道请求的
   \   00000362   0xF898 0x0141      LDRB     R0,[R8, #+321]
   \   00000366   0x28CA             CMP      R0,#+202
   \   00000368   0xD115             BNE.N    ??comm_para_flow_30
    347                  {
    348                      if(sCtrl.sRecNumMgr.GrsRead  > tmp32){
   \   0000036A   0x9803             LDR      R0,[SP, #+12]
   \   0000036C   0x....             LDR.N    R1,??DataTable2
   \   0000036E   0x68C9             LDR      R1,[R1, #+12]
   \   00000370   0x4288             CMP      R0,R1
   \   00000372   0xD202             BCS.N    ??comm_para_flow_31
    349                          sCtrl.sRecNumMgr.GrsRead = tmp32;               //指定位置取数据
   \   00000374   0x9803             LDR      R0,[SP, #+12]
   \   00000376   0x....             LDR.N    R1,??DataTable2
   \   00000378   0x60C8             STR      R0,[R1, #+12]
    350                      }
    351                      
    352                      comm_record_send_one(sDtu,addrnum);                 
   \                     ??comm_para_flow_31: (+1)
   \   0000037A   0x0021             MOVS     R1,R4
   \   0000037C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000037E   0x4640             MOV      R0,R8
   \   00000380   0x.... 0x....      BL       comm_record_send_one
    353                      
    354                      FRAM_StoreRecNumMgr((StrRecNumMgr *)&sCtrl.sRecNumMgr);         //保存记录号
   \   00000384   0x....             LDR.N    R0,??DataTable2_8
   \   00000386   0x.... 0x....      BL       FRAM_StoreRecNumMgr
    355                      
    356                      sCtrl.sRecNumMgr.GrsRead++;
   \   0000038A   0x....             LDR.N    R0,??DataTable2
   \   0000038C   0x68C0             LDR      R0,[R0, #+12]
   \   0000038E   0x1C40             ADDS     R0,R0,#+1
   \   00000390   0x....             LDR.N    R1,??DataTable2
   \   00000392   0x60C8             STR      R0,[R1, #+12]
   \   00000394   0xE024             B.N      ??comm_para_flow_32
    357                      
    358                  }else if(sDtu->RxCtrl.SourceAddr == SLAVE_ADDR_OTR)     //IC卡
   \                     ??comm_para_flow_30: (+1)
   \   00000396   0xF898 0x0141      LDRB     R0,[R8, #+321]
   \   0000039A   0x28C1             CMP      R0,#+193
   \   0000039C   0xD120             BNE.N    ??comm_para_flow_32
    359                  {
    360                      if(sCtrl.sRecNumMgr.IcRead  > tmp32){
   \   0000039E   0x9803             LDR      R0,[SP, #+12]
   \   000003A0   0x....             LDR.N    R1,??DataTable2
   \   000003A2   0x6889             LDR      R1,[R1, #+8]
   \   000003A4   0x4288             CMP      R0,R1
   \   000003A6   0xD202             BCS.N    ??comm_para_flow_33
    361                          sCtrl.sRecNumMgr.IcRead = tmp32;                //指定位置取数据
   \   000003A8   0x9803             LDR      R0,[SP, #+12]
   \   000003AA   0x....             LDR.N    R1,??DataTable2
   \   000003AC   0x6088             STR      R0,[R1, #+8]
    362                      }
    363                      
    364                      comm_record_send_one(sDtu,addrnum);                 //指定位置取数据   
   \                     ??comm_para_flow_33: (+1)
   \   000003AE   0x0021             MOVS     R1,R4
   \   000003B0   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000003B2   0x4640             MOV      R0,R8
   \   000003B4   0x.... 0x....      BL       comm_record_send_one
    365                      
    366                      FRAM_StoreRecNumMgr((StrRecNumMgr *)&sCtrl.sRecNumMgr); //保存记录号
   \   000003B8   0x....             LDR.N    R0,??DataTable2_8
   \   000003BA   0x.... 0x....      BL       FRAM_StoreRecNumMgr
    367                      
    368                      sCtrl.sRecNumMgr.IcRead++;           
   \   000003BE   0x....             LDR.N    R0,??DataTable2
   \   000003C0   0x6880             LDR      R0,[R0, #+8]
   \   000003C2   0x1C40             ADDS     R0,R0,#+1
   \   000003C4   0x....             LDR.N    R1,??DataTable2
   \   000003C6   0x6088             STR      R0,[R1, #+8]
    369                      
    370                      //快速启动定时器
    371                      if(sCtrl.sRecNumMgr.IcRead < sCtrl.sRecNumMgr.Current ){
   \   000003C8   0x....             LDR.N    R0,??DataTable2
   \   000003CA   0x6880             LDR      R0,[R0, #+8]
   \   000003CC   0x....             LDR.N    R1,??DataTable2
   \   000003CE   0x6849             LDR      R1,[R1, #+4]
   \   000003D0   0x4288             CMP      R0,R1
   \   000003D2   0xD205             BCS.N    ??comm_para_flow_32
    372                          osal_start_timerRl( OS_TASK_ID_TMR, 
    373                                             OS_EVT_TMR_OTR, 
    374                                             OS_TICKS_PER_SEC/2 );          //统计装置和无线发送模块定时器  10s
   \   000003D4   0xF44F 0x72FA      MOV      R2,#+500
   \   000003D8   0x2180             MOVS     R1,#+128
   \   000003DA   0x2001             MOVS     R0,#+1
   \   000003DC   0x.... 0x....      BL       osal_start_timerRl
    375                      }
    376                      
    377                  }
    378                  break;
   \                     ??comm_para_flow_32: (+1)
   \   000003E0   0xE05C             B.N      ??comm_para_flow_15
    379                  
    380              case    RUN_MODEL_PARA:
    381                  
    382                  uprintf("SET--");         //立即显示设定值 
   \                     ??comm_para_flow_12: (+1)
   \   000003E2   0x....             LDR.N    R0,??DataTable2_15
   \   000003E4   0x.... 0x....      BL       uprintf
    383          
    384                  memcpy((uint8 *)&tmp32, &sDtu->Rd.Buf[0],sizeof(tmp32));        //取帧序号
   \   000003E8   0xF05F 0x0904      MOVS     R9,#+4
   \   000003EC   0xF10D 0x0A0C      ADD      R10,SP,#+12
   \   000003F0   0x464A             MOV      R2,R9
   \   000003F2   0x4641             MOV      R1,R8
   \   000003F4   0x4650             MOV      R0,R10
   \   000003F6   0x.... 0x....      BL       __aeabi_memcpy
    385                  if(tmp32 < (1 + sizeof(l_sCalcModel)/128 ))                     //序号有效
   \   000003FA   0x9803             LDR      R0,[SP, #+12]
   \   000003FC   0x2804             CMP      R0,#+4
   \   000003FE   0xD24C             BCS.N    ??comm_para_flow_34
    386                  {
    387                      p = (uint8 *)&l_sCalcModel;
   \   00000400   0x....             LDR.N    R0,??DataTable2_12
   \   00000402   0x0006             MOVS     R6,R0
    388                      memcpy((uint8 *)(  p + 128*tmp32),
    389                                         (uint8 *)&sDtu->Rd.Buf[4],
    390                                         sDtu->RxCtrl.Len-4);
   \   00000404   0xF898 0x0143      LDRB     R0,[R8, #+323]
   \   00000408   0xF1B0 0x0904      SUBS     R9,R0,#+4
   \   0000040C   0xF118 0x0A04      ADDS     R10,R8,#+4
   \   00000410   0x9803             LDR      R0,[SP, #+12]
   \   00000412   0x2180             MOVS     R1,#+128
   \   00000414   0xFB01 0x6B00      MLA      R11,R1,R0,R6
   \   00000418   0x464A             MOV      R2,R9
   \   0000041A   0x4651             MOV      R1,R10
   \   0000041C   0x4658             MOV      R0,R11
   \   0000041E   0x.... 0x....      BL       __aeabi_memcpy
    391                      
    392                      if(tmp32 == sizeof(l_sCalcModel)/128)               //接收完成
   \   00000422   0x9803             LDR      R0,[SP, #+12]
   \   00000424   0x2803             CMP      R0,#+3
   \   00000426   0xD138             BNE.N    ??comm_para_flow_34
    393                      {
    394                          crc16 = GetCrc16Check((uint8 *)&l_sCalcModel,sizeof(l_sCalcModel)-2);   //计算校验
   \   00000428   0xF44F 0x71CB      MOV      R1,#+406
   \   0000042C   0x....             LDR.N    R0,??DataTable2_12
   \   0000042E   0x.... 0x....      BL       GetCrc16Check
   \   00000432   0x0005             MOVS     R5,R0
    395                          if(crc16 == l_sCalcModel.CrcCheck)              //模型校验通过，赋值给计算使用
   \   00000434   0x....             LDR.N    R0,??DataTable2_12
   \   00000436   0xF8B0 0x0196      LDRH     R0,[R0, #+406]
   \   0000043A   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000043C   0x4285             CMP      R5,R0
   \   0000043E   0xD119             BNE.N    ??comm_para_flow_35
    396                          {
    397                              l_sCalcModel.valid = 1;                     //置模型有效位
   \   00000440   0x2001             MOVS     R0,#+1
   \   00000442   0x....             LDR.N    R1,??DataTable2_12
   \   00000444   0xF881 0x0195      STRB     R0,[R1, #+405]
    398                              
    399                              l_sCalcModel.CrcCheck = GetCrc16Check((uint8 *)&l_sCalcModel,sizeof(l_sCalcModel)-2); 
   \   00000448   0xF44F 0x71CB      MOV      R1,#+406
   \   0000044C   0x....             LDR.N    R0,??DataTable2_12
   \   0000044E   0x.... 0x....      BL       GetCrc16Check
   \   00000452   0x....             LDR.N    R1,??DataTable2_12
   \   00000454   0xF8A1 0x0196      STRH     R0,[R1, #+406]
    400                              
    401                              memcpy((uint8 *)&sCtrl.sCalcModel,(uint8 *)&l_sCalcModel,sizeof(l_sCalcModel)); //赋值给正在使用的模型。
   \   00000458   0xF44F 0x79CC      MOV      R9,#+408
   \   0000045C   0x.... 0x....      LDR.W    R10,??DataTable2_12
   \   00000460   0x.... 0x....      LDR.W    R11,??DataTable2_13
   \   00000464   0x464A             MOV      R2,R9
   \   00000466   0x4651             MOV      R1,R10
   \   00000468   0x4658             MOV      R0,R11
   \   0000046A   0x.... 0x....      BL       __aeabi_memcpy
    402                              
    403                              FRAM_StoreCalcModel(&sCtrl.sCalcModel);
   \   0000046E   0x....             LDR.N    R0,??DataTable2_13
   \   00000470   0x.... 0x....      BL       FRAM_StoreCalcModel
    404                          }
    405                          
    406                          //设置成功后，指示
    407                          uprintf("SET-%d",l_sCalcModel.ModelNum);         //立即显示设定值 
   \                     ??comm_para_flow_35: (+1)
   \   00000474   0x....             LDR.N    R0,??DataTable2_12
   \   00000476   0xF890 0x1194      LDRB     R1,[R0, #+404]
   \   0000047A   0x....             LDR.N    R0,??DataTable2_16
   \   0000047C   0x.... 0x....      BL       uprintf
    408                          tmp32 = 1000000;
   \   00000480   0x....             LDR.N    R0,??DataTable2_17  ;; 0xf4240
   \   00000482   0x9003             STR      R0,[SP, #+12]
    409                          while(tmp32--);
   \                     ??comm_para_flow_36: (+1)
   \   00000484   0x9803             LDR      R0,[SP, #+12]
   \   00000486   0x1E41             SUBS     R1,R0,#+1
   \   00000488   0x9103             STR      R1,[SP, #+12]
   \   0000048A   0x2800             CMP      R0,#+0
   \   0000048C   0xD1FA             BNE.N    ??comm_para_flow_36
    410                          uprintf("SET-%d",l_sCalcModel.ModelNum);         //立即显示设定值 
   \   0000048E   0x....             LDR.N    R0,??DataTable2_12
   \   00000490   0xF890 0x1194      LDRB     R1,[R0, #+404]
   \   00000494   0x....             LDR.N    R0,??DataTable2_16
   \   00000496   0x.... 0x....      BL       uprintf
    411          
    412                      }
    413                  }
    414                  
    415                  break;
   \                     ??comm_para_flow_34: (+1)
   \   0000049A   0xE7FF             B.N      ??comm_para_flow_15
    416                  
    417              default:
    418                  break;
    419          
    420              }
    421          }
   \                     ??comm_para_flow_13: (+1)
   \                     ??comm_para_flow_15: (+1)
   \   0000049C   0xB007             ADD      SP,SP,#+28
   \   0000049E   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return

   \                                 In section .bss, align 4
   \                     ??modelstoreaddr:
   \   00000000                      DS8 4
    422          
    423          /*******************************************************************************
    424          * 名    称： comm_record_send_one
    425          * 功    能： 发送one条数据记录
    426          * 入口参数： 无线设备数据结构
    427          * 出口参数： 无
    428          * 作　 　者： redmorningcn.
    429          * 创建日期： 2017-05-19
    430          * 修    改：
    431          * 修改日期：
    432          * 备    注： 任务创建函数需要在app.h文件中声明
    433          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    434          uint8    comm_record_send_one(StrDevDtu * sDtu,uint8    addrnum)
    435          {
   \                     comm_record_send_one: (+1)
   \   00000000   0xB53E             PUSH     {R1-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    436              
    437              //记录号为0，还未发送数据。不做通讯状态判断
    438              if( sCtrl.sRecNumMgr.Current == 0 )                                   
   \   00000006   0x....             LDR.N    R0,??DataTable2
   \   00000008   0x6840             LDR      R0,[R0, #+4]
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD101             BNE.N    ??comm_record_send_one_0
    439              {
    440                  return 0;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0xE077             B.N      ??comm_record_send_one_1
    441              }
    442              /***********************************************
    443              * 描述： 记录号合理性判断。已发数据<当前数据 发送数据
    444              * 
    445              */ 
    446              if(sDtu->ConnCtrl[addrnum].SlaveAddr == SLAVE_ADDR_DTU)
   \                     ??comm_record_send_one_0: (+1)
   \   00000012   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000014   0xEB14 0x00C5      ADDS     R0,R4,R5, LSL #+3
   \   00000018   0xF890 0x0150      LDRB     R0,[R0, #+336]
   \   0000001C   0x28CA             CMP      R0,#+202
   \   0000001E   0xD120             BNE.N    ??comm_record_send_one_2
    447              {
    448                  if(sCtrl.sRecNumMgr.Current <= sCtrl.sRecNumMgr.GrsRead )           //已发送记录号比当前记录号大，进行异常处理
   \   00000020   0x....             LDR.N    R0,??DataTable2
   \   00000022   0x68C0             LDR      R0,[R0, #+12]
   \   00000024   0x....             LDR.N    R1,??DataTable2
   \   00000026   0x6849             LDR      R1,[R1, #+4]
   \   00000028   0x4288             CMP      R0,R1
   \   0000002A   0xD30E             BCC.N    ??comm_record_send_one_3
    449                  {
    450                      sCtrl.sRecNumMgr.GrsRead = 0;
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x....             LDR.N    R1,??DataTable2
   \   00000030   0x60C8             STR      R0,[R1, #+12]
    451                      if(sCtrl.sRecNumMgr.Current)
   \   00000032   0x....             LDR.N    R0,??DataTable2
   \   00000034   0x6840             LDR      R0,[R0, #+4]
   \   00000036   0x2800             CMP      R0,#+0
   \   00000038   0xD004             BEQ.N    ??comm_record_send_one_4
    452                          sCtrl.sRecNumMgr.GrsRead = sCtrl.sRecNumMgr.Current - 1;    //最后有效记录赋值     
   \   0000003A   0x....             LDR.N    R0,??DataTable2
   \   0000003C   0x6840             LDR      R0,[R0, #+4]
   \   0000003E   0x1E40             SUBS     R0,R0,#+1
   \   00000040   0x....             LDR.N    R1,??DataTable2
   \   00000042   0x60C8             STR      R0,[R1, #+12]
    453                      
    454                      FRAM_StoreRecNumMgr((StrRecNumMgr *)&sCtrl.sRecNumMgr);         //保存记录号
   \                     ??comm_record_send_one_4: (+1)
   \   00000044   0x....             LDR.N    R0,??DataTable2_8
   \   00000046   0x.... 0x....      BL       FRAM_StoreRecNumMgr
    455                  }
    456                  
    457                  //sDtu->ConnCtrl[addrnum].SendFramNum++;                            //发送序号由接收控制
    458                  
    459                  /***********************************************
    460                  * 描述： 数据记录准备,根据记录号取数据记录。
    461                  * 
    462                  */ 
    463                  ReadFlshRec((stcFlshRec *)&sDtu->Wr.sRec,
    464                              sCtrl.sRecNumMgr.GrsRead);
   \                     ??comm_record_send_one_3: (+1)
   \   0000004A   0x....             LDR.N    R0,??DataTable2
   \   0000004C   0x68C1             LDR      R1,[R0, #+12]
   \   0000004E   0xF114 0x00A0      ADDS     R0,R4,#+160
   \   00000052   0x.... 0x....      BL       ReadFlshRec
    465                  
    466                  //重新给定时器给初值。osal_start_timerRl可以自动赋值，
    467                  osal_start_timerRl( OS_TASK_ID_TMR, 
    468                                     OS_EVT_TMR_DTU, 
    469                                     OS_TICKS_PER_SEC*10 );  //统计装置和无线发送模块定时器  10s
   \   00000056   0xF242 0x7210      MOVW     R2,#+10000
   \   0000005A   0x2140             MOVS     R1,#+64
   \   0000005C   0x2001             MOVS     R0,#+1
   \   0000005E   0x.... 0x....      BL       osal_start_timerRl
    470              }
    471              
    472              if(sDtu->ConnCtrl[addrnum].SlaveAddr == SLAVE_ADDR_OTR)
   \                     ??comm_record_send_one_2: (+1)
   \   00000062   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000064   0xEB14 0x00C5      ADDS     R0,R4,R5, LSL #+3
   \   00000068   0xF890 0x0150      LDRB     R0,[R0, #+336]
   \   0000006C   0x28C1             CMP      R0,#+193
   \   0000006E   0xD12D             BNE.N    ??comm_record_send_one_5
    473              {
    474                  if(sCtrl.sRecNumMgr.Current <= sCtrl.sRecNumMgr.IcRead )           //已发送记录号比当前记录号大，进行异常处理
   \   00000070   0x....             LDR.N    R0,??DataTable2
   \   00000072   0x6880             LDR      R0,[R0, #+8]
   \   00000074   0x....             LDR.N    R1,??DataTable2
   \   00000076   0x6849             LDR      R1,[R1, #+4]
   \   00000078   0x4288             CMP      R0,R1
   \   0000007A   0xD31B             BCC.N    ??comm_record_send_one_6
    475                  {
    476                      sCtrl.sRecNumMgr.IcRead = 0;
   \   0000007C   0x2000             MOVS     R0,#+0
   \   0000007E   0x....             LDR.N    R1,??DataTable2
   \   00000080   0x6088             STR      R0,[R1, #+8]
    477                      if(sCtrl.sRecNumMgr.Current)
   \   00000082   0x....             LDR.N    R0,??DataTable2
   \   00000084   0x6840             LDR      R0,[R0, #+4]
   \   00000086   0x2800             CMP      R0,#+0
   \   00000088   0xD004             BEQ.N    ??comm_record_send_one_7
    478                          sCtrl.sRecNumMgr.IcRead = sCtrl.sRecNumMgr.Current - 1;    //最后有效记录赋值     
   \   0000008A   0x....             LDR.N    R0,??DataTable2
   \   0000008C   0x6840             LDR      R0,[R0, #+4]
   \   0000008E   0x1E40             SUBS     R0,R0,#+1
   \   00000090   0x....             LDR.N    R1,??DataTable2
   \   00000092   0x6088             STR      R0,[R1, #+8]
    479                      
    480                      sCtrl.Otr.ConnCtrl[addrnum].SendFramNum++;
   \                     ??comm_record_send_one_7: (+1)
   \   00000094   0x....             LDR.N    R0,??DataTable2
   \   00000096   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000098   0xEB10 0x00C5      ADDS     R0,R0,R5, LSL #+3
   \   0000009C   0xF890 0x0660      LDRB     R0,[R0, #+1632]
   \   000000A0   0x1C40             ADDS     R0,R0,#+1
   \   000000A2   0x....             LDR.N    R1,??DataTable2
   \   000000A4   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000A6   0xEB11 0x01C5      ADDS     R1,R1,R5, LSL #+3
   \   000000AA   0xF881 0x0660      STRB     R0,[R1, #+1632]
    481                      FRAM_StoreRecNumMgr((StrRecNumMgr *)&sCtrl.sRecNumMgr);         //保存记录号
   \   000000AE   0x....             LDR.N    R0,??DataTable2_8
   \   000000B0   0x.... 0x....      BL       FRAM_StoreRecNumMgr
    482                  }
    483                  
    484                  /***********************************************
    485                  * 描述： 数据记录准备,根据记录号取数据记录。
    486                  * 
    487                  */ 
    488                  ReadFlshRec((stcFlshRec *)&sDtu->Wr.sRec,
    489                              sCtrl.sRecNumMgr.IcRead);
   \                     ??comm_record_send_one_6: (+1)
   \   000000B4   0x....             LDR.N    R0,??DataTable2
   \   000000B6   0x6881             LDR      R1,[R0, #+8]
   \   000000B8   0xF114 0x00A0      ADDS     R0,R4,#+160
   \   000000BC   0x.... 0x....      BL       ReadFlshRec
    490                  
    491                  osal_start_timerRl( OS_TASK_ID_TMR, 
    492                                     OS_EVT_TMR_OTR, 
    493                                     OS_TICKS_PER_SEC*10 );  //统计装置和无线发送模块定时器  10s
   \   000000C0   0xF242 0x7210      MOVW     R2,#+10000
   \   000000C4   0x2180             MOVS     R1,#+128
   \   000000C6   0x2001             MOVS     R0,#+1
   \   000000C8   0x.... 0x....      BL       osal_start_timerRl
    494              }
    495              
    496              
    497              //超时值发送SLAVE_ADDR_DTU 的数据
    498              CSNC_SendData(sDtu->pch,                                    //DTU 的PCH：串口号，收发控制等底层信息
    499                            sDtu->ConnCtrl[addrnum].MasterAddr,           //源地址，
    500                            sDtu->ConnCtrl[addrnum].SlaveAddr,            //目标地址
    501                            sDtu->ConnCtrl[addrnum].SendFramNum,          //帧序号 ，，在接收中累加
    502                            0,                                            //命令字
    503                            (uint8 *)&sDtu->Wr.sRec,                      //数据区
    504                            sizeof(sDtu->Wr.sRec)                         //发送长度
    505                                );
   \                     ??comm_record_send_one_5: (+1)
   \   000000CC   0x2080             MOVS     R0,#+128
   \   000000CE   0x9002             STR      R0,[SP, #+8]
   \   000000D0   0xF114 0x00A0      ADDS     R0,R4,#+160
   \   000000D4   0x9001             STR      R0,[SP, #+4]
   \   000000D6   0x2000             MOVS     R0,#+0
   \   000000D8   0x9000             STR      R0,[SP, #+0]
   \   000000DA   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000DC   0xEB14 0x00C5      ADDS     R0,R4,R5, LSL #+3
   \   000000E0   0xF890 0x3152      LDRB     R3,[R0, #+338]
   \   000000E4   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000E6   0xEB14 0x00C5      ADDS     R0,R4,R5, LSL #+3
   \   000000EA   0xF890 0x2150      LDRB     R2,[R0, #+336]
   \   000000EE   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000F0   0xEB14 0x00C5      ADDS     R0,R4,R5, LSL #+3
   \   000000F4   0xF890 0x1151      LDRB     R1,[R0, #+337]
   \   000000F8   0xF8D4 0x015C      LDR      R0,[R4, #+348]
   \   000000FC   0x.... 0x....      BL       CSNC_SendData
    506              
    507              
    508              
    509              return 1;
   \   00000100   0x2001             MOVS     R0,#+1
   \                     ??comm_record_send_one_1: (+1)
   \   00000102   0xBD3E             POP      {R1-R5,PC}       ;; return
    510          }
    511          
    512          
    513          /*******************************************************************************
    514          * 名    称： comm_record_send
    515          * 功    能： 通讯数据传输
    516          *            先查询已发送记录，然后发送该记录。记录号加1，帧号加1。起始记录号
    517          从1开始。  
    518          *              （通过帧号判断通讯是否结束正确）
    519          * 入口参数： 无线设备数据结构
    520          * 出口参数： 无
    521          * 作　 　者： redmorningcn.
    522          * 创建日期： 2017-05-19
    523          * 修    改：
    524          * 修改日期：
    525          * 备    注： 任务创建函数需要在app.h文件中声明
    526          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    527          void    comm_record_send(StrDevDtu * sDtu,uint8 addrnum)
    528          {
   \                     comm_record_send: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    529              /***********************************************
    530              * 描述： 发送和接收的记录号相符，发送流水号加1
    531              *       再根据数据量，发送数据。
    532              * 
    533              */                         
    534              if(sDtu->RxCtrl.FramNum == sDtu->ConnCtrl[addrnum].SendFramNum){
   \   00000006   0xF894 0x0142      LDRB     R0,[R4, #+322]
   \   0000000A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000000C   0xEB14 0x01C5      ADDS     R1,R4,R5, LSL #+3
   \   00000010   0xF891 0x1152      LDRB     R1,[R1, #+338]
   \   00000014   0x4288             CMP      R0,R1
   \   00000016   0xD12D             BNE.N    ??comm_record_send_0
    535                  sDtu->ConnCtrl[addrnum].SendFramNum++;                  //数据正确，序号加1
   \   00000018   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001A   0xEB14 0x00C5      ADDS     R0,R4,R5, LSL #+3
   \   0000001E   0xF890 0x0152      LDRB     R0,[R0, #+338]
   \   00000022   0x1C40             ADDS     R0,R0,#+1
   \   00000024   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000026   0xEB14 0x01C5      ADDS     R1,R4,R5, LSL #+3
   \   0000002A   0xF881 0x0152      STRB     R0,[R1, #+338]
    536                  sCtrl.sRecNumMgr.GrsRead++;
   \   0000002E   0x....             LDR.N    R0,??DataTable2
   \   00000030   0x68C0             LDR      R0,[R0, #+12]
   \   00000032   0x1C40             ADDS     R0,R0,#+1
   \   00000034   0x....             LDR.N    R1,??DataTable2
   \   00000036   0x60C8             STR      R0,[R1, #+12]
    537                  
    538                  CPU_SR  cpu_sr;
    539                  CPU_CRITICAL_ENTER() ;
   \   00000038   0x.... 0x....      BL       CPU_SR_Save
   \   0000003C   0x0006             MOVS     R6,R0
   \   0000003E   0x.... 0x....      BL       CPU_IntDisMeasStart
    540                  FRAM_StoreRecNumMgr((StrRecNumMgr *)&sCtrl.sRecNumMgr); //保存记录号
   \   00000042   0x....             LDR.N    R0,??DataTable2_8
   \   00000044   0x.... 0x....      BL       FRAM_StoreRecNumMgr
    541                  CPU_CRITICAL_EXIT() ;
   \   00000048   0x.... 0x....      BL       CPU_IntDisMeasStop
   \   0000004C   0x0030             MOVS     R0,R6
   \   0000004E   0x.... 0x....      BL       CPU_SR_Restore
    542                  
    543                  if(sCtrl.sRecNumMgr.GrsRead < sCtrl.sRecNumMgr.Current) //数据还未发送完成。收到数据及发送。
   \   00000052   0x....             LDR.N    R0,??DataTable2
   \   00000054   0x68C0             LDR      R0,[R0, #+12]
   \   00000056   0x....             LDR.N    R1,??DataTable2
   \   00000058   0x6849             LDR      R1,[R1, #+4]
   \   0000005A   0x4288             CMP      R0,R1
   \   0000005C   0xD20A             BCS.N    ??comm_record_send_0
    544                  {
    545                      comm_record_send_one(sDtu,addrnum);                 //发送数据记录。
   \   0000005E   0x0029             MOVS     R1,R5
   \   00000060   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000062   0x0020             MOVS     R0,R4
   \   00000064   0x.... 0x....      BL       comm_record_send_one
    546                      //重新启动超时定时器
    547                      osal_start_timerRl( OS_TASK_ID_TMR, 
    548                                         OS_EVT_TMR_DTU, 
    549                                         OS_TICKS_PER_SEC*10 );          //统计装置和无线发送模块定时器  10s
   \   00000068   0xF242 0x7210      MOVW     R2,#+10000
   \   0000006C   0x2140             MOVS     R1,#+64
   \   0000006E   0x2001             MOVS     R0,#+1
   \   00000070   0x.... 0x....      BL       osal_start_timerRl
    550                  }
    551                  
    552              }
    553          }
   \                     ??comm_record_send_0: (+1)
   \   00000074   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x25 0x64          DC8      0x25, 0x64, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x00 0x00          DC8      "",0x0,0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x62 0x6F          DC8      "boX"
   \              0x58 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     sCtrl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     sCtrl+0xA0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0xFFFFFE0C         DC32     0xfffffe0c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     sCtrl+0x14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x........         DC32     sCtrl+0x4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \   00000000   0x........         DC32     sCtrl+0x3AD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_11:
   \   00000000   0x........         DC32     ??modelstoreaddr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_12:
   \   00000000   0x........         DC32     l_sCalcModel

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_13:
   \   00000000   0x........         DC32     sCtrl+0xB4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_14:
   \   00000000   0x........         DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_15:
   \   00000000   0x........         DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_16:
   \   00000000   0x........         DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_17:
   \   00000000   0x000F4240         DC32     0xf4240

   \                                 In section .rodata, align 4
   \   00000000   0x25 0x38          DC8 "%8d"
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x25 0x30          DC8 "%02d-%02d-%02d"
   \              0x32 0x64    
   \              0x2D 0x25    
   \              0x30 0x32    
   \              0x64 0x2D    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x25 0x34          DC8 "%4d%4d"
   \              0x64 0x25    
   \              0x34 0x64    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x20 0x20          DC8 "    good"
   \              0x20 0x20    
   \              0x67 0x6F    
   \              0x6F 0x64    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x20 0x20          DC8 "         "
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x20 0x20          DC8 "    CALL"
   \              0x20 0x20    
   \              0x43 0x41    
   \              0x4C 0x4C    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x25 0x64          DC8 "%d"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 1
   \   00000000   0x00               DC8 ""

   \                                 In section .rodata, align 4
   \   00000000   0x62 0x6F          DC8 "boX"
   \              0x58 0x00    

   \                                 In section .rodata, align 4
   \                     ?_9:
   \   00000000   0x6F 0x2E          DC8 "o..%2d"
   \              0x2E 0x25    
   \              0x32 0x64    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_10:
   \   00000000   0x53 0x45          DC8 "SET--"
   \              0x54 0x2D    
   \              0x2D 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_11:
   \   00000000   0x53 0x45          DC8 "SET-%d"
   \              0x54 0x2D    
   \              0x25 0x64    
   \              0x00         
   \   00000007   0x00               DC8 0
    554          
    555          
    556          /*******************************************************************************
    557          * 				end of file
    558          *******************************************************************************/
    559          #endif
    560          
    561          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      64   comm_para_flow
        64   -> BSP_DispClrAll
        64   -> CSNC_SendData
        64   -> FRAM_StoreCalcModel
        64   -> FRAM_StoreOilPara
        64   -> FRAM_StoreProductInfo
        64   -> FRAM_StoreRecNumMgr
        64   -> GetCrc16Check
        64   -> GetOilPara
        64   -> ReadTime
        64   -> Restart
        64   -> SetDispNow
        64   -> WriteFM24CL64
        64   -> WriteTime
        64   -> __aeabi_memcpy
        64   -> comm_record_send_one
        64   -> osal_start_timerRl
        64   -> uprintf
      16   comm_record_send
        16   -> CPU_IntDisMeasStart
        16   -> CPU_IntDisMeasStop
        16   -> CPU_SR_Restore
        16   -> CPU_SR_Save
        16   -> FRAM_StoreRecNumMgr
        16   -> comm_record_send_one
        16   -> osal_start_timerRl
      24   comm_record_send_one
        24   -> CSNC_SendData
        24   -> FRAM_StoreRecNumMgr
        24   -> ReadFlshRec
        24   -> osal_start_timerRl


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_11
       4  ??DataTable2_12
       4  ??DataTable2_13
       4  ??DataTable2_14
       4  ??DataTable2_15
       4  ??DataTable2_16
       4  ??DataTable2_17
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
       4  ?_0
      16  ?_1
       8  ?_10
       8  ?_11
       8  ?_2
      12  ?_3
      12  ?_4
      12  ?_5
       4  ?_6
       1  ?_7
       4  ?_8
       8  ?_9
    1186  comm_para_flow
     118  comm_record_send
     260  comm_record_send_one
       4  modelstoreaddr

 
     4 bytes in section .bss
    97 bytes in section .rodata
 1 648 bytes in section .text
 
 1 648 bytes of CODE  memory
    97 bytes of CONST memory
     4 bytes of DATA  memory

Errors: none
Warnings: 3
