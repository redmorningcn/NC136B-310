###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       26/Sep/2017  15:08:19
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC136B-310统计模块\Software\APP\Tasks\APP_task_osal_Calc.c
#    Command line =  
#        F:\iar\NC136B-310统计模块\Software\APP\Tasks\APP_task_osal_Calc.c -lCN
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List
#        --diag_suppress Pa050 -o
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\csnr_package_deal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\tax\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\APP_task_osal_Calc.lst
#    Object file  =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\APP_task_osal_Calc.o
#
###############################################################################

F:\iar\NC136B-310统计模块\Software\APP\Tasks\APP_task_osal_Calc.c
      1          /*******************************************************************************
      2           *   Filename:       app_task_store.c
      3           *   Revised:        All copyrights reserved to redmorningcn.
      4           *   Revision:       v1.0
      5           *   Writer:	     redmorningcn.
      6           *
      7           *   Description:    双击选中 disp 按 Ctrl + H, 钩选 Match the case, Replace with
      8           *                   输入您要的名字，点击 Replace All
      9           *                   双击选中 Disp 按 Ctrl + H, 钩选 Match the case, Replace with
     10           *                   输入您要的名字，点击 Replace All
     11           *                   双击选中 DISP 按 Ctrl + H, 钩选 Match the case, Replace with
     12           *                   输入您要的名字，点击 Replace All
     13           *                   在 app_cfg.h 中指定本任务的 优先级  （ APP_TASK_STORE_PRIO ）
     14           *                                            和 任务堆栈（ APP_TASK_STORE_STK_SIZE ）大小
     15           *                   在 app.h 中声明本任务的     创建函数（ void  App_TaskStoreCreate(void) ）
     16           *                                            和 看门狗标志位 （ WDTFLAG_Store ）
     17           *
     18           *   Notes:
     19           *     				E-mail: redmorningcn@qq.com
     20           *
     21           *******************************************************************************/
     22          //
     23          /*******************************************************************************
     24           * INCLUDES
     25           */
     26          #define  SNL_APP_SOURCE
     27          #include <includes.h>
     28          #include <global.h>
     29          #include <app_ctrl.h>
     30          #include <CardDataTypeDef.h>
     31          #include <cpu.h>
     32          
     33          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     34          const  CPU_CHAR  *app_task_disp__c = "$Id: $";
     35          #endif
     36          
     37          #define APP_TASK_CALC_EN     DEF_ENABLED
     38          #if APP_TASK_CALC_EN == DEF_ENABLED				//
     39          /*******************************************************************************
     40           * CONSTANTS
     41           */
     42          
     43          /*******************************************************************************
     44           * MACROS
     45           */
     46          #define     FREQ_DOWN_STATE     1
     47          #define     FREQ_WAVE_STATE     2
     48          #define     FREQ_LAG_WAVE_STATE 3
     49          #define     FREQ_UP_STATE       4           		//频率变化状态
     50          #define     FREQ_STOP_STATE     5
     51          
     52          //油箱模型编号                                        
     53          #define			HXN3_MODLE		31
     54          #define			HXN5_MODLE		30
     55          
     56          #define         MY_MODLE        40                  //自设油箱模型
     57          /*******************************************************************************
     58           * TYPEDEFS
     59           */
     60          
     61          /*******************************************************************************
     62           * LOCAL VARIABLES
     63           */
     64          
     65          #if ( OSAL_EN == DEF_ENABLED )
     66          #else
     67          /***********************************************
     68          * 描述： 任务控制块（TCB）
     69          */
     70          static  OS_TCB   AppTaskCalcTCB;
     71          
     72          /***********************************************
     73          * 描述： 任务堆栈（STACKS）
     74          */
     75          //static  CPU_STK  AppTaskCalcStk[ APP_TASK_CALC_STK_SIZE ];
     76          
     77          #endif
     78          /*******************************************************************************
     79           * GLOBAL VARIABLES
     80           */
     81          
     82          /*******************************************************************************
     83           * LOCAL FUNCTIONS
     84           */
     85          #if ( OSAL_EN == DEF_ENABLED )
     86          #else
     87          static  void    AppTaskCalc           (void *p_arg);
     88          #endif
     89          
     90          /*******************************************************************************
     91           * GLOBAL FUNCTIONS
     92           */
     93          void    GetHxn5OilBoxModel(stcCalcModel * sComplexModel);
     94          void    GetHxn3OilBoxModel(stcCalcModel * sComplexModel);
     95          uint8   FRAM_ReadCalcModel(stcCalcModel  *sCalcModel);
     96          void    stcModelTostcModelComplex(stcCalcModel * sComplexModel,stcModel	* sModel);
     97          uint8	GetOilBoxModelsModelSemple(stcModelSemple * sModelSemple);
     98          uint8   FRAM_StoreCalcModel(stcCalcModel  *sCalcModel);
     99          void    stcModelSempleTostcModelComplex(stcCalcModel * sComplexModel,stcModelSemple	* sModelSemple);
    100          uint8   GetDf4dOilBoxModel(stcModel * sModel);
    101          void	InitFlashIO(void);
    102          void	GPIO_Fram_Init(void);
    103          uint8   FRAM_ReadOilPara(StrOilPara  *SOilPara);
    104          uint8   FRAM_StoreCalcModel(stcCalcModel  *sCalcModel);
    105          uint8   FRAM_StoreOilPara(StrOilPara  *SOilPara);
    106          
    107          
    108          /*******************************************************************************
    109           * EXTERN VARIABLES
    110           */
    111          
    112               
    113               
    114          extern	stcSysCtrl       sCtrl;       	//	全局结构控制体
    115          /*******************************************************************************/
    116          

   \                                 In section .bss, align 4
    117          stcModel 		  	l_sModel;
   \                     l_sModel:
   \   00000000                      DS8 208

   \                                 In section .bss, align 4
    118          stcModelSemple	  	l_sModelSemple;
   \                     l_sModelSemple:
   \   00000000                      DS8 48

   \                                 In section .bss, align 4
    119          stcCalcModel        l_sCalcModel;
   \                     l_sCalcModel:
   \   00000000                      DS8 408
    120          
    121          /*******************************************************************************
    122           * 名    称：          GetOilBoxModel()
    123           * 功    能：          取运算用的油箱模型.执行该函数前，先读 sCtrl.SOilPara，先或的
    124                                油箱模型编号。
    125           * 入口参数：          无
    126           * 出口参数： 	      无
    127           * 作　 　者： 	      redmornigcn
    128           * 创建日期： 	      2017-05-16
    129           * 修    改：
    130           * 修改日期：
    131           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    132          uint8   GetOilBoxModel(void)
    133          {
   \                     GetOilBoxModel: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
    134              //先取预设油箱模型，不成功，再按油箱模型编号，进行计算。（建议现场使用20170905）
    135              FRAM_ReadCalcModel(&l_sCalcModel);      //取模型
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000006   0x.... 0x....      BL       FRAM_ReadCalcModel
    136              
    137              if(l_sCalcModel.valid == 1)             //模型有效
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable7
   \   0000000E   0xF890 0x0195      LDRB     R0,[R0, #+405]
   \   00000012   0x2801             CMP      R0,#+1
   \   00000014   0xD11A             BNE.N    ??GetOilBoxModel_0
    138              {
    139                  uint16  crc16 = GetCrc16Check((uint8 *)&l_sCalcModel,sizeof(l_sCalcModel)-2);
   \   00000016   0xF44F 0x71CB      MOV      R1,#+406
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable7
   \   0000001E   0x.... 0x....      BL       GetCrc16Check
   \   00000022   0x0004             MOVS     R4,R0
    140                  
    141                  if(crc16 == l_sCalcModel.CrcCheck) //，且校验通过
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000028   0xF8B0 0x0196      LDRH     R0,[R0, #+406]
   \   0000002C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000002E   0x4284             CMP      R4,R0
   \   00000030   0xD10C             BNE.N    ??GetOilBoxModel_0
    142                  {
    143                      memcpy((uint8 *)&sCtrl.sCalcModel,(uint8 *)&l_sCalcModel,sizeof(l_sCalcModel));
   \   00000032   0xF44F 0x75CC      MOV      R5,#+408
   \   00000036   0x.... 0x....      LDR.W    R6,??DataTable7
   \   0000003A   0x.... 0x....      LDR.W    R7,??DataTable7_1
   \   0000003E   0x002A             MOVS     R2,R5
   \   00000040   0x0031             MOVS     R1,R6
   \   00000042   0x0038             MOVS     R0,R7
   \   00000044   0x.... 0x....      BL       __aeabi_memcpy
    144                      
    145                      return 1;                       
   \   00000048   0x2001             MOVS     R0,#+1
   \   0000004A   0xE084             B.N      ??GetOilBoxModel_1
    146                  }
    147              }
    148              
    149          //////////////////////////////////////////////////////////////////    
    150              switch (sCtrl.SOilPara.ModelNum)                                //根据模型编号，确定油箱模型，其中自设模型
   \                     ??GetOilBoxModel_0: (+1)
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   00000050   0xF890 0x00A0      LDRB     R0,[R0, #+160]
   \   00000054   0x281E             CMP      R0,#+30
   \   00000056   0xD004             BEQ.N    ??GetOilBoxModel_2
   \   00000058   0x281F             CMP      R0,#+31
   \   0000005A   0xD007             BEQ.N    ??GetOilBoxModel_3
   \   0000005C   0x2828             CMP      R0,#+40
   \   0000005E   0xD00A             BEQ.N    ??GetOilBoxModel_4
   \   00000060   0xE00E             B.N      ??GetOilBoxModel_5
    151              {
    152                  case HXN5_MODLE:
    153                      GetHxn5OilBoxModel((stcCalcModel *)&sCtrl.sCalcModel);  //HXN5
   \                     ??GetOilBoxModel_2: (+1)
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable7_1
   \   00000066   0x.... 0x....      BL       GetHxn5OilBoxModel
    154                      break;
   \   0000006A   0xE028             B.N      ??GetOilBoxModel_6
    155                  case HXN3_MODLE:
    156                      GetHxn3OilBoxModel((stcCalcModel *)&sCtrl.sCalcModel);  //HXN3
   \                     ??GetOilBoxModel_3: (+1)
   \   0000006C   0x.... 0x....      LDR.W    R0,??DataTable7_1
   \   00000070   0x.... 0x....      BL       GetHxn3OilBoxModel
    157                      break;   
   \   00000074   0xE023             B.N      ??GetOilBoxModel_6
    158                      
    159                  case MY_MODLE:                                              //自设模型
    160                      FRAM_ReadCalcModel((stcCalcModel *)&sCtrl.sCalcModel);  //取自设模型
   \                     ??GetOilBoxModel_4: (+1)
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable7_1
   \   0000007A   0x.... 0x....      BL       FRAM_ReadCalcModel
    161                      break;      
   \   0000007E   0xE01E             B.N      ??GetOilBoxModel_6
    162                      
    163                  default:
    164                  if(sCtrl.SOilPara.ModelNum < 30)
   \                     ??GetOilBoxModel_5: (+1)
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   00000084   0xF890 0x00A0      LDRB     R0,[R0, #+160]
   \   00000088   0x281E             CMP      R0,#+30
   \   0000008A   0xDA18             BGE.N    ??GetOilBoxModel_6
    165                  {
    166                      if(GetOilBoxModelsModel((stcModel *)&l_sModel))
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable7_3
   \   00000090   0x.... 0x....      BL       GetOilBoxModelsModel
   \   00000094   0x2800             CMP      R0,#+0
   \   00000096   0xD006             BEQ.N    ??GetOilBoxModel_7
    167                      {
    168                          stcModelTostcModelComplex((stcCalcModel *)&sCtrl.sCalcModel,(stcModel *)&l_sModel);
   \   00000098   0x.... 0x....      LDR.W    R1,??DataTable7_3
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable7_1
   \   000000A0   0x.... 0x....      BL       stcModelTostcModelComplex
    169                          break;
   \   000000A4   0xE00B             B.N      ??GetOilBoxModel_6
    170                      } 		
    171                      
    172                      if(GetOilBoxModelsModelSemple((stcModelSemple *)&l_sModelSemple))
   \                     ??GetOilBoxModel_7: (+1)
   \   000000A6   0x.... 0x....      LDR.W    R0,??DataTable7_4
   \   000000AA   0x.... 0x....      BL       GetOilBoxModelsModelSemple
   \   000000AE   0x2800             CMP      R0,#+0
   \   000000B0   0xD005             BEQ.N    ??GetOilBoxModel_6
    173                      {
    174                          stcModelSempleTostcModelComplex((stcCalcModel *)&sCtrl.sCalcModel,(stcModelSemple *)&l_sModelSemple);			//100829
   \   000000B2   0x.... 0x....      LDR.W    R1,??DataTable7_4
   \   000000B6   0x.... 0x....      LDR.W    R0,??DataTable7_1
   \   000000BA   0x.... 0x....      BL       stcModelSempleTostcModelComplex
    175                          break;
    176                      }
    177                  }                        
    178              }
    179              
    180              uint8   modelerrflg= 0;                                                     //模型错误标示
   \                     ??GetOilBoxModel_6: (+1)
   \   000000BE   0x2400             MOVS     R4,#+0
    181              
    182              //检查模型是否正确,模型异常用DF4D模型
    183              if(sCtrl.sCalcModel.PotNum < 101 && sCtrl.sCalcModel.PotNum  > 1)           //模型点数2~100，否者模型异常
   \   000000C0   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   000000C4   0xF8B0 0x0244      LDRH     R0,[R0, #+580]
   \   000000C8   0x2865             CMP      R0,#+101
   \   000000CA   0xDA32             BGE.N    ??GetOilBoxModel_8
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   000000D0   0xF8B0 0x0244      LDRH     R0,[R0, #+580]
   \   000000D4   0x2802             CMP      R0,#+2
   \   000000D6   0xDB2C             BLT.N    ??GetOilBoxModel_8
    184              {
    185                  for(uint8 i = 0 ;i <  sCtrl.sCalcModel.PotNum-1; i++)
   \   000000D8   0x2000             MOVS     R0,#+0
   \                     ??GetOilBoxModel_9: (+1)
   \   000000DA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000DC   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   000000E0   0xF8B1 0x1244      LDRH     R1,[R1, #+580]
   \   000000E4   0x1E49             SUBS     R1,R1,#+1
   \   000000E6   0x4288             CMP      R0,R1
   \   000000E8   0xDA25             BGE.N    ??GetOilBoxModel_10
    186                  {
    187                      if(sCtrl.sCalcModel.sModPot[i+1].DipVal >  sCtrl.sCalcModel.sModPot[i].DipVal 
    188                         &&  sCtrl.sCalcModel.sModPot[i+1].HigVal >  sCtrl.sCalcModel.sModPot[i].HigVal)
   \   000000EA   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   000000EE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000F0   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000000F4   0xF8B1 0x10B6      LDRH     R1,[R1, #+182]
   \   000000F8   0x.... 0x....      LDR.W    R2,??DataTable7_2
   \   000000FC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000FE   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000102   0xF8B2 0x20BA      LDRH     R2,[R2, #+186]
   \   00000106   0x4291             CMP      R1,R2
   \   00000108   0xD20F             BCS.N    ??GetOilBoxModel_11
   \   0000010A   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   0000010E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000110   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000114   0xF8B1 0x10B4      LDRH     R1,[R1, #+180]
   \   00000118   0x.... 0x....      LDR.W    R2,??DataTable7_2
   \   0000011C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000011E   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000122   0xF8B2 0x20B8      LDRH     R2,[R2, #+184]
   \   00000126   0x4291             CMP      R1,R2
   \   00000128   0xD301             BCC.N    ??GetOilBoxModel_12
    189                      { continue; }     //模型的点数后点值大于前点值，任务模型正常，否者异常
    190                      else
    191                      {      
    192                          modelerrflg = 1;
   \                     ??GetOilBoxModel_11: (+1)
   \   0000012A   0x2101             MOVS     R1,#+1
   \   0000012C   0x000C             MOVS     R4,R1
    193                      }                        
    194                  }
   \                     ??GetOilBoxModel_12: (+1)
   \   0000012E   0x1C40             ADDS     R0,R0,#+1
   \   00000130   0xE7D3             B.N      ??GetOilBoxModel_9
    195              }
    196              else
    197              {
    198                  modelerrflg = 1;
   \                     ??GetOilBoxModel_8: (+1)
   \   00000132   0x2001             MOVS     R0,#+1
   \   00000134   0x0004             MOVS     R4,R0
    199              }
    200              
    201              if(modelerrflg)    
   \                     ??GetOilBoxModel_10: (+1)
   \   00000136   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000138   0x2C00             CMP      R4,#+0
   \   0000013A   0xD00B             BEQ.N    ??GetOilBoxModel_13
    202              {
    203                  //模型错误，采用默认模型DF4D
    204                  GetDf4dOilBoxModel((stcModel *)&l_sModel);    
   \   0000013C   0x.... 0x....      LDR.W    R0,??DataTable7_3
   \   00000140   0x.... 0x....      BL       GetDf4dOilBoxModel
    205                  
    206                  stcModelTostcModelComplex((stcCalcModel *)&sCtrl.sCalcModel,(stcModel *)&l_sModel); //100829	
   \   00000144   0x.... 0x....      LDR.W    R1,??DataTable7_3
   \   00000148   0x.... 0x....      LDR.W    R0,??DataTable7_1
   \   0000014C   0x.... 0x....      BL       stcModelTostcModelComplex
    207                  return  0; 
   \   00000150   0x2000             MOVS     R0,#+0
   \   00000152   0xE000             B.N      ??GetOilBoxModel_1
    208          	}
    209              
    210              return 1;
   \                     ??GetOilBoxModel_13: (+1)
   \   00000154   0x2001             MOVS     R0,#+1
   \                     ??GetOilBoxModel_1: (+1)
   \   00000156   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    211          }
    212          
    213          

   \                                 In section .bss, align 2
    214          int16	l_Dip1Frq10SecChg;
   \                     l_Dip1Frq10SecChg:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    215          int16	l_Dip2Frq10SecChg;
   \                     l_Dip2Frq10SecChg:
   \   00000000                      DS8 2
    216          /*******************************************************************************
    217           * 名    称：        GetFrqChgState
    218           * 功    能：        取油量变化状态
    219           * 入口参数：        无
    220           * 出口参数： 	    无
    221           * 作　 　者： 	    redmornigcn
    222           * 创建日期： 	    2017-05-17
    223           * 修    改：
    224           * 修改日期：
    225           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    226          void  GetDip10SecChg(int16	CurDip1Prs,int16	CurDip2Prs )
    227          {
   \                     GetDip10SecChg: (+1)
   \   00000000   0xB470             PUSH     {R4-R6}
    228          	static	uint32	Times = 0;
    229          	static	int16	Dip1PrsBuf[12];
    230          	static	int16	Dip2PrsBuf[12];	
    231          	
    232          	Dip1PrsBuf[Times %12] = CurDip1Prs;
   \   00000002   0x220C             MOVS     R2,#+12
   \   00000004   0x.... 0x....      LDR.W    R3,??DataTable7_5
   \   00000008   0x681B             LDR      R3,[R3, #+0]
   \   0000000A   0x.... 0x....      LDR.W    R4,??DataTable7_5
   \   0000000E   0x6824             LDR      R4,[R4, #+0]
   \   00000010   0xFBB4 0xF4F2      UDIV     R4,R4,R2
   \   00000014   0xFB02 0x3214      MLS      R2,R2,R4,R3
   \   00000018   0x.... 0x....      LDR.W    R3,??DataTable7_6
   \   0000001C   0xF823 0x0012      STRH     R0,[R3, R2, LSL #+1]
    233          	Dip2PrsBuf[Times %12] = CurDip2Prs;
   \   00000020   0x220C             MOVS     R2,#+12
   \   00000022   0x.... 0x....      LDR.W    R3,??DataTable7_5
   \   00000026   0x681B             LDR      R3,[R3, #+0]
   \   00000028   0x.... 0x....      LDR.W    R4,??DataTable7_5
   \   0000002C   0x6824             LDR      R4,[R4, #+0]
   \   0000002E   0xFBB4 0xF4F2      UDIV     R4,R4,R2
   \   00000032   0xFB02 0x3214      MLS      R2,R2,R4,R3
   \   00000036   0x.... 0x....      LDR.W    R3,??DataTable7_7
   \   0000003A   0xF823 0x1012      STRH     R1,[R3, R2, LSL #+1]
    234              
    235          
    236          	if(Times > 12)
   \   0000003E   0x.... 0x....      LDR.W    R2,??DataTable7_5
   \   00000042   0x6812             LDR      R2,[R2, #+0]
   \   00000044   0x2A0D             CMP      R2,#+13
   \   00000046   0xD340             BCC.N    ??GetDip10SecChg_0
    237          	{
    238          		l_Dip1Frq10SecChg = Dip1PrsBuf[Times %12] - Dip1PrsBuf[(Times - 11)%12];		//2??μ			
   \   00000048   0x220C             MOVS     R2,#+12
   \   0000004A   0x.... 0x....      LDR.W    R3,??DataTable7_5
   \   0000004E   0x681B             LDR      R3,[R3, #+0]
   \   00000050   0x3B0B             SUBS     R3,R3,#+11
   \   00000052   0x240C             MOVS     R4,#+12
   \   00000054   0x.... 0x....      LDR.W    R5,??DataTable7_5
   \   00000058   0x682D             LDR      R5,[R5, #+0]
   \   0000005A   0x.... 0x....      LDR.W    R6,??DataTable7_5
   \   0000005E   0x6836             LDR      R6,[R6, #+0]
   \   00000060   0xFBB6 0xF6F2      UDIV     R6,R6,R2
   \   00000064   0xFB02 0x5216      MLS      R2,R2,R6,R5
   \   00000068   0x.... 0x....      LDR.W    R5,??DataTable7_6
   \   0000006C   0xF835 0x2012      LDRH     R2,[R5, R2, LSL #+1]
   \   00000070   0xFBB3 0xF5F4      UDIV     R5,R3,R4
   \   00000074   0xFB04 0x3315      MLS      R3,R4,R5,R3
   \   00000078   0x.... 0x....      LDR.W    R4,??DataTable7_6
   \   0000007C   0xF834 0x3013      LDRH     R3,[R4, R3, LSL #+1]
   \   00000080   0x1AD2             SUBS     R2,R2,R3
   \   00000082   0x.... 0x....      LDR.W    R3,??DataTable7_8
   \   00000086   0x801A             STRH     R2,[R3, #+0]
    239          		l_Dip2Frq10SecChg = Dip2PrsBuf[Times %12] - Dip2PrsBuf[(Times - 11)%12];	
   \   00000088   0x220C             MOVS     R2,#+12
   \   0000008A   0x.... 0x....      LDR.W    R3,??DataTable7_5
   \   0000008E   0x681B             LDR      R3,[R3, #+0]
   \   00000090   0x3B0B             SUBS     R3,R3,#+11
   \   00000092   0x240C             MOVS     R4,#+12
   \   00000094   0x.... 0x....      LDR.W    R5,??DataTable7_5
   \   00000098   0x682D             LDR      R5,[R5, #+0]
   \   0000009A   0x.... 0x....      LDR.W    R6,??DataTable7_5
   \   0000009E   0x6836             LDR      R6,[R6, #+0]
   \   000000A0   0xFBB6 0xF6F2      UDIV     R6,R6,R2
   \   000000A4   0xFB02 0x5216      MLS      R2,R2,R6,R5
   \   000000A8   0x.... 0x....      LDR.W    R5,??DataTable7_7
   \   000000AC   0xF835 0x2012      LDRH     R2,[R5, R2, LSL #+1]
   \   000000B0   0xFBB3 0xF5F4      UDIV     R5,R3,R4
   \   000000B4   0xFB04 0x3315      MLS      R3,R4,R5,R3
   \   000000B8   0x.... 0x....      LDR.W    R4,??DataTable7_7
   \   000000BC   0xF834 0x3013      LDRH     R3,[R4, R3, LSL #+1]
   \   000000C0   0x1AD2             SUBS     R2,R2,R3
   \   000000C2   0x.... 0x....      LDR.W    R3,??DataTable7_9
   \   000000C6   0x801A             STRH     R2,[R3, #+0]
   \   000000C8   0xE007             B.N      ??GetDip10SecChg_1
    240          	}
    241          	else
    242          	{
    243          		l_Dip1Frq10SecChg  = 0;
   \                     ??GetDip10SecChg_0: (+1)
   \   000000CA   0x2200             MOVS     R2,#+0
   \   000000CC   0x.... 0x....      LDR.W    R3,??DataTable7_8
   \   000000D0   0x801A             STRH     R2,[R3, #+0]
    244          		l_Dip2Frq10SecChg  = 0;				
   \   000000D2   0x2200             MOVS     R2,#+0
   \   000000D4   0x.... 0x....      LDR.W    R3,??DataTable7_9
   \   000000D8   0x801A             STRH     R2,[R3, #+0]
    245          	}
    246          	
    247          	Times++;  	
   \                     ??GetDip10SecChg_1: (+1)
   \   000000DA   0x.... 0x....      LDR.W    R2,??DataTable7_5
   \   000000DE   0x6812             LDR      R2,[R2, #+0]
   \   000000E0   0x1C52             ADDS     R2,R2,#+1
   \   000000E2   0x.... 0x....      LDR.W    R3,??DataTable7_5
   \   000000E6   0x601A             STR      R2,[R3, #+0]
    248          }
   \   000000E8   0xBC70             POP      {R4-R6}
   \   000000EA   0x4770             BX       LR               ;; return

   \                                 In section .bss, align 4
   \                     ??Times:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??Dip1PrsBuf:
   \   00000000                      DS8 24

   \                                 In section .bss, align 4
   \                     ??Dip2PrsBuf:
   \   00000000                      DS8 24
    249          #define		JUDGE_STATE_TIMES	15
    250          /*******************************************************************************
    251           * 名    称：        GetFrqChgState
    252           * 功    能：        取油量变化状态
    253           * 入口参数：        无
    254           * 出口参数： 	    无
    255           * 作　 　者： 	    redmornigcn
    256           * 创建日期： 	    2017-05-17
    257           * 修    改：
    258           * 修改日期：
    259           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    260          uint8  GetFrqChgState(int16	CurDip1Prs,int16	CurDip2Prs)
    261          {
   \                     GetFrqChgState: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    262              static  int32  UpTimes = 0,DownTimes = 0,StopTimes = 0,WaveTimes = 0;
    263              static	uint8	FreqChgState = FREQ_WAVE_STATE;
    264              
    265              GetDip10SecChg(CurDip1Prs,CurDip2Prs);							//è?10??±??ˉ?μ
   \   00000006   0x0029             MOVS     R1,R5
   \   00000008   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000000E   0x.... 0x....      BL       GetDip10SecChg
    266                
    267              if(((l_Dip1Frq10SecChg > 30) && (l_Dip2Frq10SecChg > 30)))		//í?éy
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable7_8
   \   00000016   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000001A   0x281F             CMP      R0,#+31
   \   0000001C   0xDB2D             BLT.N    ??GetFrqChgState_0
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable7_9
   \   00000022   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000026   0x281F             CMP      R0,#+31
   \   00000028   0xDB27             BLT.N    ??GetFrqChgState_0
    268              {
    269                  UpTimes++;
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable7_10
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0x1C40             ADDS     R0,R0,#+1
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable7_10
   \   00000036   0x6008             STR      R0,[R1, #+0]
    270                  DownTimes = WaveTimes = 0;
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0x.... 0x....      LDR.W    R1,??DataTable7_11
   \   0000003E   0x6008             STR      R0,[R1, #+0]
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable7_11
   \   00000044   0x6800             LDR      R0,[R0, #+0]
   \   00000046   0x.... 0x....      LDR.W    R1,??DataTable7_12
   \   0000004A   0x6008             STR      R0,[R1, #+0]
    271                  //100815
    272                	StopTimes	= 0;
   \   0000004C   0x2000             MOVS     R0,#+0
   \   0000004E   0x.... 0x....      LDR.W    R1,??DataTable7_13
   \   00000052   0x6008             STR      R0,[R1, #+0]
    273          
    274                  if((UpTimes > JUDGE_STATE_TIMES))
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable7_10
   \   00000058   0x6800             LDR      R0,[R0, #+0]
   \   0000005A   0x2810             CMP      R0,#+16
   \   0000005C   0xF2C0 0x80B7      BLT.W    ??GetFrqChgState_1
    275                  {        
    276          	        StopTimes	= 0;
   \   00000060   0x2000             MOVS     R0,#+0
   \   00000062   0x.... 0x....      LDR.W    R1,??DataTable7_13
   \   00000066   0x6008             STR      R0,[R1, #+0]
    277                      UpTimes 	= 0;
   \   00000068   0x2000             MOVS     R0,#+0
   \   0000006A   0x.... 0x....      LDR.W    R1,??DataTable7_10
   \   0000006E   0x6008             STR      R0,[R1, #+0]
    278                      
    279                      FreqChgState = FREQ_UP_STATE;
   \   00000070   0x2004             MOVS     R0,#+4
   \   00000072   0x.... 0x....      LDR.W    R1,??DataTable7_14
   \   00000076   0x7008             STRB     R0,[R1, #+0]
   \   00000078   0xE0A9             B.N      ??GetFrqChgState_1
    280                  }
    281              }
    282              else  if(((l_Dip1Frq10SecChg < -1) && (l_Dip2Frq10SecChg < -1)))		//í??μ	
   \                     ??GetFrqChgState_0: (+1)
   \   0000007A   0x.... 0x....      LDR.W    R0,??DataTable7_8
   \   0000007E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000082   0xF110 0x0F01      CMN      R0,#+1
   \   00000086   0xDA3D             BGE.N    ??GetFrqChgState_2
   \   00000088   0x.... 0x....      LDR.W    R0,??DataTable7_9
   \   0000008C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000090   0xF110 0x0F01      CMN      R0,#+1
   \   00000094   0xDA36             BGE.N    ??GetFrqChgState_2
    283              {
    284              	DownTimes++;
   \   00000096   0x.... 0x....      LDR.W    R0,??DataTable7_12
   \   0000009A   0x6800             LDR      R0,[R0, #+0]
   \   0000009C   0x1C40             ADDS     R0,R0,#+1
   \   0000009E   0x.... 0x....      LDR.W    R1,??DataTable7_12
   \   000000A2   0x6008             STR      R0,[R1, #+0]
    285              	UpTimes = WaveTimes = 0;
   \   000000A4   0x2000             MOVS     R0,#+0
   \   000000A6   0x.... 0x....      LDR.W    R1,??DataTable7_11
   \   000000AA   0x6008             STR      R0,[R1, #+0]
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable7_11
   \   000000B0   0x6800             LDR      R0,[R0, #+0]
   \   000000B2   0x.... 0x....      LDR.W    R1,??DataTable7_10
   \   000000B6   0x6008             STR      R0,[R1, #+0]
    286          		//100815
    287          		if(abs(l_Dip1Frq10SecChg) > 30 || abs(l_Dip1Frq10SecChg) > 30)
   \   000000B8   0x.... 0x....      LDR.W    R0,??DataTable7_8
   \   000000BC   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000C0   0x.... 0x....      BL       abs
   \   000000C4   0x281F             CMP      R0,#+31
   \   000000C6   0xDA07             BGE.N    ??GetFrqChgState_3
   \   000000C8   0x.... 0x....      LDR.W    R0,??DataTable7_8
   \   000000CC   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000D0   0x.... 0x....      BL       abs
   \   000000D4   0x281F             CMP      R0,#+31
   \   000000D6   0xDB03             BLT.N    ??GetFrqChgState_4
    288          		{
    289          			StopTimes	= 0;
   \                     ??GetFrqChgState_3: (+1)
   \   000000D8   0x2000             MOVS     R0,#+0
   \   000000DA   0x.... 0x....      LDR.W    R1,??DataTable7_13
   \   000000DE   0x6008             STR      R0,[R1, #+0]
    290          //			FreqChgState = FREQ_WAVE_STATE;
    291          		}
    292          		
    293                  if((DownTimes > JUDGE_STATE_TIMES) )
   \                     ??GetFrqChgState_4: (+1)
   \   000000E0   0x.... 0x....      LDR.W    R0,??DataTable7_12
   \   000000E4   0x6800             LDR      R0,[R0, #+0]
   \   000000E6   0x2810             CMP      R0,#+16
   \   000000E8   0xDB71             BLT.N    ??GetFrqChgState_1
    294                  {        
    295          	        StopTimes	= 0;
   \   000000EA   0x2000             MOVS     R0,#+0
   \   000000EC   0x.... 0x....      LDR.W    R1,??DataTable7_13
   \   000000F0   0x6008             STR      R0,[R1, #+0]
    296                      DownTimes 	= 0;
   \   000000F2   0x2000             MOVS     R0,#+0
   \   000000F4   0x.... 0x....      LDR.W    R1,??DataTable7_12
   \   000000F8   0x6008             STR      R0,[R1, #+0]
    297                      
    298                      FreqChgState = FREQ_DOWN_STATE;
   \   000000FA   0x2001             MOVS     R0,#+1
   \   000000FC   0x.... 0x....      LDR.W    R1,??DataTable7_14
   \   00000100   0x7008             STRB     R0,[R1, #+0]
   \   00000102   0xE064             B.N      ??GetFrqChgState_1
    299                  }
    300              }
    301          	else  if(	(abs(l_Dip1Frq10SecChg) < 15 ) && 
    302          			 	(abs(l_Dip2Frq10SecChg) < 15 ))						//?è?¨
   \                     ??GetFrqChgState_2: (+1)
   \   00000104   0x.... 0x....      LDR.W    R0,??DataTable7_8
   \   00000108   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000010C   0x.... 0x....      BL       abs
   \   00000110   0x280F             CMP      R0,#+15
   \   00000112   0xDA26             BGE.N    ??GetFrqChgState_5
   \   00000114   0x.... 0x....      LDR.W    R0,??DataTable7_9
   \   00000118   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000011C   0x.... 0x....      BL       abs
   \   00000120   0x280F             CMP      R0,#+15
   \   00000122   0xDA1E             BGE.N    ??GetFrqChgState_5
    303              {
    304                  StopTimes++;
   \   00000124   0x.... 0x....      LDR.W    R0,??DataTable7_13
   \   00000128   0x6800             LDR      R0,[R0, #+0]
   \   0000012A   0x1C40             ADDS     R0,R0,#+1
   \   0000012C   0x.... 0x....      LDR.W    R1,??DataTable7_13
   \   00000130   0x6008             STR      R0,[R1, #+0]
    305                  UpTimes = DownTimes =  WaveTimes = 0;
   \   00000132   0x2000             MOVS     R0,#+0
   \   00000134   0x.... 0x....      LDR.W    R1,??DataTable7_11
   \   00000138   0x6008             STR      R0,[R1, #+0]
   \   0000013A   0x.... 0x....      LDR.W    R1,??DataTable7_12
   \   0000013E   0x6008             STR      R0,[R1, #+0]
   \   00000140   0x.... 0x....      LDR.W    R1,??DataTable7_10
   \   00000144   0x6008             STR      R0,[R1, #+0]
    306                          
    307                  if(StopTimes > JUDGE_STATE_TIMES * 2)
   \   00000146   0x.... 0x....      LDR.W    R0,??DataTable7_13
   \   0000014A   0x6800             LDR      R0,[R0, #+0]
   \   0000014C   0x281F             CMP      R0,#+31
   \   0000014E   0xDB3E             BLT.N    ??GetFrqChgState_1
    308                  {
    309                      StopTimes = 0;
   \   00000150   0x2000             MOVS     R0,#+0
   \   00000152   0x.... 0x....      LDR.W    R1,??DataTable7_13
   \   00000156   0x6008             STR      R0,[R1, #+0]
    310                      FreqChgState = FREQ_STOP_STATE;
   \   00000158   0x2005             MOVS     R0,#+5
   \   0000015A   0x.... 0x....      LDR.W    R1,??DataTable7_14
   \   0000015E   0x7008             STRB     R0,[R1, #+0]
   \   00000160   0xE035             B.N      ??GetFrqChgState_1
    311                  }
    312              }
    313              else
    314              {
    315                  UpTimes = DownTimes = StopTimes = 0;						
   \                     ??GetFrqChgState_5: (+1)
   \   00000162   0x2000             MOVS     R0,#+0
   \   00000164   0x.... 0x....      LDR.W    R1,??DataTable7_13
   \   00000168   0x6008             STR      R0,[R1, #+0]
   \   0000016A   0x.... 0x....      LDR.W    R1,??DataTable7_12
   \   0000016E   0x6008             STR      R0,[R1, #+0]
   \   00000170   0x.... 0x....      LDR.W    R1,??DataTable7_10
   \   00000174   0x6008             STR      R0,[R1, #+0]
    316          
    317                  if( abs(l_Dip1Frq10SecChg - l_Dip2Frq10SecChg) > 300 )		//′ó2¨?ˉ
   \   00000176   0x.... 0x....      LDR.W    R0,??DataTable7_8
   \   0000017A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000017E   0x.... 0x....      LDR.W    R1,??DataTable7_9
   \   00000182   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000186   0x1A40             SUBS     R0,R0,R1
   \   00000188   0x.... 0x....      BL       abs
   \   0000018C   0xF5B0 0x7F96      CMP      R0,#+300
   \   00000190   0xDD08             BLE.N    ??GetFrqChgState_6
    318                  {
    319          	        WaveTimes 	= JUDGE_STATE_TIMES;
   \   00000192   0x200F             MOVS     R0,#+15
   \   00000194   0x.... 0x....      LDR.W    R1,??DataTable7_11
   \   00000198   0x6008             STR      R0,[R1, #+0]
    320          	        FreqChgState = FREQ_LAG_WAVE_STATE;
   \   0000019A   0x2003             MOVS     R0,#+3
   \   0000019C   0x.... 0x....      LDR.W    R1,??DataTable7_14
   \   000001A0   0x7008             STRB     R0,[R1, #+0]
   \   000001A2   0xE014             B.N      ??GetFrqChgState_1
    321          	    }
    322                  else
    323                  {
    324                  	if(WaveTimes > 0)
   \                     ??GetFrqChgState_6: (+1)
   \   000001A4   0x.... 0x....      LDR.W    R0,??DataTable7_11
   \   000001A8   0x6800             LDR      R0,[R0, #+0]
   \   000001AA   0x2801             CMP      R0,#+1
   \   000001AC   0xDB0B             BLT.N    ??GetFrqChgState_7
    325                      {
    326                          WaveTimes--;
   \   000001AE   0x.... 0x....      LDR.W    R0,??DataTable7_11
   \   000001B2   0x6800             LDR      R0,[R0, #+0]
   \   000001B4   0x1E40             SUBS     R0,R0,#+1
   \   000001B6   0x.... 0x....      LDR.W    R1,??DataTable7_11
   \   000001BA   0x6008             STR      R0,[R1, #+0]
    327                         	FreqChgState = FREQ_LAG_WAVE_STATE;	
   \   000001BC   0x2003             MOVS     R0,#+3
   \   000001BE   0x.... 0x....      LDR.W    R1,??DataTable7_14
   \   000001C2   0x7008             STRB     R0,[R1, #+0]
   \   000001C4   0xE003             B.N      ??GetFrqChgState_1
    328                      }
    329                      else													//2¨?ˉ
    330                      {
    331                          FreqChgState = FREQ_WAVE_STATE;
   \                     ??GetFrqChgState_7: (+1)
   \   000001C6   0x2002             MOVS     R0,#+2
   \   000001C8   0x.... 0x....      LDR.W    R1,??DataTable7_14
   \   000001CC   0x7008             STRB     R0,[R1, #+0]
    332                      }
    333                  }	    
    334              }
    335              
    336              return	FreqChgState;
   \                     ??GetFrqChgState_1: (+1)
   \   000001CE   0x.... 0x....      LDR.W    R0,??DataTable7_14
   \   000001D2   0x7800             LDRB     R0,[R0, #+0]
   \   000001D4   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    337          }

   \                                 In section .bss, align 4
   \                     ??UpTimes:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??DownTimes:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??StopTimes:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??WaveTimes:
   \   00000000                      DS8 4

   \                                 In section .data, align 1
   \                     ??FreqChgState:
   \   00000000   0x02               DC8 2
    338           
    339          /*******************************************************************************
    340           * 名    称：        GetDipPrs30SecVal
    341           * 功    能：        计算油量。根据高度值，油箱容积表，修正系数等计算油量.
    342           * 入口参数：        无
    343           * 出口参数： 	    无
    344           * 作　 　者： 	    redmornigcn
    345           * 创建日期： 	    2017-05-16
    346           * 修    改：
    347           * 修改日期：
    348           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    349          int16    GetDipPrs30SecVal(int16   PrsAvg)
    350          {
   \                     GetDipPrs30SecVal: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0x0004             MOVS     R4,R0
    351          	static	uint32	Times	= 0;
    352          	static	int32	Sum30 = 0;
    353          	static	int32	Sum5 = 0;
    354          	int16	PrsAvg30 = 0;
   \   00000006   0x2500             MOVS     R5,#+0
    355          	int16	PrsAvg10 = 0;
   \   00000008   0x2600             MOVS     R6,#+0
    356          	int16	PrsAvg5  = 0;
   \   0000000A   0x2700             MOVS     R7,#+0
    357          	int16 	MinutePrsAvg;
    358          	uint8	PrsChgState;
    359          	int32	AvgTmp;
    360          		
    361          	PrsChgState = GetFrqChgState(sCtrl.sRec.Myhig1,sCtrl.sRec.Myhig2);	//波动状态	
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   00000010   0xF9B0 0x1066      LDRSH    R1,[R0, #+102]
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   00000018   0xF9B0 0x0064      LDRSH    R0,[R0, #+100]
   \   0000001C   0x.... 0x....      BL       GetFrqChgState
   \   00000020   0x4681             MOV      R9,R0
    362          
    363          	if(Times < 30)
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable7_15
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0x281E             CMP      R0,#+30
   \   0000002A   0xD235             BCS.N    ??GetDipPrs30SecVal_0
    364          	{
    365                  if(PrsAvg == 0)                                                //非零才计算
   \   0000002C   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000002E   0x2C00             CMP      R4,#+0
   \   00000030   0xD101             BNE.N    ??GetDipPrs30SecVal_1
    366                      return 0;
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0xE085             B.N      ??GetDipPrs30SecVal_2
    367                          
    368          		Sum30 += PrsAvg;	
   \                     ??GetDipPrs30SecVal_1: (+1)
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable7_16
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000003E   0x1820             ADDS     R0,R4,R0
   \   00000040   0x.... 0x....      LDR.W    R1,??DataTable7_16
   \   00000044   0x6008             STR      R0,[R1, #+0]
    369          		if(Times < 5)
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable7_15
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0x2805             CMP      R0,#+5
   \   0000004E   0xD208             BCS.N    ??GetDipPrs30SecVal_3
    370          		{
    371          			Sum5 += PrsAvg;
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable7_17
   \   00000054   0x6800             LDR      R0,[R0, #+0]
   \   00000056   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000058   0x1820             ADDS     R0,R4,R0
   \   0000005A   0x.... 0x....      LDR.W    R1,??DataTable7_17
   \   0000005E   0x6008             STR      R0,[R1, #+0]
   \   00000060   0xE010             B.N      ??GetDipPrs30SecVal_4
    372          		}
    373          		else
    374          		{
    375          			AvgTmp = Sum5 / 5; 
   \                     ??GetDipPrs30SecVal_3: (+1)
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable7_17
   \   00000066   0x6800             LDR      R0,[R0, #+0]
   \   00000068   0x2105             MOVS     R1,#+5
   \   0000006A   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000006E   0x4682             MOV      R10,R0
    376          			Sum5  = Sum5 + PrsAvg - AvgTmp;			
   \   00000070   0x.... 0x....      LDR.W    R0,??DataTable7_17
   \   00000074   0x6800             LDR      R0,[R0, #+0]
   \   00000076   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000078   0x1820             ADDS     R0,R4,R0
   \   0000007A   0xEBB0 0x000A      SUBS     R0,R0,R10
   \   0000007E   0x.... 0x....      LDR.W    R1,??DataTable7_17
   \   00000082   0x6008             STR      R0,[R1, #+0]
    377          		}
    378          
    379                  Times++;
   \                     ??GetDipPrs30SecVal_4: (+1)
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable7_15
   \   00000088   0x6800             LDR      R0,[R0, #+0]
   \   0000008A   0x1C40             ADDS     R0,R0,#+1
   \   0000008C   0x.... 0x....      LDR.W    R1,??DataTable7_15
   \   00000090   0x6008             STR      R0,[R1, #+0]
    380          
    381          		return	PrsAvg;
   \   00000092   0x0020             MOVS     R0,R4
   \   00000094   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000096   0xE054             B.N      ??GetDipPrs30SecVal_2
    382          	}
    383          	else
    384          	{
    385          		AvgTmp = Sum30 / 30;
   \                     ??GetDipPrs30SecVal_0: (+1)
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable7_16
   \   0000009C   0x6800             LDR      R0,[R0, #+0]
   \   0000009E   0x211E             MOVS     R1,#+30
   \   000000A0   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000A4   0x4682             MOV      R10,R0
    386          		Sum30  = Sum30 + PrsAvg - AvgTmp;		
   \   000000A6   0x.... 0x....      LDR.W    R0,??DataTable7_16
   \   000000AA   0x6800             LDR      R0,[R0, #+0]
   \   000000AC   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000000AE   0x1820             ADDS     R0,R4,R0
   \   000000B0   0xEBB0 0x000A      SUBS     R0,R0,R10
   \   000000B4   0x.... 0x....      LDR.W    R1,??DataTable7_16
   \   000000B8   0x6008             STR      R0,[R1, #+0]
    387          
    388          		AvgTmp = Sum5 / 5; 
   \   000000BA   0x.... 0x....      LDR.W    R0,??DataTable7_17
   \   000000BE   0x6800             LDR      R0,[R0, #+0]
   \   000000C0   0x2105             MOVS     R1,#+5
   \   000000C2   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000C6   0x4682             MOV      R10,R0
    389          		Sum5  = Sum5 + PrsAvg - AvgTmp;	
   \   000000C8   0x.... 0x....      LDR.W    R0,??DataTable7_17
   \   000000CC   0x6800             LDR      R0,[R0, #+0]
   \   000000CE   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000000D0   0x1820             ADDS     R0,R4,R0
   \   000000D2   0xEBB0 0x000A      SUBS     R0,R0,R10
   \   000000D6   0x.... 0x....      LDR.W    R1,??DataTable7_17
   \   000000DA   0x6008             STR      R0,[R1, #+0]
    390                  
    391                  Times++;
   \   000000DC   0x.... 0x....      LDR.W    R0,??DataTable7_15
   \   000000E0   0x6800             LDR      R0,[R0, #+0]
   \   000000E2   0x1C40             ADDS     R0,R0,#+1
   \   000000E4   0x.... 0x....      LDR.W    R1,??DataTable7_15
   \   000000E8   0x6008             STR      R0,[R1, #+0]
    392          	}
    393          
    394          	PrsAvg30 	= Sum30 / 30;
   \   000000EA   0x.... 0x....      LDR.W    R0,??DataTable7_16
   \   000000EE   0x6800             LDR      R0,[R0, #+0]
   \   000000F0   0x211E             MOVS     R1,#+30
   \   000000F2   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000F6   0x0005             MOVS     R5,R0
    395          	PrsAvg5 	= Sum5 / 5;
   \   000000F8   0x.... 0x....      LDR.W    R0,??DataTable7_17
   \   000000FC   0x6800             LDR      R0,[R0, #+0]
   \   000000FE   0x2105             MOVS     R1,#+5
   \   00000100   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000104   0x0007             MOVS     R7,R0
    396          	PrsAvg10 	=(PrsAvg5*2 + PrsAvg30) / 3;
   \   00000106   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000108   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   0000010A   0xEB15 0x0047      ADDS     R0,R5,R7, LSL #+1
   \   0000010E   0x2103             MOVS     R1,#+3
   \   00000110   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000114   0x0006             MOVS     R6,R0
    397          
    398          	if( (PrsChgState != FREQ_WAVE_STATE) && (PrsChgState != FREQ_LAG_WAVE_STATE))
   \   00000116   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000011A   0xF1B9 0x0F02      CMP      R9,#+2
   \   0000011E   0xD00D             BEQ.N    ??GetDipPrs30SecVal_5
   \   00000120   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000124   0xF1B9 0x0F03      CMP      R9,#+3
   \   00000128   0xD008             BEQ.N    ??GetDipPrs30SecVal_5
    399          	{
    400          		if(PrsChgState == FREQ_STOP_STATE)
   \   0000012A   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000012E   0xF1B9 0x0F05      CMP      R9,#+5
   \   00000132   0xD101             BNE.N    ??GetDipPrs30SecVal_6
    401          		{
    402          			MinutePrsAvg = PrsAvg10;
   \   00000134   0x46B0             MOV      R8,R6
   \   00000136   0xE002             B.N      ??GetDipPrs30SecVal_7
    403          		}
    404          		else 
    405          		{
    406          			MinutePrsAvg = PrsAvg5;
   \                     ??GetDipPrs30SecVal_6: (+1)
   \   00000138   0x46B8             MOV      R8,R7
   \   0000013A   0xE000             B.N      ??GetDipPrs30SecVal_7
    407          		}
    408          	}
    409          	else
    410          	{
    411          		MinutePrsAvg = PrsAvg30;
   \                     ??GetDipPrs30SecVal_5: (+1)
   \   0000013C   0x46A8             MOV      R8,R5
    412          	}
    413          	
    414          	return	MinutePrsAvg;
   \                     ??GetDipPrs30SecVal_7: (+1)
   \   0000013E   0x4640             MOV      R0,R8
   \   00000140   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \                     ??GetDipPrs30SecVal_2: (+1)
   \   00000142   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    415          }

   \                                 In section .bss, align 4
   \                     ??Times_1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??Sum30:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??Sum5:
   \   00000000                      DS8 4
    416          
    417          /*******************************************************************************
    418           * 名    称：        GetMathOilVal
    419           * 功    能：        计算油量。根据高度值，油箱容积表，修正系数等计算油量.
    420           * 入口参数：        无
    421           * 出口参数： 	    无
    422           * 作　 　者： 	    redmornigcn
    423           * 创建日期： 	    2017-05-16
    424           * 修    改：
    425           * 修改日期：
    426           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    427          uint16    GetMathOilVal(int16   hig)
    428          {
   \                     GetMathOilVal: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB083             SUB      SP,SP,#+12
   \   00000006   0x0004             MOVS     R4,R0
    429            	float 		DipVal = 0;                  		
   \   00000008   0x2500             MOVS     R5,#+0
    430            	float 		Hight;                  			
    431          	float		MinHig,MaxHig;	
    432          	float		MinDip,MaxDip;					
    433              
    434          	uint8		ModelPotNum;
    435          	uint8		i;
    436              
    437          	ModelPotNum = sCtrl.sCalcModel.PotNum;              //模型点数
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   0000000E   0xF8B0 0x0244      LDRH     R0,[R0, #+580]
   \   00000012   0xF88D 0x0004      STRB     R0,[SP, #+4]
    438          
    439          	Hight = hig;                                        //高度值
   \   00000016   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000018   0x0020             MOVS     R0,R4
   \   0000001A   0x.... 0x....      BL       __aeabi_i2f
   \   0000001E   0x4683             MOV      R11,R0
    440          
    441          	Hight += ((float)sCtrl.SOilPara.Hig );              //加入补偿高度	
   \   00000020   0x....             LDR.N    R0,??DataTable7_2
   \   00000022   0xF9B0 0x00A2      LDRSH    R0,[R0, #+162]
   \   00000026   0x.... 0x....      BL       __aeabi_i2f
   \   0000002A   0x4659             MOV      R1,R11
   \   0000002C   0x.... 0x....      BL       __aeabi_fadd
   \   00000030   0x4683             MOV      R11,R0
    442            	
    443            	for(i = 1; i <  ModelPotNum; i++)                   //计算点的个数
   \   00000032   0x2001             MOVS     R0,#+1
   \   00000034   0x4682             MOV      R10,R0
   \                     ??GetMathOilVal_0: (+1)
   \   00000036   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \   0000003A   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   0000003E   0x4582             CMP      R10,R0
   \   00000040   0xF080 0x80A4      BCS.W    ??GetMathOilVal_1
    444            	{
    445          		MinHig 	= sCtrl.sCalcModel.sModPot[i-1].HigVal; //第1个点的高度值
   \   00000044   0x....             LDR.N    R0,??DataTable7_2
   \   00000046   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   0000004A   0xEB10 0x008A      ADDS     R0,R0,R10, LSL #+2
   \   0000004E   0xF8B0 0x00B0      LDRH     R0,[R0, #+176]
   \   00000052   0x.... 0x....      BL       __aeabi_ui2f
   \   00000056   0x0006             MOVS     R6,R0
    446          		MaxHig 	= sCtrl.sCalcModel.sModPot[i].HigVal;   //第2个点的高度值
   \   00000058   0x....             LDR.N    R0,??DataTable7_2
   \   0000005A   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   0000005E   0xEB10 0x008A      ADDS     R0,R0,R10, LSL #+2
   \   00000062   0xF8B0 0x00B4      LDRH     R0,[R0, #+180]
   \   00000066   0x.... 0x....      BL       __aeabi_ui2f
   \   0000006A   0x0007             MOVS     R7,R0
    447          
    448          		MinDip 	= sCtrl.sCalcModel.sModPot[i-1].DipVal; //第1个点的油量值
   \   0000006C   0x....             LDR.N    R0,??DataTable7_2
   \   0000006E   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   00000072   0xEB10 0x008A      ADDS     R0,R0,R10, LSL #+2
   \   00000076   0xF8B0 0x00B2      LDRH     R0,[R0, #+178]
   \   0000007A   0x.... 0x....      BL       __aeabi_ui2f
   \   0000007E   0x4680             MOV      R8,R0
    449          		MaxDip 	= sCtrl.sCalcModel.sModPot[i].DipVal;   //第2个点的油量值
   \   00000080   0x....             LDR.N    R0,??DataTable7_2
   \   00000082   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   00000086   0xEB10 0x008A      ADDS     R0,R0,R10, LSL #+2
   \   0000008A   0xF8B0 0x00B6      LDRH     R0,[R0, #+182]
   \   0000008E   0x.... 0x....      BL       __aeabi_ui2f
   \   00000092   0x4681             MOV      R9,R0
    450          						
    451          		if(MinHig == MaxHig  || MinDip == MaxDip)       //计算模型中出现两个相同点
   \   00000094   0x0030             MOVS     R0,R6
   \   00000096   0x0039             MOVS     R1,R7
   \   00000098   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   0000009C   0xD004             BEQ.N    ??GetMathOilVal_2
   \   0000009E   0x4640             MOV      R0,R8
   \   000000A0   0x4649             MOV      R1,R9
   \   000000A2   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   000000A6   0xD101             BNE.N    ??GetMathOilVal_3
    452          		{
    453          			//DisplaySet(60,1,"E-OL");                    //显示油量值
    454          			return	0;                                  //油箱模型错误，显示0
   \                     ??GetMathOilVal_2: (+1)
   \   000000A8   0x2000             MOVS     R0,#+0
   \   000000AA   0xE08A             B.N      ??GetMathOilVal_4
    455          		}
    456          
    457          		if(MinHig <= Hight && Hight < MaxHig)		    //计算油量,在模型值中，按两点值计算
   \                     ??GetMathOilVal_3: (+1)
   \   000000AC   0x4658             MOV      R0,R11
   \   000000AE   0x0031             MOVS     R1,R6
   \   000000B0   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000B4   0xD81E             BHI.N    ??GetMathOilVal_5
   \   000000B6   0x4658             MOV      R0,R11
   \   000000B8   0x0039             MOVS     R1,R7
   \   000000BA   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000BE   0xD219             BCS.N    ??GetMathOilVal_5
    458          		{	
    459          			DipVal = MinDip + ((Hight - MinHig)  * (MaxDip - MinDip)) / (MaxHig - MinHig);
   \   000000C0   0x4658             MOV      R0,R11
   \   000000C2   0x0031             MOVS     R1,R6
   \   000000C4   0x.... 0x....      BL       __aeabi_fsub
   \   000000C8   0x9000             STR      R0,[SP, #+0]
   \   000000CA   0x4648             MOV      R0,R9
   \   000000CC   0x4641             MOV      R1,R8
   \   000000CE   0x.... 0x....      BL       __aeabi_fsub
   \   000000D2   0x9900             LDR      R1,[SP, #+0]
   \   000000D4   0x.... 0x....      BL       __aeabi_fmul
   \   000000D8   0x9000             STR      R0,[SP, #+0]
   \   000000DA   0x0038             MOVS     R0,R7
   \   000000DC   0x0031             MOVS     R1,R6
   \   000000DE   0x.... 0x....      BL       __aeabi_fsub
   \   000000E2   0x0001             MOVS     R1,R0
   \   000000E4   0x9800             LDR      R0,[SP, #+0]
   \   000000E6   0x.... 0x....      BL       __aeabi_fdiv
   \   000000EA   0x4641             MOV      R1,R8
   \   000000EC   0x.... 0x....      BL       __aeabi_fadd
   \   000000F0   0x0005             MOVS     R5,R0
    460          
    461          			break;
   \   000000F2   0xE04B             B.N      ??GetMathOilVal_1
    462          		}
    463          	
    464          		if(i == 1)									//小于最小高度，按最低点斜率
   \                     ??GetMathOilVal_5: (+1)
   \   000000F4   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   000000F8   0xF1BA 0x0F01      CMP      R10,#+1
   \   000000FC   0xD11E             BNE.N    ??GetMathOilVal_6
    465          		{			
    466          			if(Hight < MinHig)
   \   000000FE   0x4658             MOV      R0,R11
   \   00000100   0x0031             MOVS     R1,R6
   \   00000102   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000106   0xD219             BCS.N    ??GetMathOilVal_6
    467          			{
    468          				DipVal = MinDip + ((Hight - MinHig)  * ((MaxDip - MinDip)) / (MaxHig - MinHig));
   \   00000108   0x4658             MOV      R0,R11
   \   0000010A   0x0031             MOVS     R1,R6
   \   0000010C   0x.... 0x....      BL       __aeabi_fsub
   \   00000110   0x9000             STR      R0,[SP, #+0]
   \   00000112   0x4648             MOV      R0,R9
   \   00000114   0x4641             MOV      R1,R8
   \   00000116   0x.... 0x....      BL       __aeabi_fsub
   \   0000011A   0x9900             LDR      R1,[SP, #+0]
   \   0000011C   0x.... 0x....      BL       __aeabi_fmul
   \   00000120   0x9000             STR      R0,[SP, #+0]
   \   00000122   0x0038             MOVS     R0,R7
   \   00000124   0x0031             MOVS     R1,R6
   \   00000126   0x.... 0x....      BL       __aeabi_fsub
   \   0000012A   0x0001             MOVS     R1,R0
   \   0000012C   0x9800             LDR      R0,[SP, #+0]
   \   0000012E   0x.... 0x....      BL       __aeabi_fdiv
   \   00000132   0x4641             MOV      R1,R8
   \   00000134   0x.... 0x....      BL       __aeabi_fadd
   \   00000138   0x0005             MOVS     R5,R0
    469          				
    470          				break;
   \   0000013A   0xE027             B.N      ??GetMathOilVal_1
    471          			}
    472          		}
    473          		
    474          		if(i == (ModelPotNum - 1))					//高度值大于最后一点，按最后点计算
   \                     ??GetMathOilVal_6: (+1)
   \   0000013C   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   00000140   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \   00000144   0x1E40             SUBS     R0,R0,#+1
   \   00000146   0x4582             CMP      R10,R0
   \   00000148   0xD11D             BNE.N    ??GetMathOilVal_7
    475          		{
    476          			
    477          			if(Hight >= MaxHig)
   \   0000014A   0x4658             MOV      R0,R11
   \   0000014C   0x0039             MOVS     R1,R7
   \   0000014E   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000152   0xD818             BHI.N    ??GetMathOilVal_7
    478          			{
    479          				DipVal = MinDip + ((Hight - MinHig)  * ((MaxDip - MinDip)) / (MaxHig - MinHig));
   \   00000154   0x4658             MOV      R0,R11
   \   00000156   0x0031             MOVS     R1,R6
   \   00000158   0x.... 0x....      BL       __aeabi_fsub
   \   0000015C   0x9000             STR      R0,[SP, #+0]
   \   0000015E   0x4648             MOV      R0,R9
   \   00000160   0x4641             MOV      R1,R8
   \   00000162   0x.... 0x....      BL       __aeabi_fsub
   \   00000166   0x9900             LDR      R1,[SP, #+0]
   \   00000168   0x.... 0x....      BL       __aeabi_fmul
   \   0000016C   0x9000             STR      R0,[SP, #+0]
   \   0000016E   0x0038             MOVS     R0,R7
   \   00000170   0x0031             MOVS     R1,R6
   \   00000172   0x.... 0x....      BL       __aeabi_fsub
   \   00000176   0x0001             MOVS     R1,R0
   \   00000178   0x9800             LDR      R0,[SP, #+0]
   \   0000017A   0x.... 0x....      BL       __aeabi_fdiv
   \   0000017E   0x4641             MOV      R1,R8
   \   00000180   0x.... 0x....      BL       __aeabi_fadd
   \   00000184   0x0005             MOVS     R5,R0
    480          			}
    481          		}
    482          	}
   \                     ??GetMathOilVal_7: (+1)
   \   00000186   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \   0000018A   0xE754             B.N      ??GetMathOilVal_0
    483                  
    484              DipVal *= sCtrl.SOilPara.Slope;                 //计算修正斜率
   \                     ??GetMathOilVal_1: (+1)
   \   0000018C   0x....             LDR.N    R0,??DataTable7_2
   \   0000018E   0xF8D0 0x00A8      LDR      R0,[R0, #+168]
   \   00000192   0x.... 0x....      BL       __aeabi_ui2f
   \   00000196   0x0029             MOVS     R1,R5
   \   00000198   0x.... 0x....      BL       __aeabi_fmul
   \   0000019C   0x0005             MOVS     R5,R0
    485              DipVal /= 10000;
   \   0000019E   0x0028             MOVS     R0,R5
   \   000001A0   0x....             LDR.N    R1,??DataTable7_18  ;; 0x461c4000
   \   000001A2   0x.... 0x....      BL       __aeabi_fdiv
   \   000001A6   0x0005             MOVS     R5,R0
    486          	DipVal += sCtrl.sCalcModel.StartOil;            //计算值 加 模型起始油量值
   \   000001A8   0x....             LDR.N    R0,??DataTable7_2
   \   000001AA   0xF8B0 0x0246      LDRH     R0,[R0, #+582]
   \   000001AE   0x.... 0x....      BL       __aeabi_ui2f
   \   000001B2   0x0029             MOVS     R1,R5
   \   000001B4   0x.... 0x....      BL       __aeabi_fadd
   \   000001B8   0x0005             MOVS     R5,R0
    487              
    488          	
    489              return  (uint16)DipVal;
   \   000001BA   0x0028             MOVS     R0,R5
   \   000001BC   0x.... 0x....      BL       __aeabi_f2iz
   \   000001C0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \                     ??GetMathOilVal_4: (+1)
   \   000001C2   0xE8BD 0x8FFE      POP      {R1-R11,PC}      ;; return
    490          }
    491          
    492          /*******************************************************************************
    493           * 名    称：        GetDipPrsAvg
    494           * 功    能：        取平均值
    495           * 入口参数：        无
    496           * 出口参数： 	    无
    497           * 作　 　者： 	    redmornigcn
    498           * 创建日期： 	    2017-05-16
    499           * 修    改：
    500           * 修改日期：
    501           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    502          int16	GetDipPrsAvg(int16	CurDip1Prs,int16	CurDip2Prs)
    503          {
   \                     GetDipPrsAvg: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000C             MOVS     R4,R1
    504              int32   PrsDef;
    505              int16   CurDipAvgPrs   = 0;
   \   00000006   0x2700             MOVS     R7,#+0
    506          	static  uint32 Times   = 0;
    507          //    static  uint32 hig1chgtimes =0;
    508          //    static  uint32 hig2chgtimes =0;
    509          //    static  int16  lsthig1 = 0;
    510          //    static  int16  lsthig2 = 0;
    511              
    512              //无通讯时，高度值会直接赋0值。
    513              /*****说明
    514              *   压力值超限，数值直接为零
    515              */
    516          	if(CurDip1Prs > 10000 || CurDip1Prs < -500 )  
   \   00000008   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   0000000A   0xF242 0x7011      MOVW     R0,#+10001
   \   0000000E   0x4285             CMP      R5,R0
   \   00000010   0xDA03             BGE.N    ??GetDipPrsAvg_0
   \   00000012   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   00000014   0xF515 0x7FFA      CMN      R5,#+500
   \   00000018   0xDA01             BGE.N    ??GetDipPrsAvg_1
    517          		CurDip1Prs = 0;
   \                     ??GetDipPrsAvg_0: (+1)
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x0005             MOVS     R5,R0
    518          	
    519          	if(CurDip2Prs > 10000 || CurDip2Prs < -500 )
   \                     ??GetDipPrsAvg_1: (+1)
   \   0000001E   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000020   0xF242 0x7011      MOVW     R0,#+10001
   \   00000024   0x4284             CMP      R4,R0
   \   00000026   0xDA03             BGE.N    ??GetDipPrsAvg_2
   \   00000028   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000002A   0xF514 0x7FFA      CMN      R4,#+500
   \   0000002E   0xDA01             BGE.N    ??GetDipPrsAvg_3
    520          		CurDip2Prs = 0;
   \                     ??GetDipPrsAvg_2: (+1)
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x0004             MOVS     R4,R0
    521          
    522              
    523              /*****说明
    524              *   如果1端传感器值有变化，另外一端传感器值无变化.
    525              *   变换传感器次次数大于120次，另一端小于10次。认为无变化端异常
    526              *   传感器值置零
    527              */
    528          //    if(fabs(CurDip1Prs - lsthig1) > 5){
    529          //        hig1chgtimes++; 
    530          //    }else {   
    531          //        hig1chgtimes = 0;
    532          //    }
    533          //    lsthig1 = CurDip1Prs;
    534          //    
    535          //    if(fabs(CurDip2Prs - lsthig2) > 5){
    536          //        hig2chgtimes++; 
    537          //    }else {   
    538          //        hig2chgtimes = 0;
    539          //    }
    540          //    lsthig2 = CurDip2Prs;    
    541          //    
    542          //    if(hig1chgtimes > 120 && )
    543          //    
    544              
    545              /*****说明
    546              *   如果任意传感器有值，且两传感器值偏差大于2000.
    547              *   连续2分钟，如果有传感器值小于500，任务传感器异常。
    548              *   传感器值置零
    549              */
    550          	PrsDef = CurDip1Prs - CurDip2Prs;
   \                     ??GetDipPrsAvg_3: (+1)
   \   00000034   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   00000036   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000038   0x1B28             SUBS     R0,R5,R4
   \   0000003A   0x0006             MOVS     R6,R0
    551          
    552          	if(CurDip1Prs > 1000 || CurDip2Prs >1000)
   \   0000003C   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   0000003E   0xF5B5 0x7F7A      CMP      R5,#+1000
   \   00000042   0xDC03             BGT.N    ??GetDipPrsAvg_4
   \   00000044   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000046   0xF5B4 0x7F7A      CMP      R4,#+1000
   \   0000004A   0xDD23             BLE.N    ??GetDipPrsAvg_5
    553          	{
    554          		if(fabs(PrsDef) > 2000 )
   \                     ??GetDipPrsAvg_4: (+1)
   \   0000004C   0x0030             MOVS     R0,R6
   \   0000004E   0x.... 0x....      BL       __aeabi_i2d
   \   00000052   0xF031 0x4100      BICS     R1,R1,#0x80000000
   \   00000056   0x2201             MOVS     R2,#+1
   \   00000058   0x....             LDR.N    R3,??DataTable7_19  ;; 0x409f4000
   \   0000005A   0x.... 0x....      BL       __aeabi_cdrcmple
   \   0000005E   0xD816             BHI.N    ??GetDipPrsAvg_6
    555          		{
    556          			Times++;
   \   00000060   0x....             LDR.N    R0,??DataTable7_20
   \   00000062   0x6800             LDR      R0,[R0, #+0]
   \   00000064   0x1C40             ADDS     R0,R0,#+1
   \   00000066   0x....             LDR.N    R1,??DataTable7_20
   \   00000068   0x6008             STR      R0,[R1, #+0]
    557          			
    558          			if(Times > 120)
   \   0000006A   0x....             LDR.N    R0,??DataTable7_20
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0x2879             CMP      R0,#+121
   \   00000070   0xD310             BCC.N    ??GetDipPrsAvg_5
    559          			{
    560          				if(CurDip1Prs < 500)
   \   00000072   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   00000074   0xF5B5 0x7FFA      CMP      R5,#+500
   \   00000078   0xDA02             BGE.N    ??GetDipPrsAvg_7
    561          				{
    562          					CurDip1Prs = 0;
   \   0000007A   0x2000             MOVS     R0,#+0
   \   0000007C   0x0005             MOVS     R5,R0
   \   0000007E   0xE009             B.N      ??GetDipPrsAvg_5
    563          				}
    564          				else if(CurDip2Prs < 500)
   \                     ??GetDipPrsAvg_7: (+1)
   \   00000080   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000082   0xF5B4 0x7FFA      CMP      R4,#+500
   \   00000086   0xDA05             BGE.N    ??GetDipPrsAvg_5
    565          				{
    566          					CurDip2Prs = 0;
   \   00000088   0x2000             MOVS     R0,#+0
   \   0000008A   0x0004             MOVS     R4,R0
   \   0000008C   0xE002             B.N      ??GetDipPrsAvg_5
    567          				}
    568          			}
    569          		}
    570          		else
    571          		{
    572          			Times = 0;
   \                     ??GetDipPrsAvg_6: (+1)
   \   0000008E   0x2000             MOVS     R0,#+0
   \   00000090   0x....             LDR.N    R1,??DataTable7_20
   \   00000092   0x6008             STR      R0,[R1, #+0]
    573          		}
    574          	}
    575          
    576          
    577              /*****说明
    578              *   如过高度1，高度2值都有效，平均值为两者均值。
    579              */
    580          	if( CurDip1Prs && CurDip2Prs )							
   \                     ??GetDipPrsAvg_5: (+1)
   \   00000094   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   00000096   0x2D00             CMP      R5,#+0
   \   00000098   0xD00A             BEQ.N    ??GetDipPrsAvg_8
   \   0000009A   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000009C   0x2C00             CMP      R4,#+0
   \   0000009E   0xD007             BEQ.N    ??GetDipPrsAvg_8
    581          	{
    582          		CurDipAvgPrs  =	(CurDip1Prs + CurDip2Prs) / 2;
   \   000000A0   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   000000A2   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000000A4   0x1960             ADDS     R0,R4,R5
   \   000000A6   0x2102             MOVS     R1,#+2
   \   000000A8   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000AC   0x0007             MOVS     R7,R0
   \   000000AE   0xE00B             B.N      ??GetDipPrsAvg_9
    583          	}
    584          	else if( CurDip1Prs )
   \                     ??GetDipPrsAvg_8: (+1)
   \   000000B0   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   000000B2   0x2D00             CMP      R5,#+0
   \   000000B4   0xD001             BEQ.N    ??GetDipPrsAvg_10
    585          	{
    586          		CurDipAvgPrs  = CurDip1Prs;
   \   000000B6   0x002F             MOVS     R7,R5
   \   000000B8   0xE006             B.N      ??GetDipPrsAvg_9
    587          	}
    588          	else if( CurDip2Prs )
   \                     ??GetDipPrsAvg_10: (+1)
   \   000000BA   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000000BC   0x2C00             CMP      R4,#+0
   \   000000BE   0xD001             BEQ.N    ??GetDipPrsAvg_11
    589          	{
    590          		CurDipAvgPrs  = CurDip2Prs;
   \   000000C0   0x0027             MOVS     R7,R4
   \   000000C2   0xE001             B.N      ??GetDipPrsAvg_9
    591          	}else
    592              {
    593                  CurDipAvgPrs = 0;                                   //输入值均为0 
   \                     ??GetDipPrsAvg_11: (+1)
   \   000000C4   0x2000             MOVS     R0,#+0
   \   000000C6   0x0007             MOVS     R7,R0
    594              }
    595          	//printfcom0("\r\n11 %d,%d,%d",CurDip1Prs,CurDip2Prs,CurDipAvgPrs);
    596          	return	CurDipAvgPrs;
   \                     ??GetDipPrsAvg_9: (+1)
   \   000000C8   0x0038             MOVS     R0,R7
   \   000000CA   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000CC   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    597          }

   \                                 In section .bss, align 4
   \                     ??Times_2:
   \   00000000                      DS8 4
    598          
    599          /*******************************************************************************
    600           * 名    称：        CalcOil
    601           * 功    能：        计算油量。根据高度值，油箱容积表，修正系数等计算油量
    602           * 入口参数：        无
    603           * 出口参数： 	    无
    604           * 作　 　者： 	    redmornigcn
    605           * 创建日期： 	    2017-05-16
    606           * 修    改：
    607           * 修改日期：
    608           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    609          void	CalcOil(void)							
    610          {
   \                     CalcOil: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    611          	int16	Avg30SecHig;
    612              int16   avghig;
    613              
    614              avghig 	= GetDipPrsAvg(sCtrl.sRec.Myhig1,sCtrl.sRec.Myhig2);    //平均值
   \   00000002   0x....             LDR.N    R0,??DataTable7_2
   \   00000004   0xF9B0 0x1066      LDRSH    R1,[R0, #+102]
   \   00000008   0x....             LDR.N    R0,??DataTable7_2
   \   0000000A   0xF9B0 0x0064      LDRSH    R0,[R0, #+100]
   \   0000000E   0x.... 0x....      BL       GetDipPrsAvg
   \   00000012   0x0005             MOVS     R5,R0
    615                  
    616              Avg30SecHig = GetDipPrs30SecVal(avghig);		                //计算30S的平均值
   \   00000014   0x0028             MOVS     R0,R5
   \   00000016   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000018   0x.... 0x....      BL       GetDipPrs30SecVal
   \   0000001C   0x0004             MOVS     R4,R0
    617          					
    618          	sCtrl.sRec.MstDip = GetMathOilVal(Avg30SecHig);                 //计算油量值
   \   0000001E   0x0020             MOVS     R0,R4
   \   00000020   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000022   0x.... 0x....      BL       GetMathOilVal
   \   00000026   0x....             LDR.N    R1,??DataTable7_2
   \   00000028   0x6548             STR      R0,[R1, #+84]
    619          }
   \   0000002A   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    620          
    621          
    622          
    623          /*******************************************************************************
    624           * 名    称：  TaskInitStore
    625           * 功    能：  任务初始化
    626           * 入口参数： 	无
    627           * 出口参数： 	无
    628           * 作　 　者： 	redmornigcn
    629           * 创建日期： 	2017-05-15
    630           * 修    改：
    631           * 修改日期：
    632           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    633          void    BSP_CalcInit(void)
    634          {
   \                     BSP_CalcInit: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    635              //初始化flash
    636          	InitFlashIO();
   \   00000002   0x.... 0x....      BL       InitFlashIO
    637              //初始化fram
    638              GPIO_Fram_Init();
   \   00000006   0x.... 0x....      BL       GPIO_Fram_Init
    639              //读sCtrl
    640          //    FRAM_ReadRecNumMgr((StrRecNumMgr  *)&sCtrl.sRecNumMgr);         //读记录号
    641          //    FRAM_ReadProductInfo((StrProductInfo  *)&sCtrl.sProductInfo);   //读产品编号
    642          //    FRAM_ReadCurRecord((stcFlshRec  *)&sCtrl.sRec);                 //读当前记录
    643          ////    FRAM_ReadOilPara((StrOilPara  *)&sCtrl.SOilPara);               //读计算参数
    644          //    FRAM_ReadRunPara((stcRunPara  *)&sCtrl.sRunPara);               //读运行参数
    645          ////    FRAM_ReadCalcModel((stcCalcModel  *)&sCtrl.sCalcModel);         //读计算模型
    646          }
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return
    647          

   \                                 In section .text, align 2, keep-with-next
    648          void    GetOilPara(void)
    649          {
   \                     GetOilPara: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    650          //	关调度及中断，数据不允许更新
    651              CPU_SR  cpu_sr;
    652          CPU_CRITICAL_ENTER() ;
   \   00000002   0x.... 0x....      BL       CPU_SR_Save
   \   00000006   0x0004             MOVS     R4,R0
   \   00000008   0x.... 0x....      BL       CPU_IntDisMeasStart
    653          
    654              FRAM_ReadOilPara((StrOilPara  *)&sCtrl.SOilPara);       //读计算参数。高度，修正系数，模型编号
   \   0000000C   0x....             LDR.N    R0,??DataTable7_21
   \   0000000E   0x.... 0x....      BL       FRAM_ReadOilPara
    655          
    656              /***********************************************
    657              * 描述： 参数合理性判断
    658              */
    659              if(sCtrl.SOilPara.Slope < 1000 || sCtrl.SOilPara.Slope > 20000 )
   \   00000012   0x....             LDR.N    R0,??DataTable7_2
   \   00000014   0xF8D0 0x00A8      LDR      R0,[R0, #+168]
   \   00000018   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   0000001C   0xD306             BCC.N    ??GetOilPara_0
   \   0000001E   0x....             LDR.N    R0,??DataTable7_2
   \   00000020   0xF8D0 0x00A8      LDR      R0,[R0, #+168]
   \   00000024   0xF644 0x6121      MOVW     R1,#+20001
   \   00000028   0x4288             CMP      R0,R1
   \   0000002A   0xD304             BCC.N    ??GetOilPara_1
    660                  sCtrl.SOilPara.Slope = 10000;
   \                     ??GetOilPara_0: (+1)
   \   0000002C   0xF242 0x7010      MOVW     R0,#+10000
   \   00000030   0x....             LDR.N    R1,??DataTable7_2
   \   00000032   0xF8C1 0x00A8      STR      R0,[R1, #+168]
    661              
    662              if(sCtrl.SOilPara.Density < 800 || sCtrl.SOilPara.Density > 900)
   \                     ??GetOilPara_1: (+1)
   \   00000036   0x....             LDR.N    R0,??DataTable7_2
   \   00000038   0xF9B0 0x00A4      LDRSH    R0,[R0, #+164]
   \   0000003C   0xF5B0 0x7F48      CMP      R0,#+800
   \   00000040   0xDB05             BLT.N    ??GetOilPara_2
   \   00000042   0x....             LDR.N    R0,??DataTable7_2
   \   00000044   0xF9B0 0x00A4      LDRSH    R0,[R0, #+164]
   \   00000048   0xF5B0 0x7F61      CMP      R0,#+900
   \   0000004C   0xDD04             BLE.N    ??GetOilPara_3
    663                  sCtrl.SOilPara.Density = 820;
   \                     ??GetOilPara_2: (+1)
   \   0000004E   0xF44F 0x704D      MOV      R0,#+820
   \   00000052   0x....             LDR.N    R1,??DataTable7_2
   \   00000054   0xF8A1 0x00A4      STRH     R0,[R1, #+164]
    664              
    665              if(sCtrl.SOilPara.ModelNum > 64)
   \                     ??GetOilPara_3: (+1)
   \   00000058   0x....             LDR.N    R0,??DataTable7_2
   \   0000005A   0xF890 0x00A0      LDRB     R0,[R0, #+160]
   \   0000005E   0x2841             CMP      R0,#+65
   \   00000060   0xDB03             BLT.N    ??GetOilPara_4
    666                  sCtrl.SOilPara.ModelNum = 1;
   \   00000062   0x2001             MOVS     R0,#+1
   \   00000064   0x....             LDR.N    R1,??DataTable7_2
   \   00000066   0xF881 0x00A0      STRB     R0,[R1, #+160]
    667              
    668              if(sCtrl.SOilPara.Hig > 500 || sCtrl.SOilPara.Hig < -500)
   \                     ??GetOilPara_4: (+1)
   \   0000006A   0x....             LDR.N    R0,??DataTable7_2
   \   0000006C   0xF9B0 0x00A2      LDRSH    R0,[R0, #+162]
   \   00000070   0xF5B0 0x7FFA      CMP      R0,#+500
   \   00000074   0xDC05             BGT.N    ??GetOilPara_5
   \   00000076   0x....             LDR.N    R0,??DataTable7_2
   \   00000078   0xF9B0 0x00A2      LDRSH    R0,[R0, #+162]
   \   0000007C   0xF510 0x7FFA      CMN      R0,#+500
   \   00000080   0xDA03             BGE.N    ??GetOilPara_6
    669                  sCtrl.SOilPara.Hig = 0;
   \                     ??GetOilPara_5: (+1)
   \   00000082   0x2000             MOVS     R0,#+0
   \   00000084   0x....             LDR.N    R1,??DataTable7_2
   \   00000086   0xF8A1 0x00A2      STRH     R0,[R1, #+162]
    670              
    671              FRAM_StoreOilPara((StrOilPara  *)&sCtrl.SOilPara);      //写入算参数。高度，修正系数，模型编号
   \                     ??GetOilPara_6: (+1)
   \   0000008A   0x....             LDR.N    R0,??DataTable7_21
   \   0000008C   0x.... 0x....      BL       FRAM_StoreOilPara
    672              
    673              GetOilBoxModel();                                       //取油箱模型
   \   00000090   0x.... 0x....      BL       GetOilBoxModel
    674          
    675              FRAM_StoreCalcModel((stcCalcModel  *)&sCtrl.sCalcModel);//取出的油箱模型再保存
   \   00000094   0x....             LDR.N    R0,??DataTable7_1
   \   00000096   0x.... 0x....      BL       FRAM_StoreCalcModel
    676          
    677          CPU_CRITICAL_EXIT() ;
   \   0000009A   0x.... 0x....      BL       CPU_IntDisMeasStop
   \   0000009E   0x0020             MOVS     R0,R4
   \   000000A0   0x.... 0x....      BL       CPU_SR_Restore
    678          
    679          }
   \   000000A4   0xBD10             POP      {R4,PC}          ;; return
    680          
    681          /*******************************************************************************
    682           * 名    称：  TaskInitCalc
    683           * 功    能：  任务初始化
    684           * 入口参数： 	无
    685           * 出口参数： 	无
    686           * 作　 　者： 	redmornigcn
    687           * 创建日期： 	2017-05-16
    688           * 修    改：
    689           * 修改日期：
    690           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    691          void TaskInitCalc(void)
    692          {    
   \                     TaskInitCalc: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    693          //    /***********************************************
    694          //    * 描述： 初始化本任务用到的相关硬件
    695          //    */
    696              BSP_CalcInit();			//初始化和计算相关的参数
   \   00000002   0x.... 0x....      BL       BSP_CalcInit
    697          
    698              GetOilPara();
   \   00000006   0x.... 0x....      BL       GetOilPara
    699              
    700              //GetMathModelPara(stcModelComplex * sComplexModel,uint8 	ReCalFlg)
    701              //初始化定时器  1s 执1次
    702              osal_start_timerEx( OS_TASK_ID_CALC,
    703                                OS_EVT_CALC_TICKS,
    704                                1000);
   \   0000000A   0xF44F 0x727A      MOV      R2,#+1000
   \   0000000E   0x2101             MOVS     R1,#+1
   \   00000010   0x2002             MOVS     R0,#+2
   \   00000012   0x.... 0x....      BL       osal_start_timerEx
    705          }
   \   00000016   0xBD01             POP      {R0,PC}          ;; return
    706          
    707          extern  MODBUS_CH   *g_pch; 
    708          /*******************************************************************************
    709           * 名    称： 	AppTask
    710           * 功    能： 	控制任务
    711           * 入口参数： 	p_arg - 由任务创建函数传入
    712           * 出口参数： 	无
    713           * 作　 　者： 	redmorningcn.
    714           * 创建日期： 	2017-05-15
    715           * 修    改：
    716           * 修改日期：
    717           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    718          osalEvt  TaskCalcEvtProcess(INT8U task_id, osalEvt task_event)
    719          {
   \                     TaskCalcEvtProcess: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    720          //    OS_ERR      err;
    721          //    INT32U      ticks;
    722          //    INT32S      dly;
    723          //    CPU_SR_ALLOC();
    724          
    725              if( task_event & OS_EVT_CALC_TICKS ) {
   \   00000006   0x07E8             LSLS     R0,R5,#+31
   \   00000008   0xD50A             BPL.N    ??TaskCalcEvtProcess_0
    726          
    727                      CalcOil();            //计算油量, 1S执行1次
   \   0000000A   0x.... 0x....      BL       CalcOil
    728                      
    729                      osal_start_timerEx( OS_TASK_ID_CALC,
    730                                          OS_EVT_CALC_TICKS,
    731                                          1000);
   \   0000000E   0xF44F 0x727A      MOV      R2,#+1000
   \   00000012   0x2101             MOVS     R1,#+1
   \   00000014   0x2002             MOVS     R0,#+2
   \   00000016   0x.... 0x....      BL       osal_start_timerEx
    732                      
    733                      return ( task_event ^ OS_EVT_CALC_TICKS );
   \   0000001A   0xF095 0x0001      EORS     R0,R5,#0x1
   \   0000001E   0xE000             B.N      ??TaskCalcEvtProcess_1
    734              }
    735              
    736              return  task_event;
   \                     ??TaskCalcEvtProcess_0: (+1)
   \   00000020   0x0028             MOVS     R0,R5
   \                     ??TaskCalcEvtProcess_1: (+1)
   \   00000022   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    737          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x........         DC32     l_sCalcModel

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x........         DC32     sCtrl+0xB4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x........         DC32     sCtrl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x........         DC32     l_sModel

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \   00000000   0x........         DC32     l_sModelSemple

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \   00000000   0x........         DC32     ??Times

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \   00000000   0x........         DC32     ??Dip1PrsBuf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \   00000000   0x........         DC32     ??Dip2PrsBuf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_8:
   \   00000000   0x........         DC32     l_Dip1Frq10SecChg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_9:
   \   00000000   0x........         DC32     l_Dip2Frq10SecChg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_10:
   \   00000000   0x........         DC32     ??UpTimes

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_11:
   \   00000000   0x........         DC32     ??WaveTimes

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_12:
   \   00000000   0x........         DC32     ??DownTimes

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_13:
   \   00000000   0x........         DC32     ??StopTimes

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_14:
   \   00000000   0x........         DC32     ??FreqChgState

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_15:
   \   00000000   0x........         DC32     ??Times_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_16:
   \   00000000   0x........         DC32     ??Sum30

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_17:
   \   00000000   0x........         DC32     ??Sum5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_18:
   \   00000000   0x461C4000         DC32     0x461c4000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_19:
   \   00000000   0x409F4000         DC32     0x409f4000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_20:
   \   00000000   0x........         DC32     ??Times_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_21:
   \   00000000   0x........         DC32     sCtrl+0xA0
    738          
    739          
    740          
    741          /*******************************************************************************
    742           * 				                    end of file                                *
    743           *******************************************************************************/
    744          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   BSP_CalcInit
         8   -> GPIO_Fram_Init
         8   -> InitFlashIO
      16   CalcOil
        16   -> GetDipPrs30SecVal
        16   -> GetDipPrsAvg
        16   -> GetMathOilVal
      12   GetDip10SecChg
      32   GetDipPrs30SecVal
        32   -> GetFrqChgState
      24   GetDipPrsAvg
        24   -> __aeabi_i2d
        24 __aeabi_cdrcmple
      16   GetFrqChgState
        16   -> GetDip10SecChg
        16   -> abs
      48   GetMathOilVal
        48   -> __aeabi_f2iz
        48   -> __aeabi_fadd
        48   -> __aeabi_fdiv
        48   -> __aeabi_fmul
        48   -> __aeabi_fsub
        48   -> __aeabi_i2f
        48   -> __aeabi_ui2f
        48 __aeabi_cfcmpeq
        48 __aeabi_cfcmple
        48 __aeabi_cfrcmple
      24   GetOilBoxModel
        24   -> FRAM_ReadCalcModel
        24   -> GetCrc16Check
        24   -> GetDf4dOilBoxModel
        24   -> GetHxn3OilBoxModel
        24   -> GetHxn5OilBoxModel
        24   -> GetOilBoxModelsModel
        24   -> GetOilBoxModelsModelSemple
        24   -> __aeabi_memcpy
        24   -> stcModelSempleTostcModelComplex
        24   -> stcModelTostcModelComplex
       8   GetOilPara
         8   -> CPU_IntDisMeasStart
         8   -> CPU_IntDisMeasStop
         8   -> CPU_SR_Restore
         8   -> CPU_SR_Save
         8   -> FRAM_ReadOilPara
         8   -> FRAM_StoreCalcModel
         8   -> FRAM_StoreOilPara
         8   -> GetOilBoxModel
      16   TaskCalcEvtProcess
        16   -> CalcOil
        16   -> osal_start_timerEx
       8   TaskInitCalc
         8   -> BSP_CalcInit
         8   -> GetOilPara
         8   -> osal_start_timerEx


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_10
       4  ??DataTable7_11
       4  ??DataTable7_12
       4  ??DataTable7_13
       4  ??DataTable7_14
       4  ??DataTable7_15
       4  ??DataTable7_16
       4  ??DataTable7_17
       4  ??DataTable7_18
       4  ??DataTable7_19
       4  ??DataTable7_2
       4  ??DataTable7_20
       4  ??DataTable7_21
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable7_8
       4  ??DataTable7_9
      12  BSP_CalcInit
      44  CalcOil
      24  Dip1PrsBuf
      24  Dip2PrsBuf
       4  DownTimes
       1  FreqChgState
     236  GetDip10SecChg
     326  GetDipPrs30SecVal
     206  GetDipPrsAvg
     470  GetFrqChgState
     454  GetMathOilVal
     344  GetOilBoxModel
     166  GetOilPara
       4  StopTimes
       4  Sum30
       4  Sum5
      36  TaskCalcEvtProcess
      24  TaskInitCalc
       4  Times
       4  Times
       4  Times
       4  UpTimes
       4  WaveTimes
       2  l_Dip1Frq10SecChg
       2  l_Dip2Frq10SecChg
     408  l_sCalcModel
     208  l_sModel
      48  l_sModelSemple

 
   752 bytes in section .bss
     1 byte  in section .data
 2 406 bytes in section .text
 
 2 406 bytes of CODE memory
   753 bytes of DATA memory

Errors: none
Warnings: none
