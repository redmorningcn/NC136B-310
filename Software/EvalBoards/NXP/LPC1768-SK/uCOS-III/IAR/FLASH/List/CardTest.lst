###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       15/Aug/2017  16:25:11
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC136B-310统计模块\Application\Library\CardOperations\CardTest.c
#    Command line =  
#        F:\iar\NC136B-310统计模块\Application\Library\CardOperations\CardTest.c
#        -lCN
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List
#        --diag_suppress Pa050 -o
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\csnr_package_deal\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\CardTest.lst
#    Object file  =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\CardTest.o
#
###############################################################################

F:\iar\NC136B-310统计模块\Application\Library\CardOperations\CardTest.c
      1          //#include 	"config.h"
      2          //#include 	"String.h"
      3          //#include	"Globe.h"
      4          //#include	"HardDrive.h"
      5          //#include	"CpuDrive.h"
      6          //#include	"OperateCard.h"
      7          //#include	"FramStore.h"
      8          //#include	"DipMath.h"
      9          #include    <CardDataTypeDef.h>
     10          #include    "includes.h"  
     11          #include	"Card.h"
     12          #include	"OperateCard.h"
     13          #include	"FRAM.h"
     14          

   \                                 In section .bss, align 4
     15          stcCardFlg		m_sCardFlg;
   \                     m_sCardFlg:
   \   00000000                      DS8 3424

   \                                 In section .bss, align 4
     16          stcModelCard	m_sModelCard;
   \                     m_sModelCard:
   \   00000000                      DS8 5956

   \                                 In section .bss, align 4
     17          stcModel		m_sModel;
   \                     m_sModel:
   \   00000000                      DS8 208
     18          
     19          extern uint8    GetDf7G60OilBoxModel(stcModel * sModel);
     20          extern uint8    GetDf7G80OilBoxModel(stcModel * sModel);
     21          extern uint8    GetDf7G20OilBoxModel(stcModel * sModel);
     22          extern uint8    GetDf7G50OilBoxModel(stcModel * sModel);
     23          extern uint8    GetDf12G50OilBoxModel(stcModel * sModel);
     24          extern uint8    GetDf7C5675OilBoxModel(stcModel * sModel);
     25          
     26          ///////////////////////////////////////////////////////////////////////////////
     27          //------------------------------------------------------------------------------
     28          //名    称：    estDipModel(void)(void)
     29          //功    能：    Df5油箱模型
     30          //入口参数：    无
     31          //出口参数：    Df5的油箱模型
     32          //------------------------------------------------------------------------------
     33          //uint8    WriteCardOilModelTest(void)
     34          //{
     35          //	uint16			CardType;
     36          //	uint16			CrcCheck;
     37          //	uint32			i;
     38          //	
     39          //	CardType = MODEL_CARD;
     40          //	
     41          //	ReadCard(CARD_FLG_ADDR,(uint8 *)&m_sCardFlg,sizeof(m_sCardFlg));
     42          //	
     43          //	for(i = 0 ; i < 3; i++)
     44          //	{
     45          //		m_sCardFlg.sCardType.CardType[i] = CardType;
     46          //	}
     47          //	
     48          //	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg.sCardType,sizeof(m_sCardFlg.sCardType) - 2);
     49          //	m_sCardFlg.sCardType.CrcCheck = CrcCheck;
     50          //	
     51          //	GetDf4bOilBoxModel((stcModel *)&m_sModel);
     52          //	m_sModelCard.sModel[0] = m_sModel;
     53          //	
     54          //	GetDf4dOilBoxModel((stcModel *)&m_sModel);
     55          //	m_sModelCard.sModel[1] = m_sModel;
     56          //	
     57          //	GetDf5OilBoxModel((stcModel *)&m_sModel);
     58          //	m_sModelCard.sModel[2] = m_sModel;
     59          //	
     60          //	GetDf7cOilBoxModel((stcModel *)&m_sModel);
     61          //	m_sModelCard.sModel[3] = m_sModel;
     62          //	
     63          //	GetDf8bOilBoxModel((stcModel *)&m_sModel);
     64          //	m_sModelCard.sModel[4] = m_sModel;
     65          //
     66          //	GetDf11OilBoxModel((stcModel *)&m_sModel);
     67          //	m_sModelCard.sModel[5] = m_sModel;
     68          //
     69          //	GetDf8OilBoxModel((stcModel *)&m_sModel);
     70          //	m_sModelCard.sModel[6] = m_sModel;
     71          //	
     72          //	GetDf7xOilBoxModel((stcModel *)&m_sModel);
     73          //	m_sModelCard.sModel[7] = m_sModel;	
     74          //	
     75          //	GetDf7G60OilBoxModel((stcModel *)&m_sModel);
     76          //	m_sModelCard.sModel[9] = m_sModel;	
     77          //	
     78          //	GetDf7G80OilBoxModel((stcModel *)&m_sModel);
     79          //	m_sModelCard.sModel[10] = m_sModel;	
     80          //		
     81          //	GetDf7G20OilBoxModel((stcModel *)&m_sModel);
     82          //	m_sModelCard.sModel[11] = m_sModel;	
     83          //	
     84          //	GetDf7G50OilBoxModel((stcModel *)&m_sModel);
     85          //	m_sModelCard.sModel[12] = m_sModel;		
     86          //	
     87          //	GetDf12G40OilBoxModel((stcModel *)&m_sModel);
     88          //	m_sModelCard.sModel[13] = m_sModel;			
     89          //	
     90          //	GetDf12G50OilBoxModel((stcModel *)&m_sModel);
     91          //	m_sModelCard.sModel[14] = m_sModel;			
     92          //	
     93          //	GetDf12G17OilBoxModel((stcModel *)&m_sModel);
     94          //	m_sModelCard.sModel[15] = m_sModel;			
     95          //	
     96          //	GetDf5G20OilBoxModel((stcModel *)&m_sModel);
     97          //	m_sModelCard.sModel[16] = m_sModel;			
     98          //	
     99          //	GetDf7C5675OilBoxModel((stcModel *)&m_sModel);
    100          //	m_sModelCard.sModel[17] = m_sModel;		
    101          //		
    102          //	CrcCheck = GetCrc16Check((uint8 *)&m_sModelCard,sizeof(stcModelCard) - 2);
    103          //	m_sModelCard.CrcCheck	= CrcCheck;	
    104          //
    105          //	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg.sCardPara,sizeof(m_sCardFlg.sCardPara) - 2);
    106          //	CrcCheck	= CrcCheck;	
    107          //	
    108          //	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg,sizeof(m_sCardFlg) - 2);
    109          //	m_sCardFlg.CrcCheck = CrcCheck;
    110          //	
    111          //	WriteCard(CARD_FLG_ADDR,(uint8 *)&m_sCardFlg,sizeof(m_sCardFlg));
    112          //	
    113          //	WriteCard(CARD_DATA_ADDR,(uint8 *)&m_sModelCard,sizeof(stcModelCard));
    114          //
    115          //	return 1;
    116          //}
    117          
    118          //extern	void   stcModelTostcModelComplex(stcModelComplex * sComplexModel,stcModel	* sModel);
    119          
    120          //------------------------------------------------------------------------------
    121          //名    称：    estDipModel(void)(void)
    122          //功    能：    Df5油箱模型
    123          //入口参数：    无
    124          //出口参数：    Df5的油箱模型
    125          //------------------------------------------------------------------------------
    126          //uint8    WriteCardComModelTest(void)
    127          //{
    128          //	uint16			CardType;
    129          //	uint16			CrcCheck;
    130          //	uint32			i;
    131          //	static			stcModelComplex	sModelComplex;	
    132          //	uint32			CardAddLen = 0;
    133          //	uint8			CardFlg;
    134          //	 
    135          //	CardType = COM_MODEL_CARD;
    136          //	
    137          //	ReadCard(CARD_FLG_ADDR,(uint8 *)&m_sCardFlg,sizeof(m_sCardFlg));
    138          //	
    139          //	for(i = 0 ; i < 3; i++)
    140          //	{
    141          //		m_sCardFlg.sCardType.CardType[i] = CardType;
    142          //	}
    143          //	
    144          //	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg.sCardType,sizeof(m_sCardFlg.sCardType) - 2);
    145          //	m_sCardFlg.sCardType.CrcCheck = CrcCheck;
    146          //	
    147          //	CardAddLen = sizeof(stcModelCard);
    148          //	
    149          //	for(i = 0; i< 1; i++)
    150          //	{
    151          //		GetDf7cOilBoxModel((stcModel *)&m_sModel);
    152          //		stcModelTostcModelComplex((stcModelComplex *)&sModelComplex,(stcModel *)&m_sModel);				//100829
    153          //
    154          //		sModelComplex.ModelNum  = 32;
    155          //		//printfcom0("\r\n sModelComplex.ModelNum 31 +i= %d ",sModelComplex.ModelNum);
    156          //		CrcCheck = GetCrc16Check((uint8 *)&sModelComplex,sizeof(stcModelComplex) - 2);
    157          //		sModelComplex.CrcCheck  	= CrcCheck;
    158          //    	CardFlg = WriteCard(CARD_DATA_ADDR + CardAddLen,(uint8 *)&sModelComplex,sizeof(stcModelComplex));
    159          //
    160          //		CardAddLen += sizeof(stcModelComplex);
    161          //
    162          //	}
    163          //	
    164          ////	CrcCheck = GetCrc16Check((uint8 *)&m_sModelCard,sizeof(stcModelCard) - 2);
    165          ////	m_sModelCard.CrcCheck	= CrcCheck;	
    166          //
    167          //	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg.sCardPara,sizeof(m_sCardFlg.sCardPara) - 2);
    168          //	CrcCheck	= CrcCheck;	
    169          //	
    170          //	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg,sizeof(m_sCardFlg) - 2);
    171          //	m_sCardFlg.CrcCheck = CrcCheck;
    172          //	
    173          //	WriteCard(CARD_FLG_ADDR,(uint8 *)&m_sCardFlg,sizeof(m_sCardFlg));
    174          //	
    175          ////	WriteCard(CARD_DATA_ADDR,(uint8 *)&m_sModelCard,sizeof(stcModelCard));
    176          //
    177          //	return 1;
    178          //}
    179          //------------------------------------------------------------------------------
    180          //名    称：    uint8    WriteCardDataCardTest(void)
    181          //功    能：    Df5油箱模型
    182          //入口参数：    无
    183          //出口参数：    Df5的油箱模型
    184          //------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    185          uint8    WritesSetDipCardTest(void)
    186          {
   \                     WritesSetDipCardTest: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    187          	uint16		CardType;
    188          	uint16		CrcCheck;
    189          	uint32		i;
    190          
    191          	CardType = SET_DATA_CARD;
   \   00000002   0x2080             MOVS     R0,#+128
   \   00000004   0x0004             MOVS     R4,R0
    192          	
    193          	ReadCard(CARD_FLG_ADDR,(uint8 *)&m_sCardFlg,sizeof(m_sCardFlg));
   \   00000006   0xF44F 0x6256      MOV      R2,#+3424
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable9
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x.... 0x....      BL       ReadCard
    194          	
    195          	for(i = 0 ; i < 3; i++)
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x0006             MOVS     R6,R0
   \                     ??WritesSetDipCardTest_0: (+1)
   \   00000018   0x2E03             CMP      R6,#+3
   \   0000001A   0xD206             BCS.N    ??WritesSetDipCardTest_1
    196          	{
    197          		m_sCardFlg.sCardType.CardType[i] = CardType;
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable9
   \   00000020   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   00000024   0x8404             STRH     R4,[R0, #+32]
    198          	}
   \   00000026   0x1C76             ADDS     R6,R6,#+1
   \   00000028   0xE7F6             B.N      ??WritesSetDipCardTest_0
    199          	
    200          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg.sCardType,sizeof(m_sCardFlg.sCardType) - 2);
   \                     ??WritesSetDipCardTest_1: (+1)
   \   0000002A   0x2106             MOVS     R1,#+6
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable9_1
   \   00000030   0x.... 0x....      BL       GetCrc16Check
   \   00000034   0x0005             MOVS     R5,R0
    201          	m_sCardFlg.sCardType.CrcCheck = CrcCheck;
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable9
   \   0000003A   0x84C5             STRH     R5,[R0, #+38]
    202          
    203          	m_sCardFlg.sCardPara.SetVal = 10;				//油量增加10
   \   0000003C   0x200A             MOVS     R0,#+10
   \   0000003E   0x.... 0x....      LDR.W    R1,??DataTable9
   \   00000042   0x6408             STR      R0,[R1, #+64]
    204          
    205          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg.sCardPara,sizeof(m_sCardFlg.sCardPara) - 2);
   \   00000044   0x21B2             MOVS     R1,#+178
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable9_2
   \   0000004A   0x.... 0x....      BL       GetCrc16Check
   \   0000004E   0x0005             MOVS     R5,R0
    206          	m_sCardFlg.sCardPara.CrcCheck	= CrcCheck;	
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable9
   \   00000054   0xF8A0 0x50DA      STRH     R5,[R0, #+218]
    207          	
    208          	m_sCardFlg.WriteCardTimes = 0;
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0x.... 0x....      LDR.W    R1,??DataTable9
   \   0000005E   0xF8A1 0x0D5C      STRH     R0,[R1, #+3420]
    209          	
    210          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg,sizeof(m_sCardFlg) - 2);
   \   00000062   0xF640 0x515E      MOVW     R1,#+3422
   \   00000066   0x.... 0x....      LDR.W    R0,??DataTable9
   \   0000006A   0x.... 0x....      BL       GetCrc16Check
   \   0000006E   0x0005             MOVS     R5,R0
    211          	m_sCardFlg.CrcCheck = CrcCheck;
   \   00000070   0x.... 0x....      LDR.W    R0,??DataTable9
   \   00000074   0xF8A0 0x5D5E      STRH     R5,[R0, #+3422]
    212          		
    213          	WriteCard(CARD_FLG_ADDR,(uint8 *)&m_sCardFlg,sizeof(m_sCardFlg));
   \   00000078   0xF44F 0x6256      MOV      R2,#+3424
   \   0000007C   0x.... 0x....      LDR.W    R1,??DataTable9
   \   00000080   0x2000             MOVS     R0,#+0
   \   00000082   0x.... 0x....      BL       WriteCard
    214          		
    215          	return 1;
   \   00000086   0x2001             MOVS     R0,#+1
   \   00000088   0xBD70             POP      {R4-R6,PC}       ;; return
    216          }
    217          
    218          extern	void	ReCalPara(uint8	Flg);
    219          
    220          //------------------------------------------------------------------------------
    221          //名    称：    uint8    WriteCardDataCardTest(void)
    222          //功    能：    Df5油箱模型
    223          //入口参数：    无
    224          //出口参数：    Df5的油箱模型
    225          //------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    226          uint8    WritesTestCardTest(void)
    227          {
   \                     WritesTestCardTest: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    228          	uint16		CardType;
    229          	uint16		CrcCheck;
    230          	uint32		i;
    231          
    232          	CardType = DEBUG_CARD;
   \   00000002   0xF44F 0x6000      MOV      R0,#+2048
   \   00000006   0x0004             MOVS     R4,R0
    233          	
    234          	ReadCard(CARD_FLG_ADDR,(uint8 *)&m_sCardFlg,sizeof(m_sCardFlg));
   \   00000008   0xF44F 0x6256      MOV      R2,#+3424
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable9
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x.... 0x....      BL       ReadCard
    235          	
    236          	for(i = 0 ; i < 3; i++)
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x0006             MOVS     R6,R0
   \                     ??WritesTestCardTest_0: (+1)
   \   0000001A   0x2E03             CMP      R6,#+3
   \   0000001C   0xD206             BCS.N    ??WritesTestCardTest_1
    237          	{
    238          		m_sCardFlg.sCardType.CardType[i] = CardType;
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable9
   \   00000022   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   00000026   0x8404             STRH     R4,[R0, #+32]
    239          	}
   \   00000028   0x1C76             ADDS     R6,R6,#+1
   \   0000002A   0xE7F6             B.N      ??WritesTestCardTest_0
    240          	
    241          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg.sCardType,sizeof(m_sCardFlg.sCardType) - 2);
   \                     ??WritesTestCardTest_1: (+1)
   \   0000002C   0x2106             MOVS     R1,#+6
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable9_1
   \   00000032   0x.... 0x....      BL       GetCrc16Check
   \   00000036   0x0005             MOVS     R5,R0
    242          	m_sCardFlg.sCardType.CrcCheck = CrcCheck;
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable9
   \   0000003C   0x84C5             STRH     R5,[R0, #+38]
    243          
    244          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg.sCardPara,sizeof(m_sCardFlg.sCardPara) - 2);
   \   0000003E   0x21B2             MOVS     R1,#+178
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable9_2
   \   00000044   0x.... 0x....      BL       GetCrc16Check
   \   00000048   0x0005             MOVS     R5,R0
    245          	m_sCardFlg.sCardPara.CrcCheck	= CrcCheck;	
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable9
   \   0000004E   0xF8A0 0x50DA      STRH     R5,[R0, #+218]
    246          	
    247          	m_sCardFlg.WriteCardTimes = 0;
   \   00000052   0x2000             MOVS     R0,#+0
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable9
   \   00000058   0xF8A1 0x0D5C      STRH     R0,[R1, #+3420]
    248          	
    249          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg,sizeof(m_sCardFlg) - 2);
   \   0000005C   0xF640 0x515E      MOVW     R1,#+3422
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable9
   \   00000064   0x.... 0x....      BL       GetCrc16Check
   \   00000068   0x0005             MOVS     R5,R0
    250          	m_sCardFlg.CrcCheck = CrcCheck;
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable9
   \   0000006E   0xF8A0 0x5D5E      STRH     R5,[R0, #+3422]
    251          		
    252          	WriteCard(CARD_FLG_ADDR,(uint8 *)&m_sCardFlg,sizeof(m_sCardFlg));
   \   00000072   0xF44F 0x6256      MOV      R2,#+3424
   \   00000076   0x.... 0x....      LDR.W    R1,??DataTable9
   \   0000007A   0x2000             MOVS     R0,#+0
   \   0000007C   0x.... 0x....      BL       WriteCard
    253          		
    254          	return 1;
   \   00000080   0x2001             MOVS     R0,#+1
   \   00000082   0xBD70             POP      {R4-R6,PC}       ;; return
    255          }
    256          //------------------------------------------------------------------------------
    257          //名    称：    uint8    WriteCardDataCardTest(void)
    258          //功    能：    Df5油箱模型
    259          //入口参数：    无
    260          //出口参数：    Df5的油箱模型
    261          //------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    262          uint8    WriteCardDataCardTest(void)
    263          {
   \                     WriteCardDataCardTest: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    264          	uint16		CardType;
    265          	uint16		CrcCheck;
    266          	uint32		i;
    267          
    268          	CardType = DATA_CARD;
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x0004             MOVS     R4,R0
    269          	
    270          	ReadCard(CARD_FLG_ADDR,(uint8 *)&m_sCardFlg,sizeof(m_sCardFlg));
   \   00000006   0xF44F 0x6256      MOV      R2,#+3424
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable9
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x.... 0x....      BL       ReadCard
    271          	
    272          	for(i = 0 ; i < 3; i++)
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x0006             MOVS     R6,R0
   \                     ??WriteCardDataCardTest_0: (+1)
   \   00000018   0x2E03             CMP      R6,#+3
   \   0000001A   0xD206             BCS.N    ??WriteCardDataCardTest_1
    273          	{
    274          		m_sCardFlg.sCardType.CardType[i] = CardType;
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable9
   \   00000020   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   00000024   0x8404             STRH     R4,[R0, #+32]
    275          	}
   \   00000026   0x1C76             ADDS     R6,R6,#+1
   \   00000028   0xE7F6             B.N      ??WriteCardDataCardTest_0
    276          	
    277          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg.sCardType,sizeof(m_sCardFlg.sCardType) - 2);
   \                     ??WriteCardDataCardTest_1: (+1)
   \   0000002A   0x2106             MOVS     R1,#+6
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable9_1
   \   00000030   0x.... 0x....      BL       GetCrc16Check
   \   00000034   0x0005             MOVS     R5,R0
    278          	m_sCardFlg.sCardType.CrcCheck = CrcCheck;
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable9
   \   0000003A   0x84C5             STRH     R5,[R0, #+38]
    279          
    280          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg.sCardPara,sizeof(m_sCardFlg.sCardPara) - 2);
   \   0000003C   0x21B2             MOVS     R1,#+178
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable9_2
   \   00000042   0x.... 0x....      BL       GetCrc16Check
   \   00000046   0x0005             MOVS     R5,R0
    281          	m_sCardFlg.sCardPara.CrcCheck	= CrcCheck;	
   \   00000048   0x....             LDR.N    R0,??DataTable9
   \   0000004A   0xF8A0 0x50DA      STRH     R5,[R0, #+218]
    282          	
    283          	m_sCardFlg.WriteCardTimes = 0;
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x....             LDR.N    R1,??DataTable9
   \   00000052   0xF8A1 0x0D5C      STRH     R0,[R1, #+3420]
    284          	
    285          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg,sizeof(m_sCardFlg) - 2);
   \   00000056   0xF640 0x515E      MOVW     R1,#+3422
   \   0000005A   0x....             LDR.N    R0,??DataTable9
   \   0000005C   0x.... 0x....      BL       GetCrc16Check
   \   00000060   0x0005             MOVS     R5,R0
    286          	m_sCardFlg.CrcCheck = CrcCheck;
   \   00000062   0x....             LDR.N    R0,??DataTable9
   \   00000064   0xF8A0 0x5D5E      STRH     R5,[R0, #+3422]
    287          		
    288          	WriteCard(CARD_FLG_ADDR,(uint8 *)&m_sCardFlg,sizeof(m_sCardFlg));
   \   00000068   0xF44F 0x6256      MOV      R2,#+3424
   \   0000006C   0x....             LDR.N    R1,??DataTable9
   \   0000006E   0x2000             MOVS     R0,#+0
   \   00000070   0x.... 0x....      BL       WriteCard
    289          		
    290          	return 1;
   \   00000074   0x2001             MOVS     R0,#+1
   \   00000076   0xBD70             POP      {R4-R6,PC}       ;; return
    291          }
    292          
    293          
    294          //------------------------------------------------------------------------------
    295          //名    称：    estDipModel(void)(void)
    296          //功    能：    Df5油箱模型
    297          //入口参数：    无
    298          //出口参数：    Df5的油箱模型
    299          //------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    300          uint8    WriteCardTimeCardTest(void)
    301          {
    302          /*
    303          	uint16		CardType;
    304          	uint16		CrcCheck;
    305          	uint32		i;
    306          	
    307          	CardType = TIME_CARD;
    308          	
    309          	ReadCard(CARD_FLG_ADDR,(uint8 *)&m_sCardFlg,sizeof(m_sCardFlg));
    310          	
    311          	for(i = 0 ; i < 3; i++)
    312          	{
    313          		m_sCardFlg.sCardType.CardType[i] = CardType;
    314          	}
    315          	
    316          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg.sCardType,sizeof(m_sCardFlg.sCardType) - 2);
    317          	m_sCardFlg.sCardType.CrcCheck = CrcCheck;
    318          	
    319          	//09-10-15 11:20:00
    320          	m_sCardFlg.sCardPara.sTime.Sec 	= 0;
    321          	m_sCardFlg.sCardPara.sTime.Min 	= 20;
    322          	m_sCardFlg.sCardPara.sTime.Hour	= 11;
    323          	m_sCardFlg.sCardPara.sTime.Date 	= 15;
    324          	m_sCardFlg.sCardPara.sTime.Month 	= 10;
    325          	m_sCardFlg.sCardPara.sTime.Year	= 9;
    326          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg.sCardPara.sTime,sizeof(m_sCardFlg.sCardPara.sTime) - 2);
    327          	m_sCardFlg.sCardPara.sTime.CrcCheck	= CrcCheck;
    328          	
    329          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg.sCardPara,sizeof(m_sCardFlg.sCardPara) - 2);
    330          	m_sCardFlg.sCardPara.CrcCheck	= CrcCheck;	
    331          	
    332          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg,sizeof(m_sCardFlg) - 2);
    333          	m_sCardFlg.CrcCheck = CrcCheck;
    334          	
    335          	WriteCard(CARD_FLG_ADDR,(uint8 *)&m_sCardFlg,sizeof(m_sCardFlg));
    336          */
    337          	return 1;
   \                     WriteCardTimeCardTest: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x4770             BX       LR               ;; return
    338          
    339          }
    340          
    341          //------------------------------------------------------------------------------
    342          //名    称：    WriteDensityCardTest(void)
    343          //功    能：    Df5油箱模型
    344          //入口参数：    无
    345          //出口参数：    Df5的油箱模型
    346          //------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    347          uint8    WriteDensityCardTest(void)
    348          {
   \                     WriteDensityCardTest: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    349          	uint16		CardType;
    350          	uint16		CrcCheck;
    351          	uint32		i;
    352          		
    353          	CardType = DENSITY_CARD;
   \   00000002   0x2020             MOVS     R0,#+32
   \   00000004   0x0004             MOVS     R4,R0
    354          	
    355          	ReadCard(CARD_FLG_ADDR,(uint8 *)&m_sCardFlg,sizeof(m_sCardFlg));
   \   00000006   0xF44F 0x6256      MOV      R2,#+3424
   \   0000000A   0x....             LDR.N    R1,??DataTable9
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x.... 0x....      BL       ReadCard
    356          	
    357          	for(i = 0 ; i < 3; i++)
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x0006             MOVS     R6,R0
   \                     ??WriteDensityCardTest_0: (+1)
   \   00000016   0x2E03             CMP      R6,#+3
   \   00000018   0xD205             BCS.N    ??WriteDensityCardTest_1
    358          	{
    359          		m_sCardFlg.sCardType.CardType[i] = CardType;
   \   0000001A   0x....             LDR.N    R0,??DataTable9
   \   0000001C   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   00000020   0x8404             STRH     R4,[R0, #+32]
    360          	}
   \   00000022   0x1C76             ADDS     R6,R6,#+1
   \   00000024   0xE7F7             B.N      ??WriteDensityCardTest_0
    361          	
    362          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg.sCardType,sizeof(m_sCardFlg.sCardType) - 2);
   \                     ??WriteDensityCardTest_1: (+1)
   \   00000026   0x2106             MOVS     R1,#+6
   \   00000028   0x....             LDR.N    R0,??DataTable9_1
   \   0000002A   0x.... 0x....      BL       GetCrc16Check
   \   0000002E   0x0005             MOVS     R5,R0
    363          	m_sCardFlg.sCardType.CrcCheck = CrcCheck;
   \   00000030   0x....             LDR.N    R0,??DataTable9
   \   00000032   0x84C5             STRH     R5,[R0, #+38]
    364          
    365          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg.sCardPara,sizeof(m_sCardFlg.sCardPara) - 2);
   \   00000034   0x21B2             MOVS     R1,#+178
   \   00000036   0x....             LDR.N    R0,??DataTable9_2
   \   00000038   0x.... 0x....      BL       GetCrc16Check
   \   0000003C   0x0005             MOVS     R5,R0
    366          	m_sCardFlg.sCardPara.sDensity.Density	= 835;	
   \   0000003E   0xF240 0x3043      MOVW     R0,#+835
   \   00000042   0x....             LDR.N    R1,??DataTable9
   \   00000044   0x6308             STR      R0,[R1, #+48]
    367          		
    368          	//PrintfDebug("\r\n sDensity.Density %d",m_sCardFlg.sCardPara.sDensity.Density);
    369          
    370          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg.sCardPara.sDensity,sizeof(m_sCardFlg.sCardPara.sDensity) - 2);
   \   00000046   0x2116             MOVS     R1,#+22
   \   00000048   0x....             LDR.N    R0,??DataTable9_2
   \   0000004A   0x.... 0x....      BL       GetCrc16Check
   \   0000004E   0x0005             MOVS     R5,R0
    371          	m_sCardFlg.sCardPara.sDensity.CrcCheck	= CrcCheck;	
   \   00000050   0x....             LDR.N    R0,??DataTable9
   \   00000052   0x87C5             STRH     R5,[R0, #+62]
    372          	
    373          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg.sCardPara,sizeof(m_sCardFlg.sCardPara) - 2);
   \   00000054   0x21B2             MOVS     R1,#+178
   \   00000056   0x....             LDR.N    R0,??DataTable9_2
   \   00000058   0x.... 0x....      BL       GetCrc16Check
   \   0000005C   0x0005             MOVS     R5,R0
    374          	m_sCardFlg.sCardPara.CrcCheck	= CrcCheck;	
   \   0000005E   0x....             LDR.N    R0,??DataTable9
   \   00000060   0xF8A0 0x50DA      STRH     R5,[R0, #+218]
    375          		
    376          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg,sizeof(m_sCardFlg) - 2);
   \   00000064   0xF640 0x515E      MOVW     R1,#+3422
   \   00000068   0x....             LDR.N    R0,??DataTable9
   \   0000006A   0x.... 0x....      BL       GetCrc16Check
   \   0000006E   0x0005             MOVS     R5,R0
    377          	m_sCardFlg.CrcCheck = CrcCheck;
   \   00000070   0x....             LDR.N    R0,??DataTable9
   \   00000072   0xF8A0 0x5D5E      STRH     R5,[R0, #+3422]
    378          		
    379          	WriteCard(CARD_FLG_ADDR,(uint8 *)&m_sCardFlg,sizeof(m_sCardFlg));
   \   00000076   0xF44F 0x6256      MOV      R2,#+3424
   \   0000007A   0x....             LDR.N    R1,??DataTable9
   \   0000007C   0x2000             MOVS     R0,#+0
   \   0000007E   0x.... 0x....      BL       WriteCard
    380          			
    381          	return 1;
   \   00000082   0x2001             MOVS     R0,#+1
   \   00000084   0xBD70             POP      {R4-R6,PC}       ;; return
    382          }
    383          
    384          //------------------------------------------------------------------------------
    385          //名    称：    WriteDensityCardTest(void)
    386          //功    能：    Df5油箱模型
    387          //入口参数：    无
    388          //出口参数：    Df5的油箱模型
    389          //------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    390          uint8    WriteDenDataCardTest(void)
    391          {
   \                     WriteDenDataCardTest: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    392          	uint16		CardType;
    393          	uint16		CrcCheck;
    394          	uint32		i;
    395          		
    396          	CardType = DENSITY_CARD+DATA_CARD;
   \   00000002   0x2021             MOVS     R0,#+33
   \   00000004   0x0004             MOVS     R4,R0
    397          	
    398          	ReadCard(CARD_FLG_ADDR,(uint8 *)&m_sCardFlg,sizeof(m_sCardFlg));
   \   00000006   0xF44F 0x6256      MOV      R2,#+3424
   \   0000000A   0x....             LDR.N    R1,??DataTable9
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x.... 0x....      BL       ReadCard
    399          	
    400          	for(i = 0 ; i < 3; i++)
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x0006             MOVS     R6,R0
   \                     ??WriteDenDataCardTest_0: (+1)
   \   00000016   0x2E03             CMP      R6,#+3
   \   00000018   0xD205             BCS.N    ??WriteDenDataCardTest_1
    401          	{
    402          		m_sCardFlg.sCardType.CardType[i] = CardType;
   \   0000001A   0x....             LDR.N    R0,??DataTable9
   \   0000001C   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   00000020   0x8404             STRH     R4,[R0, #+32]
    403          	}
   \   00000022   0x1C76             ADDS     R6,R6,#+1
   \   00000024   0xE7F7             B.N      ??WriteDenDataCardTest_0
    404          	
    405          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg.sCardType,sizeof(m_sCardFlg.sCardType) - 2);
   \                     ??WriteDenDataCardTest_1: (+1)
   \   00000026   0x2106             MOVS     R1,#+6
   \   00000028   0x....             LDR.N    R0,??DataTable9_1
   \   0000002A   0x.... 0x....      BL       GetCrc16Check
   \   0000002E   0x0005             MOVS     R5,R0
    406          	m_sCardFlg.sCardType.CrcCheck = CrcCheck;
   \   00000030   0x....             LDR.N    R0,??DataTable9
   \   00000032   0x84C5             STRH     R5,[R0, #+38]
    407          
    408          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg.sCardPara,sizeof(m_sCardFlg.sCardPara) - 2);
   \   00000034   0x21B2             MOVS     R1,#+178
   \   00000036   0x....             LDR.N    R0,??DataTable9_2
   \   00000038   0x.... 0x....      BL       GetCrc16Check
   \   0000003C   0x0005             MOVS     R5,R0
    409          	m_sCardFlg.sCardPara.sDensity.Density	= 830+(GetSysTime()/100)%50;	
   \   0000003E   0x.... 0x....      BL       GetSysTime
   \   00000042   0x2164             MOVS     R1,#+100
   \   00000044   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000048   0x2132             MOVS     R1,#+50
   \   0000004A   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   0000004E   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000052   0xF200 0x303E      ADDW     R0,R0,#+830
   \   00000056   0x....             LDR.N    R1,??DataTable9
   \   00000058   0x6308             STR      R0,[R1, #+48]
    410          		
    411          	m_sCardFlg.sCardPara.sDensity.DenChageTimes = 10+GetSysTime();
   \   0000005A   0x.... 0x....      BL       GetSysTime
   \   0000005E   0x300A             ADDS     R0,R0,#+10
   \   00000060   0x....             LDR.N    R1,??DataTable9
   \   00000062   0x62C8             STR      R0,[R1, #+44]
    412          		
    413          	//PrintfDebug("\r\n sDensity.Density %d",m_sCardFlg.sCardPara.sDensity.Density);
    414          
    415          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg.sCardPara.sDensity,sizeof(m_sCardFlg.sCardPara.sDensity) - 2);
   \   00000064   0x2116             MOVS     R1,#+22
   \   00000066   0x....             LDR.N    R0,??DataTable9_2
   \   00000068   0x.... 0x....      BL       GetCrc16Check
   \   0000006C   0x0005             MOVS     R5,R0
    416          	m_sCardFlg.sCardPara.sDensity.CrcCheck	= CrcCheck;	
   \   0000006E   0x....             LDR.N    R0,??DataTable9
   \   00000070   0x87C5             STRH     R5,[R0, #+62]
    417          	
    418          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg.sCardPara,sizeof(m_sCardFlg.sCardPara) - 2);
   \   00000072   0x21B2             MOVS     R1,#+178
   \   00000074   0x....             LDR.N    R0,??DataTable9_2
   \   00000076   0x.... 0x....      BL       GetCrc16Check
   \   0000007A   0x0005             MOVS     R5,R0
    419          	m_sCardFlg.sCardPara.CrcCheck	= CrcCheck;	
   \   0000007C   0x....             LDR.N    R0,??DataTable9
   \   0000007E   0xF8A0 0x50DA      STRH     R5,[R0, #+218]
    420          		
    421          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg,sizeof(m_sCardFlg) - 2);
   \   00000082   0xF640 0x515E      MOVW     R1,#+3422
   \   00000086   0x....             LDR.N    R0,??DataTable9
   \   00000088   0x.... 0x....      BL       GetCrc16Check
   \   0000008C   0x0005             MOVS     R5,R0
    422          	m_sCardFlg.CrcCheck = CrcCheck;
   \   0000008E   0x....             LDR.N    R0,??DataTable9
   \   00000090   0xF8A0 0x5D5E      STRH     R5,[R0, #+3422]
    423          		
    424          	WriteCard(CARD_FLG_ADDR,(uint8 *)&m_sCardFlg,sizeof(m_sCardFlg));
   \   00000094   0xF44F 0x6256      MOV      R2,#+3424
   \   00000098   0x....             LDR.N    R1,??DataTable9
   \   0000009A   0x2000             MOVS     R0,#+0
   \   0000009C   0x.... 0x....      BL       WriteCard
    425          			
    426          	return 1;
   \   000000A0   0x2001             MOVS     R0,#+1
   \   000000A2   0xBD70             POP      {R4-R6,PC}       ;; return
    427          }
    428          //------------------------------------------------------------------------------
    429          //名    称：    WriteCopyCardTest(void)
    430          //功    能：    复制卡
    431          //入口参数：    无
    432          //出口参数：    Df5的油箱模型
    433          //------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    434          uint8    WriteCopyCardTest(void)
    435          {
   \                     WriteCopyCardTest: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    436          	uint16		CardType;
    437          	uint16		CrcCheck;
    438          	uint32		i;
    439          		
    440          	CardType = COPY_CARD;
   \   00000002   0xF44F 0x6080      MOV      R0,#+1024
   \   00000006   0x0004             MOVS     R4,R0
    441          	
    442          	ReadCard(CARD_FLG_ADDR,(uint8 *)&m_sCardFlg,sizeof(m_sCardFlg));
   \   00000008   0xF44F 0x6256      MOV      R2,#+3424
   \   0000000C   0x....             LDR.N    R1,??DataTable9
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x.... 0x....      BL       ReadCard
    443          	
    444          	for(i = 0 ; i < 3; i++)
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x0006             MOVS     R6,R0
   \                     ??WriteCopyCardTest_0: (+1)
   \   00000018   0x2E03             CMP      R6,#+3
   \   0000001A   0xD205             BCS.N    ??WriteCopyCardTest_1
    445          	{
    446          		m_sCardFlg.sCardType.CardType[i] = CardType;
   \   0000001C   0x....             LDR.N    R0,??DataTable9
   \   0000001E   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   00000022   0x8404             STRH     R4,[R0, #+32]
    447          	}
   \   00000024   0x1C76             ADDS     R6,R6,#+1
   \   00000026   0xE7F7             B.N      ??WriteCopyCardTest_0
    448          	
    449          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg.sCardType,sizeof(m_sCardFlg.sCardType) - 2);
   \                     ??WriteCopyCardTest_1: (+1)
   \   00000028   0x2106             MOVS     R1,#+6
   \   0000002A   0x....             LDR.N    R0,??DataTable9_1
   \   0000002C   0x.... 0x....      BL       GetCrc16Check
   \   00000030   0x0005             MOVS     R5,R0
    450          	m_sCardFlg.sCardType.CrcCheck = CrcCheck;
   \   00000032   0x....             LDR.N    R0,??DataTable9
   \   00000034   0x84C5             STRH     R5,[R0, #+38]
    451          
    452          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg,sizeof(m_sCardFlg) - 2);
   \   00000036   0xF640 0x515E      MOVW     R1,#+3422
   \   0000003A   0x....             LDR.N    R0,??DataTable9
   \   0000003C   0x.... 0x....      BL       GetCrc16Check
   \   00000040   0x0005             MOVS     R5,R0
    453          	m_sCardFlg.CrcCheck = CrcCheck;
   \   00000042   0x....             LDR.N    R0,??DataTable9
   \   00000044   0xF8A0 0x5D5E      STRH     R5,[R0, #+3422]
    454          		
    455          	WriteCard(CARD_FLG_ADDR,(uint8 *)&m_sCardFlg,sizeof(m_sCardFlg));
   \   00000048   0xF44F 0x6256      MOV      R2,#+3424
   \   0000004C   0x....             LDR.N    R1,??DataTable9
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x.... 0x....      BL       WriteCard
    456          			
    457          	return 1;
   \   00000054   0x2001             MOVS     R0,#+1
   \   00000056   0xBD70             POP      {R4-R6,PC}       ;; return
    458          }
    459          
    460          
    461          //------------------------------------------------------------------------------
    462          //名    称：    WriteCopyCardTest(void)
    463          //功    能：    复制卡
    464          //入口参数：    无
    465          //出口参数：    Df5的油箱模型
    466          //------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    467          uint8    WriteCopyFramTest(void)
    468          {
   \                     WriteCopyFramTest: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    469          	uint16		CardType;
    470          	uint16		CrcCheck;
    471          	uint32		i;
    472          		
    473          	CardType = COPY_FRAM_CARD;
   \   00000002   0xF44F 0x4080      MOV      R0,#+16384
   \   00000006   0x0004             MOVS     R4,R0
    474          	
    475          	ReadCard(CARD_FLG_ADDR,(uint8 *)&m_sCardFlg,sizeof(m_sCardFlg));
   \   00000008   0xF44F 0x6256      MOV      R2,#+3424
   \   0000000C   0x....             LDR.N    R1,??DataTable9
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x.... 0x....      BL       ReadCard
    476          	
    477          	for(i = 0 ; i < 3; i++)
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x0006             MOVS     R6,R0
   \                     ??WriteCopyFramTest_0: (+1)
   \   00000018   0x2E03             CMP      R6,#+3
   \   0000001A   0xD205             BCS.N    ??WriteCopyFramTest_1
    478          	{
    479          		m_sCardFlg.sCardType.CardType[i] = CardType;
   \   0000001C   0x....             LDR.N    R0,??DataTable9
   \   0000001E   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   00000022   0x8404             STRH     R4,[R0, #+32]
    480          	}
   \   00000024   0x1C76             ADDS     R6,R6,#+1
   \   00000026   0xE7F7             B.N      ??WriteCopyFramTest_0
    481          	
    482          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg.sCardType,sizeof(m_sCardFlg.sCardType) - 2);
   \                     ??WriteCopyFramTest_1: (+1)
   \   00000028   0x2106             MOVS     R1,#+6
   \   0000002A   0x....             LDR.N    R0,??DataTable9_1
   \   0000002C   0x.... 0x....      BL       GetCrc16Check
   \   00000030   0x0005             MOVS     R5,R0
    483          	m_sCardFlg.sCardType.CrcCheck = CrcCheck;
   \   00000032   0x....             LDR.N    R0,??DataTable9
   \   00000034   0x84C5             STRH     R5,[R0, #+38]
    484          
    485          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg,sizeof(m_sCardFlg) - 2);
   \   00000036   0xF640 0x515E      MOVW     R1,#+3422
   \   0000003A   0x....             LDR.N    R0,??DataTable9
   \   0000003C   0x.... 0x....      BL       GetCrc16Check
   \   00000040   0x0005             MOVS     R5,R0
    486          	m_sCardFlg.CrcCheck = CrcCheck;
   \   00000042   0x....             LDR.N    R0,??DataTable9
   \   00000044   0xF8A0 0x5D5E      STRH     R5,[R0, #+3422]
    487          		
    488          	WriteCard(CARD_FLG_ADDR,(uint8 *)&m_sCardFlg,sizeof(m_sCardFlg));
   \   00000048   0xF44F 0x6256      MOV      R2,#+3424
   \   0000004C   0x....             LDR.N    R1,??DataTable9
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x.... 0x....      BL       WriteCard
    489          			
    490          	return 1;
   \   00000054   0x2001             MOVS     R0,#+1
   \   00000056   0xBD70             POP      {R4-R6,PC}       ;; return
    491          }
    492          
    493          //------------------------------------------------------------------------------
    494          //名    称：    WriteCopyCardTest(void)
    495          //功    能：    复制卡
    496          //入口参数：    无
    497          //出口参数：    Df5的油箱模型
    498          //------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    499          uint8    WriteExpandAddTest(void)
    500          {
   \                     WriteExpandAddTest: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    501          	uint16		CardType;
    502          	uint16		CrcCheck;
    503          	uint32		i;
    504          		
    505          	CardType = EXPAND_CARD;
   \   00000002   0xF44F 0x4000      MOV      R0,#+32768
   \   00000006   0x0004             MOVS     R4,R0
    506          	
    507          	ReadCard(CARD_FLG_ADDR,(uint8 *)&m_sCardFlg,sizeof(m_sCardFlg));
   \   00000008   0xF44F 0x6256      MOV      R2,#+3424
   \   0000000C   0x....             LDR.N    R1,??DataTable9
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x.... 0x....      BL       ReadCard
    508          	
    509          	for(i = 0 ; i < 3; i++)
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x0006             MOVS     R6,R0
   \                     ??WriteExpandAddTest_0: (+1)
   \   00000018   0x2E03             CMP      R6,#+3
   \   0000001A   0xD205             BCS.N    ??WriteExpandAddTest_1
    510          	{
    511          		m_sCardFlg.sCardType.CardType[i] = CardType;
   \   0000001C   0x....             LDR.N    R0,??DataTable9
   \   0000001E   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   00000022   0x8404             STRH     R4,[R0, #+32]
    512          	}
   \   00000024   0x1C76             ADDS     R6,R6,#+1
   \   00000026   0xE7F7             B.N      ??WriteExpandAddTest_0
    513          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg.sCardType,sizeof(m_sCardFlg.sCardType) - 2);
   \                     ??WriteExpandAddTest_1: (+1)
   \   00000028   0x2106             MOVS     R1,#+6
   \   0000002A   0x....             LDR.N    R0,??DataTable9_1
   \   0000002C   0x.... 0x....      BL       GetCrc16Check
   \   00000030   0x0005             MOVS     R5,R0
    514          	m_sCardFlg.sCardType.CrcCheck = CrcCheck;
   \   00000032   0x....             LDR.N    R0,??DataTable9
   \   00000034   0x84C5             STRH     R5,[R0, #+38]
    515          
    516          	m_sCardFlg.sCardPara.Reserve0	= 1;		
   \   00000036   0x2001             MOVS     R0,#+1
   \   00000038   0x....             LDR.N    R1,??DataTable9
   \   0000003A   0xF8A1 0x00D8      STRH     R0,[R1, #+216]
    517          	
    518          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg.sCardPara,sizeof(m_sCardFlg.sCardPara) - 2);
   \   0000003E   0x21B2             MOVS     R1,#+178
   \   00000040   0x....             LDR.N    R0,??DataTable9_2
   \   00000042   0x.... 0x....      BL       GetCrc16Check
   \   00000046   0x0005             MOVS     R5,R0
    519          	m_sCardFlg.sCardPara.CrcCheck	= CrcCheck;	
   \   00000048   0x....             LDR.N    R0,??DataTable9
   \   0000004A   0xF8A0 0x50DA      STRH     R5,[R0, #+218]
    520          		
    521          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg,sizeof(m_sCardFlg) - 2);
   \   0000004E   0xF640 0x515E      MOVW     R1,#+3422
   \   00000052   0x....             LDR.N    R0,??DataTable9
   \   00000054   0x.... 0x....      BL       GetCrc16Check
   \   00000058   0x0005             MOVS     R5,R0
    522          	m_sCardFlg.CrcCheck = CrcCheck;
   \   0000005A   0x....             LDR.N    R0,??DataTable9
   \   0000005C   0xF8A0 0x5D5E      STRH     R5,[R0, #+3422]
    523          		
    524          	WriteCard(CARD_FLG_ADDR,(uint8 *)&m_sCardFlg,sizeof(m_sCardFlg));
   \   00000060   0xF44F 0x6256      MOV      R2,#+3424
   \   00000064   0x....             LDR.N    R1,??DataTable9
   \   00000066   0x2000             MOVS     R0,#+0
   \   00000068   0x.... 0x....      BL       WriteCard
    525          			
    526          	return 1;
   \   0000006C   0x2001             MOVS     R0,#+1
   \   0000006E   0xBD70             POP      {R4-R6,PC}       ;; return
    527          }
    528          
    529          //------------------------------------------------------------------------------
    530          //名    称：    WriteCopyCardTest(void)
    531          //功    能：    复制卡
    532          //入口参数：    无
    533          //出口参数：    Df5的油箱模型
    534          //------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    535          uint8    WriteExpandSubTest(void)
    536          {
   \                     WriteExpandSubTest: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    537          	uint16		CardType;
    538          	uint16		CrcCheck;
    539          	uint32		i;
    540          		
    541          	CardType = EXPAND_CARD;
   \   00000002   0xF44F 0x4000      MOV      R0,#+32768
   \   00000006   0x0004             MOVS     R4,R0
    542          	
    543          	ReadCard(CARD_FLG_ADDR,(uint8 *)&m_sCardFlg,sizeof(m_sCardFlg));
   \   00000008   0xF44F 0x6256      MOV      R2,#+3424
   \   0000000C   0x....             LDR.N    R1,??DataTable9
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x.... 0x....      BL       ReadCard
    544          	
    545          	for(i = 0 ; i < 3; i++)
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x0006             MOVS     R6,R0
   \                     ??WriteExpandSubTest_0: (+1)
   \   00000018   0x2E03             CMP      R6,#+3
   \   0000001A   0xD205             BCS.N    ??WriteExpandSubTest_1
    546          	{
    547          		m_sCardFlg.sCardType.CardType[i] = CardType;
   \   0000001C   0x....             LDR.N    R0,??DataTable9
   \   0000001E   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   00000022   0x8404             STRH     R4,[R0, #+32]
    548          	}
   \   00000024   0x1C76             ADDS     R6,R6,#+1
   \   00000026   0xE7F7             B.N      ??WriteExpandSubTest_0
    549          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg.sCardType,sizeof(m_sCardFlg.sCardType) - 2);
   \                     ??WriteExpandSubTest_1: (+1)
   \   00000028   0x2106             MOVS     R1,#+6
   \   0000002A   0x....             LDR.N    R0,??DataTable9_1
   \   0000002C   0x.... 0x....      BL       GetCrc16Check
   \   00000030   0x0005             MOVS     R5,R0
    550          	m_sCardFlg.sCardType.CrcCheck = CrcCheck;
   \   00000032   0x....             LDR.N    R0,??DataTable9
   \   00000034   0x84C5             STRH     R5,[R0, #+38]
    551          
    552          	m_sCardFlg.sCardPara.Reserve0	= 2;		
   \   00000036   0x2002             MOVS     R0,#+2
   \   00000038   0x....             LDR.N    R1,??DataTable9
   \   0000003A   0xF8A1 0x00D8      STRH     R0,[R1, #+216]
    553          	
    554          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg.sCardPara,sizeof(m_sCardFlg.sCardPara) - 2);
   \   0000003E   0x21B2             MOVS     R1,#+178
   \   00000040   0x....             LDR.N    R0,??DataTable9_2
   \   00000042   0x.... 0x....      BL       GetCrc16Check
   \   00000046   0x0005             MOVS     R5,R0
    555          	m_sCardFlg.sCardPara.CrcCheck	= CrcCheck;	
   \   00000048   0x....             LDR.N    R0,??DataTable9
   \   0000004A   0xF8A0 0x50DA      STRH     R5,[R0, #+218]
    556          		
    557          	CrcCheck = GetCrc16Check((uint8 *)&m_sCardFlg,sizeof(m_sCardFlg) - 2);
   \   0000004E   0xF640 0x515E      MOVW     R1,#+3422
   \   00000052   0x....             LDR.N    R0,??DataTable9
   \   00000054   0x.... 0x....      BL       GetCrc16Check
   \   00000058   0x0005             MOVS     R5,R0
    558          	m_sCardFlg.CrcCheck = CrcCheck;
   \   0000005A   0x....             LDR.N    R0,??DataTable9
   \   0000005C   0xF8A0 0x5D5E      STRH     R5,[R0, #+3422]
    559          		
    560          	WriteCard(CARD_FLG_ADDR,(uint8 *)&m_sCardFlg,sizeof(m_sCardFlg));
   \   00000060   0xF44F 0x6256      MOV      R2,#+3424
   \   00000064   0x....             LDR.N    R1,??DataTable9
   \   00000066   0x2000             MOVS     R0,#+0
   \   00000068   0x.... 0x....      BL       WriteCard
    561          			
    562          	return 1;
   \   0000006C   0x2001             MOVS     R0,#+1
   \   0000006E   0xBD70             POP      {R4-R6,PC}       ;; return
    563          }
    564          //------------------------------------------------------------------------------
    565          //名    称：    ReadCardIndexTest(void)
    566          //功    能：    Df5油箱模型
    567          //入口参数：    无
    568          //出口参数：    Df5的油箱模型
    569          //------------------------------------------------------------------------------
    570          //uint8    ReadCardIndexTest(void)
    571          //{
    572          //	uint16		CardType;
    573          //	uint32		i;
    574          //		
    575          //	CardType = DENSITY_CARD;
    576          //	
    577          //	if(ReadCard(CARD_FLG_ADDR,(uint8 *)&m_sCardFlg,sizeof(m_sCardFlg)))
    578          //	{		
    579          //		//printfcom0("\r\nWriteCardTimes %d",m_sCardFlg.WriteCardTimes);
    580          //		
    581          //		for(i = 0 ; i < 100; i++)
    582          //		{	
    583          //			//SysFastHoldTast();
    584          //
    585          //			//PrintfDebug("\r\nStartAddr[%d] %d, EndAddr[%d] %d",
    586          //			//			i,m_sCardFlg.sCardIndex[i].StartAddr,i,m_sCardFlg.sCardIndex[i].EndAddr);
    587          //		}
    588          //	}
    589          //
    590          //	return 1;
    591          //}
    592          
    593          //-------------------------------------------------------------------------------
    594          //函数名称:        	stcFlshRec	ReadFlshRec(uint32	FlshRecNum)
    595          //函数功能:       	读指定流水号的FLSH记录
    596          //入口参数:        	无
    597          //出口参数:      	指定流水号的Flsh记录
    598          //-------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    599          uint8	ReadCardRec(stcFlshRec * sFlshRec,uint32	Addr)
    600          {
   \                     ReadCardRec: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    601          	if(ReadCard(Addr,(uint8 *)sFlshRec,sizeof(stcFlshRec)))
   \   00000006   0x2280             MOVS     R2,#+128
   \   00000008   0x0021             MOVS     R1,R4
   \   0000000A   0x0028             MOVS     R0,R5
   \   0000000C   0x.... 0x....      BL       ReadCard
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD001             BEQ.N    ??ReadCardRec_0
    602          	{
    603          		return 1;
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0xE000             B.N      ??ReadCardRec_1
    604          	}
    605          	
    606          	return	0;
   \                     ??ReadCardRec_0: (+1)
   \   00000018   0x2000             MOVS     R0,#+0
   \                     ??ReadCardRec_1: (+1)
   \   0000001A   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    607          }
    608          
    609          //-------------------------------------------------------------------------------------------------
    610          //函数名称:             void  ShowFlshRec(stcFlshRec sDip) 
    611          //函数功能:             将记录转变为比较容易读的格式
    612          //入口参数:             无
    613          //出口参数:             无
    614          //说明:                 
    615          //--------------------------------------------------------------------------------------------------
    616          //void  ShowCardRec(stcFlshRec sDip) 
    617          //{
    618          //	uint8       Second,Minute,Data,Mouth,Hour;
    619          //	uint16      RelSpeed;
    620          //	uint32      Time;
    621          //	
    622          //    RelSpeed= (uint16)sDip.RelSpeed[0] + (sDip.RelSpeed[1] &(1))*256;
    623          //    
    624          //	memcpy((uint8 *)&Time,sDip.Time,sizeof(Time));
    625          //
    626          //    Second 	= Time  & (0xff >> 2);
    627          //    Minute 	= (Time >> 6 ) & (0xff >> 2);
    628          //    Hour   	= (Time >> 12) & (0xff >> 3);
    629          //    Data   	= (Time >> 17) & (0xff >> 3);
    630          //    Mouth  	= (Time >> 22) & (0xff >> 4);
    631          //    
    632          //    //printfcom0("\r\n%u-%u %u:%u:%u\t",Mouth,Data,Hour,Minute,Second);
    633          //    ////printfcom0(" %u-%u %u:%u:%u,%u,%u,%u,%u,%u,%u",sDip.MyYear,sDip.MyMonth,sDip.MyHour,sDip.MyMinute,sDip.MySecond);   
    634          //    //printfcom0(" %u,%u",RelSpeed,sDip.MstDip);      
    635          //}
    636          
    637          extern	uint16	l_CardType;
    638          //-------------------------------------------------------------------------------------------------
    639          //函数名称:             void  PrintfCardRec(void) 
    640          //函数功能:             打印记录
    641          //入口参数:             无
    642          //出口参数:             无
    643          //说明:                 
    644          //--------------------------------------------------------------------------------------------------
    645          //void  PrintfCardRec(void) 
    646          //{
    647          //	uint32	i;
    648          //	uint32		StartRecAddr;		
    649          //	stcFlshRec	sCardRec;					
    650          //	uint32	Time;
    651          //	
    652          //	if(PlugICCard() == TRUE)										//有卡插入，再进行相关操作
    653          //	{				
    654          //		if(ReadCardFlg((stcCardFlg	*)&m_sCardFlg))					//读IC卡标志页
    655          //		{
    656          //			if( l_CardType == DATA_CARD )
    657          //			{		
    658          //				for(i = 0 ; i < m_sCardFlg.WriteCardTimes;i++ )
    659          //				{
    660          //					StartRecAddr = m_sCardFlg.sCardIndex[i].StartAddr;
    661          //					
    662          //					while(StartRecAddr < m_sCardFlg.sCardIndex[i].EndAddr)
    663          //					{
    664          //						ReadCardRec((stcFlshRec *)&sCardRec,StartRecAddr);
    665          //						ShowCardRec(sCardRec);					//将记录打印出来
    666          //						
    667          //						StartRecAddr += sizeof(sCardRec);
    668          //					}
    669          //				}
    670          //			}
    671          //		}
    672          //
    673          //		Time = GetSysTime();
    674          //		while(PlugICCard() == TRUE)									//等IC卡退出		
    675          //		{
    676          //			if(GetSysTime() - Time > 30*100)
    677          //			{
    678          //				break;
    679          //			}
    680          //		}			
    681          //	}	
    682          //}
    683          
    684          //-------------------------------------------------------------------------------------------------
    685          //函数名称:             void  FramToCard(void) 
    686          //函数功能:             铁电数据到IC卡
    687          //入口参数:             无
    688          //出口参数:             无
    689          //说明:                 
    690          //--------------------------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    691          void 	FramToCard(void) 
    692          {
   \                     FramToCard: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    693          	static	uint8	Buf[FRAM_SIZE / 16];
    694          	uint32	Addr = 0;
   \   00000002   0x2400             MOVS     R4,#+0
    695          	uint32	i;
    696          	
    697          	for(i = 0;i < 16; i++)
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x0005             MOVS     R5,R0
   \                     ??FramToCard_0: (+1)
   \   00000008   0x2D10             CMP      R5,#+16
   \   0000000A   0xD211             BCS.N    ??FramToCard_1
    698          	{
    699          		ReadFM24CL64(Addr,Buf,sizeof(Buf));
   \   0000000C   0xF44F 0x7200      MOV      R2,#+512
   \   00000010   0x....             LDR.N    R1,??DataTable9_3
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000016   0x.... 0x....      BL       ReadFM24CL64
    700          		
    701          		WriteCard(Addr + CARD_DATA_ADDR,Buf,sizeof(Buf));
   \   0000001A   0xF44F 0x7200      MOV      R2,#+512
   \   0000001E   0x....             LDR.N    R1,??DataTable9_3
   \   00000020   0xF514 0x50A0      ADDS     R0,R4,#+5120
   \   00000024   0x.... 0x....      BL       WriteCard
    702          		
    703          		Addr += sizeof(Buf);
   \   00000028   0xF514 0x7400      ADDS     R4,R4,#+512
    704          	}
   \   0000002C   0x1C6D             ADDS     R5,R5,#+1
   \   0000002E   0xE7EB             B.N      ??FramToCard_0
    705          }
   \                     ??FramToCard_1: (+1)
   \   00000030   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .bss, align 4
   \                     ??Buf:
   \   00000000                      DS8 512

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x........         DC32     m_sCardFlg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   0x........         DC32     m_sCardFlg+0x20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \   00000000   0x........         DC32     m_sCardFlg+0x28

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_3:
   \   00000000   0x........         DC32     ??Buf

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   FramToCard
        16   -> ReadFM24CL64
        16   -> WriteCard
      16   ReadCardRec
        16   -> ReadCard
      16   WriteCardDataCardTest
        16   -> GetCrc16Check
        16   -> ReadCard
        16   -> WriteCard
       0   WriteCardTimeCardTest
      16   WriteCopyCardTest
        16   -> GetCrc16Check
        16   -> ReadCard
        16   -> WriteCard
      16   WriteCopyFramTest
        16   -> GetCrc16Check
        16   -> ReadCard
        16   -> WriteCard
      16   WriteDenDataCardTest
        16   -> GetCrc16Check
        16   -> GetSysTime
        16   -> ReadCard
        16   -> WriteCard
      16   WriteDensityCardTest
        16   -> GetCrc16Check
        16   -> ReadCard
        16   -> WriteCard
      16   WriteExpandAddTest
        16   -> GetCrc16Check
        16   -> ReadCard
        16   -> WriteCard
      16   WriteExpandSubTest
        16   -> GetCrc16Check
        16   -> ReadCard
        16   -> WriteCard
      16   WritesSetDipCardTest
        16   -> GetCrc16Check
        16   -> ReadCard
        16   -> WriteCard
      16   WritesTestCardTest
        16   -> GetCrc16Check
        16   -> ReadCard
        16   -> WriteCard


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable9
       4  ??DataTable9_1
       4  ??DataTable9_2
       4  ??DataTable9_3
     512  Buf
      50  FramToCard
      28  ReadCardRec
     120  WriteCardDataCardTest
       4  WriteCardTimeCardTest
      88  WriteCopyCardTest
      88  WriteCopyFramTest
     164  WriteDenDataCardTest
     134  WriteDensityCardTest
     112  WriteExpandAddTest
     112  WriteExpandSubTest
     138  WritesSetDipCardTest
     132  WritesTestCardTest
    3424  m_sCardFlg
     208  m_sModel
    5956  m_sModelCard

 
 10 100 bytes in section .bss
  1 186 bytes in section .text
 
  1 186 bytes of CODE memory
 10 100 bytes of DATA memory

Errors: none
Warnings: none
