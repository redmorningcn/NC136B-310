###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       26/Sep/2017  15:08:19
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  F:\iar\NC136B-310统计模块\Software\APP\comm\app_comm_otr.c
#    Command line =  
#        F:\iar\NC136B-310统计模块\Software\APP\comm\app_comm_otr.c -lCN
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List
#        --diag_suppress Pa050 -o
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\csnr_package_deal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\tax\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\app_comm_otr.lst
#    Object file  =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\app_comm_otr.o
#
###############################################################################

F:\iar\NC136B-310统计模块\Software\APP\comm\app_comm_otr.c
      1          /*******************************************************************************
      2           *   Filename:       app_comm_otr.c
      3           *   Revised:        All copyrights reserved to redmorningcn.
      4           *   Revision:       v1.0
      5           *   Writer:	     redmorningcn.
      6           *
      7           *   Description:    双击选中 otr 按 Ctrl + H, 钩选 Match the case, Replace with
      8           *                   输入您要的名字，点击 Replace All
      9           *                   双击选中 Otr 按 Ctrl + H, 钩选 Match the case, Replace with
     10           *                   输入您要的名字，点击 Replace All
     11           *                   双击选中 OTR 按 Ctrl + H, 钩选 Match the case, Replace with
     12           *                   输入您要的名字，点击 Replace All
     13           *                   在 app_cfg.h 中指定本任务的 优先级  （ APP_TASK_COMM_PRIO     ）
     14           *                                            和 任务堆栈（ APP_TASK_COMM_STK_SIZE ）大小
     15           *
     16           *   Notes:
     17           *     				E-mail: redmorningcn@qq.com
     18           *
     19           *******************************************************************************/
     20          
     21          /*******************************************************************************
     22           * INCLUDES
     23           */
     24          #define  SNL_APP_SOURCE
     25          #include <includes.h>
     26          #include <app_comm_protocol.h>
     27          #include <app_ctrl.h>
     28          #include <app.h>
     29          #include <os_cfg_app.h>
     30          
     31          
     32          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     33          const  CPU_CHAR  *app_comm_otr__c = "$Id: $";
     34          #endif
     35          
     36          #define APP_TASK_COMM_EN     DEF_ENABLED
     37          #if APP_TASK_COMM_EN == DEF_ENABLED
     38          /*******************************************************************************
     39           * CONSTANTS
     40           */
     41          
     42          /*******************************************************************************
     43           * MACROS
     44           */
     45          #define CYCLE_TIME_TICKS            (OS_TICKS_PER_SEC * 1)
     46          
     47          /*******************************************************************************
     48           * TYPEDEFS
     49           */
     50          
     51          #define		DATA_CARD           0x0001			//数据卡-----暂时未用
     52          #define		DENSITY_CARD		0x0020			//密度卡
     53          #define		MODEL_CARD			0x0040			//模型卡-----暂时未用
     54          #define		TIME_CARD           0x0100			//时间卡-----
     55          #define		COM_MODEL_CARD	    0x0100		    //串口模型卡-暂时未用
     56          #define		HIGHT_CARD			0x0200			//高度卡-----
     57          #define		COPY_CARD           0x0400			//复制卡-----暂时未用
     58          #define		MODEL_SELECT_CARD	0x1000			//模型选择卡-
     59          #define		FIX_CARD            0x2000			//装车卡-----
     60          #define		COPY_FRAM_CARD	    0x4000			//铁电复制卡-暂时未用
     61          #define		SET_DATA_CARD		0x0080			//置数卡-----按时未用
     62          #define		DEBUG_CARD			0x0800			//调试卡-----暂时未用
     63          
     64          #define		EXPAND_CARD			0x8000			//扩展卡-----暂时未用
     65          
     66          #define		DATA_CARD_DIS		0x10000			//数据卡指示
     67          #define		DATA_CARD_FIN		0x20000			//数据卡结束
     68          #define		SYS_RUN_PARA		0x40000			//系统参数卡--暂未使用
     69          #define		CLEAR_ALL			0x80000			//清零卡，数据记录清零
     70          
     71          #define		RST_SYS				0x100000		//复位指令
     72          #define		CALC_PARA           0x200000		//计算斜率
     73          
     74          /*******************************************************************************
     75           * LOCAL VARIABLES
     76           */
     77          
     78          /*******************************************************************************
     79           * GLOBAL VARIABLES
     80           */
     81          
     82          /***********************************************
     83          * 描述： 软定时器声明
     84          */
     85          
     86          /***********************************************
     87          * 描述： 软定时器回调函数
     88          */
     89          
     90          
     91          /*******************************************************************************
     92           * LOCAL FUNCTIONS
     93           */
     94          uint8   comm_tinyrec_send(StrDevOtr * sOtr,uint8    addrnum);
     95          
     96          
     97          
     98          /*******************************************************************************
     99           * GLOBAL FUNCTIONS
    100           */
    101          
    102          /*******************************************************************************
    103           * EXTERN VARIABLES
    104           */
    105          
    106           /*******************************************************************************
    107           * EXTERN FUNCTIONS
    108           */
    109          uint8   FRAM_StoreRecNumMgr(StrRecNumMgr  *SRecNumMgr);
    110          uint8   FRAM_StoreOilPara(StrOilPara  *SOilPara);
    111          void    BSP_DispClrAll(void);
    112          uint8   FRAM_StoreProductInfo(StrProductInfo  *sProductInfo);
    113          void    comm_para_flow(StrDevDtu * sDtu,uint8 addrnum);
    114          uint8 ReadFM24CL64(uint16  Addr, uint8 *DataBuf, uint32 DataBufLen);            
    115          
    116          
    117          
    118          /*******************************************************************************/
    119          
    120          extern  stcSysCtrl  sCtrl;
    121          
    122          /*******************************************************************************
    123           * 名    称：  app_comm_otr
    124           * 功    能： 调用IC卡通讯处理函数。
    125           *            如果是定时器超时，则对应地址的timeout计算加1，并判断
    126           *            值是否到满足该地址故障判断次数，是否执行通讯异常处理。
    127           *            如果是接收到数据事件，则根据接收数据进行处理。
    128           * 入口参数： 无
    129           * 出口参数： 无
    130           * 作　 　者：redmorningcn.
    131           * 创建日期： 2017-05-20
    132           * 修    改：
    133           * 修改日期：
    134           * 备    注： 任务创建函数需要在app.h文件中声明
    135           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    136          void    app_comm_otr(void)
    137          {
   \                     app_comm_otr: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    138              //判断对应地址连接是否接收到数据
    139              uint8 i = 0;
   \   00000002   0x2400             MOVS     R4,#+0
    140              while(i < COMM_DEV_OTR_CONN_NUM){
   \                     ??app_comm_otr_0: (+1)
   \   00000004   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000006   0x2C02             CMP      R4,#+2
   \   00000008   0xDA2C             BGE.N    ??app_comm_otr_1
    141                  if(sCtrl.Otr.ConnCtrl[i].RecvEndFlg == 1)                   //如果地址i接收到数据，对数据进行处理
   \   0000000A   0x....             LDR.N    R0,??DataTable1
   \   0000000C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000E   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   00000012   0xF890 0x065B      LDRB     R0,[R0, #+1627]
   \   00000016   0x2801             CMP      R0,#+1
   \   00000018   0xD122             BNE.N    ??app_comm_otr_2
    142                  {
    143                      /***********************************************
    144                      * 描述： 从接收的revcbuf中取数据
    145                      *        根据接收到的地址CA，进行无线  数据传输；
    146                      *        接收到地址C2，进行  设置模式。
    147                      */
    148                      
    149                      if(sCtrl.Otr.RxCtrl.SourceAddr == SLAVE_ADDR_OTR)       //地址等于C1，IC数据传输。
   \   0000001A   0x....             LDR.N    R0,??DataTable1
   \   0000001C   0xF890 0x064F      LDRB     R0,[R0, #+1615]
   \   00000020   0x28C1             CMP      R0,#+193
   \   00000022   0xD104             BNE.N    ??app_comm_otr_3
    150                      {
    151          //                comm_record_send((StrDevOtr *)&sCtrl.Otr.RxCtrl,i); //数据的需要传递  otr，明确 地址，pch等信息。
    152                          comm_para_flow((StrDevDtu *)&sCtrl.Otr,i);   //设置参数，或信息交互。依据code进行相应操作。
   \   00000024   0x0021             MOVS     R1,R4
   \   00000026   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000028   0x....             LDR.N    R0,??DataTable1_1
   \   0000002A   0x.... 0x....      BL       comm_para_flow
    153                      }
    154                      
    155                      if(sCtrl.Otr.RxCtrl.SourceAddr == SLAVE_ADDR_SET)//地址等于C2，参数设置。
   \                     ??app_comm_otr_3: (+1)
   \   0000002E   0x....             LDR.N    R0,??DataTable1
   \   00000030   0xF890 0x064F      LDRB     R0,[R0, #+1615]
   \   00000034   0x28C2             CMP      R0,#+194
   \   00000036   0xD104             BNE.N    ??app_comm_otr_4
    156                      {
    157                          comm_para_flow((StrDevDtu *)&sCtrl.Otr,i);  //设置参数，或信息交互。依据code进行相应操作。
   \   00000038   0x0021             MOVS     R1,R4
   \   0000003A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000003C   0x....             LDR.N    R0,??DataTable1_1
   \   0000003E   0x.... 0x....      BL       comm_para_flow
    158                      }
    159                      
    160                      sCtrl.Otr.ConnCtrl[i].RecvEndFlg = 0;           //数据已处理。 接收数据置1
   \                     ??app_comm_otr_4: (+1)
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x....             LDR.N    R1,??DataTable1
   \   00000046   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000048   0xEB11 0x01C4      ADDS     R1,R1,R4, LSL #+3
   \   0000004C   0xF881 0x065B      STRB     R0,[R1, #+1627]
    161                      sCtrl.Otr.ConnCtrl[i].TimeOut    = 0;           //超时计数清零
   \   00000050   0x2000             MOVS     R0,#+0
   \   00000052   0x....             LDR.N    R1,??DataTable1
   \   00000054   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000056   0xEB11 0x01C4      ADDS     R1,R1,R4, LSL #+3
   \   0000005A   0xF881 0x065C      STRB     R0,[R1, #+1628]
    162                      
    163                      return  ;
   \   0000005E   0xE057             B.N      ??app_comm_otr_5
    164                  }
    165                  i++;
   \                     ??app_comm_otr_2: (+1)
   \   00000060   0x1C64             ADDS     R4,R4,#+1
   \   00000062   0xE7CF             B.N      ??app_comm_otr_0
    166              }
    167           
    168              /***********************************************
    169              *   描述： 如果是超时。
    170              *1. 超时时，所有地址计算加1，对应计算器在收到数据时清零。
    171              *2. 10数据无应答，发送一次数据。
    172              */
    173              if( sCtrl.Os.CommEvtFlag |  COMM_EVT_FLAG_OTR_TIMEOUT){
    174                  uint8 i = 0;
   \                     ??app_comm_otr_1: (+1)
   \   00000064   0x2500             MOVS     R5,#+0
    175                  while( i < COMM_DEV_OTR_CONN_NUM){
   \                     ??app_comm_otr_6: (+1)
   \   00000066   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000068   0x2D02             CMP      R5,#+2
   \   0000006A   0xDA2C             BGE.N    ??app_comm_otr_7
    176                      sCtrl.Otr.ConnCtrl[i].TimeOut++;
   \   0000006C   0x....             LDR.N    R0,??DataTable1
   \   0000006E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000070   0xEB10 0x00C5      ADDS     R0,R0,R5, LSL #+3
   \   00000074   0xF890 0x065C      LDRB     R0,[R0, #+1628]
   \   00000078   0x1C40             ADDS     R0,R0,#+1
   \   0000007A   0x....             LDR.N    R1,??DataTable1
   \   0000007C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000007E   0xEB11 0x01C5      ADDS     R1,R1,R5, LSL #+3
   \   00000082   0xF881 0x065C      STRB     R0,[R1, #+1628]
    177          
    178                      if(sCtrl.Otr.ConnCtrl[i].TimeOut > 10 * COMM_DEV_OTR_CONN_NUM){
   \   00000086   0x....             LDR.N    R0,??DataTable1
   \   00000088   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000008A   0xEB10 0x00C5      ADDS     R0,R0,R5, LSL #+3
   \   0000008E   0xF890 0x065C      LDRB     R0,[R0, #+1628]
   \   00000092   0x2815             CMP      R0,#+21
   \   00000094   0xDB0E             BLT.N    ??app_comm_otr_8
    179                          sCtrl.Otr.ConnCtrl[i].TimeOut = 10 * COMM_DEV_OTR_CONN_NUM + 1;
   \   00000096   0x2015             MOVS     R0,#+21
   \   00000098   0x....             LDR.N    R1,??DataTable1
   \   0000009A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000009C   0xEB11 0x01C5      ADDS     R1,R1,R5, LSL #+3
   \   000000A0   0xF881 0x065C      STRB     R0,[R1, #+1628]
    180                          sCtrl.Otr.ConnCtrl[i].ErrFlg = 1;               //超时数大于10次，5S，报通讯错误。
   \   000000A4   0x2001             MOVS     R0,#+1
   \   000000A6   0x....             LDR.N    R1,??DataTable1
   \   000000A8   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000AA   0xEB11 0x01C5      ADDS     R1,R1,R5, LSL #+3
   \   000000AE   0xF881 0x065D      STRB     R0,[R1, #+1629]
   \   000000B2   0xE006             B.N      ??app_comm_otr_9
    181                          
    182                      }else{
    183                          sCtrl.Otr.ConnCtrl[i].ErrFlg = 0;               //接收到数据，通讯清零
   \                     ??app_comm_otr_8: (+1)
   \   000000B4   0x2000             MOVS     R0,#+0
   \   000000B6   0x....             LDR.N    R1,??DataTable1
   \   000000B8   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000BA   0xEB11 0x01C5      ADDS     R1,R1,R5, LSL #+3
   \   000000BE   0xF881 0x065D      STRB     R0,[R1, #+1629]
    184                      }
    185                      
    186                      i++;
   \                     ??app_comm_otr_9: (+1)
   \   000000C2   0x1C6D             ADDS     R5,R5,#+1
   \   000000C4   0xE7CF             B.N      ??app_comm_otr_6
    187                  }
    188                  
    189                  /***********************************************
    190                  * 描述： 如果是超时。
    191                  * 发送数据
    192                  */ 
    193                  if( sCtrl.sRecNumMgr.Current == 0 )                     //记录号为0，还未发送数据。不做通讯状态判断
   \                     ??app_comm_otr_7: (+1)
   \   000000C6   0x....             LDR.N    R0,??DataTable1
   \   000000C8   0x6840             LDR      R0,[R0, #+4]
   \   000000CA   0x2800             CMP      R0,#+0
   \   000000CC   0xD10D             BNE.N    ??app_comm_otr_10
    194                  {
    195                      uint8 i = 0;
   \   000000CE   0x2000             MOVS     R0,#+0
    196                      while( i < COMM_DEV_OTR_CONN_NUM){
   \                     ??app_comm_otr_11: (+1)
   \   000000D0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000D2   0x2802             CMP      R0,#+2
   \   000000D4   0xDA08             BGE.N    ??app_comm_otr_12
    197                          sCtrl.Otr.ConnCtrl[i].TimeOut = 0;
   \   000000D6   0x2100             MOVS     R1,#+0
   \   000000D8   0x....             LDR.N    R2,??DataTable1
   \   000000DA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000DC   0xEB12 0x02C0      ADDS     R2,R2,R0, LSL #+3
   \   000000E0   0xF882 0x165C      STRB     R1,[R2, #+1628]
    198                          i++;
   \   000000E4   0x1C40             ADDS     R0,R0,#+1
   \   000000E6   0xE7F3             B.N      ??app_comm_otr_11
    199                      }
    200                      return;
   \                     ??app_comm_otr_12: (+1)
   \   000000E8   0xE012             B.N      ??app_comm_otr_5
    201                  }
    202                          
    203                  //发送1条数据记录
    204                  i =0 ;
   \                     ??app_comm_otr_10: (+1)
   \   000000EA   0x2000             MOVS     R0,#+0
   \   000000EC   0x0005             MOVS     R5,R0
    205                  while(i < COMM_DEV_OTR_CONN_NUM)
   \                     ??app_comm_otr_13: (+1)
   \   000000EE   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000F0   0x2D02             CMP      R5,#+2
   \   000000F2   0xDA0C             BGE.N    ??app_comm_otr_14
    206                      if(sCtrl.Otr.ConnCtrl[i].SlaveAddr == SLAVE_ADDR_OTR){
   \   000000F4   0x....             LDR.N    R0,??DataTable1
   \   000000F6   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000F8   0xEB10 0x00C5      ADDS     R0,R0,R5, LSL #+3
   \   000000FC   0xF890 0x065E      LDRB     R0,[R0, #+1630]
   \   00000100   0x28C1             CMP      R0,#+193
   \   00000102   0xD1F4             BNE.N    ??app_comm_otr_13
    207                  //对OTR地址发送数据 
    208                          comm_tinyrec_send((StrDevOtr *)&sCtrl.Otr,i);
   \   00000104   0x0029             MOVS     R1,R5
   \   00000106   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000108   0x....             LDR.N    R0,??DataTable1_1
   \   0000010A   0x.... 0x....      BL       comm_tinyrec_send
    209                          //comm_record_send_one((StrDevOtr *)&sCtrl.Otr.RxCtrl,i);  
    210                          break;
    211                      }
    212                     i++;
   \                     ??app_comm_otr_14: (+1)
   \   0000010E   0x1C6D             ADDS     R5,R5,#+1
    213                  
    214              }
    215          }
   \                     ??app_comm_otr_5: (+1)
   \   00000110   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    216          
    217          
    218          /*******************************************************************************
    219           * 名    称： comm_tinyrec_send
    220           * 功    能： 发送记录中的比较关键信息
    221           * 入口参数： 通讯设备数据结构
    222           * 出口参数： 无
    223           * 作　 　者： redmorningcn.
    224           * 创建日期： 2017-05-20
    225           * 修    改：
    226           * 修改日期：
    227           * 备    注： 任务创建函数需要在app.h文件中声明
    228           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    229          uint8    comm_tinyrec_send(StrDevOtr * sOtr,uint8    addrnum)
    230          {
   \                     comm_tinyrec_send: (+1)
   \   00000000   0xB53E             PUSH     {R1-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    231              //if(sOtr->pch->Ch == 2)      //无线通道
    232              {
    233                  //记录号为0，还未发送数据。不做通讯状态判断
    234                  if( sCtrl.sRecNumMgr.Current == 0 )                                   
   \   00000006   0x....             LDR.N    R0,??DataTable1
   \   00000008   0x6840             LDR      R0,[R0, #+4]
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD101             BNE.N    ??comm_tinyrec_send_0
    235                  {
    236                      return 0;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0xE048             B.N      ??comm_tinyrec_send_1
    237                  }
    238                  /***********************************************
    239                  * 描述： 取值
    240                  * 
    241                  */ 
    242                  sOtr->Wr.sTinyRec.Addr      = 0xc1;
   \                     ??comm_tinyrec_send_0: (+1)
   \   00000012   0x20C1             MOVS     R0,#+193
   \   00000014   0xF884 0x00A0      STRB     R0,[R4, #+160]
    243                  sOtr->Wr.sTinyRec.CurRecNum = sCtrl.sRecNumMgr.Current;
   \   00000018   0x....             LDR.N    R0,??DataTable1
   \   0000001A   0x6840             LDR      R0,[R0, #+4]
   \   0000001C   0xF8C4 0x00A4      STR      R0,[R4, #+164]
    244                  sOtr->Wr.sTinyRec.Hig1      = sCtrl.sRec.Myhig1;
   \   00000020   0x....             LDR.N    R0,??DataTable1
   \   00000022   0xF8B0 0x0064      LDRH     R0,[R0, #+100]
   \   00000026   0xF8A4 0x00AE      STRH     R0,[R4, #+174]
    245                  sOtr->Wr.sTinyRec.Hig2      = sCtrl.sRec.Myhig2;
   \   0000002A   0x....             LDR.N    R0,??DataTable1
   \   0000002C   0xF8B0 0x0066      LDRH     R0,[R0, #+102]
   \   00000030   0xF8A4 0x00B0      STRH     R0,[R4, #+176]
    246                  sOtr->Wr.sTinyRec.LocoWorkSta=sCtrl.sRec.MyLocoWorkState;
   \   00000034   0x....             LDR.N    R0,??DataTable1
   \   00000036   0xF890 0x0099      LDRB     R0,[R0, #+153]
   \   0000003A   0xF884 0x00B2      STRB     R0,[R4, #+178]
    247                  sOtr->Wr.sTinyRec.ModelNum  = sCtrl.sRec.OilBoxModel;
   \   0000003E   0x....             LDR.N    R0,??DataTable1
   \   00000040   0xF890 0x009B      LDRB     R0,[R0, #+155]
   \   00000044   0xF884 0x00A1      STRB     R0,[R4, #+161]
    248                  sOtr->Wr.sTinyRec.Oil       = sCtrl.sRec.MstDip;
   \   00000048   0x....             LDR.N    R0,??DataTable1
   \   0000004A   0x6D40             LDR      R0,[R0, #+84]
   \   0000004C   0xF8A4 0x00A2      STRH     R0,[R4, #+162]
    249                  sOtr->Wr.sTinyRec.Speed1    = sCtrl.sRec.Myspeed1;
   \   00000050   0x....             LDR.N    R0,??DataTable1
   \   00000052   0xF8B0 0x0050      LDRH     R0,[R0, #+80]
   \   00000056   0xF8A4 0x00A8      STRH     R0,[R4, #+168]
    250                  sOtr->Wr.sTinyRec.Speed2    = sCtrl.sRec.Myspeed2;
   \   0000005A   0x....             LDR.N    R0,??DataTable1
   \   0000005C   0xF8B0 0x0052      LDRH     R0,[R0, #+82]
   \   00000060   0xF8A4 0x00AA      STRH     R0,[R4, #+170]
    251                  sOtr->Wr.sTinyRec.Speedcs   = sCtrl.sRec.MyEngRotSpd;
   \   00000064   0x....             LDR.N    R0,??DataTable1
   \   00000066   0xF8B0 0x0082      LDRH     R0,[R0, #+130]
   \   0000006A   0xF8A4 0x00AC      STRH     R0,[R4, #+172]
    252                 
    253                  //超时值发送SLAVE_ADDR_OTR 的数据
    254                  CSNC_SendData(sCtrl.Otr.pch,                                //OTR 的PCH：串口号，收发控制等底层信息
    255                                sOtr->ConnCtrl[addrnum].MasterAddr,           //源地址，
    256                                sOtr->ConnCtrl[addrnum].SlaveAddr,            //目标地址
    257                                sOtr->ConnCtrl[addrnum].SendFramNum,          //帧序号 ，，在接收中累加
    258                                0,                                            //命令字
    259                                (uint8 *)&sCtrl.Otr.Wr.sTinyRec,              //数据区
    260                                sizeof(sCtrl.Otr.Wr.sTinyRec)                 //发送长度
    261                                );
   \   0000006E   0x2014             MOVS     R0,#+20
   \   00000070   0x9002             STR      R0,[SP, #+8]
   \   00000072   0x....             LDR.N    R0,??DataTable1_2
   \   00000074   0x9001             STR      R0,[SP, #+4]
   \   00000076   0x2000             MOVS     R0,#+0
   \   00000078   0x9000             STR      R0,[SP, #+0]
   \   0000007A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000007C   0xEB14 0x00C5      ADDS     R0,R4,R5, LSL #+3
   \   00000080   0xF890 0x3152      LDRB     R3,[R0, #+338]
   \   00000084   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000086   0xEB14 0x00C5      ADDS     R0,R4,R5, LSL #+3
   \   0000008A   0xF890 0x2150      LDRB     R2,[R0, #+336]
   \   0000008E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000090   0xEB14 0x00C5      ADDS     R0,R4,R5, LSL #+3
   \   00000094   0xF890 0x1151      LDRB     R1,[R0, #+337]
   \   00000098   0x....             LDR.N    R0,??DataTable1
   \   0000009A   0xF8D0 0x066A      LDR      R0,[R0, #+1642]
   \   0000009E   0x.... 0x....      BL       CSNC_SendData
    262              }
    263              return 1;
   \   000000A2   0x2001             MOVS     R0,#+1
   \                     ??comm_tinyrec_send_1: (+1)
   \   000000A4   0xBD3E             POP      {R1-R5,PC}       ;; return
    264          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     sCtrl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     sCtrl+0x50E

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     sCtrl+0x5AE
    265          
    266          /*******************************************************************************
    267           * 				end of file
    268           *******************************************************************************/
    269          #endif
    270          
    271          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   app_comm_otr
        16   -> comm_para_flow
        16   -> comm_tinyrec_send
      24   comm_tinyrec_send
        24   -> CSNC_SendData


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
     274  app_comm_otr
     166  comm_tinyrec_send

 
 452 bytes in section .text
 
 452 bytes of CODE memory

Errors: none
Warnings: none
