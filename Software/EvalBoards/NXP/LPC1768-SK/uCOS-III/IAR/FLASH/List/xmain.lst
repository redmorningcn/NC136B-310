###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       11/Oct/2017  19:56:26
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  F:\iar\NC136B-310统计模块\Software\APP\xmain.c
#    Command line =  
#        F:\iar\NC136B-310统计模块\Software\APP\xmain.c -lCN
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List
#        --diag_suppress Pa050 -o
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\csnr_package_deal\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\iap\
#        -I
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\tax\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\xmain.lst
#    Object file  =  
#        F:\iar\NC136B-310统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\xmain.o
#
###############################################################################

F:\iar\NC136B-310统计模块\Software\APP\xmain.c
      1          /*******************************************************************************
      2           *   Filename:      app.c
      3           *   Revised:       $Date: 2013-06-30$
      4           *   Revision:      $
      5           *	 Writer:		Wuming Shen.
      6           *
      7           *   Description:
      8           *   Notes:
      9           *					QQ:276193028
     10           *     				E-mail:shenchangwei945@163.com
     11           *
     12           *   All copyrights reserved to Wuming Shen.
     13           *
     14           *******************************************************************************/
     15          
     16          /*******************************************************************************
     17           * INCLUDES
     18           */
     19          #define  SNL_APP_SOURCE
     20          #include <app.h>
     21          #include <app_ctrl.h>
     22          
     23          //#include <iap.h>
     24          
     25          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     26          const  CPU_CHAR  *main__c = "$Id: $";
     27          #endif
     28          
     29          
     30          void    TaskInitStore(void);
     31          osalEvt  TaskStoreEvtProcess(INT8U task_id, osalEvt task_event);
     32          
     33          void    TaskInitCalc(void);
     34          osalEvt  TaskCalcEvtProcess(INT8U task_id, osalEvt task_event);
     35          
     36          void    TaskInitSpeed(void);
     37          osalEvt  TaskSpeedEvtProcess(INT8U task_id, osalEvt task_event);
     38          
     39          void     TaskInitLed(void);
     40          osalEvt  TaskLedEvtProcess(INT8U task_id, osalEvt task_event);
     41          
     42          uint8 	FRAM_StoreRunPara(stcRunPara  *sRunPara);
     43          
     44          
     45          //void    TaskInitStore(void);
     46          //osalEvt  TaskStoreEvtProcess(INT8U task_id, osalEvt task_event);
     47          /*******************************************************************************
     48           * CONSTANTS
     49           */
     50          #define CYCLE_TIME_TICKS            (OS_TICKS_PER_SEC * 2)
     51          
     52          /*******************************************************************************
     53           * MACROS
     54           */
     55          
     56          /*******************************************************************************
     57           * TYPEDEFS
     58           */
     59          
     60          /*******************************************************************************
     61           * LOCAL VARIABLES
     62           */
     63          
     64          /*******************************************************************************
     65           * GLOBAL VARIABLES
     66           */
     67          /***********************************************
     68          * 描述： 创建标志组
     69          */

   \                                 In section .bss, align 4
     70          OS_FLAG_GRP         WdtFlagGRP;                     //看门狗标志组
   \                     WdtFlagGRP:
   \   00000000                      DS8 40

   \                                 In section .bss, align 4
     71          OS_FLAGS            WdtFlags;
   \                     WdtFlags:
   \   00000000                      DS8 4
     72          
     73          /*******************************************************************************
     74           * LOCAL FUNCTIONS
     75           *
     76           * 返回类型         函数名称                入口参数
     77           */
     78          
     79          /*******************************************************************************
     80           * GLOBAL FUNCTIONS
     81           */
     82          

   \                                 In section .bss, align 4
     83          stcSysCtrl       sCtrl;
   \                     sCtrl:
   \   00000000                      DS8 2408
     84          
     85          

   \                                 In section .text, align 2, keep-with-next
     86          void    app_init_sctrl(void)
     87          {
   \                     app_init_sctrl: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     88              sCtrl.Password      =   6237;
   \   00000002   0xF641 0x005D      MOVW     R0,#+6237
   \   00000006   0x....             LDR.N    R1,??DataTable1
   \   00000008   0x8008             STRH     R0,[R1, #+0]
     89              sCtrl.SoftWareID    =   1705;   //年月，版本
   \   0000000A   0xF240 0x60A9      MOVW     R0,#+1705
   \   0000000E   0x....             LDR.N    R1,??DataTable1
   \   00000010   0x8048             STRH     R0,[R1, #+2]
     90              
     91          
     92          //   	FRAM_StoreRunPara((stcRunPara *) &sCtrl.sRunPara);
     93              FRAM_ReadRunPara((stcRunPara *) &sCtrl.sRunPara);   //读取运行参数
   \   00000012   0x....             LDR.N    R0,??DataTable1_1
   \   00000014   0x.... 0x....      BL       FRAM_ReadRunPara
     94           
     95          //开始标示    //存储时间间隔
     96              sCtrl.sRunPara.StartFlg = 1;  
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0x....             LDR.N    R1,??DataTable1
   \   0000001C   0xF881 0x00C7      STRB     R0,[R1, #+199]
     97              sCtrl.sRunPara.SysSta   = 0;        
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x....             LDR.N    R1,??DataTable1
   \   00000024   0xF881 0x00C8      STRB     R0,[R1, #+200]
     98                  
     99              sCtrl.sRunPara.RecClear = 0;
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0x....             LDR.N    R1,??DataTable1
   \   0000002C   0xF881 0x00C5      STRB     R0,[R1, #+197]
    100              sCtrl.sRunPara.StoreTime= 60;       
   \   00000030   0x203C             MOVS     R0,#+60
   \   00000032   0x....             LDR.N    R1,??DataTable1
   \   00000034   0xF881 0x00C4      STRB     R0,[R1, #+196]
    101              sCtrl.sRunPara.SysReset = 0;
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0x....             LDR.N    R1,??DataTable1
   \   0000003C   0xF881 0x00C6      STRB     R0,[R1, #+198]
    102              
    103              FRAM_StoreRunPara((stcRunPara *) &sCtrl.sRunPara);   //读取运行参数
   \   00000040   0x....             LDR.N    R0,??DataTable1_1
   \   00000042   0x.... 0x....      BL       FRAM_StoreRunPara
    104              
    105             
    106              
    107          //    sCtrl.sRunPara.StoreType    = 0x02;            //shu ju NDP02B
    108          //    sCtrl.sRunPara.StoreTypeBak = 0x02;
    109          
    110          
    111              
    112          //测量装置1 初始化    
    113              sCtrl.Mtr.ConnCtrl[0].ConnFlg   = 1;
   \   00000046   0x2001             MOVS     R0,#+1
   \   00000048   0x....             LDR.N    R1,??DataTable1
   \   0000004A   0xF881 0x03B0      STRB     R0,[R1, #+944]
    114              sCtrl.Mtr.ConnCtrl[0].ErrFlg    = 0;
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x....             LDR.N    R1,??DataTable1
   \   00000052   0xF881 0x03B3      STRB     R0,[R1, #+947]
    115              sCtrl.Mtr.ConnCtrl[0].MasterAddr= 0x80;
   \   00000056   0x2080             MOVS     R0,#+128
   \   00000058   0x....             LDR.N    R1,??DataTable1
   \   0000005A   0xF881 0x03B5      STRB     R0,[R1, #+949]
    116              sCtrl.Mtr.ConnCtrl[0].SlaveAddr = 0x80+0x10;
   \   0000005E   0x2090             MOVS     R0,#+144
   \   00000060   0x....             LDR.N    R1,??DataTable1
   \   00000062   0xF881 0x03B4      STRB     R0,[R1, #+948]
    117              sCtrl.Mtr.ConnCtrl[0].SlaveAddr = SLAVE_ADDR_DIP1;
   \   00000066   0x20A1             MOVS     R0,#+161
   \   00000068   0x....             LDR.N    R1,??DataTable1
   \   0000006A   0xF881 0x03B4      STRB     R0,[R1, #+948]
    118              sCtrl.Mtr.ConnCtrl[0].SendFlg   = 0;
   \   0000006E   0x2000             MOVS     R0,#+0
   \   00000070   0x....             LDR.N    R1,??DataTable1
   \   00000072   0xF881 0x03B7      STRB     R0,[R1, #+951]
    119              sCtrl.Mtr.ConnCtrl[0].SendFramNum=1;
   \   00000076   0x2001             MOVS     R0,#+1
   \   00000078   0x....             LDR.N    R1,??DataTable1
   \   0000007A   0xF881 0x03B6      STRB     R0,[R1, #+950]
    120              sCtrl.Mtr.ConnCtrl[0].TimeOut   = 10;
   \   0000007E   0x200A             MOVS     R0,#+10
   \   00000080   0x....             LDR.N    R1,??DataTable1
   \   00000082   0xF881 0x03B2      STRB     R0,[R1, #+946]
    121              
    122          //测量装置2 初始化    
    123              sCtrl.Mtr.ConnCtrl[1].ConnFlg   = 1;
   \   00000086   0x2001             MOVS     R0,#+1
   \   00000088   0x....             LDR.N    R1,??DataTable1
   \   0000008A   0xF881 0x03B8      STRB     R0,[R1, #+952]
    124              sCtrl.Mtr.ConnCtrl[1].ErrFlg    = 0;
   \   0000008E   0x2000             MOVS     R0,#+0
   \   00000090   0x....             LDR.N    R1,??DataTable1
   \   00000092   0xF881 0x03BB      STRB     R0,[R1, #+955]
    125              sCtrl.Mtr.ConnCtrl[1].MasterAddr= 0x80;
   \   00000096   0x2080             MOVS     R0,#+128
   \   00000098   0x....             LDR.N    R1,??DataTable1
   \   0000009A   0xF881 0x03BD      STRB     R0,[R1, #+957]
    126              sCtrl.Mtr.ConnCtrl[1].SlaveAddr = SLAVE_ADDR_DIP2;
   \   0000009E   0x20A2             MOVS     R0,#+162
   \   000000A0   0x....             LDR.N    R1,??DataTable1
   \   000000A2   0xF881 0x03BC      STRB     R0,[R1, #+956]
    127              sCtrl.Mtr.ConnCtrl[1].RecvEndFlg= 0;
   \   000000A6   0x2000             MOVS     R0,#+0
   \   000000A8   0x....             LDR.N    R1,??DataTable1
   \   000000AA   0xF881 0x03B9      STRB     R0,[R1, #+953]
    128              sCtrl.Mtr.ConnCtrl[1].SendFlg   = 0;
   \   000000AE   0x2000             MOVS     R0,#+0
   \   000000B0   0x....             LDR.N    R1,??DataTable1
   \   000000B2   0xF881 0x03BF      STRB     R0,[R1, #+959]
    129              sCtrl.Mtr.ConnCtrl[1].SendFramNum=1;
   \   000000B6   0x2001             MOVS     R0,#+1
   \   000000B8   0x....             LDR.N    R1,??DataTable1
   \   000000BA   0xF881 0x03BE      STRB     R0,[R1, #+958]
    130              sCtrl.Mtr.ConnCtrl[1].TimeOut   = 10;    
   \   000000BE   0x200A             MOVS     R0,#+10
   \   000000C0   0x....             LDR.N    R1,??DataTable1
   \   000000C2   0xF881 0x03BA      STRB     R0,[R1, #+954]
    131              
    132          //无线模块 数据 初始化    
    133              sCtrl.Dtu.ConnCtrl[0].ConnFlg   = 1;
   \   000000C6   0x2001             MOVS     R0,#+1
   \   000000C8   0x....             LDR.N    R1,??DataTable1
   \   000000CA   0xF881 0x0511      STRB     R0,[R1, #+1297]
    134              sCtrl.Dtu.ConnCtrl[0].ErrFlg    = 0;
   \   000000CE   0x2000             MOVS     R0,#+0
   \   000000D0   0x....             LDR.N    R1,??DataTable1
   \   000000D2   0xF881 0x0514      STRB     R0,[R1, #+1300]
    135              sCtrl.Dtu.ConnCtrl[0].MasterAddr= 0x80;
   \   000000D6   0x2080             MOVS     R0,#+128
   \   000000D8   0x....             LDR.N    R1,??DataTable1
   \   000000DA   0xF881 0x0516      STRB     R0,[R1, #+1302]
    136              sCtrl.Dtu.ConnCtrl[0].SlaveAddr = SLAVE_ADDR_DTU;
   \   000000DE   0x20CA             MOVS     R0,#+202
   \   000000E0   0x....             LDR.N    R1,??DataTable1
   \   000000E2   0xF881 0x0515      STRB     R0,[R1, #+1301]
    137              sCtrl.Dtu.ConnCtrl[0].RecvEndFlg= 0;
   \   000000E6   0x2000             MOVS     R0,#+0
   \   000000E8   0x....             LDR.N    R1,??DataTable1
   \   000000EA   0xF881 0x0512      STRB     R0,[R1, #+1298]
    138              sCtrl.Dtu.ConnCtrl[0].SendFlg   = 0;
   \   000000EE   0x2000             MOVS     R0,#+0
   \   000000F0   0x....             LDR.N    R1,??DataTable1
   \   000000F2   0xF881 0x0518      STRB     R0,[R1, #+1304]
    139              sCtrl.Dtu.ConnCtrl[0].SendFramNum=1;
   \   000000F6   0x2001             MOVS     R0,#+1
   \   000000F8   0x....             LDR.N    R1,??DataTable1
   \   000000FA   0xF881 0x0517      STRB     R0,[R1, #+1303]
    140              sCtrl.Dtu.ConnCtrl[0].TimeOut   = 10;    
   \   000000FE   0x200A             MOVS     R0,#+10
   \   00000100   0x....             LDR.N    R1,??DataTable1
   \   00000102   0xF881 0x0513      STRB     R0,[R1, #+1299]
    141              
    142          //无线模块 参数 初始化    
    143              sCtrl.Dtu.ConnCtrl[1].ConnFlg   = 1;
   \   00000106   0x2001             MOVS     R0,#+1
   \   00000108   0x....             LDR.N    R1,??DataTable1
   \   0000010A   0xF881 0x0519      STRB     R0,[R1, #+1305]
    144              sCtrl.Dtu.ConnCtrl[1].ErrFlg    = 0;
   \   0000010E   0x2000             MOVS     R0,#+0
   \   00000110   0x....             LDR.N    R1,??DataTable1
   \   00000112   0xF881 0x051C      STRB     R0,[R1, #+1308]
    145              sCtrl.Dtu.ConnCtrl[1].MasterAddr= 0x80;
   \   00000116   0x2080             MOVS     R0,#+128
   \   00000118   0x....             LDR.N    R1,??DataTable1
   \   0000011A   0xF881 0x051E      STRB     R0,[R1, #+1310]
    146              sCtrl.Dtu.ConnCtrl[1].SlaveAddr = SLAVE_ADDR_SET;
   \   0000011E   0x20C2             MOVS     R0,#+194
   \   00000120   0x....             LDR.N    R1,??DataTable1
   \   00000122   0xF881 0x051D      STRB     R0,[R1, #+1309]
    147              sCtrl.Dtu.ConnCtrl[1].RecvEndFlg= 0;
   \   00000126   0x2000             MOVS     R0,#+0
   \   00000128   0x....             LDR.N    R1,??DataTable1
   \   0000012A   0xF881 0x051A      STRB     R0,[R1, #+1306]
    148              sCtrl.Dtu.ConnCtrl[1].SendFlg   = 0;
   \   0000012E   0x2000             MOVS     R0,#+0
   \   00000130   0x....             LDR.N    R1,??DataTable1
   \   00000132   0xF881 0x0520      STRB     R0,[R1, #+1312]
    149              sCtrl.Dtu.ConnCtrl[1].SendFramNum=1;
   \   00000136   0x2001             MOVS     R0,#+1
   \   00000138   0x....             LDR.N    R1,??DataTable1
   \   0000013A   0xF881 0x051F      STRB     R0,[R1, #+1311]
    150              sCtrl.Dtu.ConnCtrl[1].TimeOut   = 10;   
   \   0000013E   0x200A             MOVS     R0,#+10
   \   00000140   0x....             LDR.N    R1,??DataTable1
   \   00000142   0xF881 0x051B      STRB     R0,[R1, #+1307]
    151              
    152          //IC模块 数据 初始化    
    153              sCtrl.Otr.ConnCtrl[0].ConnFlg   = 1;
   \   00000146   0x2001             MOVS     R0,#+1
   \   00000148   0x....             LDR.N    R1,??DataTable1
   \   0000014A   0xF881 0x0672      STRB     R0,[R1, #+1650]
    154              sCtrl.Otr.ConnCtrl[0].ErrFlg    = 0;
   \   0000014E   0x2000             MOVS     R0,#+0
   \   00000150   0x....             LDR.N    R1,??DataTable1
   \   00000152   0xF881 0x0675      STRB     R0,[R1, #+1653]
    155              sCtrl.Otr.ConnCtrl[0].MasterAddr= 0x80;
   \   00000156   0x2080             MOVS     R0,#+128
   \   00000158   0x....             LDR.N    R1,??DataTable1
   \   0000015A   0xF881 0x0677      STRB     R0,[R1, #+1655]
    156              sCtrl.Otr.ConnCtrl[0].SlaveAddr = SLAVE_ADDR_OTR;
   \   0000015E   0x20C1             MOVS     R0,#+193
   \   00000160   0x....             LDR.N    R1,??DataTable1
   \   00000162   0xF881 0x0676      STRB     R0,[R1, #+1654]
    157              sCtrl.Otr.ConnCtrl[0].RecvEndFlg= 0;
   \   00000166   0x2000             MOVS     R0,#+0
   \   00000168   0x....             LDR.N    R1,??DataTable1
   \   0000016A   0xF881 0x0673      STRB     R0,[R1, #+1651]
    158              sCtrl.Otr.ConnCtrl[0].SendFlg   = 0;
   \   0000016E   0x2000             MOVS     R0,#+0
   \   00000170   0x....             LDR.N    R1,??DataTable1
   \   00000172   0xF881 0x0679      STRB     R0,[R1, #+1657]
    159              sCtrl.Otr.ConnCtrl[0].SendFramNum=1;
   \   00000176   0x2001             MOVS     R0,#+1
   \   00000178   0x....             LDR.N    R1,??DataTable1
   \   0000017A   0xF881 0x0678      STRB     R0,[R1, #+1656]
    160              sCtrl.Otr.ConnCtrl[0].TimeOut   = 10;       
   \   0000017E   0x200A             MOVS     R0,#+10
   \   00000180   0x....             LDR.N    R1,??DataTable1
   \   00000182   0xF881 0x0674      STRB     R0,[R1, #+1652]
    161              
    162          //IC模块 参数 初始化    
    163              sCtrl.Otr.ConnCtrl[1].ConnFlg   = 1;
   \   00000186   0x2001             MOVS     R0,#+1
   \   00000188   0x....             LDR.N    R1,??DataTable1
   \   0000018A   0xF881 0x067A      STRB     R0,[R1, #+1658]
    164              sCtrl.Otr.ConnCtrl[1].ErrFlg    = 0;
   \   0000018E   0x2000             MOVS     R0,#+0
   \   00000190   0x....             LDR.N    R1,??DataTable1
   \   00000192   0xF881 0x067D      STRB     R0,[R1, #+1661]
    165              sCtrl.Otr.ConnCtrl[1].MasterAddr= 0x80;
   \   00000196   0x2080             MOVS     R0,#+128
   \   00000198   0x....             LDR.N    R1,??DataTable1
   \   0000019A   0xF881 0x067F      STRB     R0,[R1, #+1663]
    166              sCtrl.Otr.ConnCtrl[1].SlaveAddr = SLAVE_ADDR_SET;
   \   0000019E   0x20C2             MOVS     R0,#+194
   \   000001A0   0x....             LDR.N    R1,??DataTable1
   \   000001A2   0xF881 0x067E      STRB     R0,[R1, #+1662]
    167              sCtrl.Otr.ConnCtrl[1].RecvEndFlg= 0;
   \   000001A6   0x2000             MOVS     R0,#+0
   \   000001A8   0x....             LDR.N    R1,??DataTable1
   \   000001AA   0xF881 0x067B      STRB     R0,[R1, #+1659]
    168              sCtrl.Otr.ConnCtrl[1].SendFlg   = 0;
   \   000001AE   0x2000             MOVS     R0,#+0
   \   000001B0   0x....             LDR.N    R1,??DataTable1
   \   000001B2   0xF881 0x0681      STRB     R0,[R1, #+1665]
    169              sCtrl.Otr.ConnCtrl[1].SendFramNum=1;
   \   000001B6   0x2001             MOVS     R0,#+1
   \   000001B8   0x....             LDR.N    R1,??DataTable1
   \   000001BA   0xF881 0x0680      STRB     R0,[R1, #+1664]
    170              sCtrl.Otr.ConnCtrl[1].TimeOut   = 10;       
   \   000001BE   0x200A             MOVS     R0,#+10
   \   000001C0   0x....             LDR.N    R1,??DataTable1
   \   000001C2   0xF881 0x067C      STRB     R0,[R1, #+1660]
    171          }
   \   000001C6   0xBD01             POP      {R0,PC}          ;; return
    172          
    173          
    174          
    175          /*******************************************************************************
    176           * EXTERN VARIABLES
    177           */
    178          
    179          /*******************************************************************************
    180           * EXTERN FUNCTIONS
    181           */
    182          
    183          /*******************************************************************************
    184           * 名    称： App_Main
    185           * 功    能： 系统初开始前调用此函数
    186           * 入口参数： 无
    187           * 出口参数： 无
    188           * 作　 　者： 无名沈
    189           * 创建日期： 2014-08-08
    190           * 修    改：
    191           * 修改日期：
    192           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    193           void App_Main(void)
    194           {
   \                     App_Main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    195               
    196               //NVIC_SetVectorTable(NVIC_VectTab_FLASH, 0x10000);
    197               
    198               //NVIC_SetVTOR(0x10000);
    199           
    200              #if DEBUG_MODEL_DISENABLE > 0 
    201                  WDT_Feed();                    /* 喂狗                             */
   \   00000002   0x.... 0x....      BL       WDT_Feed
    202              #endif   
    203                  
    204               app_init_sctrl();                  //初始化全局变量
   \   00000006   0x.... 0x....      BL       app_init_sctrl
    205           
    206          
    207              #if DEBUG_MODEL_DISENABLE > 0 
    208                  WDT_Feed();                    /* 喂狗                             */
   \   0000000A   0x.... 0x....      BL       WDT_Feed
    209              #endif   
    210                  
    211                  
    212               //FeedDog();
    213               
    214              //NVIC_SetVTOR(0x10000);
    215              /***********************************************
    216              * 描述： Disable all interrupts.
    217              */
    218              //BSP_IntDisAll();
    219              /***********************************************
    220              * 描述： 重新设置应用程序中断向量表，如果没有BOOTLOADER
    221              *        NVIC_VectTab_FLASH_OFFSET = 0
    222              */
    223          //#if defined     (IMAGE_A)
    224          //    /***********************************************
    225          //    * 描述： 程序A
    226          //    */
    227          //    NVIC_SetVectorTable(NVIC_VectTab_FLASH, FLASH_APP_ADDR_A-FLASH_BOOT_ADDR);
    228          //    IAP_SetStatus(IAP_STS_SUCCEED); 
    229          //#elif defined   (IMAGE_B)
    230          //    /***********************************************
    231          //    * 描述： 程序B
    232          //    */
    233          //    NVIC_SetVectorTable(NVIC_VectTab_FLASH, FLASH_APP_ADDR_B-FLASH_BOOT_ADDR);
    234          //    IAP_SetStatus(IAP_STS_SUCCEED); 
    235          //#else
    236          //    /***********************************************
    237          //    * 描述： 程序
    238          //    */
    239          //    NVIC_SetVectorTable(NVIC_VectTab_FLASH, 0X0000);
    240          //#endif
    241           
    242           }
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return
    243          
    244          /*******************************************************************************
    245           * 名    称： App_InitStartHook
    246           * 功    能： 系统初始化开始前调用此函数
    247           * 入口参数： 无
    248           * 出口参数： 无
    249           * 作　 　者： 无名沈
    250           * 创建日期： 2014-08-08
    251           * 修    改：
    252           * 修改日期：
    253           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    254           void App_InitStartHook(void)
    255           {
    256           
    257           }
   \                     App_InitStartHook: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    258           
    259          /*******************************************************************************
    260           * 名    称： App_InitEndHook
    261           * 功    能： 系统初始化结速后调用此函数
    262           * 入口参数： 无
    263           * 出口参数： 无
    264           * 作　 　者： 无名沈
    265           * 创建日期： 2014-08-08
    266           * 修    改：
    267           * 修改日期：
    268           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    269           void App_InitEndHook(void)
    270           {
    271           
    272           }
   \                     App_InitEndHook: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    273           
    274           /*******************************************************************************
    275           * 名    称： OS_TaskCreateHook
    276           * 功    能： OS创建任务回调函数
    277           * 入口参数： 无
    278           * 出口参数： 无
    279           * 作  　者： 无名沈
    280           * 创建日期： 2014-08-08
    281           * 修    改：
    282           * 修改日期：
    283           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    284           void OS_TaskCreateHook(void)
    285           {     
   \                     OS_TaskCreateHook: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    286             App_TaskCommCreate();
   \   00000002   0x.... 0x....      BL       App_TaskCommCreate
    287              //App_TaskMaterCreate();
    288              //App_TaskDtuCreate();
    289              //App_TaskKeyCreate();
    290              //App_TaskBeepCreate();
    291           }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
    292           
    293           /*******************************************************************************
    294           * 名    称： OSAL_TaskCreateHook
    295           * 功    能： OSAL创建任务回调函数
    296           * 入口参数： 无
    297           * 出口参数： 无
    298           * 作　 　者： 无名沈
    299           * 创建日期： 2014-08-08
    300           * 修    改：
    301           * 修改日期：
    302           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    303           void OSAL_TaskCreateHook(void)
    304           {
   \                     OSAL_TaskCreateHook: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    305           
    306              //osal_add_Task(TaskInitKey,                      // 任务初始化函数指针
    307              //              TaskKeyEvtProcess,                // 任务事件处理函数指针
    308              //              OS_TASK_PRO_KEY,                  // 任务优先级
    309              //              OS_TASK_ID_KEY);                  // 任务ID
    310              
    311              //osal_add_Task(TaskInitCtrl,                     // 任务初始化函数指针
    312              //              TaskCtrlEvtProcess,               // 任务事件处理函数指针
    313              //              OS_TASK_PRO_CTRL,                 // 任务优先级
    314              //              OS_TASK_ID_CTRL);                 // 任务ID
    315              
    316              osal_add_Task(TaskInitTmr,                      // 任务初始化函数指针
    317                            TaskTmrEvtProcess,                // 任务事件处理函数指针
    318                            OS_TASK_PRO_TMR,                  // 任务优先级
    319                            OS_TASK_ID_TMR);                  // 任务ID
   \   00000002   0x2301             MOVS     R3,#+1
   \   00000004   0x2208             MOVS     R2,#+8
   \   00000006   0x....             LDR.N    R1,??DataTable1_2
   \   00000008   0x....             LDR.N    R0,??DataTable1_3
   \   0000000A   0x.... 0x....      BL       osal_add_Task
    320                  
    321             
    322              osal_add_Task(TaskInitDisp,                     // 任务初始化函数指针
    323                            TaskDispEvtProcess,               // 任务事件处理函数指针
    324                            OS_TASK_PRO_DISP,                 // 任务优先级
    325                            OS_TASK_ID_DISP);                 // 任务ID 
   \   0000000E   0x2300             MOVS     R3,#+0
   \   00000010   0x2209             MOVS     R2,#+9
   \   00000012   0x....             LDR.N    R1,??DataTable1_4
   \   00000014   0x....             LDR.N    R0,??DataTable1_5
   \   00000016   0x.... 0x....      BL       osal_add_Task
    326              
    327              osal_add_Task(TaskInitStore,                    // 任务初始化函数指针
    328                            TaskStoreEvtProcess,              // 任务事件处理函数指针
    329                            OS_TASK_PRO_STORE,                // 任务优先级
    330                            OS_TASK_ID_STORE);                // 任务ID
   \   0000001A   0x2304             MOVS     R3,#+4
   \   0000001C   0x2205             MOVS     R2,#+5
   \   0000001E   0x....             LDR.N    R1,??DataTable1_6
   \   00000020   0x....             LDR.N    R0,??DataTable1_7
   \   00000022   0x.... 0x....      BL       osal_add_Task
    331              
    332              osal_add_Task(TaskInitCalc,                    // 任务初始化函数指针
    333                            TaskCalcEvtProcess,              // 任务事件处理函数指针
    334                            OS_TASK_PRO_CALC,                // 任务优先级
    335                            OS_TASK_ID_CALC);                // 任务ID   
   \   00000026   0x2302             MOVS     R3,#+2
   \   00000028   0x2207             MOVS     R2,#+7
   \   0000002A   0x....             LDR.N    R1,??DataTable1_8
   \   0000002C   0x....             LDR.N    R0,??DataTable1_9
   \   0000002E   0x.... 0x....      BL       osal_add_Task
    336              
    337              osal_add_Task(TaskInitSpeed,                    // 任务初始化函数指针
    338                            TaskSpeedEvtProcess,              // 任务事件处理函数指针
    339                            OS_TASK_PRO_SPEED,                // 任务优先级
    340                            OS_TASK_ID_SPEED);                // 任务ID       
   \   00000032   0x2303             MOVS     R3,#+3
   \   00000034   0x2206             MOVS     R2,#+6
   \   00000036   0x....             LDR.N    R1,??DataTable1_10
   \   00000038   0x....             LDR.N    R0,??DataTable1_11
   \   0000003A   0x.... 0x....      BL       osal_add_Task
    341              
    342              osal_add_Task(TaskInitLed,                  // 任务初始化函数指针
    343                            TaskLedEvtProcess,                // 任务事件处理函数指针
    344                            OS_TASK_PRO_LED,                  // 任务优先级
    345                            OS_TASK_ID_LED);                  // 任务ID    
   \   0000003E   0x2306             MOVS     R3,#+6
   \   00000040   0x2203             MOVS     R2,#+3
   \   00000042   0x....             LDR.N    R1,??DataTable1_12
   \   00000044   0x....             LDR.N    R0,??DataTable1_13
   \   00000046   0x.... 0x....      BL       osal_add_Task
    346           }
   \   0000004A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     sCtrl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     sCtrl+0xC4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     TaskTmrEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     TaskInitTmr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     TaskDispEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     TaskInitDisp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     TaskStoreEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x........         DC32     TaskInitStore

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x........         DC32     TaskCalcEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0x........         DC32     TaskInitCalc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_10:
   \   00000000   0x........         DC32     TaskSpeedEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_11:
   \   00000000   0x........         DC32     TaskInitSpeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_12:
   \   00000000   0x........         DC32     TaskLedEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_13:
   \   00000000   0x........         DC32     TaskInitLed
    347          /*******************************************************************************
    348           *              end of file                                                    *
    349           *******************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   App_InitEndHook
       0   App_InitStartHook
       8   App_Main
         8   -> WDT_Feed
         8   -> app_init_sctrl
       8   OSAL_TaskCreateHook
         8   -> osal_add_Task
       8   OS_TaskCreateHook
         8   -> App_TaskCommCreate
       8   app_init_sctrl
         8   -> FRAM_ReadRunPara
         8   -> FRAM_StoreRunPara


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_11
       4  ??DataTable1_12
       4  ??DataTable1_13
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
       2  App_InitEndHook
       2  App_InitStartHook
      16  App_Main
      76  OSAL_TaskCreateHook
       8  OS_TaskCreateHook
      40  WdtFlagGRP
       4  WdtFlags
     456  app_init_sctrl
    2408  sCtrl

 
 2 452 bytes in section .bss
   616 bytes in section .text
 
   616 bytes of CODE memory
 2 452 bytes of DATA memory

Errors: none
Warnings: 1
