###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       14/Aug/2017  14:16:14
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  F:\iar\NC136B-310 统计模块\Software\APP\xmain.c
#    Command line =  
#        "F:\iar\NC136B-310 统计模块\Software\APP\xmain.c" -lCN
#        "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List"
#        --diag_suppress Pa050 -o "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\" -I
#        "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\"
#        -I "F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\"
#        -I "F:\iar\NC136B-310 统计模块\Application\Library\csnr_package_deal\"
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\xmain.lst
#    Object file  =  
#        F:\iar\NC136B-310
#        统计模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\xmain.o
#
###############################################################################

F:\iar\NC136B-310 统计模块\Software\APP\xmain.c
      1          /*******************************************************************************
      2           *   Filename:      app.c
      3           *   Revised:       $Date: 2013-06-30$
      4           *   Revision:      $
      5           *	 Writer:		Wuming Shen.
      6           *
      7           *   Description:
      8           *   Notes:
      9           *					QQ:276193028
     10           *     				E-mail:shenchangwei945@163.com
     11           *
     12           *   All copyrights reserved to Wuming Shen.
     13           *
     14           *******************************************************************************/
     15          
     16          /*******************************************************************************
     17           * INCLUDES
     18           */
     19          #define  SNL_APP_SOURCE
     20          #include <app.h>
     21          #include <app_ctrl.h>
     22          
     23          //#include <iap.h>
     24          
     25          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     26          const  CPU_CHAR  *main__c = "$Id: $";
     27          #endif
     28          
     29          
     30          void    TaskInitStore(void);
     31          osalEvt  TaskStoreEvtProcess(INT8U task_id, osalEvt task_event);
     32          
     33          void    TaskInitCalc(void);
     34          osalEvt  TaskCalcEvtProcess(INT8U task_id, osalEvt task_event);
     35          
     36          void    TaskInitSpeed(void);
     37          osalEvt  TaskSpeedEvtProcess(INT8U task_id, osalEvt task_event);
     38          
     39          void     TaskInitLed(void);
     40          osalEvt  TaskLedEvtProcess(INT8U task_id, osalEvt task_event);
     41          
     42          uint8 	FRAM_StoreRunPara(stcRunPara  *sRunPara);
     43          
     44          
     45          //void    TaskInitStore(void);
     46          //osalEvt  TaskStoreEvtProcess(INT8U task_id, osalEvt task_event);
     47          /*******************************************************************************
     48           * CONSTANTS
     49           */
     50          #define CYCLE_TIME_TICKS            (OS_TICKS_PER_SEC * 2)
     51          
     52          /*******************************************************************************
     53           * MACROS
     54           */
     55          
     56          /*******************************************************************************
     57           * TYPEDEFS
     58           */
     59          
     60          /*******************************************************************************
     61           * LOCAL VARIABLES
     62           */
     63          
     64          /*******************************************************************************
     65           * GLOBAL VARIABLES
     66           */
     67          /***********************************************
     68          * 描述： 创建标志组
     69          */

   \                                 In section .bss, align 4
     70          OS_FLAG_GRP         WdtFlagGRP;                     //看门狗标志组
   \                     WdtFlagGRP:
   \   00000000                      DS8 40

   \                                 In section .bss, align 4
     71          OS_FLAGS            WdtFlags;
   \                     WdtFlags:
   \   00000000                      DS8 4
     72          
     73          /*******************************************************************************
     74           * LOCAL FUNCTIONS
     75           *
     76           * 返回类型         函数名称                入口参数
     77           */
     78          
     79          /*******************************************************************************
     80           * GLOBAL FUNCTIONS
     81           */
     82          

   \                                 In section .bss, align 4
     83          stcSysCtrl       sCtrl;
   \                     sCtrl:
   \   00000000                      DS8 1812
     84          
     85          

   \                                 In section .text, align 2, keep-with-next
     86          void    app_init_sctrl(void)
     87          {
   \                     app_init_sctrl: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     88              sCtrl.Password      =   6237;
   \   00000002   0xF641 0x005D      MOVW     R0,#+6237
   \   00000006   0x....             LDR.N    R1,??DataTable1
   \   00000008   0x8008             STRH     R0,[R1, #+0]
     89              sCtrl.SoftWareID    =   1705;   //年月，版本
   \   0000000A   0xF240 0x60A9      MOVW     R0,#+1705
   \   0000000E   0x....             LDR.N    R1,??DataTable1
   \   00000010   0x8048             STRH     R0,[R1, #+2]
     90              
     91          //开始标示    //存储时间间隔
     92              sCtrl.sRunPara.StartFlg = 1;  
   \   00000012   0x2001             MOVS     R0,#+1
   \   00000014   0x....             LDR.N    R1,??DataTable1
   \   00000016   0xF881 0x00AF      STRB     R0,[R1, #+175]
     93              sCtrl.sRunPara.SysSta   = 0;        
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x....             LDR.N    R1,??DataTable1
   \   0000001E   0xF881 0x00B0      STRB     R0,[R1, #+176]
     94              
     95             	FRAM_StoreRunPara((stcRunPara *) &sCtrl.sRunPara);
   \   00000022   0x....             LDR.N    R0,??DataTable1_1
   \   00000024   0x.... 0x....      BL       FRAM_StoreRunPara
     96              
     97              sCtrl.sRunPara.RecClear = 0;
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0x....             LDR.N    R1,??DataTable1
   \   0000002C   0xF881 0x00AD      STRB     R0,[R1, #+173]
     98              sCtrl.sRunPara.StoreTime= 60;       
   \   00000030   0x203C             MOVS     R0,#+60
   \   00000032   0x....             LDR.N    R1,??DataTable1
   \   00000034   0xF881 0x00AC      STRB     R0,[R1, #+172]
     99              sCtrl.sRunPara.SysReset = 0;
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0x....             LDR.N    R1,??DataTable1
   \   0000003C   0xF881 0x00AE      STRB     R0,[R1, #+174]
    100              
    101          //测量装置1 初始化    
    102              sCtrl.Mtr.ConnCtrl[0].ConnFlg   = 1;
   \   00000040   0x2001             MOVS     R0,#+1
   \   00000042   0x....             LDR.N    R1,??DataTable1
   \   00000044   0xF881 0x0394      STRB     R0,[R1, #+916]
    103              sCtrl.Mtr.ConnCtrl[0].ErrFlg    = 0;
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x....             LDR.N    R1,??DataTable1
   \   0000004C   0xF881 0x0397      STRB     R0,[R1, #+919]
    104              sCtrl.Mtr.ConnCtrl[0].MasterAddr= 0x80;
   \   00000050   0x2080             MOVS     R0,#+128
   \   00000052   0x....             LDR.N    R1,??DataTable1
   \   00000054   0xF881 0x0399      STRB     R0,[R1, #+921]
    105              sCtrl.Mtr.ConnCtrl[0].SlaveAddr = 0x80+0x10;
   \   00000058   0x2090             MOVS     R0,#+144
   \   0000005A   0x....             LDR.N    R1,??DataTable1
   \   0000005C   0xF881 0x0398      STRB     R0,[R1, #+920]
    106              sCtrl.Mtr.ConnCtrl[0].SlaveAddr = SLAVE_ADDR_DIP1;
   \   00000060   0x20A1             MOVS     R0,#+161
   \   00000062   0x....             LDR.N    R1,??DataTable1
   \   00000064   0xF881 0x0398      STRB     R0,[R1, #+920]
    107              sCtrl.Mtr.ConnCtrl[0].SendFlg   = 0;
   \   00000068   0x2000             MOVS     R0,#+0
   \   0000006A   0x....             LDR.N    R1,??DataTable1
   \   0000006C   0xF881 0x039B      STRB     R0,[R1, #+923]
    108              sCtrl.Mtr.ConnCtrl[0].SendFramNum=1;
   \   00000070   0x2001             MOVS     R0,#+1
   \   00000072   0x....             LDR.N    R1,??DataTable1
   \   00000074   0xF881 0x039A      STRB     R0,[R1, #+922]
    109              sCtrl.Mtr.ConnCtrl[0].TimeOut   = 10;
   \   00000078   0x200A             MOVS     R0,#+10
   \   0000007A   0x....             LDR.N    R1,??DataTable1
   \   0000007C   0xF881 0x0396      STRB     R0,[R1, #+918]
    110              
    111          //测量装置2 初始化    
    112              sCtrl.Mtr.ConnCtrl[1].ConnFlg   = 1;
   \   00000080   0x2001             MOVS     R0,#+1
   \   00000082   0x....             LDR.N    R1,??DataTable1
   \   00000084   0xF881 0x039C      STRB     R0,[R1, #+924]
    113              sCtrl.Mtr.ConnCtrl[1].ErrFlg    = 0;
   \   00000088   0x2000             MOVS     R0,#+0
   \   0000008A   0x....             LDR.N    R1,??DataTable1
   \   0000008C   0xF881 0x039F      STRB     R0,[R1, #+927]
    114              sCtrl.Mtr.ConnCtrl[1].MasterAddr= 0x80;
   \   00000090   0x2080             MOVS     R0,#+128
   \   00000092   0x....             LDR.N    R1,??DataTable1
   \   00000094   0xF881 0x03A1      STRB     R0,[R1, #+929]
    115              sCtrl.Mtr.ConnCtrl[1].SlaveAddr = SLAVE_ADDR_DIP2;
   \   00000098   0x20A2             MOVS     R0,#+162
   \   0000009A   0x....             LDR.N    R1,??DataTable1
   \   0000009C   0xF881 0x03A0      STRB     R0,[R1, #+928]
    116              sCtrl.Mtr.ConnCtrl[1].RecvEndFlg= 0;
   \   000000A0   0x2000             MOVS     R0,#+0
   \   000000A2   0x....             LDR.N    R1,??DataTable1
   \   000000A4   0xF881 0x039D      STRB     R0,[R1, #+925]
    117              sCtrl.Mtr.ConnCtrl[1].SendFlg   = 0;
   \   000000A8   0x2000             MOVS     R0,#+0
   \   000000AA   0x....             LDR.N    R1,??DataTable1
   \   000000AC   0xF881 0x03A3      STRB     R0,[R1, #+931]
    118              sCtrl.Mtr.ConnCtrl[1].SendFramNum=1;
   \   000000B0   0x2001             MOVS     R0,#+1
   \   000000B2   0x....             LDR.N    R1,??DataTable1
   \   000000B4   0xF881 0x03A2      STRB     R0,[R1, #+930]
    119              sCtrl.Mtr.ConnCtrl[1].TimeOut   = 10;    
   \   000000B8   0x200A             MOVS     R0,#+10
   \   000000BA   0x....             LDR.N    R1,??DataTable1
   \   000000BC   0xF881 0x039E      STRB     R0,[R1, #+926]
    120              
    121          //无线模块 数据 初始化    
    122              sCtrl.Dtu.ConnCtrl[0].ConnFlg   = 1;
   \   000000C0   0x2001             MOVS     R0,#+1
   \   000000C2   0x....             LDR.N    R1,??DataTable1
   \   000000C4   0xF881 0x04F1      STRB     R0,[R1, #+1265]
    123              sCtrl.Dtu.ConnCtrl[0].ErrFlg    = 0;
   \   000000C8   0x2000             MOVS     R0,#+0
   \   000000CA   0x....             LDR.N    R1,??DataTable1
   \   000000CC   0xF881 0x04F4      STRB     R0,[R1, #+1268]
    124              sCtrl.Dtu.ConnCtrl[0].MasterAddr= 0x80;
   \   000000D0   0x2080             MOVS     R0,#+128
   \   000000D2   0x....             LDR.N    R1,??DataTable1
   \   000000D4   0xF881 0x04F6      STRB     R0,[R1, #+1270]
    125              sCtrl.Dtu.ConnCtrl[0].SlaveAddr = SLAVE_ADDR_DTU;
   \   000000D8   0x20CA             MOVS     R0,#+202
   \   000000DA   0x....             LDR.N    R1,??DataTable1
   \   000000DC   0xF881 0x04F5      STRB     R0,[R1, #+1269]
    126              sCtrl.Dtu.ConnCtrl[0].RecvEndFlg= 0;
   \   000000E0   0x2000             MOVS     R0,#+0
   \   000000E2   0x....             LDR.N    R1,??DataTable1
   \   000000E4   0xF881 0x04F2      STRB     R0,[R1, #+1266]
    127              sCtrl.Dtu.ConnCtrl[0].SendFlg   = 0;
   \   000000E8   0x2000             MOVS     R0,#+0
   \   000000EA   0x....             LDR.N    R1,??DataTable1
   \   000000EC   0xF881 0x04F8      STRB     R0,[R1, #+1272]
    128              sCtrl.Dtu.ConnCtrl[0].SendFramNum=1;
   \   000000F0   0x2001             MOVS     R0,#+1
   \   000000F2   0x....             LDR.N    R1,??DataTable1
   \   000000F4   0xF881 0x04F7      STRB     R0,[R1, #+1271]
    129              sCtrl.Dtu.ConnCtrl[0].TimeOut   = 10;    
   \   000000F8   0x200A             MOVS     R0,#+10
   \   000000FA   0x....             LDR.N    R1,??DataTable1
   \   000000FC   0xF881 0x04F3      STRB     R0,[R1, #+1267]
    130              
    131          //无线模块 参数 初始化    
    132              sCtrl.Dtu.ConnCtrl[1].ConnFlg   = 1;
   \   00000100   0x2001             MOVS     R0,#+1
   \   00000102   0x....             LDR.N    R1,??DataTable1
   \   00000104   0xF881 0x04F9      STRB     R0,[R1, #+1273]
    133              sCtrl.Dtu.ConnCtrl[1].ErrFlg    = 0;
   \   00000108   0x2000             MOVS     R0,#+0
   \   0000010A   0x....             LDR.N    R1,??DataTable1
   \   0000010C   0xF881 0x04FC      STRB     R0,[R1, #+1276]
    134              sCtrl.Dtu.ConnCtrl[1].MasterAddr= 0x80;
   \   00000110   0x2080             MOVS     R0,#+128
   \   00000112   0x....             LDR.N    R1,??DataTable1
   \   00000114   0xF881 0x04FE      STRB     R0,[R1, #+1278]
    135              sCtrl.Dtu.ConnCtrl[1].SlaveAddr = SLAVE_ADDR_SET;
   \   00000118   0x20C2             MOVS     R0,#+194
   \   0000011A   0x....             LDR.N    R1,??DataTable1
   \   0000011C   0xF881 0x04FD      STRB     R0,[R1, #+1277]
    136              sCtrl.Dtu.ConnCtrl[1].RecvEndFlg= 0;
   \   00000120   0x2000             MOVS     R0,#+0
   \   00000122   0x....             LDR.N    R1,??DataTable1
   \   00000124   0xF881 0x04FA      STRB     R0,[R1, #+1274]
    137              sCtrl.Dtu.ConnCtrl[1].SendFlg   = 0;
   \   00000128   0x2000             MOVS     R0,#+0
   \   0000012A   0x....             LDR.N    R1,??DataTable1
   \   0000012C   0xF881 0x0500      STRB     R0,[R1, #+1280]
    138              sCtrl.Dtu.ConnCtrl[1].SendFramNum=1;
   \   00000130   0x2001             MOVS     R0,#+1
   \   00000132   0x....             LDR.N    R1,??DataTable1
   \   00000134   0xF881 0x04FF      STRB     R0,[R1, #+1279]
    139              sCtrl.Dtu.ConnCtrl[1].TimeOut   = 10;   
   \   00000138   0x200A             MOVS     R0,#+10
   \   0000013A   0x....             LDR.N    R1,??DataTable1
   \   0000013C   0xF881 0x04FB      STRB     R0,[R1, #+1275]
    140              
    141          //IC模块 数据 初始化    
    142              sCtrl.Otr.ConnCtrl[0].ConnFlg   = 1;
   \   00000140   0x2001             MOVS     R0,#+1
   \   00000142   0x....             LDR.N    R1,??DataTable1
   \   00000144   0xF881 0x064E      STRB     R0,[R1, #+1614]
    143              sCtrl.Otr.ConnCtrl[0].ErrFlg    = 0;
   \   00000148   0x2000             MOVS     R0,#+0
   \   0000014A   0x....             LDR.N    R1,??DataTable1
   \   0000014C   0xF881 0x0651      STRB     R0,[R1, #+1617]
    144              sCtrl.Otr.ConnCtrl[0].MasterAddr= 0x80;
   \   00000150   0x2080             MOVS     R0,#+128
   \   00000152   0x....             LDR.N    R1,??DataTable1
   \   00000154   0xF881 0x0653      STRB     R0,[R1, #+1619]
    145              sCtrl.Otr.ConnCtrl[0].SlaveAddr = SLAVE_ADDR_OTR;
   \   00000158   0x20C1             MOVS     R0,#+193
   \   0000015A   0x....             LDR.N    R1,??DataTable1
   \   0000015C   0xF881 0x0652      STRB     R0,[R1, #+1618]
    146              sCtrl.Otr.ConnCtrl[0].RecvEndFlg= 0;
   \   00000160   0x2000             MOVS     R0,#+0
   \   00000162   0x....             LDR.N    R1,??DataTable1
   \   00000164   0xF881 0x064F      STRB     R0,[R1, #+1615]
    147              sCtrl.Otr.ConnCtrl[0].SendFlg   = 0;
   \   00000168   0x2000             MOVS     R0,#+0
   \   0000016A   0x....             LDR.N    R1,??DataTable1
   \   0000016C   0xF881 0x0655      STRB     R0,[R1, #+1621]
    148              sCtrl.Otr.ConnCtrl[0].SendFramNum=1;
   \   00000170   0x2001             MOVS     R0,#+1
   \   00000172   0x....             LDR.N    R1,??DataTable1
   \   00000174   0xF881 0x0654      STRB     R0,[R1, #+1620]
    149              sCtrl.Otr.ConnCtrl[0].TimeOut   = 10;       
   \   00000178   0x200A             MOVS     R0,#+10
   \   0000017A   0x....             LDR.N    R1,??DataTable1
   \   0000017C   0xF881 0x0650      STRB     R0,[R1, #+1616]
    150              
    151          //IC模块 参数 初始化    
    152              sCtrl.Otr.ConnCtrl[1].ConnFlg   = 1;
   \   00000180   0x2001             MOVS     R0,#+1
   \   00000182   0x....             LDR.N    R1,??DataTable1
   \   00000184   0xF881 0x0656      STRB     R0,[R1, #+1622]
    153              sCtrl.Otr.ConnCtrl[1].ErrFlg    = 0;
   \   00000188   0x2000             MOVS     R0,#+0
   \   0000018A   0x....             LDR.N    R1,??DataTable1
   \   0000018C   0xF881 0x0659      STRB     R0,[R1, #+1625]
    154              sCtrl.Otr.ConnCtrl[1].MasterAddr= 0x80;
   \   00000190   0x2080             MOVS     R0,#+128
   \   00000192   0x....             LDR.N    R1,??DataTable1
   \   00000194   0xF881 0x065B      STRB     R0,[R1, #+1627]
    155              sCtrl.Otr.ConnCtrl[1].SlaveAddr = SLAVE_ADDR_SET;
   \   00000198   0x20C2             MOVS     R0,#+194
   \   0000019A   0x....             LDR.N    R1,??DataTable1
   \   0000019C   0xF881 0x065A      STRB     R0,[R1, #+1626]
    156              sCtrl.Otr.ConnCtrl[1].RecvEndFlg= 0;
   \   000001A0   0x2000             MOVS     R0,#+0
   \   000001A2   0x....             LDR.N    R1,??DataTable1
   \   000001A4   0xF881 0x0657      STRB     R0,[R1, #+1623]
    157              sCtrl.Otr.ConnCtrl[1].SendFlg   = 0;
   \   000001A8   0x2000             MOVS     R0,#+0
   \   000001AA   0x....             LDR.N    R1,??DataTable1
   \   000001AC   0xF881 0x065D      STRB     R0,[R1, #+1629]
    158              sCtrl.Otr.ConnCtrl[1].SendFramNum=1;
   \   000001B0   0x2001             MOVS     R0,#+1
   \   000001B2   0x....             LDR.N    R1,??DataTable1
   \   000001B4   0xF881 0x065C      STRB     R0,[R1, #+1628]
    159              sCtrl.Otr.ConnCtrl[1].TimeOut   = 10;       
   \   000001B8   0x200A             MOVS     R0,#+10
   \   000001BA   0x....             LDR.N    R1,??DataTable1
   \   000001BC   0xF881 0x0658      STRB     R0,[R1, #+1624]
    160          }
   \   000001C0   0xBD01             POP      {R0,PC}          ;; return
    161          
    162          
    163          
    164          /*******************************************************************************
    165           * EXTERN VARIABLES
    166           */
    167          
    168          /*******************************************************************************
    169           * EXTERN FUNCTIONS
    170           */
    171          
    172          /*******************************************************************************
    173           * 名    称： App_Main
    174           * 功    能： 系统初开始前调用此函数
    175           * 入口参数： 无
    176           * 出口参数： 无
    177           * 作　 　者： 无名沈
    178           * 创建日期： 2014-08-08
    179           * 修    改：
    180           * 修改日期：
    181           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    182           void App_Main(void)
    183           {
   \                     App_Main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    184               
    185               app_init_sctrl();                  //初始化全局变量
   \   00000002   0x.... 0x....      BL       app_init_sctrl
    186               
    187               //FeedDog();
    188               
    189              //NVIC_SetVTOR(0x10000);
    190              /***********************************************
    191              * 描述： Disable all interrupts.
    192              */
    193              //BSP_IntDisAll();
    194              /***********************************************
    195              * 描述： 重新设置应用程序中断向量表，如果没有BOOTLOADER
    196              *        NVIC_VectTab_FLASH_OFFSET = 0
    197              */
    198          //#if defined     (IMAGE_A)
    199          //    /***********************************************
    200          //    * 描述： 程序A
    201          //    */
    202          //    NVIC_SetVectorTable(NVIC_VectTab_FLASH, FLASH_APP_ADDR_A-FLASH_BOOT_ADDR);
    203          //    IAP_SetStatus(IAP_STS_SUCCEED); 
    204          //#elif defined   (IMAGE_B)
    205          //    /***********************************************
    206          //    * 描述： 程序B
    207          //    */
    208          //    NVIC_SetVectorTable(NVIC_VectTab_FLASH, FLASH_APP_ADDR_B-FLASH_BOOT_ADDR);
    209          //    IAP_SetStatus(IAP_STS_SUCCEED); 
    210          //#else
    211          //    /***********************************************
    212          //    * 描述： 程序
    213          //    */
    214          //    NVIC_SetVectorTable(NVIC_VectTab_FLASH, 0X0000);
    215          //#endif
    216           
    217           }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
    218          
    219          /*******************************************************************************
    220           * 名    称： App_InitStartHook
    221           * 功    能： 系统初始化开始前调用此函数
    222           * 入口参数： 无
    223           * 出口参数： 无
    224           * 作　 　者： 无名沈
    225           * 创建日期： 2014-08-08
    226           * 修    改：
    227           * 修改日期：
    228           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    229           void App_InitStartHook(void)
    230           {
    231           
    232           }
   \                     App_InitStartHook: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    233           
    234          /*******************************************************************************
    235           * 名    称： App_InitEndHook
    236           * 功    能： 系统初始化结速后调用此函数
    237           * 入口参数： 无
    238           * 出口参数： 无
    239           * 作　 　者： 无名沈
    240           * 创建日期： 2014-08-08
    241           * 修    改：
    242           * 修改日期：
    243           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    244           void App_InitEndHook(void)
    245           {
    246           
    247           }
   \                     App_InitEndHook: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    248           
    249           /*******************************************************************************
    250           * 名    称： OS_TaskCreateHook
    251           * 功    能： OS创建任务回调函数
    252           * 入口参数： 无
    253           * 出口参数： 无
    254           * 作  　者： 无名沈
    255           * 创建日期： 2014-08-08
    256           * 修    改：
    257           * 修改日期：
    258           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    259           void OS_TaskCreateHook(void)
    260           {     
   \                     OS_TaskCreateHook: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    261             App_TaskCommCreate();
   \   00000002   0x.... 0x....      BL       App_TaskCommCreate
    262              //App_TaskMaterCreate();
    263              //App_TaskDtuCreate();
    264              //App_TaskKeyCreate();
    265              //App_TaskBeepCreate();
    266           }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
    267           
    268           /*******************************************************************************
    269           * 名    称： OSAL_TaskCreateHook
    270           * 功    能： OSAL创建任务回调函数
    271           * 入口参数： 无
    272           * 出口参数： 无
    273           * 作　 　者： 无名沈
    274           * 创建日期： 2014-08-08
    275           * 修    改：
    276           * 修改日期：
    277           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    278           void OSAL_TaskCreateHook(void)
    279           {
   \                     OSAL_TaskCreateHook: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    280           
    281              //osal_add_Task(TaskInitKey,                      // 任务初始化函数指针
    282              //              TaskKeyEvtProcess,                // 任务事件处理函数指针
    283              //              OS_TASK_PRO_KEY,                  // 任务优先级
    284              //              OS_TASK_ID_KEY);                  // 任务ID
    285              
    286              //osal_add_Task(TaskInitCtrl,                     // 任务初始化函数指针
    287              //              TaskCtrlEvtProcess,               // 任务事件处理函数指针
    288              //              OS_TASK_PRO_CTRL,                 // 任务优先级
    289              //              OS_TASK_ID_CTRL);                 // 任务ID
    290              
    291              osal_add_Task(TaskInitTmr,                      // 任务初始化函数指针
    292                            TaskTmrEvtProcess,                // 任务事件处理函数指针
    293                            OS_TASK_PRO_TMR,                  // 任务优先级
    294                            OS_TASK_ID_TMR);                  // 任务ID
   \   00000002   0x2301             MOVS     R3,#+1
   \   00000004   0x2208             MOVS     R2,#+8
   \   00000006   0x....             LDR.N    R1,??DataTable1_2
   \   00000008   0x....             LDR.N    R0,??DataTable1_3
   \   0000000A   0x.... 0x....      BL       osal_add_Task
    295                  
    296             
    297              osal_add_Task(TaskInitDisp,                     // 任务初始化函数指针
    298                            TaskDispEvtProcess,               // 任务事件处理函数指针
    299                            OS_TASK_PRO_DISP,                 // 任务优先级
    300                            OS_TASK_ID_DISP);                 // 任务ID 
   \   0000000E   0x2300             MOVS     R3,#+0
   \   00000010   0x2209             MOVS     R2,#+9
   \   00000012   0x....             LDR.N    R1,??DataTable1_4
   \   00000014   0x....             LDR.N    R0,??DataTable1_5
   \   00000016   0x.... 0x....      BL       osal_add_Task
    301              
    302              osal_add_Task(TaskInitStore,                    // 任务初始化函数指针
    303                            TaskStoreEvtProcess,              // 任务事件处理函数指针
    304                            OS_TASK_PRO_STORE,                // 任务优先级
    305                            OS_TASK_ID_STORE);                // 任务ID
   \   0000001A   0x2304             MOVS     R3,#+4
   \   0000001C   0x2205             MOVS     R2,#+5
   \   0000001E   0x....             LDR.N    R1,??DataTable1_6
   \   00000020   0x....             LDR.N    R0,??DataTable1_7
   \   00000022   0x.... 0x....      BL       osal_add_Task
    306              
    307              osal_add_Task(TaskInitCalc,                    // 任务初始化函数指针
    308                            TaskCalcEvtProcess,              // 任务事件处理函数指针
    309                            OS_TASK_PRO_CALC,                // 任务优先级
    310                            OS_TASK_ID_CALC);                // 任务ID   
   \   00000026   0x2302             MOVS     R3,#+2
   \   00000028   0x2207             MOVS     R2,#+7
   \   0000002A   0x....             LDR.N    R1,??DataTable1_8
   \   0000002C   0x....             LDR.N    R0,??DataTable1_9
   \   0000002E   0x.... 0x....      BL       osal_add_Task
    311              
    312              osal_add_Task(TaskInitSpeed,                    // 任务初始化函数指针
    313                            TaskSpeedEvtProcess,              // 任务事件处理函数指针
    314                            OS_TASK_PRO_SPEED,                // 任务优先级
    315                            OS_TASK_ID_SPEED);                // 任务ID       
   \   00000032   0x2303             MOVS     R3,#+3
   \   00000034   0x2206             MOVS     R2,#+6
   \   00000036   0x....             LDR.N    R1,??DataTable1_10
   \   00000038   0x....             LDR.N    R0,??DataTable1_11
   \   0000003A   0x.... 0x....      BL       osal_add_Task
    316              
    317              osal_add_Task(TaskInitLed,                  // 任务初始化函数指针
    318                            TaskLedEvtProcess,                // 任务事件处理函数指针
    319                            OS_TASK_PRO_LED,                  // 任务优先级
    320                            OS_TASK_ID_LED);                  // 任务ID    
   \   0000003E   0x2306             MOVS     R3,#+6
   \   00000040   0x2203             MOVS     R2,#+3
   \   00000042   0x....             LDR.N    R1,??DataTable1_12
   \   00000044   0x....             LDR.N    R0,??DataTable1_13
   \   00000046   0x.... 0x....      BL       osal_add_Task
    321           }
   \   0000004A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     sCtrl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     sCtrl+0xAC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     TaskTmrEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     TaskInitTmr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     TaskDispEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     TaskInitDisp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     TaskStoreEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x........         DC32     TaskInitStore

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x........         DC32     TaskCalcEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0x........         DC32     TaskInitCalc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_10:
   \   00000000   0x........         DC32     TaskSpeedEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_11:
   \   00000000   0x........         DC32     TaskInitSpeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_12:
   \   00000000   0x........         DC32     TaskLedEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_13:
   \   00000000   0x........         DC32     TaskInitLed
    322          /*******************************************************************************
    323           *              end of file                                                    *
    324           *******************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   App_InitEndHook
       0   App_InitStartHook
       8   App_Main
         8   -> app_init_sctrl
       8   OSAL_TaskCreateHook
         8   -> osal_add_Task
       8   OS_TaskCreateHook
         8   -> App_TaskCommCreate
       8   app_init_sctrl
         8   -> FRAM_StoreRunPara


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_11
       4  ??DataTable1_12
       4  ??DataTable1_13
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
       2  App_InitEndHook
       2  App_InitStartHook
       8  App_Main
      76  OSAL_TaskCreateHook
       8  OS_TaskCreateHook
      40  WdtFlagGRP
       4  WdtFlags
     450  app_init_sctrl
    1812  sCtrl

 
 1 856 bytes in section .bss
   602 bytes in section .text
 
   602 bytes of CODE memory
 1 856 bytes of DATA memory

Errors: none
Warnings: none
